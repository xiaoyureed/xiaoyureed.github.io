"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2416],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return k}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),s=p(t),k=r,m=s["".concat(o,".").concat(k)]||s[k]||d[k]||i;return t?a.createElement(m,l(l({ref:n},c),{},{components:t})):a.createElement(m,l({ref:n},c))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=s;var u={};for(var o in n)hasOwnProperty.call(n,o)&&(u[o]=n[o]);u.originalType=e,u.mdxType="string"==typeof e?e:r,l[1]=u;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}s.displayName="MDXCreateElement"},7485:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return d}});var a=t(83117),r=t(80102),i=(t(67294),t(3905)),l=["components"],u={title:"Java Concurrent\ud83c\udf08",tags:["java","concurrent"],date:new Date("2018-09-22T22:13:31.000Z"),toc_min_heading_level:2,toc_max_heading_level:5},o=void 0,p={unversionedId:"java-concurrent",id:"java-concurrent",title:"Java Concurrent\ud83c\udf08",description:"\u5e76\u884c\u8ba1\u7b97\u5e26\u6765\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u5347\u4f46\u4e5f\u5f15\u5165\u4e86\u8f6f\u4ef6\u7684\u590d\u6742\u6027, \u5e94\u8be5\u53ea\u7528\u4e8e \u56fe\u5f62\u5904\u7406, \u670d\u52a1\u7aef\u7f16\u7a0b(Linus)",source:"@site/docs/java-concurrent.md",sourceDirName:".",slug:"/java-concurrent",permalink:"/en/docs/java-concurrent",draft:!1,tags:[{label:"java",permalink:"/en/docs/tags/java"},{label:"concurrent",permalink:"/en/docs/tags/concurrent"}],version:"current",frontMatter:{title:"Java Concurrent\ud83c\udf08",tags:["java","concurrent"],date:"2018-09-22T22:13:31.000Z",toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Java Clean Code Tips",permalink:"/en/docs/java-code-clean"},next:{title:"JMM and GC\ud83c\udf08",permalink:"/en/docs/java-memory-model-jmm-jvm"}},c={},d=[{value:"6.1. \u539f\u5b50\u6027(atomicity)",id:"61-\u539f\u5b50\u6027atomicity",level:2},{value:"6.2. \u53ef\u89c1\u6027-\u7f13\u5b58\u4e00\u81f4\u6027",id:"62-\u53ef\u89c1\u6027-\u7f13\u5b58\u4e00\u81f4\u6027",level:2},{value:"6.3. \u6709\u5e8f\u6027-\u6307\u4ee4\u91cd\u6392",id:"63-\u6709\u5e8f\u6027-\u6307\u4ee4\u91cd\u6392",level:2},{value:"8.1. \u7ebf\u7a0b\u548c\u8fdb\u7a0b",id:"81-\u7ebf\u7a0b\u548c\u8fdb\u7a0b",level:2},{value:"8.1.1. \u4e24\u8005\u7684\u6982\u5ff5",id:"811-\u4e24\u8005\u7684\u6982\u5ff5",level:3},{value:"8.1.2. \u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406",id:"812-\u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406",level:3},{value:"8.1.3. \u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f",id:"813-\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f",level:3},{value:"8.1.4. \u7ebf\u7a0b\u7684\u51e0\u4e2a\u72b6\u6001",id:"814-\u7ebf\u7a0b\u7684\u51e0\u4e2a\u72b6\u6001",level:3},{value:"8.2. thread\u57fa\u672capi",id:"82-thread\u57fa\u672capi",level:2},{value:"8.2.1. \u521b\u5efa",id:"821-\u521b\u5efa",level:3},{value:"8.2.2. \u7ec8\u6b62",id:"822-\u7ec8\u6b62",level:3},{value:"8.2.3. \u4e2d\u65ad InterruptedException \u5904\u7406",id:"823-\u4e2d\u65ad-interruptedexception-\u5904\u7406",level:3},{value:"8.2.4. \u7b49\u5f85\u548c\u901a\u77e5-wait-notify",id:"824-\u7b49\u5f85\u548c\u901a\u77e5-wait-notify",level:3},{value:"8.2.5. \u7b49\u5f85\u7ed3\u675f\u548c\u8c26\u8ba9-join-yield",id:"825-\u7b49\u5f85\u7ed3\u675f\u548c\u8c26\u8ba9-join-yield",level:3},{value:"8.2.6. \u7ebf\u7a0b\u7ec4",id:"826-\u7ebf\u7a0b\u7ec4",level:3},{value:"8.2.7. \u5b88\u62a4\u7ebf\u7a0b-daemon",id:"827-\u5b88\u62a4\u7ebf\u7a0b-daemon",level:3},{value:"8.2.8. \u7ebf\u7a0b\u4f18\u5148\u7ea7",id:"828-\u7ebf\u7a0b\u4f18\u5148\u7ea7",level:3},{value:"8.3. \u76f8\u5173\u7684\u5173\u952e\u5b57",id:"83-\u76f8\u5173\u7684\u5173\u952e\u5b57",level:2},{value:"8.3.1. volatile",id:"831-volatile",level:3},{value:"8.3.2. synchronized",id:"832-synchronized",level:3},{value:"9.1. \u5148\u770b\u4e00\u4e2a\u9690\u853d\u9519\u8bef\u7684\u4f8b\u5b50-int\u578b\u6ea2\u51fa",id:"91-\u5148\u770b\u4e00\u4e2a\u9690\u853d\u9519\u8bef\u7684\u4f8b\u5b50-int\u578b\u6ea2\u51fa",level:2},{value:"9.2. \u5e76\u53d1\u4e0b\u7684ArrayList",id:"92-\u5e76\u53d1\u4e0b\u7684arraylist",level:2},{value:"9.3. \u5e76\u53d1\u4e0b\u7684Hashmap",id:"93-\u5e76\u53d1\u4e0b\u7684hashmap",level:2},{value:"9.4. \u9519\u8bef\u7684\u4f7f\u7528\u9501",id:"94-\u9519\u8bef\u7684\u4f7f\u7528\u9501",level:2},{value:"10.1. \u600e\u4e48\u8fdb\u884c\u540c\u6b65\u63a7\u5236",id:"101-\u600e\u4e48\u8fdb\u884c\u540c\u6b65\u63a7\u5236",level:2},{value:"10.1.1. \u91cd\u5165\u9501-\u9501\u7684\u516c\u5e73\u6027",id:"1011-\u91cd\u5165\u9501-\u9501\u7684\u516c\u5e73\u6027",level:3},{value:"10.1.2. Condition-\u91cd\u5165\u9501\u597d\u642d\u6863",id:"1012-condition-\u91cd\u5165\u9501\u597d\u642d\u6863",level:3},{value:"10.1.3. semaphore-\u4fe1\u53f7\u91cf-\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee",id:"1013-semaphore-\u4fe1\u53f7\u91cf-\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee",level:3},{value:"10.1.4. ReadWriteLock-\u8bfb\u5199\u9501",id:"1014-readwritelock-\u8bfb\u5199\u9501",level:3},{value:"10.1.5. CountDownLatch-\u5012\u8ba1\u65f6\u5668",id:"1015-countdownlatch-\u5012\u8ba1\u65f6\u5668",level:3},{value:"10.1.6. CyclicBarrier-\u5faa\u73af\u6805\u680f",id:"1016-cyclicbarrier-\u5faa\u73af\u6805\u680f",level:3},{value:"10.1.7. LockSupport-\u7ebf\u7a0b\u963b\u585e\u5de5\u5177\u7c7b",id:"1017-locksupport-\u7ebf\u7a0b\u963b\u585e\u5de5\u5177\u7c7b",level:3},{value:"10.2. \u7ebf\u7a0b\u590d\u7528-\u7ebf\u7a0b\u6c60",id:"102-\u7ebf\u7a0b\u590d\u7528-\u7ebf\u7a0b\u6c60",level:2},{value:"10.2.1. Executor\u7684api",id:"1021-executor\u7684api",level:3},{value:"10.2.1.1. \u521b\u5efa\u7ebf\u7a0b\u6c60",id:"10211-\u521b\u5efa\u7ebf\u7a0b\u6c60",level:4},{value:"10.2.1.2. \u600e\u4e48\u786e\u5b9a\u6c60\u5b50\u7684\u5bb9\u91cf",id:"10212-\u600e\u4e48\u786e\u5b9a\u6c60\u5b50\u7684\u5bb9\u91cf",level:4},{value:"10.2.1.3. \u7ebf\u7a0b\u6c60\u7684\u51e0\u4e2a\u72b6\u6001",id:"10213-\u7ebf\u7a0b\u6c60\u7684\u51e0\u4e2a\u72b6\u6001",level:4},{value:"10.2.1.4. \u5173\u95ed\u7ebf\u7a0b\u6c60",id:"10214-\u5173\u95ed\u7ebf\u7a0b\u6c60",level:4},{value:"10.2.2. ThreadPoolExecutor-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60",id:"1022-threadpoolexecutor-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60",level:3},{value:"10.2.2.1. \u6838\u5fc3 api",id:"10221-\u6838\u5fc3-api",level:4},{value:"10.2.2.2. \u963b\u585e\u961f\u5217 BlockingQueue",id:"10222-\u963b\u585e\u961f\u5217-blockingqueue",level:4},{value:"10.2.2.3. \u81ea\u5b9a\u4e49\u62d2\u7edd\u7b56\u7565",id:"10223-\u81ea\u5b9a\u4e49\u62d2\u7edd\u7b56\u7565",level:4},{value:"10.2.2.4. \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u540d\u79f0",id:"10224-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u540d\u79f0",level:4},{value:"10.2.2.5. \u81ea\u5b9a\u4e49\u7ebf\u7a0b \u540d\u79f0",id:"10225-\u81ea\u5b9a\u4e49\u7ebf\u7a0b-\u540d\u79f0",level:4},{value:"10.2.3. \u65e0\u9501\u5b89\u5168\u7684\u961f\u5217",id:"1023-\u65e0\u9501\u5b89\u5168\u7684\u961f\u5217",level:3},{value:"10.2.4. \u62d3\u5c55\u7ebf\u7a0b\u6c60-\u5728\u7ebf\u7a0b\u6c60\u4e2d\u5bfb\u627e\u5806\u6808",id:"1024-\u62d3\u5c55\u7ebf\u7a0b\u6c60-\u5728\u7ebf\u7a0b\u6c60\u4e2d\u5bfb\u627e\u5806\u6808",level:3},{value:"10.2.5. Fork-Join\u6846\u67b6",id:"1025-fork-join\u6846\u67b6",level:3},{value:"10.2.6. springboot\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6c60",id:"1026-springboot\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6c60",level:3},{value:"10.2.7. hystrix-\u7ebf\u7a0b\u6c60\u9694\u79bb",id:"1027-hystrix-\u7ebf\u7a0b\u6c60\u9694\u79bb",level:3},{value:"10.3. jdk\u4e2d\u7684\u5e76\u53d1\u5bb9\u5668",id:"103-jdk\u4e2d\u7684\u5e76\u53d1\u5bb9\u5668",level:2},{value:"10.3.1. \u6574\u4f53\u4ecb\u7ecd",id:"1031-\u6574\u4f53\u4ecb\u7ecd",level:3},{value:"10.3.2. ConcurrentLinkedQueue\u539f\u7406",id:"1032-concurrentlinkedqueue\u539f\u7406",level:3},{value:"10.3.3. \u5f00\u6e90\u9ad8\u6027\u80fd\u5185\u5b58\u961f\u5217 disruptor",id:"1033-\u5f00\u6e90\u9ad8\u6027\u80fd\u5185\u5b58\u961f\u5217-disruptor",level:3},{value:"10.4. aqs \u65e0\u9501\u5b9e\u73b0",id:"104-aqs-\u65e0\u9501\u5b9e\u73b0",level:2},{value:"12.1. \u63d0\u9ad8\u9501\u6027\u80fd\u7684\u539f\u5219",id:"121-\u63d0\u9ad8\u9501\u6027\u80fd\u7684\u539f\u5219",level:2},{value:"12.1.1. \u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4-\u548c\u9501\u7c97\u5316-\u9700\u8981\u6743\u8861",id:"1211-\u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4-\u548c\u9501\u7c97\u5316-\u9700\u8981\u6743\u8861",level:3},{value:"12.1.2. \u51cf\u5c0f\u9501\u7c92\u5ea6",id:"1212-\u51cf\u5c0f\u9501\u7c92\u5ea6",level:3},{value:"12.1.3. \u8bfb\u5199\u5206\u79bb\u9501\u4ee3\u66ff\u72ec\u5360\u9501",id:"1213-\u8bfb\u5199\u5206\u79bb\u9501\u4ee3\u66ff\u72ec\u5360\u9501",level:3},{value:"12.1.4. \u9501\u5206\u79bb",id:"1214-\u9501\u5206\u79bb",level:3},{value:"12.2. jvm\u662f\u600e\u4e48\u5bf9\u9501\u4f18\u5316\u7684",id:"122-jvm\u662f\u600e\u4e48\u5bf9\u9501\u4f18\u5316\u7684",level:2},{value:"12.2.1. \u4f7f\u9501\u8fdb\u5165\u504f\u5411\u6a21\u5f0f-\u504f\u5411\u9501",id:"1221-\u4f7f\u9501\u8fdb\u5165\u504f\u5411\u6a21\u5f0f-\u504f\u5411\u9501",level:3},{value:"12.2.2. \u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501",id:"1222-\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501",level:3},{value:"12.2.3. \u81ea\u65cb\u9501",id:"1223-\u81ea\u65cb\u9501",level:3},{value:"12.2.4. \u9501\u6d88\u9664",id:"1224-\u9501\u6d88\u9664",level:3},{value:"12.3. ThreadLocal",id:"123-threadlocal",level:2},{value:"12.3.1. threadlocal\u6982\u5ff5",id:"1231-threadlocal\u6982\u5ff5",level:3},{value:"12.3.2. threadLocal \u793a\u4f8b",id:"1232-threadlocal-\u793a\u4f8b",level:3},{value:"12.3.3. \u518d\u770b\u4e00\u4e2a\u95ee\u9898\u4f8b\u5b50\u4ee5\u53ca\u6539\u8fdb",id:"1233-\u518d\u770b\u4e00\u4e2a\u95ee\u9898\u4f8b\u5b50\u4ee5\u53ca\u6539\u8fdb",level:3},{value:"12.3.4. \u539f\u7406",id:"1234-\u539f\u7406",level:3},{value:"12.3.5. \u770b\u6e90\u7801",id:"1235-\u770b\u6e90\u7801",level:3},{value:"12.4. weakReference",id:"124-weakreference",level:2},{value:"12.4.1. \u4ec0\u4e48\u662fWeakReference",id:"1241-\u4ec0\u4e48\u662fweakreference",level:3},{value:"12.4.2. \u4e3a\u4ec0\u4f7f\u7528",id:"1242-\u4e3a\u4ec0\u4f7f\u7528",level:3},{value:"12.4.3. \u600e\u4e48\u4f7f\u7528",id:"1243-\u600e\u4e48\u4f7f\u7528",level:3},{value:"12.4.4. \u56db\u79cd\u5f15\u7528",id:"1244-\u56db\u79cd\u5f15\u7528",level:3},{value:"12.4.5. ReferenceQueue",id:"1245-referencequeue",level:3},{value:"12.4.6. WeakHashMap &amp; TreadLocalMap",id:"1246-weakhashmap--treadlocalmap",level:3},{value:"12.5. \u4e0d\u52a0\u9501-\u4e50\u89c2\u9501",id:"125-\u4e0d\u52a0\u9501-\u4e50\u89c2\u9501",level:2},{value:"12.5.1. \u600e\u4e48\u7406\u89e3\u4e0d\u52a0\u9501\u7684\u7b56\u7565",id:"1251-\u600e\u4e48\u7406\u89e3\u4e0d\u52a0\u9501\u7684\u7b56\u7565",level:3},{value:"12.5.2. AtomicInteger-\u65e0\u9501\u5b89\u5168\u6574\u6570",id:"1252-atomicinteger-\u65e0\u9501\u5b89\u5168\u6574\u6570",level:3},{value:"12.5.3. Unsafe\u7c7b-Java\u4e2d\u7684\u6307\u9488",id:"1253-unsafe\u7c7b-java\u4e2d\u7684\u6307\u9488",level:3},{value:"12.5.4. AtomicReference-\u65e0\u9501\u7684\u5bf9\u8c61\u5f15\u7528",id:"1254-atomicreference-\u65e0\u9501\u7684\u5bf9\u8c61\u5f15\u7528",level:3},{value:"12.5.5. AtomicStampedReference-\u5e26\u65f6\u95f4\u6233\u7684\u5f15\u7528",id:"1255-atomicstampedreference-\u5e26\u65f6\u95f4\u6233\u7684\u5f15\u7528",level:3},{value:"12.5.6. AtomicIntegerArray-\u65e0\u9501\u7684\u6570\u7ec4",id:"1256-atomicintegerarray-\u65e0\u9501\u7684\u6570\u7ec4",level:3},{value:"12.5.7. AtomicIntegerFieldUpdater-\u5347\u7ea7\u666e\u901a\u53d8\u91cf\u652f\u6301\u539f\u5b50\u64cd\u4f5c",id:"1257-atomicintegerfieldupdater-\u5347\u7ea7\u666e\u901a\u53d8\u91cf\u652f\u6301\u539f\u5b50\u64cd\u4f5c",level:3},{value:"12.5.8. SynchronousQueue\u5b9e\u73b0",id:"1258-synchronousqueue\u5b9e\u73b0",level:3},{value:"13.1. \u600e\u4e48\u6253\u5370\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f",id:"131-\u600e\u4e48\u6253\u5370\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f",level:2},{value:"14.1. \u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u5b9e\u73b0\u65b9\u5f0f",id:"141-\u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u5b9e\u73b0\u65b9\u5f0f",level:2},{value:"14.2. \u4e0d\u53d8\u6a21\u5f0f",id:"142-\u4e0d\u53d8\u6a21\u5f0f",level:2},{value:"14.3. \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f",id:"143-\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f",level:2},{value:"14.3.1. \u4f7f\u7528\u963b\u585e\u961f\u5217\u5b9e\u73b0",id:"1431-\u4f7f\u7528\u963b\u585e\u961f\u5217\u5b9e\u73b0",level:3},{value:"14.3.2. \u65e0\u9501\u7684\u5b9e\u73b0",id:"1432-\u65e0\u9501\u7684\u5b9e\u73b0",level:3},{value:"14.3.3. \u4f7f\u7528\u7b49\u5f85\u901a\u77e5\u673a\u5236\u5b9e\u73b0",id:"1433-\u4f7f\u7528\u7b49\u5f85\u901a\u77e5\u673a\u5236\u5b9e\u73b0",level:3},{value:"14.4. \u7b49\u5f85\u901a\u77e5",id:"144-\u7b49\u5f85\u901a\u77e5",level:2},{value:"14.5. CountDownLatch CyclicBarrier",id:"145-countdownlatch-cyclicbarrier",level:2},{value:"14.6. Semaphore",id:"146-semaphore",level:2},{value:"14.7. ReentrantLock\u4e0eCondtion",id:"147-reentrantlock\u4e0econdtion",level:2},{value:"14.8. Future\u6a21\u5f0f",id:"148-future\u6a21\u5f0f",level:2},{value:"14.8.1. \u5178\u578bFuture\u6a21\u5f0f\u5b9e\u73b0",id:"1481-\u5178\u578bfuture\u6a21\u5f0f\u5b9e\u73b0",level:3},{value:"14.8.2. jdk\u4e2d\u7684future\u6a21\u5f0f",id:"1482-jdk\u4e2d\u7684future\u6a21\u5f0f",level:3},{value:"14.9. map-reduce \u6a21\u5f0f",id:"149-map-reduce-\u6a21\u5f0f",level:2},{value:"14.10. worker-pool \u6a21\u5f0f",id:"1410-worker-pool-\u6a21\u5f0f",level:2},{value:"14.11. \u5e76\u884c\u6d41\u6c34\u7ebf",id:"1411-\u5e76\u884c\u6d41\u6c34\u7ebf",level:2},{value:"14.12. \u5e76\u884c\u641c\u7d22",id:"1412-\u5e76\u884c\u641c\u7d22",level:2},{value:"14.13. \u5e76\u884c\u6392\u5e8f",id:"1413-\u5e76\u884c\u6392\u5e8f",level:2},{value:"14.13.1. \u6539\u8fdb\u5192\u6ce1\u6392\u5e8f-\u5206\u79bb\u6570\u636e\u76f8\u5173\u6027-\u5947\u5076\u4ea4\u6362\u6392\u5e8f",id:"14131-\u6539\u8fdb\u5192\u6ce1\u6392\u5e8f-\u5206\u79bb\u6570\u636e\u76f8\u5173\u6027-\u5947\u5076\u4ea4\u6362\u6392\u5e8f",level:3},{value:"14.13.2. \u6539\u8fdb\u63d2\u5165\u6392\u5e8f-\u5e0c\u5c14\u6392\u5e8f",id:"14132-\u6539\u8fdb\u63d2\u5165\u6392\u5e8f-\u5e0c\u5c14\u6392\u5e8f",level:3},{value:"14.14. \u7f51\u7edcnio",id:"1414-\u7f51\u7edcnio",level:2}],s={toc:d};function k(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{align:"center"},"\u5e76\u884c\u8ba1\u7b97\u5e26\u6765\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u5347\u4f46\u4e5f\u5f15\u5165\u4e86\u8f6f\u4ef6\u7684\u590d\u6742\u6027, \u5e94\u8be5\u53ea\u7528\u4e8e \u56fe\u5f62\u5904\u7406, \u670d\u52a1\u7aef\u7f16\u7a0b(Linus)",(0,i.kt)("p",null,'"\u8ba1\u7b97\u673a\u786c\u4ef6\u8bbe\u8ba1\u8005\u5c06\u6469\u5c14\u5b9a\u5f8b\u5931\u6548\u7684\u8d23\u4efb\u63a8\u8131\u7ed9\u4e86\u8f6f\u4ef6\u5f00\u53d1\u8005"'),(0,i.kt)("p",null,"Amdahl\u5b9a\u5f8b,   Gustafson\u5b9a\u5f8b   ----- cpu\u4e2a\u6570, \u4e32\u884c\u6bd4\u4f8b, \u5e76\u884c\u540e\u52a0\u901f\u6bd4\u7684\u5173\u7cfb"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.bilibili.com/video/BV1Je411W7Ew?spm_id_from=333.337.search-card.all.click"},"https://www.bilibili.com/video/BV1Je411W7Ew?spm_id_from=333.337.search-card.all.click")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/CL0610/Java-concurrency"},"https://github.com/CL0610/Java-concurrency")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ZHENFENG13/concurrent-programming"},"https://github.com/ZHENFENG13/concurrent-programming")," (\u300a\u5b9e\u6218java\u9ad8\u5e76\u53d1\u7a0b\u5e8f\u8bbe\u8ba1\u300b)"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/59725713/answer/168709945"},"https://www.zhihu.com/question/59725713/answer/168709945")," "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/oldratlee/fucking-java-concurrency"},"https://github.com/oldratlee/fucking-java-concurrency")),(0,i.kt)("p",null,"TODO")),(0,i.kt)("h1",{id:"1-\u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c\u591a\u7ebf\u7a0b\u8ba1\u7b97--1-\u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c\u591a\u7ebf\u7a0b\u8ba1\u7b97"},"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c(\u591a\u7ebf\u7a0b)\u8ba1\u7b97- ",(0,i.kt)("a",{parentName:"h1",href:"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%B9%B6%E8%A1%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AE%A1%E7%AE%97"},"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c(\u591a\u7ebf\u7a0b)\u8ba1\u7b97")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%B9%B6%E8%A1%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AE%A1%E7%AE%97--1-%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E5%B9%B6%E8%A1%8C%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AE%A1%E7%AE%97"},"1. \u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c(\u591a\u7ebf\u7a0b)\u8ba1\u7b97- 1. \u4e3a\u4ec0\u4e48\u9700\u8981\u5e76\u884c(\u591a\u7ebf\u7a0b)\u8ba1\u7b97")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#2-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E9%9C%80%E8%A6%81%E8%A7%A3%E5%86%B3%E7%9A%84%E9%97%AE%E9%A2%98"},"2. \u591a\u7ebf\u7a0b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#3-%E5%AE%B9%E6%98%93%E6%B7%B7%E6%B7%86%E7%9A%84%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5"},"3. \u5bb9\u6613\u6df7\u6dc6\u7684\u51e0\u4e2a\u6982\u5ff5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#4-%E5%B9%B6%E5%8F%91%E7%BA%A7%E5%88%AB"},"4. \u5e76\u53d1\u7ea7\u522b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#5-java%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B-jmm"},"5. java\u5185\u5b58\u6a21\u578b-jmm")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6-%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%843%E4%B8%AA%E5%85%B3%E9%94%AE%E7%89%B9%E6%80%A7"},"6. \u591a\u7ebf\u7a0b\u7ebf\u7a0b\u5b89\u5168\u76843\u4e2a\u5173\u952e\u7279\u6027"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#61-%E5%8E%9F%E5%AD%90%E6%80%A7atomicity"},"6.1. \u539f\u5b50\u6027(atomicity)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62-%E5%8F%AF%E8%A7%81%E6%80%A7-%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7"},"6.2. \u53ef\u89c1\u6027-\u7f13\u5b58\u4e00\u81f4\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63-%E6%9C%89%E5%BA%8F%E6%80%A7-%E6%8C%87%E4%BB%A4%E9%87%8D%E6%8E%92"},"6.3. \u6709\u5e8f\u6027-\u6307\u4ee4\u91cd\u6392")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7-%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"},"7. \u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#8-%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80"},"8. \u8bed\u6cd5\u57fa\u7840"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#81-%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B"},"8.1. \u7ebf\u7a0b\u548c\u8fdb\u7a0b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#811-%E4%B8%A4%E8%80%85%E7%9A%84%E6%A6%82%E5%BF%B5"},"8.1.1. \u4e24\u8005\u7684\u6982\u5ff5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#812-%E7%BA%BF%E7%A8%8B%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86"},"8.1.2. \u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#813-%E7%BA%BF%E7%A8%8B%E7%9A%84%E8%B0%83%E5%BA%A6%E6%96%B9%E5%BC%8F"},"8.1.3. \u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#814-%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%87%A0%E4%B8%AA%E7%8A%B6%E6%80%81"},"8.1.4. \u7ebf\u7a0b\u7684\u51e0\u4e2a\u72b6\u6001")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#82-thread%E5%9F%BA%E6%9C%ACapi"},"8.2. thread\u57fa\u672capi"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#821-%E5%88%9B%E5%BB%BA"},"8.2.1. \u521b\u5efa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#822-%E7%BB%88%E6%AD%A2"},"8.2.2. \u7ec8\u6b62")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#823-%E4%B8%AD%E6%96%AD-interruptedexception-%E5%A4%84%E7%90%86"},"8.2.3. \u4e2d\u65ad InterruptedException \u5904\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#824-%E7%AD%89%E5%BE%85%E5%92%8C%E9%80%9A%E7%9F%A5-wait-notify"},"8.2.4. \u7b49\u5f85\u548c\u901a\u77e5-wait-notify")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#825-%E7%AD%89%E5%BE%85%E7%BB%93%E6%9D%9F%E5%92%8C%E8%B0%A6%E8%AE%A9-join-yield"},"8.2.5. \u7b49\u5f85\u7ed3\u675f\u548c\u8c26\u8ba9-join-yield")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#826-%E7%BA%BF%E7%A8%8B%E7%BB%84"},"8.2.6. \u7ebf\u7a0b\u7ec4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#827-%E5%AE%88%E6%8A%A4%E7%BA%BF%E7%A8%8B-daemon"},"8.2.7. \u5b88\u62a4\u7ebf\u7a0b-daemon")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#828-%E7%BA%BF%E7%A8%8B%E4%BC%98%E5%85%88%E7%BA%A7"},"8.2.8. \u7ebf\u7a0b\u4f18\u5148\u7ea7")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#83-%E7%9B%B8%E5%85%B3%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97"},"8.3. \u76f8\u5173\u7684\u5173\u952e\u5b57"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#831-volatile"},"8.3.1. volatile")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#832-synchronized"},"8.3.2. synchronized")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#9-jdk%E4%B8%AD%E9%9D%9E%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E7%B1%BB%E5%BA%93%E9%80%A0%E6%88%90%E7%9A%84%E9%9A%90%E8%94%BD%E9%94%99%E8%AF%AF"},"9. jdk\u4e2d\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u5e93\u9020\u6210\u7684\u9690\u853d\u9519\u8bef"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#91-%E5%85%88%E7%9C%8B%E4%B8%80%E4%B8%AA%E9%9A%90%E8%94%BD%E9%94%99%E8%AF%AF%E7%9A%84%E4%BE%8B%E5%AD%90-int%E5%9E%8B%E6%BA%A2%E5%87%BA"},"9.1. \u5148\u770b\u4e00\u4e2a\u9690\u853d\u9519\u8bef\u7684\u4f8b\u5b50-int\u578b\u6ea2\u51fa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#92-%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%9A%84arraylist"},"9.2. \u5e76\u53d1\u4e0b\u7684ArrayList")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#93-%E5%B9%B6%E5%8F%91%E4%B8%8B%E7%9A%84hashmap"},"9.3. \u5e76\u53d1\u4e0b\u7684Hashmap")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#94-%E9%94%99%E8%AF%AF%E7%9A%84%E4%BD%BF%E7%94%A8%E9%94%81"},"9.4. \u9519\u8bef\u7684\u4f7f\u7528\u9501")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10-concurrent%E5%8C%85"},"10. concurrent\u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#101-%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8C%E5%90%8C%E6%AD%A5%E6%8E%A7%E5%88%B6"},"10.1. \u600e\u4e48\u8fdb\u884c\u540c\u6b65\u63a7\u5236"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1011-%E9%87%8D%E5%85%A5%E9%94%81-%E9%94%81%E7%9A%84%E5%85%AC%E5%B9%B3%E6%80%A7"},"10.1.1. \u91cd\u5165\u9501-\u9501\u7684\u516c\u5e73\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1012-condition-%E9%87%8D%E5%85%A5%E9%94%81%E5%A5%BD%E6%90%AD%E6%A1%A3"},"10.1.2. Condition-\u91cd\u5165\u9501\u597d\u642d\u6863")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1013-semaphore-%E4%BF%A1%E5%8F%B7%E9%87%8F-%E5%A4%9A%E4%B8%AA%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE"},"10.1.3. semaphore-\u4fe1\u53f7\u91cf-\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1014-readwritelock-%E8%AF%BB%E5%86%99%E9%94%81"},"10.1.4. ReadWriteLock-\u8bfb\u5199\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1015-countdownlatch-%E5%80%92%E8%AE%A1%E6%97%B6%E5%99%A8"},"10.1.5. CountDownLatch-\u5012\u8ba1\u65f6\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1016-cyclicbarrier-%E5%BE%AA%E7%8E%AF%E6%A0%85%E6%A0%8F"},"10.1.6. CyclicBarrier-\u5faa\u73af\u6805\u680f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1017-locksupport-%E7%BA%BF%E7%A8%8B%E9%98%BB%E5%A1%9E%E5%B7%A5%E5%85%B7%E7%B1%BB"},"10.1.7. LockSupport-\u7ebf\u7a0b\u963b\u585e\u5de5\u5177\u7c7b")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#102-%E7%BA%BF%E7%A8%8B%E5%A4%8D%E7%94%A8-%E7%BA%BF%E7%A8%8B%E6%B1%A0"},"10.2. \u7ebf\u7a0b\u590d\u7528-\u7ebf\u7a0b\u6c60"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1021-executor%E7%9A%84api"},"10.2.1. Executor\u7684api"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10211-%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E6%B1%A0"},"10.2.1.1. \u521b\u5efa\u7ebf\u7a0b\u6c60")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10212-%E6%80%8E%E4%B9%88%E7%A1%AE%E5%AE%9A%E6%B1%A0%E5%AD%90%E7%9A%84%E5%AE%B9%E9%87%8F"},"10.2.1.2. \u600e\u4e48\u786e\u5b9a\u6c60\u5b50\u7684\u5bb9\u91cf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10213-%E7%BA%BF%E7%A8%8B%E6%B1%A0%E7%9A%84%E5%87%A0%E4%B8%AA%E7%8A%B6%E6%80%81"},"10.2.1.3. \u7ebf\u7a0b\u6c60\u7684\u51e0\u4e2a\u72b6\u6001")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10214-%E5%85%B3%E9%97%AD%E7%BA%BF%E7%A8%8B%E6%B1%A0"},"10.2.1.4. \u5173\u95ed\u7ebf\u7a0b\u6c60")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1022-threadpoolexecutor-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BA%BF%E7%A8%8B%E6%B1%A0"},"10.2.2. ThreadPoolExecutor-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10221-%E6%A0%B8%E5%BF%83-api"},"10.2.2.1. \u6838\u5fc3 api")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10222-%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97-blockingqueue"},"10.2.2.2. \u963b\u585e\u961f\u5217 BlockingQueue")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10223-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8B%92%E7%BB%9D%E7%AD%96%E7%95%A5"},"10.2.2.3. \u81ea\u5b9a\u4e49\u62d2\u7edd\u7b56\u7565")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10224-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%90%8D%E7%A7%B0"},"10.2.2.4. \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u540d\u79f0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10225-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BA%BF%E7%A8%8B-%E5%90%8D%E7%A7%B0"},"10.2.2.5. \u81ea\u5b9a\u4e49\u7ebf\u7a0b \u540d\u79f0")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1023-%E6%97%A0%E9%94%81%E5%AE%89%E5%85%A8%E7%9A%84%E9%98%9F%E5%88%97"},"10.2.3. \u65e0\u9501\u5b89\u5168\u7684\u961f\u5217")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1024-%E6%8B%93%E5%B1%95%E7%BA%BF%E7%A8%8B%E6%B1%A0-%E5%9C%A8%E7%BA%BF%E7%A8%8B%E6%B1%A0%E4%B8%AD%E5%AF%BB%E6%89%BE%E5%A0%86%E6%A0%88"},"10.2.4. \u62d3\u5c55\u7ebf\u7a0b\u6c60-\u5728\u7ebf\u7a0b\u6c60\u4e2d\u5bfb\u627e\u5806\u6808")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1025-fork-join%E6%A1%86%E6%9E%B6"},"10.2.5. Fork-Join\u6846\u67b6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1026-springboot%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%BA%BF%E7%A8%8B%E6%B1%A0"},"10.2.6. springboot\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6c60")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1027-hystrix-%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%9A%94%E7%A6%BB"},"10.2.7. hystrix-\u7ebf\u7a0b\u6c60\u9694\u79bb")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#103-jdk%E4%B8%AD%E7%9A%84%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8"},"10.3. jdk\u4e2d\u7684\u5e76\u53d1\u5bb9\u5668"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1031-%E6%95%B4%E4%BD%93%E4%BB%8B%E7%BB%8D"},"10.3.1. \u6574\u4f53\u4ecb\u7ecd")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1032-concurrentlinkedqueue%E5%8E%9F%E7%90%86"},"10.3.2. ConcurrentLinkedQueue\u539f\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1033-%E5%BC%80%E6%BA%90%E9%AB%98%E6%80%A7%E8%83%BD%E5%86%85%E5%AD%98%E9%98%9F%E5%88%97-disruptor"},"10.3.3. \u5f00\u6e90\u9ad8\u6027\u80fd\u5185\u5b58\u961f\u5217 disruptor")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#104-aqs-%E6%97%A0%E9%94%81%E5%AE%9E%E7%8E%B0"},"10.4. aqs \u65e0\u9501\u5b9e\u73b0")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#11-java8%E4%B8%AD%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7"},"11. java8\u4e2d\u7684\u65b0\u7279\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#12-%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96%E9%94%81"},"12. \u600e\u4e48\u4f18\u5316\u9501"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#121-%E6%8F%90%E9%AB%98%E9%94%81%E6%80%A7%E8%83%BD%E7%9A%84%E5%8E%9F%E5%88%99"},"12.1. \u63d0\u9ad8\u9501\u6027\u80fd\u7684\u539f\u5219"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1211-%E5%87%8F%E5%B0%91%E9%94%81%E6%8C%81%E6%9C%89%E6%97%B6%E9%97%B4-%E5%92%8C%E9%94%81%E7%B2%97%E5%8C%96-%E9%9C%80%E8%A6%81%E6%9D%83%E8%A1%A1"},"12.1.1. \u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4-\u548c\u9501\u7c97\u5316-\u9700\u8981\u6743\u8861")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1212-%E5%87%8F%E5%B0%8F%E9%94%81%E7%B2%92%E5%BA%A6"},"12.1.2. \u51cf\u5c0f\u9501\u7c92\u5ea6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1213-%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E9%94%81%E4%BB%A3%E6%9B%BF%E7%8B%AC%E5%8D%A0%E9%94%81"},"12.1.3. \u8bfb\u5199\u5206\u79bb\u9501\u4ee3\u66ff\u72ec\u5360\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1214-%E9%94%81%E5%88%86%E7%A6%BB"},"12.1.4. \u9501\u5206\u79bb")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#122-jvm%E6%98%AF%E6%80%8E%E4%B9%88%E5%AF%B9%E9%94%81%E4%BC%98%E5%8C%96%E7%9A%84"},"12.2. jvm\u662f\u600e\u4e48\u5bf9\u9501\u4f18\u5316\u7684"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1221-%E4%BD%BF%E9%94%81%E8%BF%9B%E5%85%A5%E5%81%8F%E5%90%91%E6%A8%A1%E5%BC%8F-%E5%81%8F%E5%90%91%E9%94%81"},"12.2.1. \u4f7f\u9501\u8fdb\u5165\u504f\u5411\u6a21\u5f0f-\u504f\u5411\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1222-%E4%BD%BF%E7%94%A8%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81"},"12.2.2. \u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1223-%E8%87%AA%E6%97%8B%E9%94%81"},"12.2.3. \u81ea\u65cb\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1224-%E9%94%81%E6%B6%88%E9%99%A4"},"12.2.4. \u9501\u6d88\u9664")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#123-threadlocal"},"12.3. ThreadLocal"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1231-threadlocal%E6%A6%82%E5%BF%B5"},"12.3.1. threadlocal\u6982\u5ff5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1232-threadlocal-%E7%A4%BA%E4%BE%8B"},"12.3.2. threadLocal \u793a\u4f8b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1233-%E5%86%8D%E7%9C%8B%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%E4%BE%8B%E5%AD%90%E4%BB%A5%E5%8F%8A%E6%94%B9%E8%BF%9B"},"12.3.3. \u518d\u770b\u4e00\u4e2a\u95ee\u9898\u4f8b\u5b50\u4ee5\u53ca\u6539\u8fdb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1234-%E5%8E%9F%E7%90%86"},"12.3.4. \u539f\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1235-%E7%9C%8B%E6%BA%90%E7%A0%81"},"12.3.5. \u770b\u6e90\u7801")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#124-weakreference"},"12.4. weakReference"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1241-%E4%BB%80%E4%B9%88%E6%98%AFweakreference"},"12.4.1. \u4ec0\u4e48\u662fWeakReference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1242-%E4%B8%BA%E4%BB%80%E4%BD%BF%E7%94%A8"},"12.4.2. \u4e3a\u4ec0\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1243-%E6%80%8E%E4%B9%88%E4%BD%BF%E7%94%A8"},"12.4.3. \u600e\u4e48\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1244-%E5%9B%9B%E7%A7%8D%E5%BC%95%E7%94%A8"},"12.4.4. \u56db\u79cd\u5f15\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1245-referencequeue"},"12.4.5. ReferenceQueue")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1246-weakhashmap--treadlocalmap"},"12.4.6. WeakHashMap \\& TreadLocalMap")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#125-%E4%B8%8D%E5%8A%A0%E9%94%81-%E4%B9%90%E8%A7%82%E9%94%81"},"12.5. \u4e0d\u52a0\u9501-\u4e50\u89c2\u9501"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1251-%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E4%B8%8D%E5%8A%A0%E9%94%81%E7%9A%84%E7%AD%96%E7%95%A5"},"12.5.1. \u600e\u4e48\u7406\u89e3\u4e0d\u52a0\u9501\u7684\u7b56\u7565")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1252-atomicinteger-%E6%97%A0%E9%94%81%E5%AE%89%E5%85%A8%E6%95%B4%E6%95%B0"},"12.5.2. AtomicInteger-\u65e0\u9501\u5b89\u5168\u6574\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1253-unsafe%E7%B1%BB-java%E4%B8%AD%E7%9A%84%E6%8C%87%E9%92%88"},"12.5.3. Unsafe\u7c7b-Java\u4e2d\u7684\u6307\u9488")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1254-atomicreference-%E6%97%A0%E9%94%81%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%BC%95%E7%94%A8"},"12.5.4. AtomicReference-\u65e0\u9501\u7684\u5bf9\u8c61\u5f15\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1255-atomicstampedreference-%E5%B8%A6%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E5%BC%95%E7%94%A8"},"12.5.5. AtomicStampedReference-\u5e26\u65f6\u95f4\u6233\u7684\u5f15\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1256-atomicintegerarray-%E6%97%A0%E9%94%81%E7%9A%84%E6%95%B0%E7%BB%84"},"12.5.6. AtomicIntegerArray-\u65e0\u9501\u7684\u6570\u7ec4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1257-atomicintegerfieldupdater-%E5%8D%87%E7%BA%A7%E6%99%AE%E9%80%9A%E5%8F%98%E9%87%8F%E6%94%AF%E6%8C%81%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C"},"12.5.7. AtomicIntegerFieldUpdater-\u5347\u7ea7\u666e\u901a\u53d8\u91cf\u652f\u6301\u539f\u5b50\u64cd\u4f5c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1258-synchronousqueue%E5%AE%9E%E7%8E%B0"},"12.5.8. SynchronousQueue\u5b9e\u73b0")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#13-%E6%AD%BB%E9%94%81"},"13. \u6b7b\u9501"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#131-%E6%80%8E%E4%B9%88%E6%89%93%E5%8D%B0%E7%BA%BF%E7%A8%8B%E5%A0%86%E6%A0%88%E4%BF%A1%E6%81%AF"},"13.1. \u600e\u4e48\u6253\u5370\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#14-%E5%B9%B6%E5%8F%91%E7%9B%B8%E5%85%B3%E7%9A%84%E6%A8%A1%E5%BC%8F%E5%92%8C%E7%AE%97%E6%B3%95"},"14. \u5e76\u53d1\u76f8\u5173\u7684\u6a21\u5f0f\u548c\u7b97\u6cd5"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#141-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F"},"14.1. \u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u5b9e\u73b0\u65b9\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#142-%E4%B8%8D%E5%8F%98%E6%A8%A1%E5%BC%8F"},"14.2. \u4e0d\u53d8\u6a21\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#143-%E7%94%9F%E4%BA%A7%E8%80%85-%E6%B6%88%E8%B4%B9%E8%80%85%E6%A8%A1%E5%BC%8F"},"14.3. \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1431-%E4%BD%BF%E7%94%A8%E9%98%BB%E5%A1%9E%E9%98%9F%E5%88%97%E5%AE%9E%E7%8E%B0"},"14.3.1. \u4f7f\u7528\u963b\u585e\u961f\u5217\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1432-%E6%97%A0%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0"},"14.3.2. \u65e0\u9501\u7684\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1433-%E4%BD%BF%E7%94%A8%E7%AD%89%E5%BE%85%E9%80%9A%E7%9F%A5%E6%9C%BA%E5%88%B6%E5%AE%9E%E7%8E%B0"},"14.3.3. \u4f7f\u7528\u7b49\u5f85\u901a\u77e5\u673a\u5236\u5b9e\u73b0")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#144-%E7%AD%89%E5%BE%85%E9%80%9A%E7%9F%A5"},"14.4. \u7b49\u5f85\u901a\u77e5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#145-countdownlatch-cyclicbarrier"},"14.5. CountDownLatch CyclicBarrier")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#146-semaphore"},"14.6. Semaphore")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#147-reentrantlock%E4%B8%8Econdtion"},"14.7. ReentrantLock\u4e0eCondtion")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#148-future%E6%A8%A1%E5%BC%8F"},"14.8. Future\u6a21\u5f0f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1481-%E5%85%B8%E5%9E%8Bfuture%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0"},"14.8.1. \u5178\u578bFuture\u6a21\u5f0f\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1482-jdk%E4%B8%AD%E7%9A%84future%E6%A8%A1%E5%BC%8F"},"14.8.2. jdk\u4e2d\u7684future\u6a21\u5f0f")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#149-map-reduce-%E6%A8%A1%E5%BC%8F"},"14.9. map-reduce \u6a21\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1410-worker-pool-%E6%A8%A1%E5%BC%8F"},"14.10. worker-pool \u6a21\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1411-%E5%B9%B6%E8%A1%8C%E6%B5%81%E6%B0%B4%E7%BA%BF"},"14.11. \u5e76\u884c\u6d41\u6c34\u7ebf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1412-%E5%B9%B6%E8%A1%8C%E6%90%9C%E7%B4%A2"},"14.12. \u5e76\u884c\u641c\u7d22")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1413-%E5%B9%B6%E8%A1%8C%E6%8E%92%E5%BA%8F"},"14.13. \u5e76\u884c\u6392\u5e8f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#14131-%E6%94%B9%E8%BF%9B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F-%E5%88%86%E7%A6%BB%E6%95%B0%E6%8D%AE%E7%9B%B8%E5%85%B3%E6%80%A7-%E5%A5%87%E5%81%B6%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F"},"14.13.1. \u6539\u8fdb\u5192\u6ce1\u6392\u5e8f-\u5206\u79bb\u6570\u636e\u76f8\u5173\u6027-\u5947\u5076\u4ea4\u6362\u6392\u5e8f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#14132-%E6%94%B9%E8%BF%9B%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F-%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F"},"14.13.2. \u6539\u8fdb\u63d2\u5165\u6392\u5e8f-\u5e0c\u5c14\u6392\u5e8f")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1414-%E7%BD%91%E7%BB%9Cnio"},"14.14. \u7f51\u7edcnio")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#15-%E4%BD%BF%E7%94%A8-akka-%E6%9E%84%E5%BB%BA%E9%AB%98%E5%B9%B6%E5%8F%91%E7%A8%8B%E5%BA%8F"},"15. \u4f7f\u7528 akka \u6784\u5efa\u9ad8\u5e76\u53d1\u7a0b\u5e8f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16-%E5%B9%B6%E8%A1%8C%E7%A8%8B%E5%BA%8F%E6%80%8E%E4%B9%88%E8%B0%83%E8%AF%95"},"16. \u5e76\u884c\u7a0b\u5e8f\u600e\u4e48\u8c03\u8bd5"))),(0,i.kt)("h1",{id:"2-\u591a\u7ebf\u7a0b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898"},"2. \u591a\u7ebf\u7a0b\u9700\u8981\u89e3\u51b3\u7684\u95ee\u9898"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e0a\u4e0b\u6587\u5207\u6362 - \u7ebf\u7a0b\u5207\u6362\u7684\u65f6\u5019\u9700\u8981\u4fdd\u5b58\u672c\u6b21\u6267\u884c\u7684\u4fe1\u606f, \u518d\u6b21\u83b7\u53d6 cpu \u63a7\u5236\u6743\u9700\u8981\u6062\u590d\u4e0a\u6b21\u6240\u4fdd\u5b58\u7684\u4fe1\u606f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u91c7\u7528\u65e0\u9501\u7f16\u7a0b\uff0c\u6bd4\u5982\u5c06\u6570\u636e\u6309\u7167 Hash(id) \u8fdb\u884c\u53d6\u6a21\u5206\u6bb5\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5904\u7406\u5404\u81ea\u5206\u6bb5\u7684\u6570\u636e\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u91c7\u7528 CAS(compare and swap) \u7b97\u6cd5\uff0c\u5982 Atomic \u5305\u5c31\u662f\u91c7\u7528 CAS \u7b97\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u907f\u514d\u521b\u5efa\u4e86\u4e00\u4e9b\u7ebf\u7a0b\u4f46\u5176\u4e2d\u5927\u90e8\u5206\u90fd\u662f\u5904\u4e8e waiting \u72b6\u6001\uff0c\u56e0\u4e3a\u6bcf\u5f53\u4ece waiting \u72b6\u6001\u5207\u6362\u5230 running \u72b6\u6001\u90fd\u662f\u4e00\u6b21\u4e0a\u4e0b\u6587\u5207\u6362")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6b7b\u9501 - \u7ebf\u7a0b A \u548c\u7ebf\u7a0b B \u90fd\u5728\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u9501\uff0c\u6216\u8005\u662f\u5176\u4e2d\u67d0\u4e2a\u7ebf\u7a0b\u5728\u91ca\u653e\u9501\u7684\u65f6\u5019\u51fa\u73b0\u5f02\u5e38\u5982\u6b7b\u5faa\u73af"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5c3d\u91cf\u4e00\u4e2a\u7ebf\u7a0b\u53ea\u83b7\u53d6\u4e00\u4e2a\u9501, \u53ea\u5360\u7528\u4e00\u4e2a\u8d44\u6e90"),(0,i.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u5b9a\u65f6\u9501\uff0c\u81f3\u5c11\u80fd\u4fdd\u8bc1\u9501\u6700\u7ec8\u4f1a\u88ab\u91ca\u653e\u3002"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u8d44\u6e90\u9650\u5236 - \u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u80fd\u65e0\u9650\u5236\u7684\u4f7f\u7528\u8d44\u6e90, \u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u4e00\u4e2a\u7ebf\u7a0b\u51fa\u73b0\u5f02\u5e38\u5bfc\u81f4\u6574\u4e2a\u7cfb\u7edf\u51fa\u95ee\u9898"))),(0,i.kt)("h1",{id:"3-\u5bb9\u6613\u6df7\u6dc6\u7684\u51e0\u4e2a\u6982\u5ff5"},"3. \u5bb9\u6613\u6df7\u6dc6\u7684\u51e0\u4e2a\u6982\u5ff5"),(0,i.kt)("p",null,'\u53ef\u4ee5\u53c2\u8003 java-note \u4e2d\u7684 "\u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e" \u4e00\u8282'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"synchronous(\u540c\u6b65) \u548c asynchronous(\u5f02\u6b65) - \u7528\u6765\u5f62\u5bb9\u67d0\u4e00\u6b21\u65b9\u6cd5\u8c03\u7528"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u540c\u6b65\u65b9\u6cd5\u4e00\u65e6\u5f00\u59cb, \u5c31\u5fc5\u987b\u7b49\u5230\u65b9\u6cd5\u7ed3\u675f\u540e(\u5982\u679c\u6709\u8fd4\u56de\u503c, \u5219\u662f\u7b49\u5230\u8fd4\u56de\u503c\u8fd4\u56de\u540e), \u518d\u6267\u884c\u540e\u7eed\u65b9\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5f02\u6b65..........., \u65b9\u6cd5\u4f1a\u7acb\u5373\u8fd4\u56de, \u7ee7\u7eed\u8fdb\u884c\u540e\u7eed\u4efb\u52a1; \u5f02\u6b65\u4efb\u52a1\u901a\u5e38\u4f1a\u53e6\u5916\u5f00\u4e00\u4e2a thread , \u5982\u679c\u6709\u8fd4\u56de\u7ed3\u679c\u5219\u5728 exec \u5b8c\u6bd5\u540e\u4f1a\u901a\u77e5\u8c03\u7528\u8005")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"concurrency(\u5e76\u53d1) \u548c parallelism(\u5e76\u884c) - \u90fd\u53ef\u4ee5\u8868\u793a\u591a\u4e2a\u4efb\u52a1\u4e00\u8d77\u6267\u884c"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"concurrency \u8868\u793a\u591a\u4e2a\u4efb\u52a1\u4ea4\u66ff\u6267\u884c, \u8fd9\u4e9b\u4efb\u52a1\u53ef\u80fd\u4ecd\u65e7\u662f\u4e32\u884c\u7684 --- \u5355cpu, \u56e0\u4e3a\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u6761\u6307\u4ee4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"parallelism \u662f\u771f\u6b63\u7684 \u540c\u65f6\u6267\u884c ------ \u591acpu")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e34\u754c\u533a - \u6cdb\u6307\u516c\u5171\u8d44\u6e90, \u88ab\u591a\u4e2a thread \u5171\u4eab, \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a thread \u80fd\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"blocking(\u963b\u585e) \u548c non-blocking(\u975e\u963b\u585e) - \u7528\u6765\u5f62\u5bb9cpu\u72b6\u6001; \u5982\u679c cpu \u963b\u585e, \u5f53\u524d thread \u4f1a\u88ab\u6302\u8d77, cpu\u63a7\u5236\u6743\u88ab\u5176\u4ed6thread\u593a\u53bb, \u5728\u53e6\u4e00\u4e2a thread \u91ca\u653e resource \u524d, \u5f53\u524d thread \u53ea\u80fd\u963b\u585e, \u4e0d\u80fd\u6267\u884c; ---------- \u56e0\u6b64\u4e5f\u53ef\u5f62\u5bb9\u67d0\u4e2a\u64cd\u4f5c\u662f\u5426\u662f\u963b\u585e\u7684 (\u662f\u5426\u4f1a\u9020\u6210 cpu \u963b\u585e)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"blocking: \u5982\u679c\u4e00\u4e2a thread \u6b63\u5728\u5360\u7528 \u4e34\u754c\u533aresources, \u5219\u5176\u4ed6\u7684 thread \u5c31\u9700\u8981\u5728\u4e34\u754c\u533a\u7b49\u5f85(\u7ebf\u7a0b \u88ab\u6302\u8d77) ------------- \u4e00\u4e2a\u8017\u65f6\u4efb\u52a1\u6267\u884c\u65f6, cpu\u7a7a\u95f2\u7b49\u5f85")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"non-blocking: \u591a\u4e2a thread \u4e92\u4e0d\u5f71\u54cd, \u65e0\u8bba\u662f\u5426\u5360\u7528 \u4e34\u754c\u533a resources, thread \u90fd\u4f1a\u5c1d\u8bd5\u4e0d\u65ad\u5411\u524d\u6267\u884c -------- \u4e00\u4e2a\u8017\u65f6\u4efb\u52a1(\u5982io\u4efb\u52a1)\u6267\u884c\u65f6, cpu\u4e0d\u4f1a\u7a7a\u95f2, \u4f1a\u53bb\u6267\u884c\u5176\u4ed6\u4efb\u52a1")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"deadlock(\u6b7b\u9501), starvation(\u9965\u997f), live lock(\u6d3b\u9501)"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"deadlock - \u591a\u4e2a\u7ebf\u7a0b\u4e92\u76f8\u7b49\u5f85\u5bf9\u65b9\u91ca\u653e\u8d44\u6e90, \u65e0\u89e3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"starvation - thread \u65e0\u6cd5\u5f97\u5230\u9700\u8981\u7684resources, \u800c\u4e00\u76f4\u7b49\u5f85. \u8fc7\u4e00\u6bb5\u65f6\u95f4\u6709\u53ef\u80fd\u7f13\u89e3\u7684; eg: thread\u4f18\u5148\u7ea7\u592a\u4f4e; \u8d44\u6e90\u88ab\u5176\u4ed6thread\u4e00\u76f4\u9738\u5360")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"live lock - resources \u4e0d\u65ad\u518d\u4e24\u4e2a thread \u95f4\u8df3\u52a8, \u6ca1\u6709\u4e00\u4e2a thread \u540c\u65f6\u62ff\u5230\u8fd0\u884c\u5fc5\u987b\u7684\u6240\u6709 resources, \u9020\u6210\u4e24\u4e2a\u90fd\u4e0d\u80fd\u6b63\u5e38\u6267\u884c"))))),(0,i.kt)("h1",{id:"4-\u5e76\u53d1\u7ea7\u522b"},"4. \u5e76\u53d1\u7ea7\u522b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"blocking - \u4e00\u4e2a thread \u662f blocking\u7684, \u5728\u5176\u4ed6 thread \u91ca\u653e resource \u524d, \u8be5 thread \u65e0\u6cd5\u6267\u884c; \u6bd4\u5982\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"synchronized"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"\u91cd\u5165\u9501"),", \u5f97\u5230\u7684\u5c31\u662f blocking  thread")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'starvation-free(\u65e0\u9965\u997f) - \u5728\u7ebf\u7a0b\u6392\u961f\u6267\u884c\u65f6\u65e0\u89c6\u4f18\u5148\u7ea7, \u4e0d\u5141\u8bb8\u9ad8\u4f18\u5148\u7ea7\u7684 thread \u63d2\u961f; \u5c31\u662f \u91c7\u7528 "\u516c\u5e73\u9501" \u800c\u4e0d\u7528 "\u975e\u516c\u5e73\u9501"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"obstruction-free(\u65e0\u969c\u788d) "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6700\u5f31\u7684 non-blocking \u8c03\u5ea6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"2\u4e2a thread \u4e4b\u95f4\u662f obstruction-free \u7684\u5173\u7cfb, \u8868\u793a\u4e0d\u4f1a\u56e0\u4e3a\u5171\u4eab\u8d44\u6e90\u7684\u95ee\u9898\u5bfc\u81f4\u4e00\u65b9\u88ab\u6302\u8d77\u7b49\u5f85, \u90fd\u53ef\u4ee5\u540c\u65f6\u8fdb\u5165 \u4e34\u754c\u533a, \u5982\u679c\u662f read-only \u64cd\u4f5c \u90fd\u76f8\u5b89\u65e0\u4e8b, \u5982\u679c\u662f write \u64cd\u4f5c, \u5f53 A thread \u5728 write\u65f6\u5019\u68c0\u6d4b\u5230 B thread \u4e5f\u5728 write, A \u5c31\u4f1a\u7acb\u5373\u5bf9\u81ea\u5df1\u7684\u64cd\u4f5c\u8fdb\u884c\u56de\u6eda.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u7a0b\u5e8f\u987a\u5229\u8fd0\u884c, \u6bd4\u5982 \u4e24\u4e2a thread \u90fd\u4e0d\u65ad\u7684\u56de\u6eda\u81ea\u5df1\u7684write \u64cd\u4f5c , \u8fd9\u6837\u5c31\u6ca1\u6709\u4e00\u4e2a thread \u80fd\u591f\u987a\u5229\u7684\u8d70\u51fa \u4e34\u754c\u533a"),(0,i.kt)("p",{parentName:"li"},'\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f: "\u4e00\u81f4\u6027\u6807\u8bb0", \u6bcf\u4e2a write\u64cd\u4f5c\u90fd\u9700\u8981\u66f4\u65b0\u8fd9\u4e2a\u6807\u8bb0 - \u5728\u67d0\u4e2awrite\u64cd\u4f5c\u524d\u5148\u8bfb\u53d6\u4fdd\u5b58\u8fd9\u4e2a\u6807\u8bb0, \u5728\u64cd\u4f5c\u5b8c\u6210\u540e\u518d\u6b21\u8bfb\u53d6, \u548c\u4fdd\u5b58\u7684\u7248\u672c\u6bd4\u8f83, \u5982\u679c\u4e00\u81f4\u5219\u8bc1\u660e\u5728\u4fee\u6539\u671f\u95f4\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u7684 write\u64cd\u4f5c, \u5982\u679c\u4e0d\u4e00\u81f4 \u9700\u8981\u91cd\u8bd5or\u62a5\u9519.')))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"lock-free(\u65e0\u9501) "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6240\u6709\u7684 thread \u90fd\u80fd\u5bf9 \u4e34\u754c\u533a\u8bbf\u95ee, \u5e76\u4e14\u4fdd\u8bc1\u4e00\u5b9a\u6709\u4e00\u4e2a thread \u80fd\u591f\u987a\u5229\u79bb\u5f00\u4e34\u754c\u533a")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5178\u578b\u7279\u5f81\u662f, \u5305\u542b\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"\u6b7b\u5faa\u73af"),", thread \u4f1a\u4e0d\u65ad\u5c1d\u8bd5 \u4fee\u6539 \u5171\u4eab\u53d8\u91cf, \u4fee\u6539\u6210\u529f\u90a3\u4e48thread\u987a\u5229\u9000\u51fa, \u5426\u5219\u7ee7\u7eed\u5c1d\u8bd5\u4fee\u6539")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"wait-free(\u65e0\u7b49\u5f85) "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u8981\u6c42\u6240\u6709 thread \u53ef\u4ee5\u5728\u6709\u9650\u6b65\u6570\u5185\u5b8c\u6210\u64cd\u4f5c, \u79bb\u5f00\u4e34\u754c\u533a")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"rcu(read-copy-update) \u57fa\u672c\u601d\u60f3: read-only\u64cd\u4f5c\u53ef\u4ee5\u4e0d\u52a0\u63a7\u5236, \u6240\u6709 read \u64cd\u4f5c\u90fd\u662f wart-free \u7684, \u5bf9 write\u64cd\u4f5c, \u5148\u53d6\u5f97\u539f\u59cb\u6570\u636e\u7684 copy, \u4ec5\u4ec5\u4fee\u6539\u8fd9\u4efd copy\u5373\u8fd4\u56de\u4fee\u6539\u6210\u529f, \u5728\u5408\u9002\u7684\u65f6\u95f4\u56de\u5199\u6570\u636e\u5230\u6570\u636e\u5e93"))))),(0,i.kt)("h1",{id:"5-java\u5185\u5b58\u6a21\u578b-jmm"},"5. java\u5185\u5b58\u6a21\u578b-jmm"),(0,i.kt)("p",null,"{% post_link java-memory-model \ud83d\udcda java-memory-model %}"),(0,i.kt)("h1",{id:"6-\u591a\u7ebf\u7a0b\u7ebf\u7a0b\u5b89\u5168\u76843\u4e2a\u5173\u952e\u7279\u6027"},"6. \u591a\u7ebf\u7a0b\u7ebf\u7a0b\u5b89\u5168\u76843\u4e2a\u5173\u952e\u7279\u6027"),(0,i.kt)("h2",{id:"61-\u539f\u5b50\u6027atomicity"},"6.1. \u539f\u5b50\u6027(atomicity)"),(0,i.kt)("p",null,"\u5728\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u5c31\u662fcpu\u4e0d\u53ef\u4ee5\u5728\u4e2d\u9014\u6682\u505c\u7136\u540e\u518d\u8c03\u5ea6\uff0c\u65e2\u4e0d\u88ab\u4e2d\u65ad\uff0c\u8981\u4e48\u6267\u884c\u5b8c\u6210\uff0c\u8981\u4e0d\u5c31\u4e0d\u6267\u884c - \u4e00\u4e2a\u64cd\u4f5c\u4e00\u65e6\u5f00\u59cb, \u5c31\u4e0d\u4f1a\u88ab\u5176\u4ed6 thread \u5e72\u6270"),(0,i.kt)("p",null,"eg: \u5bf9\u4e8e \u9759\u6001\u5168\u5c40\u53d8\u91cf int i, \u4e24\u4e2a thread \u540c\u65f6\u8d4b\u503c, 1, -1, \u90a3\u4e48\u6700\u7ec8i\u7684\u7ed3\u679c\u53ea\u80fd\u662f 1\u6216-1\u4e2d\u7684\u4e00\u4e2a, \u4e0d\u4f1a\u662f\u5176\u4ed6\u7ed3\u679c ------ ",(0,i.kt)("inlineCode",{parentName:"p"},"\u7ed9int\u7c7b\u578b\u503c\u8d4b\u503c\u64cd\u4f5c\u5177\u6709\u539f\u5b50\u6027")),(0,i.kt)("p",null,"eg: \u5bf9\u4e8e \u9759\u6001\u5168\u5c40\u53d8\u91cf long i, .........................., \u6700\u7ec8 i\u7684\u503c\u53ef\u80fd\u662f\u602a\u5f02\u7684\u7ed3\u679c ---------------------------- ",(0,i.kt)("inlineCode",{parentName:"p"},"long \u7c7b\u578b \u5360\u636e8\u5b57\u8282\uff0c 64bit, \u5728 32bit\u673a\u5668\u4e0a\u8bfb/\u5199\u81f3\u5c11\u9700\u8981\u4e24\u6761\u6307\u4ee4\uff0c\u4e0d\u662f\u539f\u5b50\u6027\u7684"),", \u6709\u53ef\u80fdthread1\u83b7\u53d6 cpu\u63a7\u5236\u6743, \u4e00\u6b21\u8bfb\u53d6 32bit, \u4e5f\u5c31\u662f long \u578b\u6570\u636e\u7684\u4e8c\u8fdb\u5236\u524d\u4e00\u534a, \u6b63\u51c6\u5907\u63a5\u7740\u8bfb\u53d6\u5269\u4e0b\u4e00\u534a, cpu\u63a7\u5236\u6743\u88ab thread2 \u5207\u8d70, thread2\u8fdb\u884c\u4e86\u4fee\u6539\u64cd\u4f5c\uff0c thread1\u63a5\u7740\u8bfb\u53d6\uff0c \u62fc\u51fa\u6765\u7684long\u5c31\u662f\u602a\u5f02\u7684\u7ed3\u679c\uff1b"),(0,i.kt)("p",null,"\u5728Java\u4e2d\u53ef\u4ee5\u4f7f\u7528 synchronized\u6765\u4fdd\u8bc1\u65b9\u6cd5\u548c\u4ee3\u7801\u5757\u5185\u7684\u64cd\u4f5c\u662f\u539f\u5b50\u6027\u7684\u3002\u5e95\u5c42\u539f\u7406\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"\u4e24\u4e2a\u9ad8\u7ea7\u7684\u5b57\u8282\u7801\u6307\u4ee4 monitorenter \u548c monitorexit")),(0,i.kt)("h2",{id:"62-\u53ef\u89c1\u6027-\u7f13\u5b58\u4e00\u81f4\u6027"},"6.2. \u53ef\u89c1\u6027-\u7f13\u5b58\u4e00\u81f4\u6027"),(0,i.kt)("p",null,"\u4fdd\u8bc1\u8bfb\u53d6\u5230\u7684\u53d8\u91cf\u90fd\u662f\u6700\u65b0\u7684;"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'\u5f53\u591a\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u7acb\u5373\u770b\u5f97\u5230\u4fee\u6539\u7684\u503c\u3002 ------------ \u4e5f\u53ef\u4ee5\u8bf4\u662f "\u7f13\u5b58\u4e00\u81f4\u6027" \u95ee\u9898, cpu\u8bfb\u53d6\u5230\u4e86 cache \u4e2d\u7684\u810f\u6570\u636e')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f7f\u7528 volatile \u58f0\u660e \u53d8\u91cf i \u6765\u4fdd\u8bc1\u53ef\u89c1\u6027 - \u544a\u8bc9jvm, \u8fd9\u4e2a\u53d8\u91cf i \u662f\u4e0d\u7a33\u5b9a\u7684, \u968f\u65f6\u4f1a\u88ab\u591a\u4e2athread \u4fee\u6539, \u5fc5\u987b\u7279\u6b8a\u5bf9\u5f85 "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5f53\u5199\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u5f3a\u5236\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\u53bb\uff1b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u9488\u5bf9volatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0b\u672c\u5730\u5185\u5b58\u4e2d\u7684\u7f13\u5b58\u65e0\u6548\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f\u4f18\u5316"))))),(0,i.kt)("h2",{id:"63-\u6709\u5e8f\u6027-\u6307\u4ee4\u91cd\u6392"},"6.3. \u6709\u5e8f\u6027-\u6307\u4ee4\u91cd\u6392"),(0,i.kt)("p",null,"\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5019 \u53ef\u80fd\u8fdb\u884c \u6307\u4ee4\u91cd\u6392, \u91cd\u62cd\u540e\u7684\u6307\u4ee4\u548c\u539f\u59cb\u6307\u4ee4\u4e0d\u4e00\u6837"),(0,i.kt)("p",null,"\u91cd\u6392\u524d\u540e, \u4e32\u884c\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u90fd\u662f\u4e00\u81f4\u7684, \u4f46\u662f\u5e76\u884c\u7a0b\u5e8f\u5c31\u4e0d\u4e00\u5b9a\u4e86"),(0,i.kt)("p",null,'\u4e3a\u4ec0\u4e48\u53c8\u6709 "\u6307\u4ee4\u91cd\u6392"? ------ cpu\u6267\u884c\u4e00\u4e2a\u6c47\u7f16\u6307\u4ee4\u4f1a\u5206\u6210\u5f88\u591a\u6b65\u9aa4, \u6bcf\u4e2a\u6b65\u9aa4\u6d89\u53ca\u7684\u786c\u4ef6\u4e0d\u540c, \u6bd4\u5982 step1\u8fdb\u884c\u5b8c\u540e, \u5bf9\u5e94\u7684\u786c\u4ef6\u5c31\u95f2\u7f6e\u4e86, \u5fc5\u987b\u7b49\u5230\u6574\u4e2a\u6c47\u7f16\u6307\u4ee4\u5bf9\u5e94\u7684step\u90fd\u6267\u884c\u5b8c\u624d\u4f1a\u88ab\u518d\u6b21\u5229\u7528, cpu\u5f15\u5165 "\u6d41\u6c34\u7ebf"\u7684\u5de5\u4f5c\u673a\u5236, \u6307\u4ee4\u91cd\u6392\u540e\u7684\u547d\u4ee4\u53ef\u4ee5\u51cf\u5c11\u6d41\u6c34\u7ebf\u7684\u4e2d\u65ad'),(0,i.kt)("p",null,"\u54ea\u4e9b\u6307\u4ee4\u4e0d\u4f1a\u88ab\u91cd\u6392? ----------- \u9075\u5faa\u8fd9\u51e0\u4e2a\u539f\u5219"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7a0b\u5e8f\u987a\u5e8f\u539f\u5219 - \u4fdd\u8bc1\u91cd\u6392\u524d\u540e, \u4e32\u884c\u7a0b\u5e8f\u7ed3\u679c\u4e0d\u53d8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"volatile - \u4fdd\u8bc1 volatile \u53d8\u91cf\u7684 write\u64cd\u4f5c, \u5148\u53d1\u4e8e read\u64cd\u4f5c, \u8fd9\u4fdd\u8bc1\u4e86 volatile\u53d8\u91cf\u7684\u53ef\u89c1\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u9501\u89c4\u5219 - \u4fdd\u8bc1 \u89e3\u9501 \u5728\u968f\u540e\u7684 \u52a0\u9501 \u524d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f20\u9012\u6027 - a\u5148\u4e8eb, b\u5148\u4e8ec, \u90a3\u4e48 a\u5148\u4e8ec;")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u7684 start() \u5148\u4e8e \u8be5 thread \u7684\u6bcf\u4e2a\u52a8\u4f5c - \u4e5f\u5c31\u662f\u4fdd\u8bc1 thread \u9996\u5148\u6b63\u5e38\u542f\u52a8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u7684 interrupt() \u5148\u4e8e \u8be5 thread \u88ab\u4e2d\u65ad\u7684\u4ee3\u7801"))),(0,i.kt)("p",null,"\u4f7f\u7528synchronized\u548cvolatile\u6765\u4fdd\u8bc1\u591a\u7ebf\u7a0b\u4e4b\u95f4\u64cd\u4f5c\u7684\u6709\u5e8f\u6027\u3002\u5b9e\u73b0\u65b9\u5f0f\u6709\u6240\u533a\u522b\uff1avolatile\u5173\u952e\u5b57\u4f1a\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u3002synchronized\u5173\u952e\u5b57\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u6761\u7ebf\u7a0b\u64cd\u4f5c"),(0,i.kt)("h1",{id:"7-\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168"},"7. \u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u591a\u7ebf\u7a0b\u5f00\u53d1\u4e2d\uff0c\u8981\u8003\u8651\u597d\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898(\u540c\u6b65, \u4e92\u65a5..)\u3002\u800c\u56e0\u4e3a\u8fd9\u4e9b\u9700\u6c42\u5c31\u51fa\u73b0\u4e86\u4ee5\u4e0b\u4e09\u79cd\u6765\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u624b\u6bb5\n\n*   \u4e92\u65a5\u540c\u6b65(\u963b\u585e\u540c\u6b65)\n\n    \u5c31\u662f\u901a\u8fc7\u52a0\u9501(\u5c31\u662f\u60b2\u89c2\u9501)\u6765\u5b9e\u73b0\u5bf9\u4e34\u754c\u8d44\u6e90\u7684\u8bbf\u95ee\u9650\u5236\u3002\u52a0\u9501\u65b9\u5f0f\u6709 synchronized \u548cLock\n\n*   \u975e\u963b\u585e\u540c\u6b65\n\n    * \u975e\u963b\u585e\u540c\u6b65\u5c5e\u4e8e\u4e50\u89c2\u9501\u673a\u5236\u3002\u5178\u578b\u7684\u5b9e\u73b0\u65b9\u5f0f\u5c31\u662f CAS \u64cd\u4f5c, \u8be6\u7ec6\u89c1: [1](https://www.ibm.com/developerworks/cn/java/j-jtp04186/), [2](http://lxy2330.iteye.com/blog/1153135), [3](http://blog.csdn.net/aesop_wubo/article/details/7537960)\n\n    * CAS(compare and swap), \u5148\u6bd4\u8f83, \u5982\u679c\u53d8\u91cf\u6ca1\u6709\u53d8\u5316, \u518d\u4ea4\u6362\u8d4b\u503c, java.util.concurrent.atomic\u5305\u4e2d\u51e0\u4e4e\u5927\u90e8\u5206\u7c7b\u90fd\u91c7\u7528\u4e86CAS\u64cd\u4f5c\n\n        * CAS\u6709\u4e09\u4e2a\u64cd\u4f5c\u53c2\u6570\uff1a\u5185\u5b58\u5730\u5740\uff0c\u671f\u671b\u503c\uff0c\u8981\u4fee\u6539\u7684\u65b0\u503c\uff0c\u5f53\u671f\u671b\u503c\u548c\u5185\u5b58\u5f53\u4e2d\u7684\u503c\u8fdb\u884c\u6bd4\u8f83\u4e0d\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u8868\u793a\u5185\u5b58\u4e2d\u7684\u503c\u5df2\u7ecf\u88ab\u522b\u7ebf\u7a0b\u6539\u52a8\u8fc7\uff0c\u8fd9\u65f6\u5019\u5931\u8d25\u8fd4\u56de\uff0c\u53ea\u6709\u76f8\u7b49\u65f6\uff0c\u624d\u4f1a\u5c06\u5185\u5b58\u4e2d\u7684\u503c\u6539\u4e3a\u65b0\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u6210\u529f\n\n        * ABA\u95ee\u9898: ABA\u95ee\u9898\u662f\u6307\u5728CAS\u64cd\u4f5c\u65f6\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5c06\u53d8\u91cf\u503cA\u6539\u4e3a\u4e86B\uff0c\u4f46\u662f\u53c8\u88ab\u6539\u56de\u4e86A\uff0c\u7b49\u5230\u672c\u7ebf\u7a0b\u4f7f\u7528\u671f\u671b\u503cA\u4e0e\u5f53\u524d\u53d8\u91cf\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0c\u53d1\u73b0\u53d8\u91cfA\u6ca1\u6709\u53d8\uff0c\u4e8e\u662fCAS\u5c31\u5c06A\u503c\u8fdb\u884c\u4e86\u4ea4\u6362\u64cd\u4f5c\n\n        * ABA\u95ee\u9898\u7684\u89e3\u51b3\u601d\u8def\u662f: \u52a0\u7248\u672c\u53f7\uff0c\u6bcf\u6b21\u53d8\u91cf\u66f4\u65b0\u7684\u65f6\u5019\u628a\u53d8\u91cf\u7684\u7248\u672c\u53f7\u52a01\uff0c\u90a3\u4e48A-B-A\u5c31\u4f1a\u53d8\u6210A1-B2-A3\uff0c\u53ea\u8981\u53d8\u91cf\u88ab\u67d0\u4e00\u7ebf\u7a0b\u4fee\u6539\u8fc7\uff0c\u6539\u53d8\u91cf\u5bf9\u5e94\u7684\u7248\u672c\u53f7\u5c31\u4f1a\u53d1\u751f\u9012\u589e\u53d8\u5316\uff0c\u4ece\u800c\u89e3\u51b3\u4e86ABA\u95ee\u9898(\u5728JDK\u7684java.util.concurrent.atomic\u5305\u4e2d\u63d0\u4f9b\u4e86AtomicStampedReference\u6765\u89e3\u51b3ABA\u95ee\u9898)\n\n    * \u4e50\u89c2\u9501\u548c\u60b2\u89c2\u9501: \u662f\u4e24\u79cd\u601d\u60f3, \u4e50\u89c2\u9501\u5c31\u662f\u5bf9\u52a0\u9501\u5bf9\u8c61\u6bd4\u8f83\u4e50\u89c2\uff0c\u5047\u5b9a\u5b83\u4e0d\u5b58\u5728\u5f88\u591a\u5e76\u53d1\u66f4\u65b0\u8bf7\u6c42\u3002\u60b2\u89c2\u9501\u53cd\u4e4b. \u53ef\u4ee5\u6709\u5f88\u591a\u5b9e\u73b0\n        \n        * \u6570\u636e\u5e93\u4e2d: \u60b2\u89c2\u9501\u5c31\u662ffor update; \u4e50\u89c2\u9501\u5c31\u662f\u52a0 version\u5b57\u6bb5\n\n        * JDK\u65b9\u9762\uff1a\u60b2\u89c2\u9501\u5c31\u662fsync; \u4e50\u89c2\u9501\u5c31\u662f\u539f\u5b50\u7c7b\uff08\u5185\u90e8\u4f7f\u7528CAS\u5b9e\u73b0\uff09\n\n*   \u65e0\u540c\u6b65\u65b9\u6848(\u7ef4\u62a4\u81ea\u5df1\u7684\u53d8\u91cf)\n\n    \u8981\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\uff0c\u5e76\u4e0d\u662f\u4e00\u5b9a\u5c31\u9700\u8981\u540c\u6b65\uff0c\u540c\u6b65\u53ea\u662f\u4fdd\u8bc1\u5171\u4eab\u6570\u636e\u5f81\u7528\u65f6\u6b63\u786e\u6027\u7684\u624b\u6bb5\uff0c\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u672c\u6765\u5c31\u4e0d\u6d89\u53ca\u5171\u4eab\u6570\u636e\uff0c\u90a3\u5b83\u5c31\u4e0d\u9700\u8981\u4efb\u4f55\u540c\u6b65\u63aa\u65bd\u53bb\u4fdd\u8bc1\u6b63\u786e\u6027\u3002\u7531\u6b64\u5f15\u51fa ThreadLocal\n\n    Copy-on-write\uff0c\u4f60\u53d8\u4f60\u7684\uff0c\u6211\u53d8\u6211\u7684\uff0c\u6bcf\u53d8\u4e00\u6b21\u90fd\u751f\u6210\u65b0\u7684\u526f\u672c\uff0c\u53ea\u8981\u4e0d\u51b2\u7a81\u5c31\u53ef\u4ee5\u5e76\u884c\uff1b\n\n\n")),(0,i.kt)("h1",{id:"8-\u8bed\u6cd5\u57fa\u7840"},"8. \u8bed\u6cd5\u57fa\u7840"),(0,i.kt)("h2",{id:"81-\u7ebf\u7a0b\u548c\u8fdb\u7a0b"},"8.1. \u7ebf\u7a0b\u548c\u8fdb\u7a0b"),(0,i.kt)("h3",{id:"811-\u4e24\u8005\u7684\u6982\u5ff5"},"8.1.1. \u4e24\u8005\u7684\u6982\u5ff5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u8fdb\u7a0b(process)\u4ee3\u8868\u4e00\u4e2a\u5185\u5b58\u4e2d\u8fd0\u884c\u7684\u5e94\u7528\u7a0b\u5e8f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u72ec\u7acb\u7684\u4e00\u5757\u5185\u5b58\u7a7a\u95f4\uff0c \u56e0\u4e3a\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u548c\u62e5\u6709\u7684\u5355\u4f4d (\u8ba1\u7b97\u673a\u5728\u5206\u914d\u8ba1\u7b97\u8d44\u6e90\u65f6, \u662f\u6309\u7167\u8fdb\u7a0b\u4e3a\u5355\u4f4d\u5206\u914d\u7684)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c \u8fd9\u4e9b\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u7684\u8d44\u6e90\uff08\u5185\u5b58\uff0c\u6587\u4ef6io\uff09; ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u81f3\u5c11\u62e5\u6709\u4e00\u4e2athread - main thread\uff0c \u4e5f\u5c31\u662f\u8fd0\u884c mian()\u65b9\u6cd5\u7684\u7ebf\u7a0b\uff0c\u5b83\u88ab\u79f0\u4e3a\u4e3b\u7ebf\u7a0b\uff0c \u5bf9\u4e8ejava\uff0c \u6240\u6709 thread \u6267\u884c\u5b8c\u6bd5 \u7a0b\u5e8f\u9000\u51fa\uff0c \u5bf9\u4e8egolang\uff0cmain thread \u6267\u884c\u5b8c\u6bd5\u7a0b\u5e8f\u5c31\u9000\u51fa\u4e86\uff0c \u8fd9\u548c\u4e24\u8005\u7684 thread\u5b9e\u73b0\u539f\u7406\u6709\u5173")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u662f\u6307\u8fdb\u7a0b\u4e2d\u7684\u4e00\u4e2a\u6267\u884c\u6d41\u7a0b\uff0c"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"thread \u662fcpu\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u4e0d\u80fd\u591f\u72ec\u7acb\u6267\u884c\uff0c \u5fc5\u987b\u5b58\u5728\u4e8e\u67d0\u4e2a\u8fdb\u7a0b\u4e2d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u8c03\u7528\u6808\uff0c \u4e00\u65e6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7ebf\u7a0b\uff0c\u5c31\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u8c03\u7528\u6808\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u603b\u4f53\u5206\u4e24\u7c7b\uff1a\u7528\u6237\u7ebf\u7a0b\u548c\u5b88\u5019\u7ebf\u7a0b\u3002\u5bf9\u4e8eJava\uff0c \u5f53\u6240\u6709\u7528\u6237\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u7684\u65f6\u5019\uff0cJVM\u81ea\u52a8\u5173\u95ed"))))),(0,i.kt)("h3",{id:"812-\u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406"},"8.1.2. \u7ebf\u7a0b\u5b9e\u73b0\u539f\u7406"),(0,i.kt)("p",null,"\u5728\u64cd\u4f5c\u7cfb\u7edf\u7684OS Thread\u548c\u7f16\u7a0b\u8bed\u8a00\u7684User Thread\u4e4b\u95f4\uff0c\u5b9e\u9645\u4e0a\u5b58\u57283\u4e2d\u7ebf\u7a0b\u5bf9\u5e94\u6a21\u578b\uff0c\u4e5f\u5c31\u662f\uff1a1:1\uff0c1:N\uff0cM:N"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f7f\u7528\u5185\u6838\u7ebf\u7a0b\u5b9e\u73b0 \uff08Java\uff09 - \u4e00\u4e2a\u7528\u6237\u7ebf\u7a0b\u5c31\u53ea\u5728\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u4e0a\u8dd1\uff0c\u8fd9\u65f6\u53ef\u4ee5\u5229\u7528\u591a\u6838\uff0c\u4f46\u662f\u4e0a\u4e0b\u6587switch\u5f88\u6162\uff0c\u9891\u7e41\u5207\u6362\u6548\u7387\u5f88\u4f4e"),(0,i.kt)("p",{parentName:"li"},"  \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u7ebf\u7a0b\u76f4\u63a5\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u652f\u6301\u3002\u7a0b\u5e8f\u4e00\u822c\u4e0d\u4f1a\u76f4\u63a5\u53bb\u4f7f\u7528\u5185\u6838\u7ebf\u7a0b\uff0c\u800c\u662f\u53bb\u4f7f\u7528\u5185\u6838\u7ebf\u7a0b\u7684\u4e00\u79cd\u9ad8\u7ea7\u63a5\u53e3\u2014\u2014\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u4e0e\u5185\u6838\u7ebf\u7a0b\u4e4b\u95f4\u662f1:1\u7684\u5173\u7cfb\uff0c\u79f0\u4e3a\u4e00\u5bf9\u4e00\u7684\u7ebf\u7a0b\u6a21\u578b ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f7f\u7528\u7528\u6237\u7ebf\u7a0b\u5b9e\u73b0 - \u534f\u7a0b - \u591a\u4e2a\uff08N\uff09\u7528\u6237\u7ebf\u7a0b\u59cb\u7ec8\u5728\u4e00\u4e2a\u5185\u6838\u7ebf\u7a0b\u4e0a\u8dd1\uff0ccontext\u4e0a\u4e0b\u6587\u5207\u6362\u786e\u5b9e\u5f88\u5feb\uff0c\u4f46\u662f\u65e0\u6cd5\u771f\u6b63\u7684\u5229\u7528\u591a\u6838"),(0,i.kt)("p",{parentName:"li"},"  \u7528\u6237\u7ebf\u7a0b\u7684\u5efa\u7acb\u3001 \u540c\u6b65\u3001 \u9500\u6bc1\u548c\u8c03\u5ea6\u5b8c\u5168\u5728\u7528\u6237\u6001\u4e2d\u5b8c\u6210\uff0c\u4e0d\u9700\u8981\u5185\u6838\u7684\u5e2e\u52a9\u3002\u5185\u6838\u7ebf\u7a0b\u4e0e\u7528\u6237\u7ebf\u7a0b\u4e3a1\uff1aN\u7684\u5173\u7cfb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f7f\u7528\u7528\u6237\u7ebf\u7a0b\u52a0\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u6df7\u5408\u5b9e\u73b0 \uff08Golang\uff09 - \u591a\u4e2a \u534f\u7a0b \uff08\u6bd4\u5982 goroutine\uff09\u5728\u591a\u4e2a\u5185\u6838\u7ebf\u7a0b\u4e0a\u8dd1\uff0c\u8fd9\u4e2a\u770b\u4f3c\u53ef\u4ee5\u96c6\u9f50\u4e0a\u9762\u4e24\u8005\u7684\u4f18\u52bf\uff0c\u4f46\u662f\u65e0\u7591\u589e\u52a0\u4e86\u8c03\u5ea6\u7684\u96be\u5ea6\u3002"),(0,i.kt)("p",{parentName:"li"},"  \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u5c06\u5185\u6838\u7ebf\u7a0b\u4e0e\u7528\u6237\u7ebf\u7a0b\u4e00\u8d77\u4f7f\u7528\uff0c\u5728\u8fd9\u79cd\u6df7\u5408\u5b9e\u73b0\u4e0b\uff0c\u65e2\u5b58\u5728\u7528\u6237\u7ebf\u7a0b\uff0c\u4e5f\u5b58\u5728\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3002 \u7528\u6237\u7ebf\u7a0b\u8fd8\u662f\u5b8c\u5168\u5efa\u7acb\u5728\u7528\u6237\u7a7a\u95f4\u4e2d \u3002\u7528\u6237\u7ebf\u7a0b\u4e0e\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u4e3aN:M\u7684\u5173\u7cfb\u3002"))),(0,i.kt)("h3",{id:"813-\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f"},"8.1.3. \u7ebf\u7a0b\u7684\u8c03\u5ea6\u65b9\u5f0f"),(0,i.kt)("p",null,"\u534f\u540c\u5f0f\u7ebf\u7a0b\u8c03\u5ea6\u548c\u62a2\u5360\u5f0f\u7ebf\u7a0b\u8c03\u5ea6\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u534f\u540c\u5f0f\u7ebf\u7a0b\u8c03\u5ea6 - \u7ebf\u7a0b\u7684\u6267\u884c\u65f6\u95f4\u7531\u7ebf\u7a0b\u672c\u8eab\u6765\u63a7\u5236\uff0c\u7ebf\u7a0b\u628a\u81ea\u5df1\u7684\u5de5\u4f5c\u6267\u884c\u5b8c\u4e86\u4e4b\u540e\uff0c\u8981\u4e3b\u52a8\u901a\u77e5\u7cfb\u7edf\u5207\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u4e0a\u3002"),(0,i.kt)("p",{parentName:"li"},"  \u4f18\u70b9\uff1a\u5b9e\u73b0\u7b80\u5355\uff0c\u800c\u4e14\u7531\u4e8e\u7ebf\u7a0b\u8981\u628a\u81ea\u5df1\u7684\u4e8b\u60c5\u5e72\u5b8c\u540e\u624d\u4f1a\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\uff0c\u5207\u6362\u64cd\u4f5c\u5bf9\u7ebf\u7a0b\u81ea\u5df1\u662f\u53ef\u77e5\u7684\uff0c\u6240\u4ee5\u6ca1\u6709\u4ec0\u4e48\u7ebf\u7a0b\u540c\u6b65\u7684\u95ee\u9898\u3002  "),(0,i.kt)("p",{parentName:"li"},"  \u7f3a\u70b9\uff1a\u7ebf\u7a0b\u6267\u884c\u65f6\u95f4\u4e0d\u53ef\u63a7\u5236\uff0c\u751a\u81f3\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u7f16\u5199\u6709\u95ee\u9898\uff0c\u4e00\u76f4\u4e0d\u544a\u77e5\u7cfb\u7edf\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\uff0c\u90a3\u4e48\u7a0b\u5e8f\u5c31\u4f1a\u4e00\u76f4\u963b\u585e\u5728\u90a3\u91cc\u3002  ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u62a2\u5360\u5f0f\u7ebf\u7a0b\u8c03\u5ea6 \uff08Java\uff09 - \u6bcf\u4e2a\u7ebf\u7a0b\u7531\u7cfb\u7edf\u6765\u5206\u914d\u6267\u884c\u65f6\u95f4\uff0c\u7ebf\u7a0b\u7684\u5207\u6362\u4e0d\u7531\u7ebf\u7a0b\u672c\u8eab\u6765\u51b3\u5b9a\uff08\u5728Java\u4e2d\uff0cThread.yield\uff08\uff09\u53ef\u4ee5\u8ba9\u51fa\u6267\u884c\u65f6\u95f4\uff0c\u4f46\u662f\u8981\u83b7\u53d6\u6267\u884c\u65f6\u95f4\u7684\u8bdd\uff0c\u7ebf\u7a0b\u672c\u8eab\u662f\u6ca1\u6709\u4ec0\u4e48\u529e\u6cd5\u7684\uff09\u3002"),(0,i.kt)("p",{parentName:"li"},"  \u7ebf\u7a0b\u7684\u6267\u884c\u65f6\u95f4\u662f\u7cfb\u7edf\u53ef\u63a7\u7684\uff0c\u4e5f\u4e0d\u4f1a\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u963b\u585e\u7684\u95ee\u9898"))),(0,i.kt)("h3",{id:"814-\u7ebf\u7a0b\u7684\u51e0\u4e2a\u72b6\u6001"},"8.1.4. \u7ebf\u7a0b\u7684\u51e0\u4e2a\u72b6\u6001"),(0,i.kt)("p",null,"thread \u51e0\u79cd\u72b6\u6001: ",(0,i.kt)("a",{parentName:"p",href:"https://www.draw.io/?lightbox=1&highlight=0000ff&edit=_blank&layers=1&nav=1&title=Untitled%20Diagram.xml#R5VlLc5swEP41mmkP8SAwr2PtkPbQzmQmhzZHBWRQA5JHyLGdX18B4inseuJX0iYzGbEsy%2B633%2B5KBFjzbPOVo2Xyg0U4BaYRbYB1C0zT9yz5txBsK4FtupUg5iSqRLAVPJBXrISGkq5IhPOeomAsFWTZF4aMUhyKngxxztZ9tQVL%2B29dohhrgocQpbr0J4lEUkm9OopC%2Fg2TOKnfDB2%2FupOhWllFkicoYuuOyAqANeeMiWqVbeY4LbCrcameu9txt3GMYyoOeWBaPfCC0pWKTfkltnWwOJKxq0vGRcJiRlEatNIZZysa4cKiIa8SkaVyCeXyNxZiq9KHVoJJUWvhO2NLpReyjIRq3SBS2KqcKTzYGZ8S5WzFQ6Wl2CUQj7HSMhtsJScxy7DgW6nCcYoEeelbR4odcaPXAigXCsNxPF0Nz1y6IT591mAVeCP6aHGck1f0VCoUwS8ZoaL0xZ4B%2B1ZKUEpiKgWhjB5zKXjBXBDJyy%2FqRkaiqExJip5wOkPhc1wmZ85Sxsv3Wovyp8G2sIA3Y1WjPGm52kV9Oo6nMnRjTMypqTivavxGWT8YcmX9vkCho8IWi1xmdZiTxomD0uSfnvZdDneS2qPzofXwNtqbOu29C9G%2BbsxdQAMXzGbAt0DgAP8W%2BHf%2FWAn4fysB6Dr2%2By0BaOqtakvDhDMqCRppyTqI7XhDxC%2BlUqwfi%2FXEf2sdSKz5trQ3Me36%2BrFj%2Fx5zImMuiHDEvBgpHGgdWTmD1NX08o0eIyzD6JuofFBPHZdfR8vvGpGxSdTtdJTR87a2vSk9XfrsSzU%2B%2F2RwNrUzce1O%2BQxAgz3MJgZ0a8GwFq47eeClRk%2Bzkz5dBiDodi%2FX7mdAY%2B3%2FAjQcmfEe8AIwc0Fgg1kAfLnwgT8FHjxzUkx7Xy%2B58MYLXvHAoU9xvqK03LjsnuBFqOuECPywRGUQa3lM39Pcu6mJU5TnvX49sn%2FSANu5T7LM%2FkSEtrpetwdrWOsknUO1YxwPHrRHZySh8ccAz3QH2wnnguB5GnZy9mSEIrF39%2FiO4HOMAfcuCZ%2BlwUfx%2BqPgdsWS1XF7Sln4%2FFE4BwecM71Lgqd%2FnqJMkMX26qeC8b2vsWfndcS4tk8%2FrsePe5blTaDX%2FtafW%2Bt27Q1yWnmpnf50ux6cdMxC1%2BlzyjzfqXKk68tTR1QQ%2BCNNzqk3mJzT85WhvGw%2F6FeYt%2F8VsYI%2F"},"online")),(0,i.kt)("h2",{id:"82-thread\u57fa\u672capi"},"8.2. thread\u57fa\u672capi"),(0,i.kt)("h3",{id:"821-\u521b\u5efa"},"8.2.1. \u521b\u5efa"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f7f\u7528 start(), \u800c\u4e0d\u662f run()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5b9e\u73b0 Runnable \u63a5\u53e3 \u800c\u4e0d\u662f \u7ee7\u627f Thread \u7c7b"))),(0,i.kt)("h3",{id:"822-\u7ec8\u6b62"},"8.2.2. \u7ec8\u6b62"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e0d\u8981\u4f7f\u7528 stop() "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u56e0\u4e3a\u592a\u66b4\u529b, \u5f3a\u884c\u5c06\u672a\u6267\u884c\u5b8c\u7684 thread \u7ec8\u6b62, \u4f1a\u9020\u6210\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u4f1a\u51fa\u73b0  ",(0,i.kt)("inlineCode",{parentName:"p"},"\u6570\u636e\u4e0d\u4e00\u81f4"),"\u5462? - stop() \u4f1a\u76f4\u63a5\u7ec8\u6b62 thread, \u7acb\u5373\u91ca\u653e thread \u6240\u6301\u6709\u7684 \u9501, \u5982\u679c\u6b64\u65f6 thread \u6b63 write \u6570\u636e\u5230\u4e00\u534a,   \u88ab\u5f3a\u884c\u7ec8\u6b62, \u5bf9\u8c61\u5c31\u88ab\u6539\u574f\u4e86, \u540c\u65f6 \u9501\u88ab\u91ca\u653e, \u8fd9\u4e2a\u9519\u8bef\u7684\u5bf9\u8c61\u5c31\u88ab\u8bfb\u53d6\u4e86")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a "\u662f\u5426\u505c\u6b62" \u7684 \u6807\u8bb0\u53d8\u91cf, \u51b3\u5b9a\u4f55\u65f6\u9000\u51fa - jdk\u63d0\u4f9b\u66f4\u597d\u7684\u529e\u6cd5: interrupt(\u4e2d\u65ad)'))),(0,i.kt)("h3",{id:"823-\u4e2d\u65ad-interruptedexception-\u5904\u7406"},"8.2.3. \u4e2d\u65ad InterruptedException \u5904\u7406"),(0,i.kt)("p",null,"thread \u4e0d\u7acb\u5373\u9000\u51fa, \u53ea\u662f\u63a5\u53d7\u5230\u4e00\u4e2a\u4e2d\u65ad\u4fe1\u53f7, \u81f3\u4e8e\u63a5\u6536\u5230\u8fd9\u4e2a\u4fe1\u53f7\u5e72\u4ec0\u4e48, \u6709\u6211\u4eec\u81ea\u5df1\u5199\u4ee3\u7801\u51b3\u5b9a"),(0,i.kt)("p",null,"api:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public static void main(String args[]) throws InterruptedException {\n\n  Thread thread = new Thread() {\n      @Override\n      public void run() {\n          while (true) {\n              if (Thread.currentThread().isInterrupted()) {// \u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\n              // \u6267\u884c\u6211\u4eec\u81ea\u5df1\u7684\u903b\u8f91\n                  System.out.println("\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7,\u505c\u6b62\u8be5\u7ebf\u7a0b!");\n                  break;\n              }\n              try {\n                  Thread.sleep(600);\n                  // TimeUnit.SECONDS.sleep(60); // \u4f18\u96c5\u7684 \u7761\u7720\n              } catch (InterruptedException e) {\n                  e.printStackTrace();// sleep \u65f6\u5019 \u88ab interrupt, \u629b\u5f02\u5e38, \u4f1a\u6e05\u9664 interrupt \u6807\u8bb0, \u5373\u6ca1\u6709\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\n                  Thread.currentThread().interrupt();// \u9700\u8981\u518d\u6b21\u624b\u52a8\u6062\u590d interrupt \u6807\u8bb0, \u5373\u6536\u5230\u4e2d\u65ad\u4fe1\u53f7\n              }\n              System.out.println("Running!");\n              Thread.yield(); // \u8c26\u8ba9\n          }\n      }\n  };\n\n  thread.start();\n  Thread.sleep(2000);\n  thread.interrupt();//\u8fdb\u884c\u4e2d\u65ad\u64cd\u4f5c\n}\n\n')),(0,i.kt)("h3",{id:"824-\u7b49\u5f85\u548c\u901a\u77e5-wait-notify"},"8.2.4. \u7b49\u5f85\u548c\u901a\u77e5-wait-notify"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5fc5\u987b\u5728 synchronized \u4e2d\u4f7f\u7528, \u7b49\u5f85, \u5524\u9192\u64cd\u4f5c\u90fd\u5fc5\u987b\u5148\u83b7\u5f97\u76ee\u6807\u5bf9\u8c61\u7684\u4e00\u4e2a\u76d1\u89c6\u5668\uff08\u9501\uff09")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e0d\u63a8\u8350\u4f7f\u7528 - \u4f1a\u5e72\u6270 \u7cfb\u7edf api \u5de5\u4f5c \u6216\u88ab\u7cfb\u7edfapi\u5f71\u54cd, \u6bd4\u5982 join(), \u672c\u8d28\u5c31\u662f\u8c03\u7528 wait(), \u5982\u679c\u968f\u4fbf\u4f7f\u7528 wait(), \u4f1a\u5e72\u6270 \u8fd9\u4e2aapi")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u5b9a\u4e49 \u5728 Object \u7c7b \u4e0a, \u4efb\u4f55\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528, \u6bd4\u5982: thread A call\u4e86 obj.wait(), thread A \u4f1a\u8fdb\u5165obj\u7684\u7b49\u5f85\u961f\u5217, \u76f4\u5230\u5176\u4ed6 thread \u8c03\u7528 \u4e86 obj.notify(), obj \u4f1a\u4ece\u81ea\u5df1\u7684\u7b49\u5f85\u961f\u5217\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a thread;"),(0,i.kt)("p",{parentName:"li"},"\u8fd9\u65f6 obj \u5c31\u50cf\u662f thread A B \u95f4\u7684 \u901a\u8baf\u624b\u6bb5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e0d\u8981\u4f7f\u7528 suspend()\u6302\u8d77, resume()\u6062\u590d ---- \u56e0\u4e3a\u8fd9\u6837\u6302\u8d77thread \u9501\u4e0d\u4f1a\u91ca\u653e, \u800c\u4e14\u7531\u4e8e\u6307\u4ee4\u91cd\u6392, resume()\u5728suspend()\u524d\u6267\u884c\u4f1a\u9020\u6210thread\u6c38\u8fdc\u6302\u8d77"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n//wait()\u65b9\u6cd5\u4f1a\u91ca\u653e\u76ee\u6807\u5bf9\u8c61\u7684\u9501,\u800cThread.sleep()\u65b9\u6cd5\u4e0d\u4f1a\u91ca\u653e\u4efb\u4f55\u8d44\u6e90.\n*/\npublic class SimpleWaitAndNotify {\n    final static Object object = new Object();\n\n    public static class Thread1 extends Thread {\n        public void run() {\n            synchronized (object) { // \u6267\u884c wait \u65b9\u6cd5\u524d, \u9996\u5148\u83b7\u53d6 object \u5bf9\u8c61\u9501\n                System.out.println(System.currentTimeMillis() + ":thread1 start !");\n                try {\n                    System.out.println(System.currentTimeMillis() + ":thread1 wait for object !");\n                    object.wait();// \u6267\u884c\u5b8c\u6bd5\u540e thread \u4f1a\u91ca\u653eobject\u9501, \u7b49\u5f85, \u4e00\u65e6\u6709 notify \u4fe1\u53f7, \u5219\u518d\u6b21\u83b7\u53d6 object \u9501, \u88ab\u5524\u9192\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(System.currentTimeMillis() + ":thread1 end!");\n            }\n        }\n    }\n\n    public static class Thread2 extends Thread {\n        public void run() {\n            synchronized (object) { //\u9996\u5148\u83b7\u53d6 object \u5bf9\u8c61\u9501\n                System.out.println(System.currentTimeMillis() + ":thread2 start ! notify one thread");\n                object.notify();  \n\n                try {\n                    Thread.sleep(2000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                System.out.println(System.currentTimeMillis() + ":thread2 end!");\n            }\n        }\n    }\n\n    public static void main(String args[]) {\n        Thread thread1 = new Thread1();\n        Thread thread2 = new Thread2();\n        thread1.start();\n        thread2.start();\n    }\n}\n\n')),(0,i.kt)("h3",{id:"825-\u7b49\u5f85\u7ed3\u675f\u548c\u8c26\u8ba9-join-yield"},"8.2.5. \u7b49\u5f85\u7ed3\u675f\u548c\u8c26\u8ba9-join-yield"),(0,i.kt)("p",null,"threa1.join()\u8868\u793a thread1\u52a0\u5165\u4e86\u5f53\u524d\u7ebf\u7a0b - \u4f1a\u4f7f\u5f97 current thread \u7b49\u5f85 thread1\u6267\u884c\u5b8c\u6bd5 \u518d\u6267\u884c"),(0,i.kt)("p",null,"thread1.yield() \u8ba9\u51fa cpu \u63a7\u5236\u6743, \u91cd\u65b0\u4e89\u593acpu"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class JoinMain {\n\n    public volatile static int i = 0;\n\n    public static class AddThread extends Thread {\n        public void run() {\n            System.out.println("add!");\n\n            for (i = 0; i < 1000000; i++) ;\n\n            try {\n                Thread.sleep(500);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n\n        AddThread at = new AddThread();\n        at.start();\n        at.join();//\u4f7f\u7528join()\u65b9\u6cd5\u540e,\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85AddThread\u6267\u884c\u5b8c\u6bd5,i\u8f93\u51fa\u4e3a1000000,\u5982\u679c\u6ca1\u6709\u8fd9\u6761\u8bed\u53e5,i\u8f93\u51fa\u4e3a0\n        //\u53ef\u4ee5\u67e5\u770bjoin\u7684\u5e95\u5c42\u4ee3\u7801,\u672c\u8d28\u5373\u8ba9\u8c03\u7528\u7ebf\u7a0b\u5728\u5f53\u524d\u7ebf\u7a0b\u5bf9\u8c61\u5b9e\u4f8b\u4e0a\u7b49\u5f85\n        System.out.println(i);\n    }\n}\n\n')),(0,i.kt)("h3",{id:"826-\u7ebf\u7a0b\u7ec4"},"8.2.6. \u7ebf\u7a0b\u7ec4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ThreadGroupName implements Runnable {\n\n    @Override\n    public void run() {\n        String groupAndName = \n            Thread.currentThread().getThreadGroup().getName() + "-" + Thread.currentThread().getName();\n        while (true) {\n            System.out.println("I am " + groupAndName);\n            try {\n                Thread.sleep(3000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String args[]) {\n        ThreadGroup tg = new ThreadGroup("PrintGroup");\n        Thread t1 = new Thread(tg, new ThreadGroupName(), "T1");\n        Thread t2 = new Thread(tg, new ThreadGroupName(), "T2");\n        t1.start();\n        t2.start();\n        System.out.println(tg.activeCount());// \u6d3b\u52a8\u7ebf\u7a0b\u7684\u5927\u6982\u603b\u6570\n        Thread t3 = new Thread(tg, new ThreadGroupName(), "T3");\n        t3.start();\n        System.out.println(tg.activeCount());\n        tg.list();// \u6253\u5370\u6240\u6709\u7684\u7ebf\u7a0b\n    }\n}\n\n')),(0,i.kt)("h3",{id:"827-\u5b88\u62a4\u7ebf\u7a0b-daemon"},"8.2.7. \u5b88\u62a4\u7ebf\u7a0b-daemon"),(0,i.kt)("p",null,"\u5f53\u7cfb\u7edf\u53ea\u6709 daemon thread \u5b58\u5728, jvm \u5c31\u81ea\u52a8\u9000\u51fa\u4e86"),(0,i.kt)("p",null,"\u6bd4\u5982 GC \u7ebf\u7a0b, JIT\u7ebf\u7a0b \u5c31\u662f daemon"),(0,i.kt)("p",null,"\u53ef\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"thread.setDaemon(true);")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class DaemonDemo {\n    public static class DaemonT extends Thread {\n        public void run() {\n            while (true) {\n                System.out.println("I am alive");\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n    }\n\n    /**\n     * thread\u88ab\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b,\u7cfb\u7edf\u4e2d\u53ea\u6709\u4e3b\u7ebf\u7a0bmain\u4e3a\u7528\u6237\u7ebf\u7a0b,\u56e0\u6b64\n     *\u5728main\u7ebf\u7a0b\u4f11\u77203\u79d2\u9000\u51fa\u65f6,\u6574\u4e2a\u7a0b\u5e8f\u4e5f\u968f\u4e4b\u7ed3\u675f,\u5982\u679c\u4e0d\u628a\u7ebf\u7a0bthread\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b,\n     * main\u7ebf\u7a0b\u7ed3\u675f\u540e,t\u7ebf\u7a0b\u8fd8\u4f1a\u4e0d\u505c\u7684\u6253\u5370,\u6c38\u8fdc\u4e5f\u4e0d\u4f1a\u7ed3\u675f.\n     *\n     * tip:\u5f53\u4e00\u4e2aJava\u5e94\u7528\u5185,\u53ea\u6709\u5b88\u62a4\u7ebf\u7a0b\u65f6,Java\u865a\u62df\u673a\u5c31\u4f1a\u9000\u51fa.\n     *\n     * @param args\n     * @throws InterruptedException\n     */\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread = new DaemonT();\n        thread.setDaemon(true);\n        thread.start();\n        Thread.sleep(3000);\n\n    }\n}\n\n')),(0,i.kt)("h3",{id:"828-\u7ebf\u7a0b\u4f18\u5148\u7ea7"},"8.2.8. \u7ebf\u7a0b\u4f18\u5148\u7ea7"),(0,i.kt)("p",null,"\u867d\u7136Java\u7ebf\u7a0b\u8c03\u5ea6\u662f\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210\u7684\uff0c\u4f46\u662f\u6211\u4eec\u8fd8\u662f\u53ef\u4ee5\u201c\u5efa\u8bae\u201d\u7cfb\u7edf\u7ed9\u67d0\u4e9b\u7ebf\u7a0b\u591a\u5206\u914d\u4e00\u70b9\u6267\u884c\u65f6\u95f4\uff0cJava\u8bed\u8a00\u4e00\u5171\u8bbe\u7f6e\u4e8610\u4e2a\u7ea7\u522b\u7684\u7ebf\u7a0b\u4f18\u5148\u7ea7\uff08Thread.MIN_PRIORITY\u81f3Thread.MAX_PRIORITY\uff09\uff0c\u5728\u4e24\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5904\u4e8eReady\u72b6\u6001\u65f6\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7684\u7ebf\u7a0b\u8d8a\u5bb9\u6613\u88ab\u7cfb\u7edf\u9009\u62e9\u6267\u884c\uff0c \u4f46\u662f \u201c\u5e76\u4e0d\u662f\u4e00\u5b9a\u5148\u88ab\u6267\u884c\u201d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class PriorityDemo {\n    public static class HightPriority extends Thread {\n        static int count = 0;\n\n        public void run() {\n            while (true) {\n                synchronized (PriorityDemo.class) {//\u6b64\u5904\u4ea7\u751f\u8d44\u6e90\u7ade\u4e89\n                    count++;\n                    if (count > 1000000) {\n                        System.out.println("HightPriority is complete!");\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    public static class LowPriority extends Thread {\n        static int count = 0;\n\n        public void run() {\n            while (true) {\n                synchronized (PriorityDemo.class) {//\u6b64\u5904\u4ea7\u751f\u8d44\u6e90\u7ade\u4e89\n                    count++;\n                    if (count > 1000000) {\n                        System.out.println("LowPriority is complete!");\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n\n    /**\n     * \u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u5148\u542f\u52a8,\u4f46\u662f\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u6bcf\u6b21\u90fd\u662fLowPriority\u5148\u5b8c\u6210,\u8d44\n     \u6e90\u7ade\u4e89\u7684\u60c5\u51b5\u4e0b\u8fd8\u662f\u4f1a\u5148\u786e\u4fdd\u4f18\u5148\u7ea7\u8f83\u9ad8\u7684\u7ebf\u7a0b (\u8fd9\u91cc\u7684\u7ebf\u7a0b hight) \u83b7\u5f97\u8d44\u6e90.\n     *\n     * @param args\n     */\n    public static void main(String args[]) {\n        Thread high = new HightPriority();\n        Thread low = new LowPriority();\n        high.setPriority(Thread.MAX_PRIORITY);// \u6709 3 \u4e2a\u679a\u4e3e\u91cf\n        low.setPriority(Thread.MIN_PRIORITY);\n        low.start();\n        high.start();\n    }\n\n}\n\n')),(0,i.kt)("h2",{id:"83-\u76f8\u5173\u7684\u5173\u952e\u5b57"},"8.3. \u76f8\u5173\u7684\u5173\u952e\u5b57"),(0,i.kt)("h3",{id:"831-volatile"},"8.3.1. volatile"),(0,i.kt)("p",null,'\u4fdd\u8bc1\u53d8\u91cf\u7684 "\u53ef\u89c1\u6027(\u53d8\u91cf\u66f4\u65b0\u7acb\u5373\u5237\u5165\u5806\u5185\u5b58\u5171\u4eab)", "\u6709\u5e8f\u6027(\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f)", \u4f46\u662f\u65e0\u6cd5\u4fdd\u8bc1 "\u539f\u5b50\u6027(\u53d8\u91cf\u7684\u8bfb\u53d6,\u66f4\u65b0,\u4fdd\u5b58\u53ef\u4ee5\u7531\u4e00\u4e2athread\u8fde\u7eed\u5b8c\u6210)"'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"volatile \u4f7f\u5f97\u53d8\u91cf\u5177\u6709\u53ef\u89c1\u6027, \u5bf9\u6bd4\u4e8esynchronized, lock\u6240\u5e26\u6765\u7684\u5e9e\u5927\u5f00\u9500, \u662f\u8f7b\u91cf\u7ea7\u7684\u540c\u6b65\u673a\u5236 ------\u6700\u7ec8\u6548\u679c\u5c31\u662f\uff1a\u4e00\u6761\u7ebf\u7a0b\u66f4\u65b0\u4e86\u53d8\u91cf\uff0c\u5176\u4ed6\u7ebf\u7a0b\u4f1a\u7acb\u523b\u77e5\u9053\u5171\u4eab\u53d8\u91cf\u7684\u6700\u65b0\u7248\u672c\u503c"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5f53\u5199\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\uff08\u7ebf\u7a0b\u6808\uff09\u4e2d\u7684\u53d8\u91cf\u5f3a\u5236\u5237\u65b0\u5230\u4e3b\u5185\u5b58\uff08\u5806\u5185\u5b58\uff09\u4e2d\u53bb\uff1b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u9488\u5bf9volatile\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0b\u672c\u5730\u5185\u5b58\u4e2d\u7684\u7f13\u5b58\u65e0\u6548\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f\u4f18\u5316")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"volatile\u5bf9\u4e8e\u5355\u4e2a\u7684\u5171\u4eab\u53d8\u91cf\u7684\u8bfb/\u5199\u5177\u6709\u539f\u5b50\u6027\uff0c\u4f46\u662f\u50cfnum++\u8fd9\u79cd\u590d\u5408\u64cd\u4f5c\uff0cvolatile\u65e0\u6cd5\u4fdd\u8bc1\u5176\u539f\u5b50\u6027\uff0c\u63d0\u51fa\u4e86\u89e3\u51b3\u65b9\u6848\uff0c\u5c31\u662f\u4f7f\u7528\u5e76\u53d1\u5305\u4e2d\u7684\u539f\u5b50\u64cd\u4f5c\u7c7b\uff0c\u901a\u8fc7\u5faa\u73afCAS\u7684\u65b9\u5f0f\u6765\u4fdd\u8bc1num++\u64cd\u4f5c\u7684\u539f\u5b50\u6027"))),(0,i.kt)("p",null,"\u7528\u6cd5: \u76f4\u63a5\u4fee\u9970\u53d8\u91cf"),(0,i.kt)("p",null,"\u5e95\u5c42\u7684\u5185\u5b58\u53d8\u5316\u539f\u7406\u53c2\u89c1\uff1ajava-memory-model.md \u4e2d\u7684 #thread\u5177\u4f53\u600e\u4e48\u8bbf\u95ee\u5bf9\u8c61\u4e2d\u7684\u503c\u5462\u4ee5\u53cavolatile\u5173\u952e\u5b57"),(0,i.kt)("p",null,"\u4f7f\u7528\u573a\u666f:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u53d8\u91cf\u4ec5\u4ec5\u4f5c\u4e3a\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"li"},"\u72b6\u6001\u6807\u5fd7"),", \u5982\u5e03\u5c14\u503c"),(0,i.kt)("li",{parentName:"ul"},"\u6784\u9020\u5355\u4f8b\u6a21\u5f0f\u65f6, \u4f7f\u7528\u53cc\u91cd\u7a7a\u68c0\u67e5, \u53d8\u91cf\u9700\u8981\u58f0\u660e\u4e3a volatile, \u7981\u6b62\u6307\u4ee4\u91cd\u6392\u5e8f;"),(0,i.kt)("li",{parentName:"ul"},"\u53d8\u91cf\u53ea\u4f1a\u88ab\u4e00\u4e2athread\u66f4\u6539, \u5176\u4ed6thread\u53ea\u4f1a\u8bfb\u53d6\u8fd9\u4e2a\u53d8\u91cf"),(0,i.kt)("li",{parentName:"ul"},'\u8bfb\u53d6\u591a,\u800c\u5199\u64cd\u4f5c\u5c11\u65f6, \u76f8\u6bd4\u4e8e\u76f4\u63a5\u8bfb\u5199\u90fd\u52a0\u9501, \u91c7\u7528 "\u5199\u52a0\u9501\u8bfb\u52a0volatile" \u7684\u7b56\u7565\u5b9e\u73b0\u9ad8\u6027\u80fd\u7684 "\u8bfb\u5199\u9501"')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"// \u7ebf\u7a0b1\u6267\u884cdoWork()\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u6709\u53e6\u5916\u7684\u7ebf\u7a0b2\u8c03\u7528\u4e86shutdown\uff0c\u6240\u4ee5boolean\u53d8\u91cf\u5fc5\u987b\u662fvolatile\n//\u800c\u5982\u679c\u4f7f\u7528 synchronized \u5757\u7f16\u5199\u5faa\u73af\u8981\u6bd4\u4f7f\u7528 volatile \u72b6\u6001\u6807\u5fd7\u7f16\u5199\u9ebb\u70e6\u5f88\u591a\n// \u8fd9\u91cc\u5982\u679c\u4f7f\u7528 synchronized \u600e\u4e48\u5b9e\u73b0\u5462? // todo\nvolatile boolean shutdownRequested;\n \n...\n \npublic void shutdown() { \n    shutdownRequested = true; \n}\n \npublic void doWork() { \n    while (!shutdownRequested) { \n        // do stuff\n    }\n}\n\n/////////////////////////////////\n\n//\u6ce8\u610fvolatile\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01\uff01  \nprivate volatile static Singleton instace;   \n  \npublic static Singleton getInstance(){   \n    //\u7b2c\u4e00\u6b21null\u68c0\u67e5     \n    if(instance == null){            \n        synchronized(Singleton.class) {    //1     \n            //\u7b2c\u4e8c\u6b21null\u68c0\u67e5       \n            if(instance == null){          //2  \n                instance = new Singleton();//3  \n            }  \n        }           \n    }  \n    return instance; \n/////////////////////////////////////////\n\npublic class UserManager {\n    public volatile String lastUser; //\u53d1\u5e03\u7684\u4fe1\u606f\n \n    public boolean authenticate(String user, String password) {\n        boolean valid = passwordIsValid(user, password);\n        if (valid) {\n            User u = new User();\n            activeUsers.add(u);\n            lastUser = user;\n        }\n        return valid;\n    }\n} \n////////////////////////////////////////////////\n\n\npublic class CheesyCounter {\n    private volatile int value;// \u8bfb\u53d6\u64cd\u4f5c\u501f\u52a9 volatile\u5b9e\u73b0\u4e86\u53ef\u89c1\u6027; \u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bfb\n \n    //\u8bfb\u64cd\u4f5c\uff0c\u6ca1\u6709synchronized\uff0c\u63d0\u9ad8\u6027\u80fd\n    public int getValue() { \n        return value; \n    } \n \n    //\u5199\u64cd\u4f5c\uff0c\u5fc5\u987bsynchronized\u3002\u56e0\u4e3ax++\u4e0d\u662f\u539f\u5b50\u64cd\u4f5c\n    // \u53ea\u5141\u8bb8\u5355\u4e2athread\u540c\u65f6\u5199\u64cd\u4f5c\n    public synchronized int increment() {\n        return value++;\n\n")),(0,i.kt)("p",null,"\u4ec5\u4ec5\u4f7f\u7528 volatile \u65e0\u6cd5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168"),(0,i.kt)("p",null,"\u8981\u4f7f volatile \u53d8\u91cf\u63d0\u4f9b\u7406\u60f3\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u4e0b\u9762\u4e24\u4e2a\u6761\u4ef6\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5bf9\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u4e0d\u4f9d\u8d56\u4e8e\u5f53\u524d\u503c\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u8be5\u53d8\u91cf\u6ca1\u6709\u5305\u542b\u5728\u5177\u6709\u5176\u4ed6\u53d8\u91cf\u7684\u4e0d\u53d8\u5f0f\u4e2d\u3002")),(0,i.kt)("p",null,"\u4ee5\u4e0b\u662f\u9519\u8bef\u793a\u4f8b:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// \u9519\u8bef\u793a\u4f8b: \u5bf9\u53d8\u91cf\u7684\u5199\u5165\u64cd\u4f5c\u4f9d\u8d56\u4e86\u5f53\u524d\u503c\n// \u9700\u8981\u5bf9\u65b9\u6cd5\u52a0\u9501\npublic class VolatileDemo {\n    static volatile int i = 0;\n\n    public static class PlusTask implements Runnable {\n\n        @Override\n        public void run() {\n            for (int j = 0; j < 10000; j++) {\n                i++;// i = i + 1; \u8fdd\u80cc\u4e86\u6761\u4ef6\u4e00\n            }\n        }\n    }\n\n    /**\n     * volatile\u4fdd\u8bc1\u53d8\u91cf\u7684\u53ef\u89c1\u6027,\u4f46\u662f\u65e0\u6cd5\u4fdd\u8bc1\u4e00\u4e9b\u590d\u5408\u64cd\u4f5c\u7684\u539f\u5b50\u6027, \u73b0\u5728\u542f\u52a810\u4e2a\u7ebf\u7a0b\u5bf9i\u8fdb\u884c\u7d2f\u52a0\u64cd\u4f5c,\n     * \u5982\u679c\u4e00\u5207\u6b63\u5e38\u7684\u8bdd,\u7ed3\u679c\u5e94\u4e3a100000,\u4f46\u662f\u7ed3\u679c\u4e3a94875\u6216\u8005\u5176\u4ed6\u5c0f\u4e8e100000,\u56e0\u6b64\u7ebf\u7a0b\u7684\u5e76\u53d1\u4e2d\u6ca1\u6709\u4fdd\u8bc1i\u7684\u539f\u5b50\u6027.\n     *\n     * \u6bd4\u5982: \u521a\u5f00\u59cb, thread1, thread2 \u540c\u65f6\u8bfb\u53d6 i=0, \u5404\u81ea\u8ba1\u7b97\u540e\u5f97\u5230 i=1, \u5e76\u5148\u540e\u5199\u5165\u8fd9\u4e2a\u7ed3\u679c, \u8fd9\u6837, \u867d\u7136 i++ \u6267\u884c\u4e86 2\u6b21, \u5b9e\u9645\u4e0a i \u53ea\u589e\u52a0\u4e86 1\n     *\n     * @param args\n     * @throws InterruptedException\n     */\n    public static void main(String args[]) throws InterruptedException {\n        long start = System.currentTimeMillis();\n        Thread[] threads = new Thread[10];\n        for (int j = 0; j < 10; j++) {\n            threads[j] = new Thread(new PlusTask());\n            threads[j].start();// \u591a\u4e2a thread \u540c\u65f6\u5bf9\u53d8\u91cf i \u5199\u5165, \u4f1a\u4ea7\u751f\u8986\u76d6 , so \u6700\u7ec8 i \u8fbe\u4e0d\u5230 100000\n        }\n        for (int j = 0; j < 10; j++) {\n            threads[j].join();// main thread wait until these thread end\n        }\n        System.out.println(i);\n        long end = System.currentTimeMillis();\n        long time = end - start;\n        System.out.println("\u8017\u65f6:" + time);\n    }\n}\n\n// \u9519\u8bef\u793a\u4f8b: \u53d8\u91cf\u5305\u542b\u5728\u4e86\u5177\u6709\u5176\u4ed6\u53d8\u91cf\u7684\u4e0d\u53d8\u5f0f\u4e2d\n// \u9700\u8981\u5bf9\u65b9\u6cd5\u52a0\u9501\n//\u5982\u679c\u521d\u59cb\u72b6\u6001\u662f(0, 5)\uff0c\u540c\u4e00\u65f6\u95f4\u5185\uff0c\u7ebf\u7a0b A \u8c03\u7528setLower(4) \u5e76\u4e14\u7ebf\u7a0b B \u8c03\u7528setUpper(3)\uff0c\u663e\u7136\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4ea4\u53c9\u5b58\u5165\u7684\u503c\u662f\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\uff0c\u90a3\u4e48\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u901a\u8fc7\u7528\u4e8e\u4fdd\u62a4\u4e0d\u53d8\u5f0f\u7684\u68c0\u67e5\uff0c\u4f7f\u5f97\u6700\u540e\u7684\u8303\u56f4\u503c\u662f(4, 3) \u2014\u2014 \u4e00\u4e2a\u65e0\u6548\u503c\u3002\npublic class NumberRange {\n    private volatile  int lower, upper;\n \n    public int getLower() { return lower; }\n    public int getUpper() { return upper; }\n \n    public void setLower(int value) { \n        if (value > upper) // \u8fdd\u80cc\u4e86\u89c4\u5219\u4e8c\n            throw new IllegalArgumentException(...);\n        lower = value;\n    }\n\n    public void setUpper(int value) { \n        if (value < lower) \n            throw new IllegalArgumentException(...);\n        upper = value;\n    }\n}\n')),(0,i.kt)("h3",{id:"832-synchronized"},"8.3.2. synchronized"),(0,i.kt)("p",null,"synchronized\u4f7f\u5f97\u4ee3\u7801\u5757\u5177\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"\u539f\u5b50\u6027\uff08atomicity\uff09"),"\u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"\u53ef\u89c1\u6027\uff08visibility\uff09"),", \u6709\u5e8f\u6027"),(0,i.kt)("p",null,"volatile \u53d8\u91cf \u80fd\u591f\u786e\u4fdd\u81ea\u5df1\u88ab\u67d0\u4e2a thread \u4fee\u6539\u540e, \u7acb\u5373(\u5237\u5165\u5806\u5185\u5b58)\u88ab \u5176\u4ed6 thread \u770b\u5230(\u89e3\u51b3\u4e86\u53ef\u89c1\u6027), \u4f46\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"\u65e0\u6cd5\u7981\u6b62\u591a\u4e2athread\u540c\u65f6\u8bbf\u95ee\u4e00\u4e2a\u53d8\u91cf"),", \u591a\u4e2a thread \u540c\u65f6\u4fee\u6539\u8fd9\u4e2a\u53d8\u91cf , \u8fd8\u662f\u4f1a\u51b2\u7a81(\u4e0d\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168)"),(0,i.kt)("p",null,"synchronized \u4f7f\u5f97 \u540c\u4e00\u65f6\u95f4, \u53ea\u80fd\u6709\u4e00\u4e2a thread \u8fdb\u5165 \u540c\u6b65\u5757. \u8fd9\u6837\u4e00\u6b21\u6027\u89e3\u51b3\u4e86 \u7ebf\u7a0b\u5b89\u5168, \u53ef\u89c1\u6027, \u6709\u5e8f\u6027"),(0,i.kt)("p",null,"\u7528\u6cd5\u6709\u4e09:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f5c\u7528\u4e8e\u5b9e\u4f8b\u65b9\u6cd5 - \u5bf9\u5f53",(0,i.kt)("inlineCode",{parentName:"p"},"\u524d\u5b9e\u4f8b\u5bf9\u8c61"),"\u52a0\u9501 (\u5373this\u5bf9\u8c61), \u8fdb\u5165\u65b9\u6cd5\u524d, \u5148\u83b7\u53d6 \u5f53\u524d\u5b9e\u4f8b\u7684\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6307\u5b9a\u52a0\u9501\u5bf9\u8c61 - \u4f7f\u7528synchronized\u4fee\u9970\u4ee3\u7801\u5757. \u9501\u4f4f\u7684\u662f ",(0,i.kt)("inlineCode",{parentName:"p"},"()")," \u4e2d\u7684\u5bf9\u8c61, \u8fdb\u5165\u540c\u6b65\u4ee3\u4e70\u5757\u524d\u9700\u8981\u5148\u83b7\u53d6\u5bf9\u8c61\u7684\u9501\uff0c\u8fd9\u91cc\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u4e24\u4e2athread \u7684\u5171\u4eab\u5bf9\u8c61\uff1b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4f5c\u7528\u4e8e\u9759\u6001\u65b9\u6cd5. -  synchronized \u4fee\u9970\u9759\u6001\u7684\u65b9\u6cd5\u6216\u9759\u6001\u4ee3\u7801\u5757(\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"\u5f53\u524d\u7c7b\u7684Class\u5bf9\u8c61"),"\u4f5c\u4e3a\u9501\u7684\u5bf9\u8c61), \u8fdb\u5165\u524d\u9700\u8981\u83b7\u53d6\u5f53\u524d\u7c7b\u7684\u9501"))),(0,i.kt)("p",null,"\u539f\u7406: JVM \u662f\u901a\u8fc7thread\u8fdb\u5165\u3001\u9000\u51fa\u5bf9\u8c61\u76d1\u89c6\u5668( Monitor, \u5c31\u662f\u9501\u5728Hotspot\u865a\u62df\u673a\u4e2d\u7684\u4e13\u95e8\u7684\u540d\u5b57 )\u6765\u5b9e\u73b0\u5bf9\u65b9\u6cd5\u3001\u540c\u6b65\u5757\u7684\u540c\u6b65\u7684; \u7f16\u8bd1\u540e, \u540c\u6b65\u5757\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5206\u522b\u6709 ",(0,i.kt)("inlineCode",{parentName:"p"},"monitorenter"),",",(0,i.kt)("inlineCode",{parentName:"p"},"monitorexit")," \u6307\u4ee4\uff0c\u8fdb\u5165 Monitor \u540e\u7ebf\u7a0b\u5177\u6709\u6392\u4ed6\u6027\u4ece\u800c\u8fbe\u5230\u4e86\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u7684\u76ee\u7684\u3002"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"javap -c <class name>")," \u67e5\u770b\u7f16\u8bd1\u540e\u4fe1\u606f, \u53ef\u4ee5\u770b\u5230\u5728\u540c\u6b65\u5757\u7684\u5165\u53e3\u548c\u51fa\u53e3\u5206\u522b\u6709 monitorenter,monitorexit \u6307\u4ee4\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class AccountSync implements Runnable {\n    static AccountSync instance = new AccountSync();\n    static volatile int i = 0;\n\n    @Override\n    public void run() {\n        for (int j = 0; j < 10000000; j++) {\n            /**\n             * synchronized\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65,\u5bf9\u540c\u6b65\u7684\u4ee3\u7801\u52a0\u9501,\u4f7f\u5f97\u6bcf\u4e00\u6b21\u90fd\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u540c\u6b65\u5757\u4ece\u800c\u4fdd\u8bc1\u7ebf\u7a0b\u95f4\u7684\u5b89\u5168\u6027.\n             *\n             * \u6bcf\u6b21 thread \u8fdb\u5165\u524d, \u9700\u8981\u5148\u8bf7\u6c42 instance \u7684\u9501, \u5982\u679c\u5f53\u524d\u6709\u5176\u4ed6thread \u6301\u6709instance\u7684\u9501, \u8fd9\u4e2athread\u5c31\u7b49\u5f85\n             */\n            synchronized (instance) {\n                i++;\n            }\n        }\n    }\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread1 = new Thread(instance);// \u8fd9\u91cc thread1, thread2 \u90fd\u4f7f\u7528\u540c\u4e00\u4e2a runnable \u63a5\u53e3\u5b9e\u4f8b, \u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4e24\u4e2athread \u5173\u6ce8\u540c\u4e00\u4e2a\u5bf9\u8c61, \u83b7\u53d6\u548c\u91ca\u653e\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u9501\n        Thread thread2 = new Thread(instance);\n\n        /**\n        * wrong! \u4f7f\u7528\u4e86\u4e0d\u540c\u7684 runnable \u63a5\u53e3\u5b9e\u4f8b, thread1,2\u5173\u6ce8\u7684\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\u9501\n        *\n        * \u5982\u4f55\u6539\u8fdb? \u5c06\u540c\u6b65\u4ee3\u7801\u5757\u642c\u5230 \u9759\u6001\u65b9\u6cd5\u4e2d\u8fdb\u884c\u540c\u6b65. \u8fd9\u6837,\u5373\u4f7f\u4e24\u4e2a thread \u6307\u5411\u4e0d\u540c\u7684 runnable \u5bf9\u8c61, \u4f46\u662f\u540c\u6b65\u5757\u8bf7\u6c42\u7684\u662f "\u5f53\u524d\u7c7b" \u7684\u9501(\u552f\u4e00), \u4e0d\u662f\u5b9e\u4f8b\u7684\u9501, \u4ecd\u65e7\u53ef\u4ee5\u4fdd\u8bc1\u540c\u6b65\n        */\n        // Thread thread1 = new Thread(new AccountSync());\n        // Thread thread2 = new Thread(new AccountSync());\n\n        thread1.start();\n        thread2.start();\n\n        thread1.join();\n        thread2.join();\n\n        System.out.println(i);\n    }\n}\n\n')),(0,i.kt)("p",null,"\u7b49\u6548\u7684 \u4ee3\u7801:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class AccountingVol implements Runnable {\n    static AccountingVol instance = new AccountingVol();\n    static volatile int i = 0;\n\n    /**\n    // thread \u518d\u8fdb\u5165\u8fd9\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\u524d, \u9700\u8981\u83b7\u53d6\u5f53\u524d\u5bf9\u8c61\u5b9e\u4f8b\u7684\u9501, \u4e5f\u5c31\u662f instance \u5bf9\u8c61\n    */\n    public static void increase() {\n        i++;\n    }\n\n    @Override\n    public void run() {\n        for (int j = 0; j < 10000000; j++) {\n            increase();\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread1 = new Thread(instance);\n        Thread thread2 = new Thread(instance);\n\n        thread1.start();\n        thread2.start();\n\n        thread1.join();\n        thread2.join();\n\n        System.out.println(i);\n    }\n\n}\n\n")),(0,i.kt)("h1",{id:"9-jdk\u4e2d\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u5e93\u9020\u6210\u7684\u9690\u853d\u9519\u8bef"},"9. jdk\u4e2d\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u7c7b\u5e93\u9020\u6210\u7684\u9690\u853d\u9519\u8bef"),(0,i.kt)("h2",{id:"91-\u5148\u770b\u4e00\u4e2a\u9690\u853d\u9519\u8bef\u7684\u4f8b\u5b50-int\u578b\u6ea2\u51fa"},"9.1. \u5148\u770b\u4e00\u4e2a\u9690\u853d\u9519\u8bef\u7684\u4f8b\u5b50-int\u578b\u6ea2\u51fa"),(0,i.kt)("p",null,"\u5178\u578b\u5982 int \u578b\u53d8\u91cf\u6ea2\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'int v1 = 1023434540;\nint v2 = 1448547380;\nint v3 = (v1 + v2)/2;\nSystem.out.println("v3: " + v3);// v3: -911492688\n\n')),(0,i.kt)("h2",{id:"92-\u5e76\u53d1\u4e0b\u7684arraylist"},"9.2. \u5e76\u53d1\u4e0b\u7684ArrayList"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ArrayListMultiThread {\n    static ArrayList<Integer> arrayList = new ArrayList<Integer>(10);\n\n    public static class AddThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int i = 0; i < 10000; i++) {\n                arrayList.add(i);\n            }\n        }\n    }\n    /**\n     * ArrayList\u662f\u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u5bb9\u5668,\u591a\u7ebf\u7a0b\u64cd\u4f5c\u65f6\u53ef\u80fd\u67093\u4e2d\u60c5\u51b5\n     \n     * - \u4e0d\u51fa\u73b0\u9519\u8bef - arraylist \u6700\u7ec8\u5927\u5c0f20000, \u5e76\u884c\u7a0b\u5e8f\u6709\u95ee\u9898\u4e5f\u4e0d\u4e00\u5b9a\u6bcf\u6b21\u90fd\u66b4\u9732\u51fa\u6765\n     * - \u4f1a\u51fa\u73b0\u51b2\u7a81,\u62a5\u9519\u4fe1\u606f\u5982\u4e0b:\n     * Exception in thread "Thread-1" java.lang.ArrayIndexOutOfBoundsException: 22\n     * at java.util.ArrayList.add(ArrayList.java:441)\n     * at chapter2.ArrayListMultiThread$AddThread.run(ArrayListMultiThread.java:27)\n     * at java.lang.Thread.run(Thread.java:745)\n     * \u8fd9\u662f\u56e0\u4e3a ArrayList \u5728\u52a8\u6001\u6269\u5bb9\u65f6\u5019, \u5185\u90e8\u4e00\u81f4\u6027\u88ab\u7834\u574f, \u5728\u6ca1\u6709\u9501\u4fdd\u62a4\u7684\u60c5\u51b5\u4e0b, \u88ab\u53e6\u5916\u4e00\u4e2athread\u8bbf\u95ee\u5230\u8fd9\u79cd\u4e0d\u4e00\u81f4\u72b6\u6001  \u5bfc\u81f4\u51fa\u73b0\u8d8a\u754c\u95ee\u9898\n     *\n     * - \u51fa\u73b0\u9519\u8bef\u7684\u7ed3\u679c, \u4f46\u662f\u4e0d\u62a5\u9519 -  \u8fd9\u662f\u7531\u4e8e2\u4e2athread\u540c\u65f6\u5bf9 array list\u540c\u4e00\u4e2a\u4f4d\u7f6e\u8fdb\u884c\u8d4b\u503c\n     *\n     * Vector\u662f\u4e00\u4e2a\u7ebf\u7a0b\u5b89\u5168\u7684\u5bb9\u5668,\u53ef\u4ee5\u4ee3\u66ffArrayList\n     */\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread1 = new Thread(new AddThread());\n        Thread thread2 = new Thread(new AddThread());\n\n        thread1.start();\n        thread2.start();\n\n        thread1.join();\n        thread2.join();\n\n        System.out.println(arrayList.size());\n    }\n\n}\n\n')),(0,i.kt)("h2",{id:"93-\u5e76\u53d1\u4e0b\u7684hashmap"},"9.3. \u5e76\u53d1\u4e0b\u7684Hashmap"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class HashMapMultiThread {\n    static Map<String, String> map = new HashMap<String, String>();\n\n    public static class AddThread implements Runnable {\n\n        int start = 0;\n\n        public AddThread(int start) {\n            this.start = start;\n        }\n\n        @Override\n        public void run() {\n            for (int i = start; i < 100000; i += 2) {\n                map.put(Integer.toString(i), Integer.toBinaryString(i));\n            }\n        }\n    }\n\n    /**\n     *  HashMap\u662f\u4e00\u4e2a\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\u5bb9\u5668,\u591a\u7ebf\u7a0b\u64cd\u4f5c\u65f6\u4f1a\u51fa\u73b0\u51b2\u7a81\n     *\n     *  jdk7\u4e0b,\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7535\u8111\u6b7b\u673a,jdk8\u4e2d\u95ee\u9898\u5df2\u4fee\u590d\n     *\n     * cpu\u4f7f\u7528\u7387100%, \u6b7b\u5faa\u73af\n     *\n     * \u7531\u4e8e\u591a\u7ebf\u7a0b\u51b2\u7a81, hashmap.put() \u65f6\uff0c \u5185\u90e8\u7684\u94fe\u8868\u6210\u73af\u4e86, \u4e00\u8fed\u4ee3\u5c31\u6210\u4e86\u6b7b\u5faa\u73af\n     * @param args\n     * @throws InterruptedException\n     */\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread1 = new Thread(new HashMapMultiThread.AddThread(0));\n        Thread thread2 = new Thread(new HashMapMultiThread.AddThread(1));\n        thread1.start();\n        thread2.start();\n        thread1.join();\n        thread2.join();\n        System.out.println(map.size());\n    }\n}\n\n")),(0,i.kt)("h2",{id:"94-\u9519\u8bef\u7684\u4f7f\u7528\u9501"},"9.4. \u9519\u8bef\u7684\u4f7f\u7528\u9501"),(0,i.kt)("p",null,"\u524d\u9762\u63d0\u5230, \u4e24\u4e2a thread \u5173\u6ce8\u4e0d\u540c\u7684 \u5bf9\u8c61\u9501, \u4ecd\u65e7\u4f1a\u9020\u6210\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898"),(0,i.kt)("p",null,"\u770b\u770b\u53e6\u5916\u7684\u4e00\u4e2a\u9519\u8bef\u6848\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class BadLockOnInteger implements Runnable {\n\n    public static Integer i = 0;\n    static BadLockOnInteger instance = new BadLockOnInteger();\n\n    @Override\n    public void run() {\n        for (int j = 0; j < 1000000; j++) {\n            synchronized (i) {// \u8fd9\u91cc\u540c\u6b65\u7684\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61,\n                            //\u6b63\u786e\u505a\u6cd5\u5e94\u8be5\u662f synchronized (instance)\n                i++;// \u5b9e\u9645\u6267\u884c i=Integer.valueOf(i.intValue() + 1) // \u5b9e\u9645\u4e0a\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61 i' , \n                      // 2\u4e2athread \u4e0d\u4e00\u5b9a\u80fd\u591f\u770b\u5230\u540c\u4e00\u4e2a i, \u56e0\u4e3a i \u6307\u5411\u7684\u5bf9\u8c61\u4e00\u76f4\u5728\u53d8\u5316, 2\u4e2athread\u6bcf\u6b21\u52a0\u9501\u90fd\u52a0\u5728\u4e86\u4e0d\u540c\u7684 i \u5bf9\u8c61\u4e0a\u4e86\n            }\n        }\n    }\n\n    /**\n     * \u5f97\u5230\u7684\u7ed3\u679c\u5e76\u4e0d\u662f2000000,\u5728\u591a\u7ebf\u7a0b\u7684\u64cd\u4f5c\u4e2d\u51fa\u73b0\u4e86\u9519\u8bef\n     *\n     * @param args\n     * @throws InterruptedException\n     */\n    public static void main(String args[]) throws InterruptedException {\n        Thread thread1 = new Thread(instance);\n        Thread thread2 = new Thread(instance);\n        thread1.start();\n        thread2.start();\n        thread1.join();\n        thread2.join();\n        System.out.println(i);\n    }\n}\n")),(0,i.kt)("h1",{id:"10-concurrent\u5305"},"10. concurrent\u5305"),(0,i.kt)("h2",{id:"101-\u600e\u4e48\u8fdb\u884c\u540c\u6b65\u63a7\u5236"},"10.1. \u600e\u4e48\u8fdb\u884c\u540c\u6b65\u63a7\u5236"),(0,i.kt)("h3",{id:"1011-\u91cd\u5165\u9501-\u9501\u7684\u516c\u5e73\u6027"},"10.1.1. \u91cd\u5165\u9501-\u9501\u7684\u516c\u5e73\u6027"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u91cd\u5165\u9501\u53ef\u4ee5\u66ff\u4ee3 synchronized")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u501f\u52a9 ",(0,i.kt)("inlineCode",{parentName:"p"},"java.util.concurrent.locks.ReentrantLock")," \u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u63d0\u4f9b\u65b0\u7279\u6027 - \u5bf9\u4e8e \u5904\u7406\u6b7b\u9501, \u7ebf\u7a0b\u9965\u997f \u6709\u5947\u6548"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'"\u4e2d\u65ad\u54cd\u5e94": \u4f7f\u7528synchronized \u52a0\u9501, \u5982\u679c\u4e00\u4e2athread\u5728\u7b49\u5f85, \u90a3\u4e48\u7ed3\u679c\u53ea\u67092\u4e2a, \u8981\u4e48\u4e00\u76f4\u7b49\u5f85, \u8981\u4e48\u83b7\u53d6\u9501\u6267\u884c\u540e\u987a\u5229\u6267\u884c. \u91cd\u5165\u9501\u63d0\u4f9b\u4e86\u7b2c\u4e09\u79cd\u884c\u4e3a: \u8fd9\u4e2athread\u53ef\u4ee5\u4e2d\u65ad, \u53d6\u6d88\u5bf9\u9501\u7684\u8bf7\u6c42')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'"\u9501\u7533\u8bf7\u7b49\u5f85\u9650\u65f6": thread \u7b49\u5f85\u53e6\u4e00\u4e2a thread\u91ca\u653e\u9501, \u8d85\u8fc7\u4e00\u6bb5\u65f6\u95f4, \u90a3\u4e48\u653e\u5f03\u83b7\u53d6\u9501')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'"\u516c\u5e73\u9501": \u901a\u8fc7 synchronized \u4ea7\u751f\u7684\u9501, \u662f\u4e0d\u516c\u5e73\u9501, ',(0,i.kt)("inlineCode",{parentName:"p"},"public ReentrantLock(boolean fair)")," \u53ef\u4ee5\u8bbe\u7f6e\u91cd\u5165\u9501\u662f\u5426\u516c\u5e73, \u9ed8\u8ba4\u662f false;"))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ReenterLock implements Runnable {\n    public static ReentrantLock lock = new ReentrantLock();\n    public static int i = 0;\n\n    /**\n    \u624b\u52a8\u6307\u5b9a\u4f55\u65f6\u8fdb\u5165\u9000\u51fa\u9501\n    */\n    @Override\n    public void run() {\n        for (int j = 0; j < 1000000; j++) {\n            lock.lock();// \u8fdb\u5165, \u83b7\u5f97\u9501, \u5982\u679c\u9501\u88ab\u5360\u7528, \u7b49\u5f85\n            // lock.lock() // \u53ef\u591a\u6b21\u8fdb\u5165 - \u6240\u4ee5\u8c13\u4e4b "\u91cd\u5165\u9501"\n            try {\n                i++;\n            } finally {\n                lock.unlock();// \u9000\u51fa, \u91ca\u653e\u9501\n                // lock.unlock() // \u8fdb\u5165\u51e0\u6b21, \u5fc5\u987b\u9000\u51fa\u51e0\u6b21, \u5982\u679c\u9000\u51fa\u6b21\u6570\u6bd4\u8fdb\u5165\u6b21\u6570\u591a, \n                                // \u5219\u629b\u5f02\u5e38, \u53cd\u4e4b\u5982\u679c\u5c11, \u5219thread \u4ecd\u7136\u6301\u6709\u9501\n            }\n\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n        ReenterLock reenterLock = new ReenterLock();\n        Thread thread1 = new Thread(reenterLock);\n        Thread thread2 = new Thread(reenterLock);\n\n        thread1.start();\n        thread2.start();\n\n        thread1.join();\n        thread2.join();\n\n        System.out.println(i);\n    }\n\n}\n\n////////////////// \u4e2d\u65ad\u54cd\u5e94 ////////////////////////\n\npublic class IntLock implements Runnable {\n    public static ReentrantLock lock1 = new ReentrantLock();\n    public static ReentrantLock lock2 = new ReentrantLock();\n\n    int lock; // \u63a7\u5236\u9501\u7533\u8bf7\u987a\u5e8f, \u6784\u9020\u6b7b\u9501\n\n    public IntLock(int lock) {\n        this.lock = lock;\n    }\n\n    @Override\n    public void run() {\n        try {\n            if (lock == 1) {\n                lock1.lockInterruptibly();// \u83b7\u53d6\u9501, \u4f46\u4f18\u5148\u54cd\u5e94\u4e2d\u65ad \n                                    // \u8fd9\u79cd\u65b9\u5f0f\u83b7\u5f97\u7684\u91cd\u5165\u9501\u4f7f\u5f97 thread \u5728\u7b49\u5f85\u83b7\u53d6\u9501\u7684\u8fc7\u7a0b\u4e2d, \u53ef\u5bf9\u4e2d\u65ad\u8fdb\u884c\u54cd\u5e94\n                Thread.sleep(500);\n                lock2.lockInterruptibly();\n            } else {\n                lock2.lockInterruptibly();\n                Thread.sleep(500);\n                lock1.lockInterruptibly();\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n            if (lock1.isHeldByCurrentThread()) {\n                lock1.unlock();\n            }\n            if (lock2.isHeldByCurrentThread()) {\n                lock2.unlock();\n            }\n            System.out.println(Thread.currentThread().getId() + "\u7ebf\u7a0b\u9000\u51fa");\n        }\n\n    }\n\n    /**\n     */\n    public static void main(String args[]) throws InterruptedException {\n        IntLock r1 = new IntLock(1);\n        IntLock r2 = new IntLock(2);\n\n        Thread thread1 = new Thread(r1);\n        Thread thread2 = new Thread(r2);\n\n        // \u6b7b\u9501\n        thread1.start();\n        thread2.start();\n\n        Thread.sleep(1000);// main thread \u4f11\u7720\n\n        thread2.interrupt(); // thread2\u4e2d\u65ad, thread2\u4f1a\u653e\u5f03\u5bf9 lock1 \u7684\u7533\u8bf7, \u540c\u65f6\u91ca\u653e lock2, \u90a3\u4e48 thread1\u53ef\u4ee5\u5f97\u5230lock2, \u5f97\u4ee5\u987a\u5229\u6267\u884c\n                            // \u6700\u7ec8 \u4e24\u4e2a thread \u53cc\u53cc\u987a\u5229\u9000\u51fa\n\n    }\n}\n\n/////////////////// \u9501\u8bf7\u6c42\u7b49\u5f85\u9650\u65f6 ////////////////////////////////\n\npublic class TimeLock implements Runnable {\n    public static ReentrantLock lock = new ReentrantLock();\n\n    @Override\n    public void run() {\n        try {\n            if (lock.tryLock(5, TimeUnit.SECONDS)) { // \u83b7\u53d6\u9501, \u7b49\u5f85\u65f6\u95f4 5, \u5355\u4f4d: \u79d2\n                                  // \u4e0d\u5e26\u53c2\u6570de lock.tryLock() \u5982\u679c\u9501\u672a\u88ab\u5360\u7528\u5219\u7533\u8bf7\u6210\u529f, return true, \n                                  // \u5982\u679c\u6b63\u5728\u88ab\u5360\u7528, \u5219\u4e0d\u7b49\u5f85\u7acb\u5373 return false; \n                                  // \u53ef\u4ee5\u5faa\u73af tryLock(), \u5faa\u73af\u5c1d\u8bd5\u83b7\u53d6\u9501, \u8fd9\u6837\u4e0d\u4f1a\u5f15\u8d77\u6b7b\u9501\n                System.out.println(Thread.currentThread().getName());\n                System.out.println("get lock success");\n                Thread.sleep(6000);\n            } else {\n                System.out.println(Thread.currentThread().getName());\n                System.out.println("get lock failed");\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n            if (lock.isHeldByCurrentThread()) {\n                lock.unlock();\n            }\n        }\n    }\n\n    /**\n     */\n    public static void main(String args[]) {\n        TimeLock timeLock = new TimeLock();\n        Thread thread1 = new Thread(timeLock);\n        Thread thread2 = new Thread(timeLock);\n\n        thread1.start();\n        thread2.start();\n    }\n}\n\n///////////////////// \u5faa\u73af tryLock() ////////////////////////////////\n\npublic class TryLock implements Runnable {\n    public static ReentrantLock lock1 = new ReentrantLock();\n    public static ReentrantLock lock2 = new ReentrantLock();\n    int lock;\n\n    public TryLock(int lock) {\n        this.lock = lock;\n    }\n\n    @Override\n    public void run() {\n        if (lock == 1) {\n            while (true) {\n                if (lock1.tryLock()) {\n                    try {\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        if (lock2.tryLock()) {\n                            try {\n                                System.out.println(Thread.currentThread().getId() + ":My Job done;");\n                                return;\n                            } finally {\n                                lock2.unlock();\n                            }\n                        }\n                    } finally {\n                        lock1.unlock();\n                    }\n                }\n            }\n        } else {\n            while (true) {\n                if (lock2.tryLock()) {\n                    try {\n                        try {\n                            Thread.sleep(500);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                        if (lock1.tryLock()) {\n                            try {\n                                System.out.println(Thread.currentThread().getId() + ":My Job done;");\n                                return;\n                            } finally {\n                                lock1.unlock();\n                            }\n                        }\n                    } finally {\n                        lock2.unlock();\n                    }\n                }\n            }\n\n        }\n    }\n\n    /**\n     * \u4e0a\u9762\u4ee3\u7801\u4e2d\u91c7\u7528\u4e86\u975e\u5e38\u5bb9\u6613\u6b7b\u9501\u7684\u52a0\u9501\u987a\u5e8f,\u5bfc\u81f4thread1\u548cthread2\u7531\u4e8e\u9501\u7684\u7ade\u4e89\u800c\u4e92\u76f8\u7b49\u5f85\u4ece\u800c\u5f15\u8d77\u6b7b\u9501\n     *\n     * \u4f7f\u7528\u4e86tryLock\u540e,\u7ebf\u7a0b\u4e0d\u4f1a\u4e00\u76f4\u7b49\u5f85\u800c\u662f\u4e0d\u505c\u7684\u5c1d\u8bd5\u53bb\u83b7\u5f97\u9501\u8d44\u6e90,\u53ea\u9700\u8981\u7b49\u5f85\u4e00\u5b9a\u7684\u65f6\u95f4,\u7ebf\u7a0b\u6700\u7ec8\u4f1a\u83b7\u5f97\u6240\u9700\u8981\u7684\u8d44\u6e90\n     *\n     * @param args\n     */\n    public static void main(String args[]) {\n        TryLock r1 = new TryLock(1);\n        TryLock r2 = new TryLock(2);\n        Thread thread1 = new Thread(r1);\n        Thread thread2 = new Thread(r2);\n\n        thread1.start();\n        thread2.start();\n    }\n\n}\n\n/////////////////////// \u516c\u5e73\u9501 //////////////////////////////////////\n\npublic class FairLock implements Runnable {\n\n    public static ReentrantLock fairLock = new ReentrantLock(true);//\u8bbe\u7f6etrue\u6307\u5b9a\u9501\u662f\u516c\u5e73\u7684,\u4e5f\u53ef\u4ee5\u4e0d\u8bbe\u7f6e\n    //public static ReentrantLock unfairLock = new ReentrantLock();\n\n    @Override\n    public void run() {\n        while (true) {\n            try {\n                fairLock.lock();\n                // unfairLock.lock();\n                System.out.println(Thread.currentThread().getName() + "\u83b7\u5f97\u9501");\n            } finally {\n                fairLock.unlock();\n                // unfairLock.unlock();\n            }\n        }\n    }\n\n    /**\n     * \u516c\u5e73\u9501\u7684\u4e00\u4e2a\u7279\u70b9\u662f:\u4e0d\u4f1a\u4ea7\u751f\u9965\u997f\u73b0\u8c61,\u53ea\u8981\u6392\u961f\u6700\u7ec8\u90fd\u4f1a\u5f97\u5230\u8d44\u6e90.\n     * <p/>\n     * \u4f46\u662f\u5b9e\u73b0\u516c\u5e73\u9501\u8981\u6c42\u7cfb\u7edf\u7ef4\u62a4\u4e00\u4e2a\u6709\u5e8f\u961f\u5217,\u56e0\u6b64\u516c\u5e73\u9501\u7684\u5b9e\u73b0\u6210\u672c\u8f83\u9ad8,\u6027\u80fd\u76f8\u5bf9\u4f4e\u4e0b.\n     *\n     * @param args\n     */\n    public static void main(String args[]) {\n        FairLock r1 = new FairLock();\n        Thread thread1 = new Thread(r1, "Thread_t1");\n        Thread thread2 = new Thread(r1, "Thread_t2");\n        Thread thread3 = new Thread(r1, "Thread_t3");\n\n        thread1.start();\n        thread2.start();\n        thread3.start();\n    }\n\n}\n\n')),(0,i.kt)("h3",{id:"1012-condition-\u91cd\u5165\u9501\u597d\u642d\u6863"},"10.1.2. Condition-\u91cd\u5165\u9501\u597d\u642d\u6863"),(0,i.kt)("p",null,"Condition\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\u5b83\u53ef\u4ee5\u4e3a\u591a\u4e2a\u7ebf\u7a0b\u95f4\u5efa\u7acb\u4e0d\u540c\u7684Condition\uff0c \u4f7f\u7528synchronized/wait()\u53ea\u6709\u4e00\u4e2a\u963b\u585e\u961f\u5217\uff0cnotifyAll\u4f1a\u5524\u8d77\u6240\u6709\u963b\u585e\u961f\u5217\u4e0b\u7684\u7ebf\u7a0b\uff0c\u800c\u4f7f\u7528lock/condition\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u963b\u585e\u961f\u5217\uff0csignalAll\u53ea\u4f1a\u5524\u8d77\u67d0\u4e2a\u963b\u585e\u961f\u5217\u4e0b\u7684\u963b\u585e\u7ebf\u7a0b (\u5178\u578b\u4f7f\u7528\u5c31\u662f \u5b9e\u73b0\u963b\u585e\u961f\u5217, \u9700\u8981\u4e24\u4e2a condition, \u5206\u522b\u4f5c\u4e3a producer \u7684 condition \u548c consumer \u7684 condition)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ReenterLockCondition implements Runnable {\n    public static ReentrantLock lock = new ReentrantLock();\n    public static Condition condition = lock.newCondition();\n\n    @Override\n    public void run() {\n\n        try {\n            lock.lock();\n            condition.await();// \u5f53\u524dthread \u5728 condition \u5bf9\u8c61\u4e0a\u7b49\u5f85 // \u7c7b\u4f3c Object.wait()\n                      // \u5f53\u6267\u884c await()\u65f6\u5019, \u8981\u6c42 \u5f53\u524dthread \u6301\u6709 condition \u76f8\u5173\u7684\u9501\n                      // \u8c03\u7528 await() \u5b8c\u6210\u540e, \u5f53\u524d\u7ebf\u7a0b\u4f11\u7720, \u4f1a\u91ca\u653e\u5f53\u524d\u9501\n            System.out.println("Thread is going on");\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } finally {\n            lock.unlock();\n        }\n\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n        ReenterLockCondition reenterLockCondition = new ReenterLockCondition();\n        Thread thread1 = new Thread(reenterLockCondition);\n        thread1.start();\n        Thread.sleep(2000);\n        lock.lock(); // \u9996\u5148\u83b7\u53d6condition\u76f8\u5173\u7684\u9501\n        condition.signal();// \u5524\u9192 condition \u7684\u7b49\u5f85\u961f\u5217\u4e2d\u7684 \u4e00\u4e2a thread // \u7c7b\u4f3c Object.notify()\n                    // \u4e00\u65e6\u88ab\u5524\u9192, \u8fd9\u4e2athread\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u83b7\u5f97 condition \u7ed1\u5b9a\u7684 \u91cd\u5165\u9501, \u83b7\u53d6\n                    // \u6210\u529f\u624d\u4f1a\u6b63\u5e38\u7ee7\u7eed\u6267\u884c, \u56e0\u6b64 \u8fd9\u91cc\u7684 main thread \u9700\u8981\u91ca\u653e lock, \u8ba9\u6e21\u7ed9\u5524\u9192\u7684thread\n        lock.unlock();\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1013-semaphore-\u4fe1\u53f7\u91cf-\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee"},"10.1.3. semaphore-\u4fe1\u53f7\u91cf-\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee"),(0,i.kt)("p",null,"\u4fe1\u53f7\u91cf \u662f\u4e00\u4e2a\u8bed\u8a00\u65e0\u5173\u7684\u6982\u5ff5, check here: {% post_link cs-note \ud83d\udcda cs-note %}#\u4fe1\u53f7\u91cf"),(0,i.kt)("p",null,"\u65e0\u8bba\u662f\u5185\u90e8\u9501(synchronized) \u8fd8\u662f \u91cd\u5165\u9501(ReentrantLock) \u540c\u4e00\u65f6\u523b\u53ea\u5141\u8bb8\u4e00\u4e2a thread\u8bbf\u95ee\u4e00\u4e2a\u8d44\u6e90; "),(0,i.kt)("p",null,"semaphore(\u4fe1\u53f7\u91cf) \u53ef\u4ee5\u6307\u5b9a\u591a\u4e2athread, \u540c\u65f6\u8bbf\u95ee\u4e00\u4e2a\u8d44\u6e90"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class SemapDemo implements Runnable {\n    final Semaphore semp = new Semaphore(5); // \u58f0\u660e\u4e86\u5305\u542b 5 \u4e2a permission \u7684 semaphore\n                                        // \u5373: \u540c\u65f6\u80fd\u7533\u8bf7 5 \u4e2a\u8bb8\u53ef; \u5f53\u6bcf\u4e2a thread \u6bcf\u6b21\u53ea\u7533\u8bf7\u4e00\u4e2a\u8bb8\u53ef, \u5219 \u8fd9\u4e2a semaphore \u540c\u65f6\u5141\u8bb8 5 \u4e2athread \u8bbf\u95ee\u67d0\u4e2a\u8d44\u6e90\n\n    @Override\n    public void run() {\n        // \u540c\u65f6\u5141\u8bb8 5 \u4e2a thread \u8fdb\u5165\n        try {\n            semp.acquire(); // \u5c1d\u8bd5\u83b7\u53d6\u4e00\u4e2apermission, \u5982\u679c\u65e0\u6cd5\u83b7\u53d6, \u7b49\u5f85\u76f4\u5230\u6709\u53e6\u5916\u7684 thread \u91ca\u653e permission \u6216\u8005 current thread \u88ab interrupt\n            Thread.sleep(2000);\n            System.out.println(Thread.currentThread().getId() + ":done!");\n            semp.release(); // \u91ca\u653e\n                        // \u5982\u679c\u53d1\u751f\u4fe1\u53f7\u91cf\u6cc4\u6f0f(\u7533\u8bf7\u4e86\u4f46\u6ca1\u6709\u91ca\u653e), \u90a3\u4e48\u53ef\u4ee5\u8fdb\u5165\u4e34\u754c\u533a\u7684 thread\u5c06\u8d8a\u6765\u8d8a\u5c11, \u76f4\u5230\u6240\u6709\u7684thread\u5747\u65e0\u6cd5\u8bbf\u95ee\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    /**\n     * \u603b\u517120\u4e2a\u7ebf\u7a0b,\u7cfb\u7edf\u4f1a\u4ee55\u4e2a\u7ebf\u7a0b\u4e00\u7ec4\u4e3a\u5355\u4f4d,\u4f9d\u6b21\u6267\u884c\u5e76\u8f93\u51fa\n     *\n     * @param args\n     */\n    public static void main(String args[]) {\n        ExecutorService executorService = Executors.newFixedThreadPool(20);\n        final SemapDemo demo = new SemapDemo();\n        for (int i = 0; i < 20; i++) {\n            executorService.submit(demo);\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1014-readwritelock-\u8bfb\u5199\u9501"},"10.1.4. ReadWriteLock-\u8bfb\u5199\u9501"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'\u8bfb\u5199\u9501 - \u5bf9\u4e8e\u4e24\u4e2athread, "\u8bfb\u8bfb\u64cd\u4f5c"\u4e4b\u95f4\u7684\u5173\u7cfb \u662f \u975e\u963b\u585e\u7684, "\u8bfb\u5199\u64cd\u4f5c", "\u5199\u5199\u64cd\u4f5c" \u662f\u963b\u585e\u7684')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5982\u679c\u7cfb\u7edf\u4e2d write \u64cd\u4f5c << read\u64cd\u4f5c, \u5219\u8bfb\u5199\u9501\u53ef\u4ee5\u53d1\u6325\u6700\u5927\u529f\u6548"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ReadWriteLockDemo {\n    private static Lock lock = new ReentrantLock(); // \u666e\u901a\u91cd\u5165\u9501\n\n    private static ReentrantReadWriteLock reentrantReadWriteLock = new ReentrantReadWriteLock();// \u8bfb\u5199\u9501\n    private static Lock readLock = reentrantReadWriteLock.readLock();\n    private static Lock writeLock = reentrantReadWriteLock.writeLock();\n    \n    private int value;\n\n    public Object handleRead(Lock lock) throws InterruptedException {\n        try {\n            lock.lock();\n            Thread.sleep(1000);//\u6a21\u62df\u8bfb\u64cd\u4f5c\u7684\u8017\u65f6\n            System.out.println("\u8bfb\u64cd\u4f5c:" + value);\n            return value;\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public void handleWrite(Lock lock, int index) throws InterruptedException {\n        try {\n            lock.lock();\n            Thread.sleep(1000);//\u6a21\u62df\u5199\u64cd\u4f5c\u7684\u8017\u65f6\n            System.out.println("\u5199\u64cd\u4f5c:" + value);\n            value = index;\n        } finally {\n            lock.unlock();\n        }\n    }\n\n    public static void main(String args[]) {\n        final ReadWriteLockDemo demo = new ReadWriteLockDemo();\n\n        Runnable readRunnable = new Runnable() {\n            @Override\n            public void run() {\n                //\u5206\u522b\u4f7f\u7528\u4e24\u79cd\u9501\u6765\u8fd0\u884c,\u6027\u80fd\u5dee\u522b\u5f88\u76f4\u89c2\u7684\u5c31\u4f53\u73b0\u51fa\u6765,\n                // \u4f7f\u7528\u8bfb\u5199\u9501\u540e\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u5e76\u884c,\u8282\u7701\u4e86\u5927\u91cf\u65f6\u95f4\n                try {\n                    demo.handleRead(readLock);\n                    //demo.handleRead(lock);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n            }\n        };\n\n        Runnable writeRunnable = new Runnable() {\n            @Override\n            public void run() {\n                //\u5206\u522b\u4f7f\u7528\u4e24\u79cd\u9501\u6765\u8fd0\u884c,\u6027\u80fd\u5dee\u522b\u5f88\u76f4\u89c2\u7684\u5c31\u4f53\u73b0\u51fa\u6765\n                try {\n                    demo.handleWrite(writeLock, new Random().nextInt(100));\n                    //demo.handleWrite(lock, new Random().nextInt(100));\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n\n            }\n        };\n        for (int i = 0; i < 18; i++) {\n            new Thread(readRunnable).start();// \u5f00\u542f 18 \u4e2a read thread\n                              // read thread \u4f1a \u5b8c\u5168\u5e76\u884c, \u8fd9\u91cc\u8017\u65f6\u53ef\u5ffd\u7565\u4e0d\u8ba1\n        }\n        for (int i = 18; i < 20; i++) {\n            new Thread(writeRunnable).start();// \u5f00\u542f 2 \u4e2a write thread\n                                            // \u4e3b\u8981\u662f\u5199\u64cd\u4f5c\u8017\u65f6, \u6574\u4e2a\u7a0b\u5e8f\u8017\u65f6 2 s\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1015-countdownlatch-\u5012\u8ba1\u65f6\u5668"},"10.1.5. CountDownLatch-\u5012\u8ba1\u65f6\u5668"),(0,i.kt)("p",null,'\u610f\u4e3a "\u5012\u8ba1\u65f6\u6805\u680f"'),(0,i.kt)("p",null,"\u4f7f\u5f97\u67d0\u4e2a thread  \u5728\u6267\u884c\u4e2d\u78b0\u5230  ",(0,i.kt)("inlineCode",{parentName:"p"},"countdownlatch.wait()"),", \u5219\u7b49\u5f85, \u7b49\u5230\u5012\u8ba1\u65f6\u7ed3\u675f(\u5373\u8ba1\u6570\u91cf\u5f52\u96f6)\u624d\u5f00\u59cb\u6267\u884c;"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class CountDownLatchDemo implements Runnable {\n    static final CountDownLatch end = new CountDownLatch(10);// \u521b\u5efa\u5012\u8ba1\u65f6\u5668\u5b9e\u4f8b \u8ba1\u6570\u91cf\u4e3a10\n                                        // \u8fd9\u8868\u793a\u9700\u8981\u6709 10 \u4e2a thread \u5b8c\u6210\u4efb\u52a1, \u88ab end\u5012\u8ba1\u65f6\u5668 \u8bbe\u7f6e\u4e3a\u7b49\u5f85 \u7684 thread\u624d\u80fd\u5f00\u59cb\u6267\u884c\n    static final CountDownLatchDemo demo = new CountDownLatchDemo();\n\n    @Override\n    public void run() {\n\n        try {\n            Thread.sleep(new Random().nextInt(3) * 1000);// \u6a21\u62df\u68c0\u67e5\u4efb\u52a1\u8017\u65f6\n            System.out.println("check complete");\n            end.countDown(); // \u901a\u77e5 end, \u6709\u4e00\u4e2a thread \u5b8c\u6210\u4e86\u4efb\u52a1, \u8ba1\u6570\u91cf\u53ef\u4ee5 -1 \u4e86\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n        ExecutorService executorService = Executors.newFixedThreadPool(10);\n        for (int i = 0; i < 10; i++) {\n            executorService.submit(demo);\n        }\n        end.await();// \u4f7f\u5f97 main thread \u7b49\u5f85\u6240\u6709\u7684 10 \u4e2a thread \u5b8c\u6210 \u624d\u5f00\u59cb\u7ee7\u7eed\u6267\u884c\n        System.out.println("Fire!");// \u53d1\u5c04\u706b\u7bad\n        executorService.shutdown();\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1016-cyclicbarrier-\u5faa\u73af\u6805\u680f"},"10.1.6. CyclicBarrier-\u5faa\u73af\u6805\u680f"),(0,i.kt)("p",null,"\u6bcf\u8c03\u7528\u4e00\u6b21 ",(0,i.kt)("inlineCode",{parentName:"p"},"cyclicBarrier.await()")," \u5c31\u8fdb\u5165\u65b0\u7684\u8ba1\u91cf\u5faa\u73af(\u8fdb\u5165\u65b0\u4e00\u8f6e\u7b49\u5f85)"),(0,i.kt)("p",null,"\u53ef\u4ee5\u8ba9\u4e00\u7ec4\u7ebf\u7a0b\u8fbe\u5230\u4e00\u4e2a\u5c4f\u969c\u65f6\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u8fbe\u5230\u5c4f\u969c\u65f6\uff0c\u6240\u4ee5\u88ab\u963b\u585e\u7684\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed\u6267\u884c"),(0,i.kt)("p",null,"\u5982\u679c\u9700\u8981\u53ef\u91cd\u7528\u7684 CountDownLatch\uff0c\u8003\u8651\u4f7f\u7528 CyclicBarrier\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class CyclicBarrierDemo {\n    public static class Soldier implements Runnable {\n        private String soldier;\n        private final CyclicBarrier cyclicBarrier;\n\n        public Soldier(CyclicBarrier cyclicBarrier, String soldier) {\n            this.soldier = soldier;\n            this.cyclicBarrier = cyclicBarrier;\n        }\n\n        @Override\n        public void run() {\n            try {\n                cyclicBarrier.await();// \u7b49\u5f85, \u5f00\u59cb\u7b2c\u4e00\u6b21\u8ba1\u91cf, \u76f4\u5230\u6240\u6709\u7684 Soldier \u7ebf\u7a0b \u542f\u52a8\u5b8c\u6bd5, \u624d\u5f00\u59cb\u7ee7\u7eed\u6267\u884c\n                doWork();\n                cyclicBarrier.await();// \u518d\u6b21\u7b49\u5f85, \u5f00\u59cb\u7b2c\u4e8c\u6b21\u8ba1\u91cf\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } catch (BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n\n        }\n\n        void doWork() {\n            try {\n                Thread.sleep(Math.abs(new Random().nextInt() % 10000));\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(soldier + ":\u4efb\u52a1\u5b8c\u6210");\n        }\n    }\n\n    public static class BarrierRun implements Runnable {\n\n        boolean flag;\n        int N;\n\n        public BarrierRun(boolean flag, int N) {\n            this.flag = flag;\n            this.N = N;\n        }\n\n        @Override\n        public void run() {\n            if (flag) {// \u7b2c\u4e8c\u6b21\u8ba1\u91cf,\u8fdb\u5165\u8fd9\u4e2a\u5206\u652f\n                System.out.println("\u53f8\u4ee4:[\u58eb\u5175" + N + "\u4e2a,\u4efb\u52a1\u5b8c\u6210!");\n            } else {\n                System.out.println("\u53f8\u4ee4:[\u58eb\u5175" + N + "\u4e2a,\u96c6\u5408\u5b8c\u6bd5!");// \u7b2c\u4e00\u6b21\u8ba1\u91cf, \u8fdb\u5165\u8fd9\u4e2a\u5206\u652f\n                flag = true;\n            }\n        }\n    }\n\n\n    public static void main(String args[]) {\n        final int N = 10;// \u8ba1\u6570\u91cf\n        Thread[] allSoldier = new Thread[N];\n        boolean flag = false;\n        CyclicBarrier cyclicBarrier = new CyclicBarrier(N, new BarrierRun(flag, N));// barrier\u5b9e\u4f8b, \u8ba1\u6570\u91cf\u8fbe\u5230\u6307\u6807\u65f6\u5019\u5219\u6267\u884c BarrierRun \u7ebf\u7a0b\n        System.out.println("\u96c6\u5408\u961f\u4f0d!");\n        for (int i = 0; i < N; i++) {\n            System.out.println("\u58eb\u5175" + i + "\u62a5\u9053!");\n            allSoldier[i] = new Thread(new Soldier(cyclicBarrier, "\u58eb\u5175" + i));\n            allSoldier[i].start();// \u542f\u52a8\u4e00\u4e2a soldier \u7ebf\u7a0b\n                          // \u5f53\u7b2c\u5341\u4e2a\u542f\u52a8\u5b8c\u6bd5, \u4e00\u6b21 \u8ba1\u6570\u91cf \u5b8c\u6210, \u6267\u884c\u4e00\u6b21 BarrierRun \u7ebf\u7a0b, \u8ba1\u6570\u91cf\n                          // \u6062\u590d 10, \u8fdb\u884c\u7b2c\u4e8c\u6b21 \u8ba1\u91cf\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1017-locksupport-\u7ebf\u7a0b\u963b\u585e\u5de5\u5177\u7c7b"},"10.1.7. LockSupport-\u7ebf\u7a0b\u963b\u585e\u5de5\u5177\u7c7b"),(0,i.kt)("p",null,"\u4f7f\u5f97thread\u963b\u585e"),(0,i.kt)("p",null,"\u548c Thread.suspend() \u76f8\u6bd4\u66f4\u597d, \u56e0\u4e3a\u4f7f\u7528suspend()\u4f1a\u6302\u8d77thread, \u9501\u4e0d\u4f1a\u91ca\u653e, \u800c\u4e14\u7531\u4e8e\u6307\u4ee4\u91cd\u6392, resume()\u5728suspend()\u524d\u6267\u884c\u4f1a\u9020\u6210thread\u6c38\u8fdc\u6302\u8d77"),(0,i.kt)("p",null,"\u548c Object.wait() \u76f8\u6bd4\u66f4\u597d, \u56e0\u4e3a\u4e0d\u9700\u8981\u5148\u83b7\u5f97\u67d0\u4e2a\u5bf9\u8c61\u7684\u9501"),(0,i.kt)("p",null,"\u539f\u7406\u662f\u4f7f\u7528\u4e86\u7c7b\u4f3c\u4fe1\u53f7\u91cf\u7684\u673a\u5236 (\u5b58\u7591)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class LockSupportDemo {\n    public static Object u = new Object();\n    static ChangeObjectThread t1 = new ChangeObjectThread("t1");\n    static ChangeObjectThread t2 = new ChangeObjectThread("t2");\n\n    public static class ChangeObjectThread extends Thread {\n        public ChangeObjectThread(String name) {\n            super.setName(name);\n        }\n\n        public void run() {\n            synchronized (u) {\n                System.out.println("in " + getName());\n                LockSupport.park();\n            }\n        }\n    }\n\n\n    public static void main(String args[]) throws InterruptedException {\n        t1.start();\n        Thread.sleep(100);\n        t2.start();\n        LockSupport.unpark(t1);\n        LockSupport.unpark(t2);\n        t1.join();\n        t2.join();\n    }\n}\n\n')),(0,i.kt)("h2",{id:"102-\u7ebf\u7a0b\u590d\u7528-\u7ebf\u7a0b\u6c60"},"10.2. \u7ebf\u7a0b\u590d\u7528-\u7ebf\u7a0b\u6c60"),(0,i.kt)("p",null,"\u7c7b\u4f3c\u6570\u636e\u5e93\u8fde\u63a5\u6c60"),(0,i.kt)("p",null,"jdk\u63d0\u4f9b\u4e00\u5957 Executor \u6846\u67b6, \u672c\u8d28\u5c31\u662f\u4e00\u4e2a thread pool"),(0,i.kt)("h3",{id:"1021-executor\u7684api"},"10.2.1. Executor\u7684api"),(0,i.kt)("h4",{id:"10211-\u521b\u5efa\u7ebf\u7a0b\u6c60"},"10.2.1.1. \u521b\u5efa\u7ebf\u7a0b\u6c60"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'\n// Executors.newCachedThreadPool()\uff1a\u65e0\u9650\u7ebf\u7a0b\u6c60\u3002\n// Executors.newFixedThreadPool(nThreads)\uff1a\u521b\u5efa\u56fa\u5b9a\u5927\u5c0f\u7684\u7ebf\u7a0b\u6c60\u3002\n// Executors.newSingleThreadExecutor()\uff1a\u521b\u5efa\u5355\u4e2a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u6c60\u3002\n// \u8fd8\u6709\u4e00\u4e2a\u4efb\u52a1\u8c03\u5ea6\u7ebf\u7a0b\u6c60\n\n// \u5e95\u5c42\u8c03\u7528\u7684\u8fd8\u662f ThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue, RejectedExecutionHandler handler)\n\npublic class ThreadPoolDemo {\n    public static class MyTask implements Runnable {\n\n        @Override\n        public void run() {\n            System.out.println(System.currentTimeMillis() + "Thread ID:" + Thread.currentThread().getId());\n\n            try {\n                Thread.sleep(1000);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String args[]) {\n        MyTask myTask = new MyTask();\n        int poolSize = Runtime.getRuntime().availableProcessors();// \u83b7\u53d6CPU\u6838\u5fc3,\n        System.out.println("poolSize=" + poolSize);\n        ExecutorService executorService = Executors.newFixedThreadPool(poolSize);\n        for (int i = 0; i < 20; i++) {\n            executorService.submit(myTask);\n        }\n    }\n}\n\n')),(0,i.kt)("h4",{id:"10212-\u600e\u4e48\u786e\u5b9a\u6c60\u5b50\u7684\u5bb9\u91cf"},"10.2.1.2. \u600e\u4e48\u786e\u5b9a\u6c60\u5b50\u7684\u5bb9\u91cf"),(0,i.kt)("p",null,"IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff1a\u7531\u4e8e\u7ebf\u7a0b\u5e76\u4e0d\u662f\u4e00\u76f4\u5728\u8fd0\u884c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c3d\u53ef\u80fd\u7684\u591a\u914d\u7f6e\u7ebf\u7a0b\uff0c\u6bd4\u5982 CPU \u4e2a\u6570 * 2\nCPU \u5bc6\u96c6\u578b\u4efb\u52a1\uff08\u5927\u91cf\u590d\u6742\u7684\u8fd0\u7b97\uff09\u5e94\u5f53\u5206\u914d\u8f83\u5c11\u7684\u7ebf\u7a0b\uff0c\u6bd4\u5982 CPU \u4e2a\u6570\u76f8\u5f53\u7684\u5927\u5c0f\u3002"),(0,i.kt)("h4",{id:"10213-\u7ebf\u7a0b\u6c60\u7684\u51e0\u4e2a\u72b6\u6001"},"10.2.1.3. \u7ebf\u7a0b\u6c60\u7684\u51e0\u4e2a\u72b6\u6001"),(0,i.kt)("p",null,"thread pool \u7684\u51e0\u4e2a\u72b6\u6001:"),(0,i.kt)("p",null,"RUNNING \u81ea\u7136\u662f\u8fd0\u884c\u72b6\u6001\uff0c\u6307\u53ef\u4ee5\u63a5\u53d7\u4efb\u52a1\u6267\u884c\u961f\u5217\u91cc\u7684\u4efb\u52a1\nSHUTDOWN \u6307\u8c03\u7528\u4e86 shutdown() \u65b9\u6cd5\uff0c\u4e0d\u518d\u63a5\u53d7\u65b0\u4efb\u52a1\u4e86\uff0c\u4f46\u662f\u961f\u5217\u91cc\u7684\u4efb\u52a1\u5f97\u6267\u884c\u5b8c\u6bd5\u3002\nSTOP \u6307\u8c03\u7528\u4e86 shutdownNow() \u65b9\u6cd5\uff0c\u4e0d\u518d\u63a5\u53d7\u65b0\u4efb\u52a1\uff0c\u540c\u65f6\u629b\u5f03\u963b\u585e\u961f\u5217\u91cc\u7684\u6240\u6709\u4efb\u52a1\u5e76\u4e2d\u65ad\u6240\u6709\u6b63\u5728\u6267\u884c\u4efb\u52a1\u3002\nTIDYING \u6240\u6709\u4efb\u52a1\u90fd\u6267\u884c\u5b8c\u6bd5\uff0c\u5728\u8c03\u7528 shutdown()/shutdownNow() \u4e2d\u90fd\u4f1a\u5c1d\u8bd5\u66f4\u65b0\u4e3a\u8fd9\u4e2a\u72b6\u6001\u3002\nTERMINATED \u7ec8\u6b62\u72b6\u6001\uff0c\u5f53\u6267\u884c terminated() \u540e\u4f1a\u66f4\u65b0\u4e3a\u8fd9\u4e2a\u72b6\u6001\u3002"),(0,i.kt)("h4",{id:"10214-\u5173\u95ed\u7ebf\u7a0b\u6c60"},"10.2.1.4. \u5173\u95ed\u7ebf\u7a0b\u6c60"),(0,i.kt)("p",null,"\u65e0\u975e\u5c31\u662f\u4e24\u4e2a\u65b9\u6cd5 shutdown()/shutdownNow(), \u4f46\u662f\u533a\u522b\u5927\u5927\u7684"),(0,i.kt)("p",null,"shutdown() \u6267\u884c\u540e\u505c\u6b62\u63a5\u53d7\u65b0\u4efb\u52a1\uff0c\u4f1a\u628a\u961f\u5217\u7684\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\u3002\nshutdownNow() \u4e5f\u662f\u505c\u6b62\u63a5\u53d7\u65b0\u4efb\u52a1\uff0c\u4f46\u4f1a\u4e2d\u65ad\u6240\u6709\u7684\u4efb\u52a1\uff0c\u5c06\u7ebf\u7a0b\u6c60\u72b6\u6001\u53d8\u4e3a stop\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},' long start = System.currentTimeMillis();\nfor (int i = 0; i <= 5; i++) {\n    pool.execute(new Job());\n}\n\npool.shutdown();// \u5173\u95ed\n\n//\u6bcf\u9694\u4e00\u79d2\u949f\u68c0\u67e5\u4e00\u6b21\u662f\u5426\u6267\u884c\u5b8c\u6bd5\uff08\u662f\u5426\u72b6\u6001\u4e3a TERMINATED\uff09\uff0c\u5f53\u4ece while \u5faa\u73af\u9000\u51fa\u65f6\u5c31\u8868\u660e\u7ebf\u7a0b\u6c60\u5df2\u7ecf\u5b8c\u5168\u7ec8\u6b62\u4e86\u3002\nwhile (!pool.awaitTermination(1, TimeUnit.SECONDS)) {\n    LOGGER.info("\u7ebf\u7a0b\u8fd8\u5728\u6267\u884c\u3002\u3002\u3002");\n}\nlong end = System.currentTimeMillis();\nLOGGER.info("\u4e00\u5171\u5904\u7406\u4e86\u3010{}\u3011", (end - start));\n\n')),(0,i.kt)("p",null,"\u4f18\u96c5\u7684\u5173\u95ed:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\n// \u4f18\u96c5\u4e00\u70b9\u5173\u95ed\uff0c\u5148\u901a\u77e5\uff0c\u518d\u7b49\u5f85\uff0c\u6700\u540e\u5f3a\u5236\u5173\u95ed\nthis.executor.shutdown();\ntry {\n    this.executor.awaitTermination(10, TimeUnit.SECONDS);\n} catch (InterruptedException e) {\n}\nthis.executor.shutdownNow();\n\n\n")),(0,i.kt)("h3",{id:"1022-threadpoolexecutor-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60"},"10.2.2. ThreadPoolExecutor-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60"),(0,i.kt)("h4",{id:"10221-\u6838\u5fc3-api"},"10.2.2.1. \u6838\u5fc3 api"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"ThreadPoolExecutor(int corePoolSize, // \u7ebf\u7a0b\u6570\n        int maximumPoolSize, // \u6700\u5927\u7ebf\u7a0b\n        long keepAliveTime, TimeUnit unit, // \u5bb9\u91cf\u8d85\u8fc7 coreSize, \u7a7a\u95f2\u591a\u957f\u65f6\u95f4\u4f1a\u88ab\u9500\u6bc1\n        BlockingQueue<Runnable> workQueue,// \u4efb\u52a1\u961f\u5217\n        ThreadFactory factory, // \u7ebf\u7a0b\u5de5\u5382, \u4f7f\u7528\u9ed8\u8ba4\u5373\u53ef\n        RejectedExecutionHandler handler)// \u62d2\u7edd\u7b56\u7565\n\n- \u5bf9\u4e8e workQueue, \u5141\u8bb8\u591a\u79cd, \u5148\u8fdb\u5148\u51fa\n\n    - SynchronousQueue(\u76f4\u63a5\u63d0\u4ea4\u961f\u5217) - \u6ca1\u6709\u5bb9\u91cf, \u6bcf\u4e2a\u6dfb\u52a0\u90fd\u8981\u7b49\u5f85\u4e00\u4e2a\u5220\u9664. \u5bf9\u4e8e\u65b0\u7684\u4efb\u52a1\u4f1a\u5c1d\u8bd5\u521b\u5efa\u65b0\u7684thread, \u76f4\u5230\u8fbe\u5230 maximumPoolSize\u4e4b\u540e\u6267\u884c\u62d2\u7edd\u7b56\u7565\n\n    - ArrayBlockingQueue(\u6709\u754c\u961f\u5217) - \u5e26\u6709\u5bb9\u91cf. \u53ea\u5728\u5bb9\u91cf\u6ee1\u8f7d\u65f6\u5c06\u7ebf\u7a0b\u6570\u63d0\u5347\u5230 coreSize\u4e4b\u4e0a\n\n    - LinkedBlockingQueue(\u65e0\u754c\u961f\u5217) - \u7c7b\u4f3c\u6709\u754c\u961f\u5217, \u5bb9\u91cf\u65e0\u9650(\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u6307\u5b9a\u5bb9\u91cf), \u76f4\u5230\u8d44\u6e90\u8017\u5c3d\u4e5f\u4e0d\u4f1a\u6267\u884c\u62d2\u7edd\u7b56\u7565\n\n    - PriorityBlockingQueue(\u4f18\u5148\u4efb\u52a1\u961f\u5217) - \u5e26\u6709\u5bb9\u91cf, \u6709\u81ea\u5b9a\u4e49\u987a\u5e8f\n\n    - \u81ea\u5b9a\u4e49\n\n- \u5bf9\u4e8e factory, \u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5, \u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u903b\u8f91\u6765\u521b\u5efa thread\n\n- \u5bf9\u4e8e\u62d2\u7edd\u7b56\u7565 handler, \u6709\u591a\u79cd\n\n    - AbortPolicy - \u76f4\u63a5\u629b\u5f02\u5e38\n\n    - CallerRunsPolicy - \u76f4\u63a5\u5728\u5f53\u524dthread\u79cd, \u8fd0\u884c\u5f53\u524d\u88ab\u4e22\u5f03\u7684\u4efb\u52a1\n\n    - DiscardOledestPolicy - \u4e22\u5f03\u6700\u8001\u7684\u8bf7\u6c42\n\n    - DiscardPolicy - \u76f4\u63a5\u4e22\u5f03, \u4e0d\u62a5\u5f02\u5e38\n\n    - \u81ea\u5b9a\u4e49 RejectionExecutionHandler \u63a5\u53e3\n\n")),(0,i.kt)("h4",{id:"10222-\u963b\u585e\u961f\u5217-blockingqueue"},"10.2.2.2. \u963b\u585e\u961f\u5217 BlockingQueue"),(0,i.kt)("p",null,"api \u63d0\u4f9b\u4e09\u7c7b\u64cd\u4f5c:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u629b\u5f02\u5e38 (\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u9a6c\u4e0a\u8fdb\u884c\uff0c\u5219\u629b\u51fa\u5f02\u5e38)"),(0,i.kt)("p",{parentName:"li"},"  add(o), remove(o), element(o)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u8fd4\u56de\u7279\u5b9a\u503c (\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u9a6c\u4e0a\u8fdb\u884c\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u7684\u503c\uff0c\u4e00\u822c\u662ftrue\u6216\u8005false)"),(0,i.kt)("p",{parentName:"li"},"  offer(o), poll(o), peek(o)"),(0,i.kt)("p",{parentName:"li"},"  offer(o, timeot, unit), poll(o, timeout, unit) \u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u9a6c\u4e0a\u8fdb\u884c\uff0c\u64cd\u4f5c\u4f1a\u88ab\u963b\u585e\u6307\u5b9a\u7684\u65f6\u95f4\uff0c\u5982\u679c\u6307\u5b9a\u65f6\u95f4\u6ca1\u6267\u884c\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u503c\uff0c\u4e00\u822c\u662ftrue\u6216\u8005false")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u963b\u585e (\u5982\u679c\u64cd\u4f5c\u4e0d\u80fd\u9a6c\u4e0a\u8fdb\u884c\uff0c\u64cd\u4f5c\u4f1a\u88ab\u963b\u585e)"),(0,i.kt)("p",{parentName:"li"},"  put(o), take(o)"))),(0,i.kt)("p",null,"\u6269\u5c55 ThreadPoolExecutor"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ExtThreadPool {\n\n    public static class MyTask implements Runnable {\n        public String name;\n\n        public MyTask(String name) {\n            this.name = name;\n        }\n\n        @Override\n        public void run() {\n            System.out.println("\u6b63\u5728\u6267\u884c:Thread ID:" + Thread.currentThread().getId() + ",Task Name:" + name);\n\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n    public static void main(String args[]) throws InterruptedException {\n        ExecutorService executorService = new ThreadPoolExecutor(5, 5, 0L, TimeUnit.MILLISECONDS, new LinkedBlockingDeque<Runnable>()) {\n            protected void beforeExecute(Thread t, Runnable r) {\n                System.out.println("\u51c6\u5907\u6267\u884c:" + ((MyTask) r).name);\n            }\n\n            protected void afterExecute(Thread t, Runnable r) {\n                System.out.println("\u6267\u884c\u5b8c\u6210:" + ((MyTask) r).name);\n            }\n\n            protected void terminated() {\n                System.out.println("\u7ebf\u7a0b\u6c60\u9000\u51fa!");\n            }\n        };\n\n        for (int i = 0; i < 5; i++) {\n            MyTask task = new MyTask("TASK-GEYM-" + i);\n            executorService.execute(task);// \u53e6\u4e00\u79cd\u4e0d\u540c\u4e8e submit() \u7684\u63d0\u4ea4\u4efb\u52a1\u65b9\u5f0f\n            Thread.sleep(10);\n        }\n        executorService.shutdown();// \u6e29\u548c\u7684\u5173\u95ed\n    }\n}\n\n')),(0,i.kt)("h4",{id:"10223-\u81ea\u5b9a\u4e49\u62d2\u7edd\u7b56\u7565"},"10.2.2.3. \u81ea\u5b9a\u4e49\u62d2\u7edd\u7b56\u7565"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class RejectThreadPoolDemo {\n    public static class MyTask implements Runnable {\n\n        @Override\n        public void run() {\n            System.out.println(System.currentTimeMillis() + ":Thread ID:" + Thread.currentThread().getId());\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n\n    public static void main(String args[]) throws InterruptedException {\n        MyTask myTask = new MyTask();\n\n        ExecutorService executorService = new ThreadPoolExecutor(\n                 5, 5,                          // 5\u5e38\u9a7b\u7ebf\u7a0b, 5\u6700\u5927\u7ebf\u7a0b , \u7b49\u4ef7\u4e8e\u56fa\u5b9a\u5927\u5c0f\u7ebf\u7a0b\u6c60\n                 0L, TimeUnit.SECONDS, \n                 new LinkedBlockingDeque<Runnable>(10),// \u5bb9\u91cf10\n                  Executors.defaultThreadFactory()\n                , new RejectedExecutionHandler() { // \u81ea\u5b9a\u4e49\u7b56\u7565\n            @Override\n            public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {\n                System.out.println(r.toString() + " is discard");\n            }\n        });\n\n        for (int i = 0; i < 100; i++) {\n            executorService.submit(myTask);\n            Thread.sleep(10);\n        }\n    }\n}\n\n')),(0,i.kt)("h4",{id:"10224-\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u540d\u79f0"},"10.2.2.4. \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u540d\u79f0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// \u547d\u540d\u7ebf\u7a0b\u5de5\u5382\n    static class NamedThreadFactory implements ThreadFactory {\n        private static final AtomicInteger poolNumber = new AtomicInteger(1);\n        private final ThreadGroup group;\n        private final AtomicInteger threadNumber = new AtomicInteger(1);\n        private final String namePrefix;\n\n        NamedThreadFactory(String name) {\n\n            SecurityManager s = System.getSecurityManager();\n            group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup();\n            if (null == name || name.isEmpty()) {\n                name = "pool";\n            }\n\n            namePrefix = name + "-" + poolNumber.getAndIncrement() + "-thread-";\n        }\n\n        public Thread newThread(Runnable r) {\n            Thread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\n            if (t.isDaemon())\n                t.setDaemon(false);\n            if (t.getPriority() != Thread.NORM_PRIORITY)\n                t.setPriority(Thread.NORM_PRIORITY);\n            return t;\n        }\n    }\n// \u4f7f\u7528:\n\nThreadPoolExecutor executorOne = new ThreadPoolExecutor(5, 5, 1, TimeUnit.MINUTES,\n            new LinkedBlockingQueue<>(), new NamedThreadFactory("ASYN-ACCEPT-POOL"));\n')),(0,i.kt)("h4",{id:"10225-\u81ea\u5b9a\u4e49\u7ebf\u7a0b-\u540d\u79f0"},"10.2.2.5. \u81ea\u5b9a\u4e49\u7ebf\u7a0b \u540d\u79f0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'ThreadFactory factory = new ThreadFactory() {\n\n    // \u81ea\u5b9a\u4e49 thread name\n    final AtomicInteger seq = new AtomicInteger();\n    @Override\n    public Thread newThread(Runnable r) {\n        Thread t = new Thread(r);\n        t.setName("rpc-" + seq.getAndIncrement());\n        return t;\n    }\n\n};\n// \u95f2\u7f6e\u65f6\u95f4\u8d85\u8fc730\u79d2\u7684\u7ebf\u7a0b\u81ea\u52a8\u9500\u6bc1\nthis.executor = new ThreadPoolExecutor(1, coreSize,\n        30, TimeUnit.SECONDS, queue, factory,\n        new ThreadPoolExecutor.CallerRunsPolicy());\n')),(0,i.kt)("h3",{id:"1023-\u65e0\u9501\u5b89\u5168\u7684\u961f\u5217"},"10.2.3. \u65e0\u9501\u5b89\u5168\u7684\u961f\u5217"),(0,i.kt)("p",null,"ConcurrentLinkedQueue"),(0,i.kt)("p",null,"TODO"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/qq_38293564/article/details/80798310"},"https://blog.csdn.net/qq_38293564/article/details/80798310")),(0,i.kt)("h3",{id:"1024-\u62d3\u5c55\u7ebf\u7a0b\u6c60-\u5728\u7ebf\u7a0b\u6c60\u4e2d\u5bfb\u627e\u5806\u6808"},"10.2.4. \u62d3\u5c55\u7ebf\u7a0b\u6c60-\u5728\u7ebf\u7a0b\u6c60\u4e2d\u5bfb\u627e\u5806\u6808"),(0,i.kt)("p",null,"\u7ebf\u7a0b\u6c60\u4f1a\u5403\u6389\u7ebf\u7a0b\u629b\u51fa\u7684\u5f02\u5e38, \u770b\u770b\u8fd9\u4e2a\u4f8b\u5b50"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class NoTraceDivTaskDemo {\n    public static class DivTask implements Runnable {\n        int a, b;\n\n        public DivTask(int a, int b) {\n            this.a = a;\n            this.b = b;\n        }\n\n        @Override\n        public void run() {\n            double re = a / b;\n            System.out.println(re);\n        }\n    }\n\n    public static void main(String args[]) {\n        ThreadPoolExecutor poolExecutor = new ThreadPoolExecutor(0, Integer.MAX_VALUE, 0L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>());\n        for (int i = 0; i < 5; i++) {\n            /*poolExecutor.submit(new DivTask(100, i));*/ //\u6ca1\u6709\u62a5\u9519\u63d0\u793a,  \u4f46\u662f i=0 \u65f6\u660e\u663e\u9664\u6570\u4e0d\u80fd\u4e3a0\u5e94\u8be5\u62a5\u9519;\n            poolExecutor.execute(new DivTask(100, i));//\u901a\u8fc7execute()\u63d0\u4ea4\u4efb\u52a1, \u6709\u62a5\u9519\u63d0\u793a\n        }\n        /**\n        \u8f93\u51fa\u4e86\u7ed3\u679c, \u4f46\u662f\u53ea\u67094\u884c\u7ed3\u679c, \u6b63\u5e38\u7684\u8bdd\u5e94\u8be5\u67095\u884c\n        */\n    }\n\n}\n\n")),(0,i.kt)("p",null,"\u66f4\u597d\u7684\u6539\u8fdb\u65b9\u6cd5\u662f\u76f4\u63a5\u62d3\u5c55 \u7ebf\u7a0b\u6c60"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class TraceThreadPoolExecutor extends ThreadPoolExecutor {\n    \n    public TraceThreadPoolExecutor(int corePoolSize, int maximumPoolSize, long keepAliveTime, TimeUnit unit, BlockingQueue<Runnable> workQueue) {\n        super(corePoolSize, maximumPoolSize, keepAliveTime, unit, workQueue);\n    }\n\n    // \u4e5f\u53ef\u4ee5\u8986\u76d6 submit\u65b9\u6cd5\n    public void execute(Runnable task) {\n        super.execute(wrap(task, clientTrace(), Thread.currentThread().getName()));\n    }\n\n    private Runnable wrap(final Runnable task, final Exception clientTrace, String name) {\n        return new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    task.run();\n                } catch (Exception e) {\n                    clientTrace.printStackTrace();\n                    throw e;\n                }\n            }\n        };\n    }\n\n    private Exception clientTrace() {\n        return new Exception("Client stack trace");// \u4fdd\u5b58\u7740\u63d0\u4ea4\u4efb\u52a1\u7684\u7ebf\u7a0b\u7684\u5806\u6808\u4fe1\u606f\n    }\n}\n\n// \u6d4b\u8bd5\npublic class TraceDivTaskDemo {\n    public static void main(String args[]) {\n        ThreadPoolExecutor threadPoolExecutor = new TraceThreadPoolExecutor(0, Integer.MAX_VALUE, 0L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>());\n        for (int i = 0; i < 5; i++) {\n            threadPoolExecutor.execute(new NoTraceDivTaskDemo.DivTask(100, i));\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1025-fork-join\u6846\u67b6"},"10.2.5. Fork-Join\u6846\u67b6"),(0,i.kt)("p",null,"\u7c7b\u4f3c MapReduce"),(0,i.kt)("p",null,"jdk\u63d0\u4f9b\u4e00\u4e2a ",(0,i.kt)("inlineCode",{parentName:"p"},"ForkJoinPool")," \u7ebf\u7a0b\u6c60, \u5bf9\u4e8e fork() \u5e76\u4e0d\u6025\u4e8e\u5206\u53c9\u51fa\u65b0\u7684 \u7ebf\u7a0b, \u800c\u662f\u5c06\u65b0\u4efb\u52a1\u63d0\u4ea4\u7ed9 ForkJoinPool ; \u8fd9\u6837, \u63d0\u4ea4\u7684\u4efb\u52a1\u6570\u53ef\u80fd\u8fdc\u8fdc\u5927\u4e8e\u5b9e\u9645\u7ebf\u7a0b\u6570, \u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u5bb9\u7eb3\u4efb\u52a1, \u6bcf\u6b21\u4ece\u961f\u5217\u5934\u90e8\u83b7\u53d6\u4efb\u52a1\u6267\u884c, \u5982\u679c\u8fd9\u4e2a \u7ebf\u7a0b\u5c06\u961f\u5217\u4efb\u52a1\u5168\u90e8\u5b8c\u6210, \u4f1a\u53bb\u5e2e\u52a9\u5176\u4ed6\u7ebf\u7a0b ---- \u4ece\u5176\u4ed6 thread \u7684\u4efb\u52a1\u961f\u5217\u5c3e\u90e8\u83b7\u53d6\u4efb\u52a1\u6267\u884c"),(0,i.kt)("p",null,"ForkJoinPool \u63d0\u4f9b\u4e00\u4e2a\u65b9\u6cd5 submit, \u63d0\u4ea4 ",(0,i.kt)("inlineCode",{parentName:"p"},"ForkJoinTask")," \u4efb\u52a1(\u8fd9\u79cd\u4efb\u52a1\u652f\u6301 form()\u5206\u89e3\u548c join()\u7b49\u5f85), \u5b83\u5305\u542b2\u4e2a\u5b50\u7c7b ",(0,i.kt)("inlineCode",{parentName:"p"},"RecursiveAction")," (\u65e0\u8fd4\u56de\u503c\u4efb\u52a1) \u548c ",(0,i.kt)("inlineCode",{parentName:"p"},"RecursiveTask")," (\u6709\u8fd4\u56de\u503c\u4efb\u52a1)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class CountTask extends RecursiveTask {\n    private static final int THRESHOLD = 10000;// \u8d85\u8fc7\u8fd9\u4e2a\u5206\u754c\u70b9, \u5c31\u4f7f\u7528 \u4efb\u52a1\u5206\u89e3\n\n    private long start;\n    private long end;\n\n    public CountTask(long start, long end) {\n        this.start = start;\n        this.end = end;\n    }\n\n\n    @Override\n    protected Long compute() {\n        long sum = 0;\n        boolean canCompute = (end - start) < THRESHOLD;\n        if (canCompute) {\n            for (long i = start; i <= end; i++) {\n                sum += i;\n            }\n        } else {\n            long step = (start + end) / 100;\n\n            ArrayList<CountTask> subTasks = new ArrayList<CountTask>();\n            long pos = start;\n\n            for (int i = 0; i < 100; i++) {\n                long lastOne = pos + step;\n                if (lastOne > end) {\n                    lastOne = end;\n                }\n                CountTask subTask = new CountTask(pos, lastOne);\n                pos += step + 1;\n                subTasks.add(subTask);\n                subTask.fork();// \u63d0\u4ea4\u5b50\u4efb\u52a1, \u7c7b\u4f3c\u9012\u5f52\u8c03\u7528, \u82e5\u8c03\u7528\u5c42\u6b21\u592a\u6df1, \u53ef\u80fd\u4f1a\u6808\u6ea2\u51fa\n            }\n\n            for (CountTask t : subTasks) {\n                sum += (Long) t.join();// \u7b49\u5f85\u6240\u6709\u5b50\u4efb\u52a1\u7ed3\u675f, \u6c42\u548c\n            }\n        }\n\n\n        return sum;\n    }\n\n\n    public static void main(String args[]) {\n        ForkJoinPool forkJoinPool = new ForkJoinPool();\n        CountTask task = new CountTask(0, 200000L);\n        ForkJoinTask<Long> result = forkJoinPool.submit(task);\n\n        long res = 0;\n        try {\n            res = result.get();\n            System.out.println("sum=" + res);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        } catch (ExecutionException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1026-springboot\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6c60"},"10.2.6. springboot\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6c60"),(0,i.kt)("h3",{id:"1027-hystrix-\u7ebf\u7a0b\u6c60\u9694\u79bb"},"10.2.7. hystrix-\u7ebf\u7a0b\u6c60\u9694\u79bb"),(0,i.kt)("h2",{id:"103-jdk\u4e2d\u7684\u5e76\u53d1\u5bb9\u5668"},"10.3. jdk\u4e2d\u7684\u5e76\u53d1\u5bb9\u5668"),(0,i.kt)("h3",{id:"1031-\u6574\u4f53\u4ecb\u7ecd"},"10.3.1. \u6574\u4f53\u4ecb\u7ecd"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ConcurrentHashMap - \u5b89\u5168\u7684 hashmap")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"CopyOnWriteArrayList - \u5b89\u5168\u7684 arraylist, \u9002\u5408\u8bfb\u591a\u5199\u5c11\u7684\u573a\u666f, \u6027\u80fd\u8fdc\u8fdc\u597d\u4e8e Vector")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ConcurrentLinkedQueue - \u5b89\u5168\u7684LinkedList, \u94fe\u8868\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"BlockingQueue - \u963b\u585e\u961f\u5217, \u4f5c\u4e3a\u6570\u636e\u5171\u4eab\u7684\u901a\u9053")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ConcurrentSkipListMap - \u8df3\u8868\u7684\u5b9e\u73b0"))),(0,i.kt)("p",null,"\u53e6\u5916 , Collections \u5de5\u5177\u7c7b\u53ef\u4ee5\u5c06\u4efb\u610f\u96c6\u5408\u5305\u88c5\u4e3a\u5b89\u5168\u7684\u96c6\u5408, \u5f53\u7136\u6027\u80fd\u5c31\u5dee\u8fdc\u4e86"),(0,i.kt)("h3",{id:"1032-concurrentlinkedqueue\u539f\u7406"},"10.3.2. ConcurrentLinkedQueue\u539f\u7406"),(0,i.kt)("h3",{id:"1033-\u5f00\u6e90\u9ad8\u6027\u80fd\u5185\u5b58\u961f\u5217-disruptor"},"10.3.3. \u5f00\u6e90\u9ad8\u6027\u80fd\u5185\u5b58\u961f\u5217 disruptor"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://tech.meituan.com/2016/11/18/disruptor.html"},"https://tech.meituan.com/2016/11/18/disruptor.html"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/LMAX-Exchange/disruptor"},"https://github.com/LMAX-Exchange/disruptor")),(0,i.kt)("h2",{id:"104-aqs-\u65e0\u9501\u5b9e\u73b0"},"10.4. aqs \u65e0\u9501\u5b9e\u73b0"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/7b0e11a1e605"},"https://www.jianshu.com/p/7b0e11a1e605")," //todo"),(0,i.kt)("h1",{id:"11-java8\u4e2d\u7684\u65b0\u7279\u6027"},"11. java8\u4e2d\u7684\u65b0\u7279\u6027"),(0,i.kt)("p",null,"check {% post_link java-note \ud83d\udcda java-note %}\u4e2d\u7684 #java8"),(0,i.kt)("h1",{id:"12-\u600e\u4e48\u4f18\u5316\u9501"},"12. \u600e\u4e48\u4f18\u5316\u9501"),(0,i.kt)("h2",{id:"121-\u63d0\u9ad8\u9501\u6027\u80fd\u7684\u539f\u5219"},"12.1. \u63d0\u9ad8\u9501\u6027\u80fd\u7684\u539f\u5219"),(0,i.kt)("h3",{id:"1211-\u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4-\u548c\u9501\u7c97\u5316-\u9700\u8981\u6743\u8861"},"12.1.1. \u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4-\u548c\u9501\u7c97\u5316-\u9700\u8981\u6743\u8861"),(0,i.kt)("p",null,"\u51cf\u5c11\u9501\u6301\u6709\u65f6\u95f4\u5c31\u662f\u8bf4\uff0c\u5c06\u88ab\u540c\u6b65\u65b9\u6cd5\u62c6\u5206\uff0c \u53ea\u9501\u5b9a\u539f\u65b9\u6cd5\u7684\u4e00\u90e8\u5206"),(0,i.kt)("p",null,"\u6bd4\u5982 \u4e00\u4e2a\u540c\u6b65\u65b9\u6cd5\u53ef\u4ee5\u5206\u6210\u4e09\u4e2a\u5c0f\u65b9\u6cd5, \u53ea\u6709\u4e00\u4e2a\u6216\u4e24\u4e2a\u5c0f\u65b9\u6cd5\u9700\u8981\u540c\u6b65, \u5219\u540c\u6b65\u5757\u53ef\u4ee5\u7f29\u5c0f\u5230\u5c0f\u65b9\u6cd5\u4e0a, \u8fd9\u6837\u6574\u4e2a\u5927\u65b9\u6cd5\u6301\u6709\u9501\u7684\u65f6\u95f4\u5c31\u7f29\u77ed\u4e86"),(0,i.kt)("p",null,"\u4f46\u662f\u51cf\u5c11\u662f\u6709\u9650\u5ea6\u7684, \u5982\u679c\u9891\u7e41\u8fdb\u884c\u9501\u8bf7\u6c42\u548c\u91ca\u653e, \u4e5f\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90, \u6240\u4ee5 jvm \u5728\u78b0\u5230\u8fd9\u79cd\u60c5\u51b5\u65f6\u4f1a\u5408\u5e76\u9501\u8bf7\u6c42, like this: (\u4f46\u662f\u6211\u4eec\u5e94\u8be5\u6709\u610f\u8bc6\u5730\u4e3b\u52a8\u4f18\u5316)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private static void test() {\n    synchronized (lock) {\n        // do sth\n    }\n\n    doSth();\n\n    synchronized(lock) {\n        // do sth\n    }\n\n}\n\n// \u4f1a\u88abjvm\u4f18\u5316\u6210\n\nprivate static void test() {\n    synchronized (lock) {\n        // do sth\n        doSth();\n        // do sth\n    }\n\n}\n\n/////////////////////////////////////\n\nfor (int i = 0; i < 100; i++) {\n    synchronized(lock) {\n        do sth\n    }\n}\n// \u5e94\u8be5\u6539\u6210\u8fd9\u6837\nsynchronized(lock) {\n    for (int i = 0; i < 100; i++) {\n        do sth\n    }\n}\n\n")),(0,i.kt)("h3",{id:"1212-\u51cf\u5c0f\u9501\u7c92\u5ea6"},"12.1.2. \u51cf\u5c0f\u9501\u7c92\u5ea6"),(0,i.kt)("p",null,"\u7f29\u5c0f\u9501\u5b9a\u5bf9\u8c61\u8303\u56f4, \u901a\u8fc7\u62c6\u5206\u88ab\u9501\u5b9a\u5bf9\u8c61\u7684\u6570\u636e\u7ed3\u6784\uff0c \u7f29\u5c0f\u9501\u5b9a\u8303\u56f4"),(0,i.kt)("p",null,"\u5178\u578b\u5982 ConcurrentHashMap \u7684\u5b9e\u73b0"),(0,i.kt)("p",null,"\u8981\u4fdd\u8bc1hashmap\u7684\u7ebf\u7a0b\u5b89\u5168, \u6700\u7c97\u7565\u7684\u65b9\u6cd5\u5c31\u662f\u5bf9\u6574\u4e2a hashmap\u52a0\u9501, \u4f46\u662f\u8fd9\u6837\u505a\u5c31\u9501\u7c92\u5ea6\u592a\u5927;"),(0,i.kt)("p",null,'\u5b9e\u9645\u4e0a\u7684\u5b9e\u73b0\u662f\u8fd9\u6837\u7684, ConcurrentHashMap \u5185\u90e8\u8fdb\u4e00\u6b65\u7ec6\u5206\u4e3a\u591a\u4e2a hashmap,\u79f0\u4e4b\u4e3a "segment", \u4e00\u4e2a ConcurrentHashMap\u9ed8\u8ba4\u5206\u6210\u4e86 16 \u4e2a segment, \u4e5f\u5c31\u662f\u8bf4\u6709\u53ef\u80fd\u540c\u65f6\u652f\u6301 16 \u4e2a thread \u5e76\u884c\u63d2\u5165\u5143\u7d20; \u5982\u679c\u60f3\u5411 map \u4e2d\u6dfb\u52a0 entry, \u5e76\u4e0d\u662f\u5c06\u6574\u4e2a map \u52a0\u9501, \u800c\u662f\u6839\u636e entry \u8ba1\u7b97\u5f97\u51fa\u7684 hashcode \u5f97\u5230 \u8be5entry \u4f1a\u88ab\u5b58\u5165 \u54ea\u4e2a segment, \u7136\u540e\u5bf9\u8be5 segment \u52a0\u9501, \u968f\u4e4b\u5b8c\u6210 put()\u64cd\u4f5c, '),(0,i.kt)("p",null,"\u4f46\u662f\u51cf\u5c0f\u9501\u7c92\u5ea6\u4f1a\u5f15\u5165\u65b0\u7684\u95ee\u9898: \u8981\u8bbf\u95ee\u5168\u5c40\u4fe1\u606f, \u8fd9\u662f\u9700\u8981\u53d6\u5f97\u5168\u5c40\u9501, \u6d88\u8017\u7684\u8d44\u6e90\u6bd4\u8f83\u591a; \u5982 ConcurrentHashMap \u4e2d\u60f3\u8981\u53d6\u5f97 size \u4fe1\u606f\u65f6\u5019, \u9700\u8981\u83b7\u53d6 \u6240\u6709 segment \u7684\u9501, \u5f97\u5230 size \u540e, \u91ca\u653e\u6240\u6709\u9501;"),(0,i.kt)("h3",{id:"1213-\u8bfb\u5199\u5206\u79bb\u9501\u4ee3\u66ff\u72ec\u5360\u9501"},"12.1.3. \u8bfb\u5199\u5206\u79bb\u9501\u4ee3\u66ff\u72ec\u5360\u9501"),(0,i.kt)("p",null,"\u4f7f\u7528\u8bfb\u5199\u5206\u79bb\u9501"),(0,i.kt)("p",null,"\u8fd9\u6837\u5f53\u4e24\u4e2athread\u90fd\u662fread\u64cd\u4f5c\u65f6\uff0c \u4e0d\u4f1a\u963b\u585e"),(0,i.kt)("h3",{id:"1214-\u9501\u5206\u79bb"},"12.1.4. \u9501\u5206\u79bb"),(0,i.kt)("p",null,"\u5178\u578b\u5982 LinkedBlockingQueue \u7684\u5b9e\u73b0, \u63d0\u4f9b put() \u4ece\u961f\u5217\u5c3e\u90e8\u6dfb\u52a0, take() \u4ece\u961f\u5217\u5934\u90e8\u83b7\u53d6, \u8fd9\u4e24\u4e2a\u64cd\u4f5c\u90fd\u9700\u8981\u83b7\u53d6\u961f\u5217\u7684\u9501"),(0,i.kt)("p",null,'\u5982\u679c\u4f7f\u7528 "\u72ec\u5360\u9501", \u90a3\u4e48put \u548c take \u5c31\u4e0d\u80fd\u5b9e\u73b0\u5e76\u884c\u6267\u884c;'),(0,i.kt)("p",null,"jdk\u771f\u6b63\u7684\u5b9e\u73b0\u662f, \u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684\u9501 takeLock \u548c putLock (\u4e24\u4e2a\u4e0d\u540c\u7684 ReentrantLock), \u5206\u79bb put, take \u64cd\u4f5c. \u56e0\u6b64take\u548cput \u64cd\u4f5c\u4e0d\u5b58\u5728\u9501\u7ade\u4e89\u5173\u7cfb, \u53ea\u6709\u5f53\u4e2a2\u4e2athread \u662f put-put \u5173\u7cfb, \u6216\u8005\u662f take-take\u5173\u7cfb\u65f6\u5019\u624d\u6709\u7ade\u4e89\u5173\u7cfb"),(0,i.kt)("h2",{id:"122-jvm\u662f\u600e\u4e48\u5bf9\u9501\u4f18\u5316\u7684"},"12.2. jvm\u662f\u600e\u4e48\u5bf9\u9501\u4f18\u5316\u7684"),(0,i.kt)("p",null,"\u8fd9\u91cc\u6240\u8bf4\u7684\u9501\u90fd\u662fjvm\u7684\u4f18\u5316\u624b\u6bb5, \u4e0d\u662f\u771f\u6b63\u7684\u8bed\u8a00\u4e0a\u7684\u9501"),(0,i.kt)("p",null,"\u4e0b\u9762\u51e0\u4e2ajvm\u7684\u4f18\u5316\u624b\u6bb5\u662f\u5faa\u5e8f\u6e10\u8fdb\u7684, \u4e00\u4e2athread\u771f\u6b63\u88ab\u6302\u8d77\u4e4b\u524d, \u4f1a\u4f9d\u6b21\u5c1d\u8bd5\u5982\u4e0b\u7684\u624b\u6bb5"),(0,i.kt)("h3",{id:"1221-\u4f7f\u9501\u8fdb\u5165\u504f\u5411\u6a21\u5f0f-\u504f\u5411\u9501"},"12.2.1. \u4f7f\u9501\u8fdb\u5165\u504f\u5411\u6a21\u5f0f-\u504f\u5411\u9501"),(0,i.kt)("p",null,"\u4f7f\u7528jvm\u53c2\u6570: ",(0,i.kt)("inlineCode",{parentName:"p"},"-XX:+UsedBiasedLocking")," \u5f00\u542f\u504f\u5411\u9501"),(0,i.kt)("p",null,"\u6838\u5fc3\u601d\u60f3\u662f: jvm\u5f00\u542f\u504f\u5411\u9501\u7684\u60c5\u51b5\u4e0b, \u4e00\u4e2athread\u4e00\u65e6\u83b7\u53d6\u9501, \u8fd9\u4e2a\u9501\u5c31\u8fdb\u5165\u504f\u5411\u6a21\u5f0f(\u5373\u8fd9\u4e2a\u9501\u504f\u5411\u8fd9\u4e2athread), \u5f53\u540c\u4e00\u4e2a thread \u518d\u6b21\u8bf7\u6c42\u8be5\u9501\u65f6, \u65e0\u9700\u518d\u6b21\u505a\u4efb\u4f55\u540c\u6b65\u64cd\u4f5c, \u8fd9\u6837\u5c31",(0,i.kt)("inlineCode",{parentName:"p"},"\u8282\u7701\u4e86\u5f88\u591a\u9501\u7533\u8bf7\u7684\u64cd\u4f5c")),(0,i.kt)("p",null,"\u573a\u666f: \u5bf9\u4e8e\u9501\u7ade\u4e89\u5f88\u5c11\u7684\u573a\u666f\u5f88\u6709\u6548 - \u56e0\u4e3a \u540c\u4e00\u4e2a thread \u53ef\u80fd\u591a\u6b21\u8bf7\u6c42\u76f8\u540c\u7684\u9501; \u5982\u679c\u65f6\u9501\u7ade\u4e89\u6fc0\u70c8\u7684\u573a\u5408, \u6bcf\u6b21\u90fd\u662f\u4e0d\u540c\u7684 thread\u8bf7\u6c42\u76f8\u540c\u7684\u9501, \u504f\u5411\u6a21\u5f0f\u5c31\u5931\u6548\u4e86"),(0,i.kt)("h3",{id:"1222-\u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501"},"12.2.2. \u4f7f\u7528\u8f7b\u91cf\u7ea7\u9501"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/shuaicenglou3032/article/details/77170068"},"https://blog.csdn.net/shuaicenglou3032/article/details/77170068")),(0,i.kt)("p",null,"\u8f7b\u91cf\u7ea7\u9501\u4e3b\u8981\u601d\u60f3\u662f: \u63d0\u4f9b\u4e86\u4e00\u79cd\u65b0\u7684\u5224\u65ad thread\u662f\u5426\u6301\u6709\u9501\u7684\u5224\u65ad\u65b9\u5f0f - \u5982\u679c\u52a0\u9501\u5bf9\u8c61\u7684\u5934\u90e8\u5b58\u5728\u6307\u9488\u6307\u5411\u67d0\u4e2a thread , \u5219\u8fd9\u4e2athread \u62e5\u6709\u8fd9\u4e2a\u9501"),(0,i.kt)("p",null,"\u5f53 \u504f\u5411\u9501 \u5931\u6548, jvm \u4e0d\u4f1a\u7acb\u5373\u6302\u8d77 thread, \u800c\u662f\u4f1a\u5224\u65adthread\u662f\u5426\u62e5\u6709 \u8f7b\u91cf\u7ea7\u9501, \u5982\u679c\u62e5\u6709, \u5219\u987a\u5229\u8fdb\u5165 \u4e34\u754c\u533a, \u5982\u679c\u6ca1\u6709\u62e5\u6709, \u5219\u81a8\u80c0\u4e3a\u91cd\u91cf\u7ea7\u9501"),(0,i.kt)("h3",{id:"1223-\u81ea\u65cb\u9501"},"12.2.3. \u81ea\u65cb\u9501"),(0,i.kt)("p",null,"\u9501\u81a8\u80c0\u540e, jvm\u8fd8\u4f1a\u505a\u6700\u540e\u7684\u52aa\u529b: \u81ea\u65cb\u9501 -     jvm\u4f1a\u8ba9 \u5373\u5c06\u88ab\u6302\u8d77\u7684thread \u505a\u51e0\u4e2a\u7a7a\u5faa\u73af, \u5728\u7ecf\u8fc7\u51e0\u6b21\u5faa\u73af\u540e, \u5982\u679c\u8fd9\u4e2a\u9501\u80fd\u591f\u88ab\u83b7\u53d6\u4e86, \u5c31\u987a\u5229\u8fdb\u5165\u4e34\u754c\u533a, \u5982\u679c\u8fd8\u662f\u4e0d\u80fd\u83b7\u53d6   , \u624d\u4f1a\u771f\u6b63\u5c06 thread \u6302\u8d77"),(0,i.kt)("h3",{id:"1224-\u9501\u6d88\u9664"},"12.2.4. \u9501\u6d88\u9664"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"-XX:+EliminateLocks")," \u6253\u5f00jvm\u9501\u6d88\u9664\u529f\u80fd"),(0,i.kt)("p",null,"jvm\u4f1a\u5728\u7f16\u8bd1\u65f6, \u5bf9\u4e0a\u4e0b\u6587\u626b\u63cf, \u53bb\u9664\u6389\u4e0d\u53ef\u80fd\u5b58\u5728\u8d44\u6e90\u7ade\u4e89\u7684\u9501, \u6bd4\u5982: Vector \u4f5c\u4e3a\u65b9\u6cd5\u5185\u7684\u5c40\u90e8\u53d8\u91cf, \u5b9e\u5728\u7ebf\u7a0b\u6808\u4e0a\u5206\u914d\u7a7a\u95f4\u7684, \u5c5e\u4e8ethread\u79c1\u6709, \u4e0d\u4f1a\u51fa\u73b0\u7ebf\u7a0b\u5b89\u5168\u95ee\u9898, \u6240\u4ee5 Vecotr \u4e2d\u7684 \u9501\u662f\u6ca1\u6709\u5fc5\u8981\u7684, jvm\u4f1a\u5728\u7f16\u8bd1\u65f6\u6d88\u9664\u8fd9\u4e9b\u9501"),(0,i.kt)("p",null,"\u9003\u9038\u5206\u6790\n",(0,i.kt)("inlineCode",{parentName:"p"},"-XX:+DoEscapeAnalysis")),(0,i.kt)("h2",{id:"123-threadlocal"},"12.3. ThreadLocal"),(0,i.kt)("h3",{id:"1231-threadlocal\u6982\u5ff5"},"12.3.1. threadlocal\u6982\u5ff5"),(0,i.kt)("p",null,'\u6839\u636e\u5b57\u9762\u610f\u601d\u7406\u89e3\u5c31\u662f "\u7ebf\u7a0b\u672c\u5730\u7684", \u6bcf\u4e2a\u7ebf\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u53d8\u91cf, \u5176\u4ed6\u7ebf\u7a0b\u65e0\u6cd5\u8bbf\u95ee;'),(0,i.kt)("h3",{id:"1232-threadlocal-\u793a\u4f8b"},"12.3.2. threadLocal \u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * ThreadLocal  \n *\n * @version 0.1\n * @author xy\n * @date 2017\u5e749\u67082\u65e5 \u4e0b\u53485:15:54\n\n\u7ed3\u679c:\ninit value: false\nthread1 value: true\nthread2 value: null\n */\n@Data\npublic class Client {\n    \n    private ThreadLocal<Boolean> threadLocal = new ThreadLocal<Boolean>();\n    \n    public static void main(String[] args) {\n        Client client = new Client();\n        final ThreadLocal<Boolean> threadLocal = client.getThreadLocal();\n        threadLocal.set(false);\n        \n        System.out.println("init value: " + threadLocal.get());\n        \n        new Thread(new Runnable() {\n            \n            public void run() {\n                threadLocal.set(true);\n                System.out.println("thread1 value: " + threadLocal.get());\n            }\n        }).start();;\n        \n        new Thread(new Runnable() {\n            \n            public void run() {\n                System.out.println("thread2 value: " + threadLocal.get());\n            }\n        }).start();;\n    }\n}\n\n')),(0,i.kt)("p",null,"\u53ef\u4ee5\u770b\u51fa\u4e0d\u540c\u7684thread\u8bbf\u95ee\u540c\u4e00\u4e2athreadLocal, \u7ed3\u679c\u4e0d\u540c;"),(0,i.kt)("h3",{id:"1233-\u518d\u770b\u4e00\u4e2a\u95ee\u9898\u4f8b\u5b50\u4ee5\u53ca\u6539\u8fdb"},"12.3.3. \u518d\u770b\u4e00\u4e2a\u95ee\u9898\u4f8b\u5b50\u4ee5\u53ca\u6539\u8fdb"),(0,i.kt)("p",null,"\u4e3a\u6bcf\u4e2a\u7ebf\u7a0b\u51c6\u5907\u4e00\u4efd\u53d8\u91cf"),(0,i.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2ademo\u4f1a\u5f02\u5e38:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class ParseDateDemo {\n    private static final SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");\n    //private static ThreadLocal<SimpleDateFormat> threadLocal = new ThreadLocal<SimpleDateFormat>(); // \u66f4\u597d\u7684\u65b9\u6cd5\n\n    public static class ParseDate implements Runnable {\n        int i = 0;\n\n        public ParseDate(int i) {\n            this.i = i;\n        }\n\n        @Override\n        public void run() {\n            try {\n                Date date = sdf.parse("2017-05-06 12:33:" + i % 60);// \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u662f\u5b89\u5168\u7684, \u4e00\u4e2a\u53ef\u884c\u7684\u6539\u8fdb\u65b9\u6cd5\u662f\u524d\u540e\u52a0\u9501,\n\n               //\u4f46\u662f\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u4e3a\u6bcf\u4e2a thread\u51c6\u5907\u4e00\u4e2a SimpleDateFormat\n                // if (threadLocal.get() == null) {\n                //     threadLocal.set(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss"));\n                // }\n                // Date date = threadLocal.get().parse("2017-05-06 12:33:" + i % 60);\n\n                System.out.println(i + ":" + date);\n            } catch (ParseException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public static void main(String args[]) {\n        ExecutorService executorService = Executors.newFixedThreadPool(10);\n        for (int i = 0; i < 1000; i++) {\n            executorService.execute(new ParseDate(i));\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1234-\u539f\u7406"},"12.3.4. \u539f\u7406"),(0,i.kt)("p",null,"Thread \u5185\u90e8\u6709\u4e2a\u6210\u5458 ",(0,i.kt)("inlineCode",{parentName:"p"},"ThreadLocalMap"),', \u7c7b\u4f3c hashmap, key\u4e3a "\u5f53\u524d\u7ebf\u7a0b\u8bbf\u95ee\u7684 threadlocal\u5bf9\u8c61", value \u4e3a "threadLocal\u4fdd\u5b58\u7684\u503c", '),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ThreadLocalMap"),' \u4fdd\u5b58\u4e86\u5f53\u524d\u7ebf\u7a0b\u7684\u6240\u6709 "\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf" - \u4e5f\u5c31\u662f\u8bf4, \u6240\u8c13\u7684 "\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf" \u662f\u7ef4\u62a4\u5728 Thread\u5185\u90e8\u7684, \u53ea\u8981\u8fd9\u4e2a\u7ebf\u7a0b\u4e0d\u9000\u51fa, "\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf" \u5c06\u6c38\u8fdc\u5b58\u5728. Thread \u9000\u51fa, \u5c06\u8fdb\u884c ThreadLocalMap\u7684\u6e05\u7406.'),(0,i.kt)("p",null,'\u4f7f\u7528\u5b8c\u6bd5\u7684 ThreadLocal, \u8bb0\u5f97\u8fdb\u884c\u6e05\u7406 - \u56e0\u4e3a\u7ebf\u7a0b\u53ef\u80fd\u6c38\u8fdc\u4e0d\u4f1a\u9000\u51fa(\u6bd4\u5982\u4f7f\u7528\u4e86\u56fa\u5b9a\u5bb9\u91cf\u7684\u7ebf\u7a0b\u6c60, tomcat \u5c31\u4f7f\u7528\u4e86\u7ebf\u7a0b\u6c60\u5904\u7406\u8bf7\u6c42), \u7ebf\u7a0b\u5185\u90e8\u5c06\u6c38\u8fdc\u7ef4\u62a4 "\u7ebf\u7a0b\u5c40\u90e8\u53d8\u91cf", \u6240\u4ee5\u5e94\u8be5\u624b\u52a8\u6e05\u9664'),(0,i.kt)("h3",{id:"1235-\u770b\u6e90\u7801"},"12.3.5. \u770b\u6e90\u7801"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u4e00\u4e2a Thread \u4e2d\u5b58\u5728\u4e00\u4e2a ThreadLocalMap field\uff0cThreadLocalMap\u4e2d\u7684 key \u662f\u4e00\u4e2a Weakreference\uff0c \u6307\u5411ThreadLocal\uff0cvalue\u4ee3\u8868\u901a\u8fc7Thread Local\u5b58\u50a8\u7684\u53d8\u91cf\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"ThreadLocalMap \u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a key(\u5373ThreadLocal)\uff0c \u4e5f\u5c31\u662f\u8bf4\u540c\u4e00\u4e2a Thread \u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a \u201c\u672c\u5730\u7ebf\u7a0b\u53d8\u91cf\u201d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'\u4e3a\u4ec0\u4e48\u4e0d\u540c\u7684\u7ebf\u7a0b\u8bbf\u95ee\u540c\u4e00\u4e2aThreadLocal\uff0c\u5f97\u5230\u7684\u786e\u662f\u4e0d\u540c\u7684\u6570\u503c, \u56e0\u4e3a\u4e0d\u540c\u7684thread\u5185\u90e8\u7ef4\u62a4\u4e86\u4e0d\u540c\u7684threadLocalMap; "\u672c\u5730\u7ebf\u7a0b\u53d8\u91cf" \u5b9e\u9645\u4e0a\u8fd8\u662f\u4fdd\u5b58\u5728 Thread \u81ea\u8eab\u5185\u90e8'))),(0,i.kt)("p",null,"\u5148\u770b\u770b\u6574\u4f53\u7684\u793a\u610f\u56fe"),(0,i.kt)("p",null,"\u4eceThreadLocal#set\u8fdb\u5165, \u770b\u770b\u5b9e\u73b0:"),(0,i.kt)("p",null,"\u7247\u6bb51"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"     // \u5c06\u6307\u5b9a\u7684\u503c\u8bbe\u7f6e\u8fdb\u5f53\u524d\u7ebf\u7a0b\u7684threadLocal\u4e2d\n    public void set(T value) {\n        Thread t = Thread.currentThread();\n        // \u6839\u636e\u5f53\u524d\u7ebf\u7a0b\u83b7\u53d6 ThreadLocalMap, \u53ef\n        //\u4ee5\u731c\u6d4b ThreadLocalMap\u5927\u6982\u662f\u4e00\u4e2a\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u5bb9\u5668\n        //\u7247\u6bb52\u662fThreadLocalMap\u7684\u7c7b\u7ed3\u6784\n        ThreadLocalMap map = getMap(t);\n        if (map != null)\n            // \u5982\u679c\u83b7\u53d6\u5230\u4e86, \u8bbe\u7f6e\u4e00\u4e2a\u952e\u503c\u5bf9, key \u4e3a\u5f53\u524d\u7ebf\u7a0b\u6240\u8bbf\u95ee\u7684 ThreadLocal,\n            // value \u4e3a \u5b58\u50a8\u7684\u503c. \u4ece\u8fd9\u91cc\u8fdb\u5165, \u770b\u770bThreadLocalMap#set \u7684\u5b9e\u73b0, \u89c1 \u7247\u6bb53; \n            map.set(this, value);\n        else \n            // \u5982\u679c\u6ca1\u6709\u83b7\u53d6\u5230map, \u521d\u59cb\u5316\u4e00\u4e2a: \u6839\u636e \u5f53\u524d\n            //\u7ebf\u7a0b (\u7b2c\u4e00\u4e2a\u53c2\u6570)\u83b7\u53d6\u5230\u7ebf\u7a0b\u5185\u90e8\u7684threadLocalMap, \u5c06\u952e\u503c\u5bf9[threadLocal, value] \u5b58\u5165\n            createMap(t, value);\n    }\n\n")),(0,i.kt)("p",null,"\u7247\u6bb52: ThreadLocalMap\u7684\u7c7b\u7ed3\u6784"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'static class ThreadLocalMap {\n        // Entry\u7c7b\u7ee7\u627f\u4e86WeakReference<ThreadLocal<?>>\uff0c\u5373\u6bcf\u4e2aEntry\u5bf9\u8c61\u90fd\n        //\u6709\u4e00\u4e2aThreadLocal\u7684\u5f31\u5f15\u7528\u4f5c\u4e3akey\uff0c\u8fd9\u662f\u4e3a\u4e86\u9632\u6b62\u5185\u5b58\u6cc4\u9732\u3002\u4e00\u65e6\n        //\u7ebf\u7a0b\u7ed3\u675f\uff0c\u5916\u90e8\u7684 threadLocal \u5f15\u7528\u88ab\u8bbe\u7f6e\u4e3a null , \u5219\n        // \u8fd9\u91cc\u7684key \u770b\u4f3c\u4ecd\u65e7\u6307\u5411 ThreadLocal \u5bf9\u8c61, \u5b9e\u9645\u4e0a\u8fd9\u4e2a\u6307\u5411\u65e0\n        //\u6548, ThreadLocal\u76f4\u63a5\u53d8\u4e3a\u4e00\u4e2a\u4e0d\u53ef\u8fbe\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e2aEntry\u5c31\u53ef\u4ee5\u88ab\u56de\u6536\u4e86\u3002\n        static class Entry extends WeakReference<ThreadLocal<?>> {\n            /** The value associated with this ThreadLocal. */\n            Object value;\n            Entry(ThreadLocal<?> k, Object v) {\n                super(k);// \u5c06 k \u4f5c\u4e3a "\u5f31\u5f15\u7528"\n                value = v;\n            }\n        }\n        // ThreadLocalMap \u7684\u521d\u59cb\u5bb9\u91cf\uff0c\u5fc5\u987b\u4e3a2\u7684\u500d\u6570\n        private static final int INITIAL_CAPACITY = 16;\n\n        // resized\u65f6\u5019\u9700\u8981\u7684table\n        private Entry[] table;\n\n        // table\u4e2d\u7684entry\u4e2a\u6570\n        private int size = 0;\n\n        // \u6269\u5bb9\u6570\u503c\n        private int threshold; // Default to 0\n\n         /**\n         * Construct a new map initially containing (firstKey, firstValue).\n         * ThreadLocalMaps are constructed lazily, so we only create\n         * one when we have at least one entry to put in it.\n         \u6784\u9020\u51fd\u6570, \n         */\n        ThreadLocalMap(ThreadLocal<?> firstKey, Object firstValue) {\n            // \u521d\u59cb\u5bb9\u91cf\u4e3a16\u7684entry\n            table = new Entry[INITIAL_CAPACITY];\n            // \u8ba1\u7b97 firstKey \u7684hashcode\n            int i = firstKey.threadLocalHashCode & (INITIAL_CAPACITY - 1);\n            // \u5b58\u50a8\u5230 table \u4e2d\n            table[i] = new Entry(firstKey, firstValue);\n            size = 1;\n            setThreshold(INITIAL_CAPACITY);\n        }\n\n')),(0,i.kt)("p",null,"\u7247\u6bb53: ThreadLocalMap#set \u7684\u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private void set(ThreadLocal<?> key, Object value) {\n    Entry[] tab = table;\n    int len = tab.length;\n    int i = key.threadLocalHashCode & (len-1);\n\n    // \u904d\u5386 table, \u4e3atable \u4e2d\u7684\u6bcf\u4e2a\u5339\u914d\u4e0akey(threadLocal) \u7684entry\u8bbe\u7f6evalue\n    for (Entry e = tab[i];\n            e != null;\n            e = tab[i = nextIndex(i, len)]) {\n        ThreadLocal<?> k = e.get();\n\n        if (k == key) {\n            e.value = value;\n            return;\n        }\n\n        if (k == null) {\n            replaceStaleEntry(key, value, i);\n            return;\n        }\n    }\n\n    tab[i] = new Entry(key, value);\n    int sz = ++size;\n    if (!cleanSomeSlots(i, sz) && sz >= threshold) // cleanSomeSlots\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u6e05\u7406\u65e0\u7528\u7684entry\n        rehash();\n}\n\n// \u5982\u679cEntry\u5728\u5b58\u653e\u8fc7\u7a0b\u4e2d\u51b2\u7a81\u4e86\uff0c\u8c03\u7528nextIndex\u6765\u5904\u7406\uff0c\u5982\u4e0b\u6240\u793a\u3002hashmap\u4e2d\u5bf9\u51b2\u7a81\u7684\u5904\u7406\nprivate static int nextIndex(int i, int len) {\n    return ((i + 1 < len) ? i + 1 : 0);\n}\n")),(0,i.kt)("p",null,"\u770b\u770b ThreadLocal#get \u7684\u5b9e\u73b0"),(0,i.kt)("p",null,"code4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public T get() {\n    Thread t = Thread.currentThread();\n    // \u83b7\u53d6 thread\u5bf9\u5e94\u7684ThreadLocalMap\n    ThreadLocalMap map = getMap(t);\n    if (map != null) {\n        ThreadLocalMap.Entry e = map.getEntry(this);\n        if (e != null) {\n            @SuppressWarnings("unchecked")\n            T result = (T)e.value;\n            return result;\n        }\n    }\n    return setInitialValue(); // \u5982\u679cmap \u4e3anull, \u8ddf\u8fdb\u770b\u770b, \u89c1code5\n}\n')),(0,i.kt)("p",null,"code5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"private T setInitialValue() {\n    T value = initialValue(); \n    Thread t = Thread.currentThread();\n    ThreadLocalMap map = getMap(t);\n    if (map != null)\n        map.set(this, value);\n    else\n        createMap(t, value);\n    return value; //  \u8fd4\u56de\u503c\u89c1initialValue()\n    }\n\nprotected T initialValue() {\n        return null;// \u5982\u679c\u4e0d\u8bbe\u7f6eThreadLocal\u7684\u6570\u503c\uff0c\u9ed8\u8ba4\u5c31\u662fnull\n    }\n\n")),(0,i.kt)("h2",{id:"124-weakreference"},"12.4. weakReference"),(0,i.kt)("p",null,"weakReference \u5e76\u4e0d\u80fd\u89e3\u51b3\u591a\u7ebf\u7a0b\u7684\u5b89\u5168\u95ee\u9898, \u8fd9\u91cc\u53ea\u662f ThreadLocal\u7684\u6e90\u7801\u4e2d, \u8ddf\u5230\u5185\u90e8\u7c7b ThreadLocalMap \u91cc, \u5728\u7c7b\u7ed3\u6784\u91cc\u53d1\u73b0\u4e86 WeakReference"),(0,i.kt)("h3",{id:"1241-\u4ec0\u4e48\u662fweakreference"},"12.4.1. \u4ec0\u4e48\u662fWeakReference"),(0,i.kt)("p",null,"jdk \u6587\u6863: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html"},"https://docs.oracle.com/javase/7/docs/api/java/lang/ref/WeakReference.html")),(0,i.kt)("p",null,"\u4e00\u4e2a\u5f31\u5f15\u7528(WeakReference) \u6307\u5411\u4e00\u4e2a\u5bf9\u8c61 o, GC\u53ef\u4ee5\u968f\u65f6\u56de\u6536\u5bf9\u8c61 o, \u4e0d\u7ba1\u8fd9\u4e2a\u6307\u5411\u662f\u5426\u5b58\u5728"),(0,i.kt)("p",null,"\u5047\u8bbe\u5783\u573e\u6536\u96c6\u5668\u5728\u67d0\u4e2a\u65f6\u95f4\u70b9\u51b3\u5b9a\u4e00\u4e2a\u5bf9\u8c61\u662f\u5f31\u53ef\u8fbe\u7684(weakly reachable)\uff08\u4e5f\u5c31\u662f\u8bf4\u5f53\u524d\u6307\u5411\u5b83\u7684\u5168\u90fd\u662f\u5f31\u5f15\u7528\uff09\uff0c\u8fd9\u65f6\u5783\u573e\u6536\u96c6\u5668\u4f1a\u6e05\u9664\u6240\u6709\u6307\u5411\u8be5\u5bf9\u8c61\u7684\u5f31\u5f15\u7528\uff0c\u7136\u540e\u5783\u573e\u6536\u96c6\u5668\u4f1a\u628a\u8fd9\u4e2a\u5f31\u53ef\u8fbe\u5bf9\u8c61\u6807\u8bb0\u4e3a\u53ef\u7ec8\u7ed3(finalizable)\u7684\uff0c\u8fd9\u6837\u5b83\u4eec\u968f\u540e\u5c31\u4f1a\u88ab\u56de\u6536\u3002\u800c\u8fd9\u4e9b\u6ca1\u7528\u7684\u5f31\u5f15\u7528\u5bf9\u8c61\u4f1a\u52a0\u5165 \u5f15\u7528\u961f\u5217(Reference Queue), \u65b9\u4fbf\u96c6\u4e2d\u5904\u7406"),(0,i.kt)("h3",{id:"1242-\u4e3a\u4ec0\u4f7f\u7528"},"12.4.2. \u4e3a\u4ec0\u4f7f\u7528"),(0,i.kt)("p",null,"\u73b0\u5728\u6709\u8fd9\u6837\u4e00\u4e2a\u9700\u6c42:"),(0,i.kt)("p",null,"\u7c7b User \u88ab\u6807\u8bb0\u4e3a final, \u4e0d\u53ef\u62d3\u5c55, \u4f46\u662f\u73b0\u5728\u9700\u8981\u4e3a\u6bcf\u4e2a user\u589e\u52a0\u4e00\u4e2a\u5c5e\u6027: \u7f16\u53f7, \u53ef\u884c\u7684\u65b9\u6848\u662f \u4f7f\u7528 HashMap<User, Integer>, \u4f46\u662f\u53ef\u80fd\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f; \u56e0\u4e3a\u5982\u679c\u67d0\u4e2auser\u88ab\u5220\u9664\u4e86, \u5185\u5b58\u4e2d\u4e5f\u5c31\u4e0d\u518d\u9700\u8981\u8fd9\u4e2auser\u6307\u5411\u7684\u5bf9\u8c61\u4e86, \u6307\u5b9a user=null (\u5b9e\u9645\u4e0a\u53ef\u80fd\u4e0d\u5fc5\u8fd9\u6837\u663e\u5f0f\u7684\u6307\u5b9a), \u4f46\u662f\u8fd8\u6709\u5f15\u7528\u6307\u5411User\u5bf9\u8c61: hashMap\u4e2d\u7684\u5f15\u7528. \u6240\u4ee5\u8981\u60f3\u771f\u6b63\u7684\u56de\u6536User\u5bf9\u8c61, \u4ec5\u4ec5\u628a\u5b83\u7684\u5f3a\u5f15\u7528\u8d4b\u503c\u4e3anull\u662f\u4e0d\u591f\u7684\uff0c\u8fd8\u8981\u628a\u76f8\u5e94\u7684\u6761\u76ee\u4eceHashMap\u4e2d\u79fb\u9664. \u56de\u6536\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u6e05\u9664\u4e24\u5904\u5f15\u7528, \u8fd9\u4e0d\u7b26\u5408\u4eba\u7684\u76f4\u89c9.\n\u8fd9\u65f6 \u5f31\u5f15\u7528 \u5c31\u6709\u7528\u5904\u4e86: \u7528\u4e00\u4e2a\u6307\u5411User\u5bf9\u8c61\u7684\u5f31\u5f15\u7528\u4f5c\u4e3ahashMap\u7684key\u5c31\u884c\u4e86"),(0,i.kt)("p",null,"\u6b64\u5916, app\u4f7f\u7528\u7f13\u5b58(cache)\u65f6, \u7531\u4e8ecache\u7684\u5bf9\u8c61\u6b63\u662f\u7a0b\u5e8f\u8fd0\u884c\u9700\u8981\u7684, \u90a3\u4e48\u53ea\u8981\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c, cache\u4e2d\u7684\u5f15\u7528\u5c31\u4e0d\u4f1a\u88ab\u56de\u6536, \u5982\u679c\u9700\u8981\u56de\u6536, \u5fc5\u987b\u4ea4\u7ed9\u7f16\u5199\u8005\u624b\u52a8\u56de\u6536, \u800c\u8fd9\u663e\u7136\u80cc\u79bb\u4e86GC\u7684\u672c\u8d28, \u8fd9\u65f6\u4e5f\u53ef\u4ee5\u5f15\u5165\u5f31\u5f15\u7528;"),(0,i.kt)("h3",{id:"1243-\u600e\u4e48\u4f7f\u7528"},"12.4.3. \u600e\u4e48\u4f7f\u7528"),(0,i.kt)("p",null,"\u9996\u5148\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b"),(0,i.kt)("p",null,"User\u5b9e\u4f53\u7c7b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * User\n *\n * @version 0.1\n * @author xy\n * @date 2017\u5e749\u67082\u65e5\n */\n@Data\npublic class User {\n\n    private String password;\n    private String name;\n}\n")),(0,i.kt)("p",null,"\u6d4b\u8bd5\u7c7b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * weakReference client\n *\n * @version 0.1\n * @author xy\n\u7ed3\u679c:\n\u901a\u8fc7weakReference\u83b7\u53d6\u5230User: User(password=null, name=null)\n\u901a\u8fc7weakReference\u83b7\u53d6\u5230User: User(password=null, name=null)\n\u901a\u8fc7weakReference\u83b7\u53d6\u5230User: User(password=null, name=null)\n...\n...\nUser \u88ab\u56de\u6536\u4e86\n\n */\npublic class Client {\n \n    public static void main(String[] args) {\n        User user = new User();\n        WeakReference<User> weakReferenceOfUser = new WeakReference<User>(user);\n        \n        while(true) { // \u8fdb\u5165\u5faa\u73af, \u5f3a\u5f15\u7528user\u5df2\u7ecf\u6ca1\u6709\u88ab\u4f7f\u7528\u4e86, \u76f8\u5f53\u4e8e\u5df2\u7ecf\u5931\u6548\u4e86; \u5982\u679c\u5728\u8fd9\u4e2a\u5faa\u73af\u4f53\u4e2d\u4f7f\u7528\u5230\u4e86 \u5f3a\u5f15\u7528user, \u5219User\u5bf9\u8c61\u4e0d\u4f1a\u88ab\u56de\u6536, \u5faa\u73af\u6c38\u8fdc\u4e0d\u4f1a\u7ed3\u675f\n            User userFromWeakReference = weakReferenceOfUser.get();\n            if (userFromWeakReference != null) {\n                System.out.println("\u901a\u8fc7weakReference\u83b7\u53d6\u5230User: " + userFromWeakReference);\n            }\n            else {\n                System.out.println("User \u88ab\u56de\u6536\u4e86");\n                break;\n            }\n        }\n    }\n}\n\n')),(0,i.kt)("p",null,"WeakReference\u7684\u4e00\u4e2a\u7279\u70b9\u662f\u5b83\u4f55\u65f6\u88ab\u56de\u6536\u662f\u4e0d\u53ef\u786e\u5b9a\u7684, \u56e0\u4e3a\u8fd9\u662f\u7531GC\u8fd0\u884c\u7684\u4e0d\u786e\u5b9a\u6027\u6240\u786e\u5b9a\u7684. \u6240\u4ee5, \u4e00\u822c\u7528weak reference\u5f15\u7528\u7684\u5bf9\u8c61\u662f\u6709\u4ef7\u503c\u88abcache, \u800c\u4e14\u5f88\u5bb9\u6613\u88ab\u91cd\u65b0\u88ab\u6784\u5efa, \u4e14\u5f88\u6d88\u8017\u5185\u5b58\u7684\u5bf9\u8c61"),(0,i.kt)("h3",{id:"1244-\u56db\u79cd\u5f15\u7528"},"12.4.4. \u56db\u79cd\u5f15\u7528"),(0,i.kt)("p",null,"\u5b9e\u9645\u4e0a Java\u4e2d\u5b58\u5728\u56db\u79cd\u5f15\u7528:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Strong Reference"),(0,i.kt)("p",{parentName:"li"},"\u6700\u5e38\u7528, \u901a\u8fc7new\u521b\u5efa\u5bf9\u8c61\u8fd4\u56de\u7684\u5f15\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"SoftReference"),(0,i.kt)("p",{parentName:"li"},"SoftReference \u548c Weak Reference \u7684\u533a\u522b\u5728\u4e8e: \u8f6f\u5f15\u7528\u6307\u5411\u7684\u5bf9\u8c61\u53ea\u6709\u5728\u5185\u5b58\u4e0d\u8db3\u65f6\u624d\u4f1a\u88ab\u56de\u6536, \u800c\u5f31\u5f15\u7528\u65e0\u8bba\u5185\u5b58\u662f\u5426\u5145\u8db3\u90fd\u4f1a\u88ab\u56de\u6536")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Weak Reference")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"PhantomRefrence"),(0,i.kt)("p",{parentName:"li"},'\u6700"\u5f31"\u7684\u5f15\u7528, \u901a\u8fc7\u5b83\u8fde\u5bf9\u8c61\u90fd\u65e0\u6cd5\u83b7\u53d6, \u552f\u4e00\u4f5c\u7528\u5c31\u662f\u901a\u8fc7\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61, \u5f53\u8fd9\u4e2a\u5bf9\u8c61\u88ab\u56de\u6536, \u865a\u5f15\u7528\u4f1a\u88ab\u52a0\u5165\u5230 \u5f15\u7528\u961f\u5217(ReferenceQueue), \u7528\u4e8e\u8bb0\u5f55\u6307\u5411\u7684\u5bf9\u8c61\u5df2\u7ecf\u88ab\u56de\u6536;'))),(0,i.kt)("h3",{id:"1245-referencequeue"},"12.4.5. ReferenceQueue"),(0,i.kt)("p",null,"\u5728weak reference\u6307\u5411\u7684\u5bf9\u8c61\u88ab\u56de\u6536\u540e, weak reference\u672c\u8eab\u4e5f\u5c31\u6ca1\u6709\u7528\u4e86. ReferenceQueue\u53ef\u4ee5\u4fdd\u5b58\u8fd9\u4e9b\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5df2\u7ecf\u88ab\u56de\u6536\u7684reference. \u7528\u6cd5\u89c1\u7b2c\u4e8c\u4e2a\u6784\u9020\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"WeakReference(T referent) //\u521b\u5efa\u4e00\u4e2a\u6307\u5411\u7ed9\u5b9a\u5bf9\u8c61\u7684\u5f31\u5f15\u7528\nWeakReference(T referent, ReferenceQueue<? super T> q) //\u521b\u5efa\u4e00\u4e2a\u6307\u5411\u7ed9\u5b9a\u5bf9\u8c61\u5e76\u4e14\u767b\u8bb0\u5230\u7ed9\u5b9a\u5f15\u7528\u961f\u5217\u7684\u5f31\u5f15\u7528\n")),(0,i.kt)("h3",{id:"1246-weakhashmap--treadlocalmap"},"12.4.6. WeakHashMap & TreadLocalMap"),(0,i.kt)("p",null,"\u4e24\u8005\u539f\u7406\u6709\u76f8\u4f3c, \u653e\u5728\u8fd9\u91cc\u6bd4\u8f83;"),(0,i.kt)("p",null,"TreadLocalMap\u662fThreadLocal\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b, \u6e90\u7801\u5206\u6790\u8fc7\u4e86, \u89c1 {% post_link ThreadLocal\u7406\u89e3 \u8fd9\u91cc %};"),(0,i.kt)("p",null,"WeakHashMap \u91cc\u7684entry\u53ef\u80fd\u4f1a\u88abGC\u81ea\u52a8\u5220\u9664\u5982\u679c\u6ca1\u6709\u989d\u5916\u7684\u5f3a\u5f15\u7528\u6307\u5411entry\u4e2d\u7684key\uff0c\u5373\u4f7f\u6211\u6ca1\u6709\u8c03\u7528remove()\u6216\u8005clear()\u65b9\u6cd5; \u8fd9\u4e2a\u7279\u70b9\u7279\u522b\u9002\u7528\u4e8e\u9700\u8981\u7f13\u5b58\u7684\u573a\u666f. \u5728\u4f7f\u7528\u7f13\u5b58\u65f6\u80af\u5b9a\u4e0d\u80fd\u7f13\u5b58\u6240\u6709\u5bf9\u8c61\uff1b\u5bf9\u8c61\u7f13\u5b58\u547d\u4e2d\u6700\u597d\uff0c\u4f46\u7f13\u5b58\u6ca1\u547d\u4e2d\u4e5f\u4e0d\u4f1a\u9020\u6210\u9519\u8bef\uff0c\u56e0\u4e3a\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u91cd\u65b0\u5f97\u5230"),(0,i.kt)("h2",{id:"125-\u4e0d\u52a0\u9501-\u4e50\u89c2\u9501"},"12.5. \u4e0d\u52a0\u9501-\u4e50\u89c2\u9501"),(0,i.kt)("h3",{id:"1251-\u600e\u4e48\u7406\u89e3\u4e0d\u52a0\u9501\u7684\u7b56\u7565"},"12.5.1. \u600e\u4e48\u7406\u89e3\u4e0d\u52a0\u9501\u7684\u7b56\u7565"),(0,i.kt)("p",null,'\u52a0\u9501\u662f\u4e00\u79cd "\u60b2\u89c2\u7b56\u7565", \u8fd9\u79cd\u7b56\u7565\u603b\u662f\u5047\u8bbe\u4e34\u754c\u533a\u7684 \u5e76\u53d1\u51b2\u7a81\u4e00\u5b9a\u4f1a\u5b58\u5728, \u6240\u4ee5\u4e00\u5b9a\u8981\u52a0\u9501'),(0,i.kt)("p",null,'"\u65e0\u9501" \u662f \u4e00\u79cd "\u4e50\u89c2\u7b56\u7565", \u8fd9\u79cd\u7b56\u7565\u5047\u8bbe\u4e34\u754c\u533a\u4e0d\u4f1a\u6709\u51b2\u7a81\u53d1\u751f, \u81ea\u7136\u65e0\u9700\u52a0\u9501 , \u4e5f\u5c31\u65e0\u963b\u585e(\u5929\u7136\u514d\u75ab\u6b7b\u9501\u95ee\u9898), \u4f46\u662f\u4e07\u4e00\u78b0\u5230\u4e86\u51b2\u7a81\u600e\u4e48\u529e\u5462 -- \u4f7f\u7528 CAS(compare and swap)\u6280\u672f, \u601d\u8def\u662f: \u6bd4\u8f83\u7136\u540e\u4ea4\u6362, \u4e00\u65e6\u68c0\u6d4b\u5230\u51b2\u7a81, \u5c31\u5faa\u73af\u91cd\u8bd5\u76f4\u5230\u6ca1\u6709\u51b2\u7a81\u4e3a\u6b62'),(0,i.kt)("p",null,"\u4f18\u70b9: \ud83d\udccc \u6ca1\u6709\u9501\u7ade\u4e89\u5e26\u6765\u7684\u7cfb\u7edf\u5f00\u9500; \ud83d\udccc \u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u5e26\u6765\u7684\u5f00\u9500"),(0,i.kt)("p",null,"\u5177\u4f53\u7b97\u6cd5: \u4e00\u4e2a cas\u64cd\u4f5c \u5305\u542b\u4e09\u4e2a\u53c2\u6570 CAS(v, e, n), v-\u5f85\u66f4\u65b0\u7684\u53d8\u91cf, e-\u53d8\u91cfv\u7684\u9884\u671f\u503c, n-\u65b0\u7684\u503c. \u53ea\u6709\u5f53 v == e, \u624d\u4f1a\u8bbe\u7f6e v = n, \u5982\u679c v != e, \u8bf4\u660e\u66f4\u65b0\u64cd\u4f5c\u671f\u95f4\u6709\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u4e86 v \u7684\u503c, \u5219\u5f53\u524dthread \u7684 cas\u64cd\u4f5c\u5931\u8d25, \u4f46\u662f\u5931\u8d25\u7ebf\u7a0b\u4e0d\u4f1a\u88ab\u6302\u8d77, \u53ea\u662f\u88ab\u544a\u77e5\u5931\u8d25, \u4e3a\u4e86\u4fdd\u8bc1\u6210\u529f, \u4e00\u822c\u90fd\u4f1a\u5199\u4e00\u4e2a\u6b7b\u5faa\u73af, \u53ea\u5f97\u5230\u6210\u529f\u540e\u8df3\u51fa; \u5728\u5927\u90e8\u5206\u5c01\u88c5\u597d\u7684\u7c7b\u5e93\u79cd \u53ea\u9700\u8981\u4f20\u5165 v, n\u5373\u53ef"),(0,i.kt)("p",null,"\u786c\u4ef6\u4e0a, \u5927\u90e8\u5206 cpu \u90fd\u652f\u6301 \u539f\u5b50\u5316\u7684 cas\u64cd\u4f5c\u4e86"),(0,i.kt)("h3",{id:"1252-atomicinteger-\u65e0\u9501\u5b89\u5168\u6574\u6570"},"12.5.2. AtomicInteger-\u65e0\u9501\u5b89\u5168\u6574\u6570"),(0,i.kt)("p",null,"\u76f8\u6bd4\u4e8e Integer, AtomicInteger \u662f\u53ef\u53d8\u7684"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class AtomicIntegerDemo {\n    static AtomicInteger i = new AtomicInteger();\n\n    public static class AddThread implements Runnable {\n\n        @Override\n        public void run() {\n            for (int j = 0; j < 10000; j++) {\n                i.incrementAndGet();// \u4f7f\u7528 cas\u64cd\u4f5c \u5c06\u81ea\u5df1\u52a01\n            }\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n\n        Thread[] threads = new Thread[10];\n\n        for (int j = 0; j < 10; j++) {\n            threads[j] = new Thread(new AddThread());\n        }\n\n        for (int j = 0; j < 10; j++) {\n            threads[j].start();\n        }\n        for (int j = 0; j < 10; j++) {\n            threads[j].join();\n        }\n\n        System.out.println(i);// \u6b63\u5e38\u8f93\u51fa 100000\n    }\n}\n\n")),(0,i.kt)("h3",{id:"1253-unsafe\u7c7b-java\u4e2d\u7684\u6307\u9488"},"12.5.3. Unsafe\u7c7b-Java\u4e2d\u7684\u6307\u9488"),(0,i.kt)("h3",{id:"1254-atomicreference-\u65e0\u9501\u7684\u5bf9\u8c61\u5f15\u7528"},"12.5.4. AtomicReference-\u65e0\u9501\u7684\u5bf9\u8c61\u5f15\u7528"),(0,i.kt)("p",null,"\u7c7b\u4f3c atomicinteger, \u4f46\u662f\u66f4\u5177\u666e\u904d\u6027, AtomicInteger \u662f\u5bf9 Intege\u5bf9\u8c61\u7684\u5c01\u88c5, AtomicReference \u662f\u5bf9\u666e\u901a\u7684\u5bf9\u8c61\u5f15\u7528\u7684\u5c01\u88c5"),(0,i.kt)("p",null,"\u7ebf\u7a0b\u5224\u65ad\u88ab\u4fee\u6539\u5bf9\u8c61\u662f\u5426\u53ef\u4ee5\u88ab\u5199\u5165, \u6761\u4ef6\u662f\u5bf9\u8c61\u7684\u5f53\u524d\u503c\u662f\u5426\u7b49\u4e8e\u671f\u671b\u503c(\u5373\u4fee\u6539\u64cd\u4f5c\u524d\u83b7\u53d6\u7684\u5bf9\u8c61\u503c)"),(0,i.kt)("p",null,"\u4f46\u662f\u8003\u8651\u4e00\u4e2a\u573a\u666f: \u5f53\u7ebf\u7a0b\u5728\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5199\u5165\u65f6, \u53e6\u5916\u7684\u67d0\u4e2athread\u5c06\u5bf9\u8c61\u8fde\u7eed\u4fee\u6539\u4e862\u6b21, \u7b2c\u4e00\u6b21\u4fee\u6539\u4e3a\u67d0\u4e2a\u503c, \u7b2c\u4e8c\u6b21\u53c8\u6539\u56de\u6765\u4e86, \u5c31\u50cf\u4ec0\u4e48\u4e5f\u6ca1\u6709\u4fee\u6539\u4e00\u6837, \u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u5c31\u5224\u65ad\u53ef\u4ee5\u6b63\u5e38\u5199\u5165 - bug\u7531\u6b64\u4ea7\u751f.\u770b\u4e0b\u9762\u7684demo: \u7ed9\u67d0\u4e2a\u8d26\u6237\u91cc\u5145\u503c\u4ee3\u91d1\u5238, \u4e14\u53ea\u5145\u503c1\u6b21"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class AtomicRefrenceDemo {\n\n    public static void main(String args[]) {\n        final AtomicReference<Integer> money = new AtomicReference<Integer>();\n        money.set(19);\n\n        // \u5f00\u542f100\u4e2a\u8d60\u9001\u4ee3\u91d1\u5377\u8fdb\u7a0b\n        for (int i = 0; i < 100; i++) {\n            new Thread() {\n                public void run() {\n                    while (true) {\n                        Integer m = money.get();\n                        if (m < 20) { // \u5c0f\u4e8e 20 \u5219\u5145\u503c\n                            if (money.compareAndSet(m, m + 20)) {\n                                System.out.println("\u4f59\u989d\u5c0f\u4e8e20\u5143,\u5145\u503c\u6210\u529f,\u4f59\u989d:" + money.get() + "\u5143");\n                                break;\n                            }\n                        } else {\n                            System.out.println("\u4f59\u989d\u5927\u4e8e20,\u65e0\u9700\u5145\u503c");\n                            break;\n                        }\n                    }\n                }\n            }.start();\n        }\n        // \u5f00\u542f\u4e00\u4e2a\u6d88\u8d39\u8fdb\u7a0b, \u4f46\u662f\u5185\u90e8\u5faa\u73af100\u6b21\n        /**\n        - \u8003\u8651\u8fd9\u79cd\u573a\u666f: \u8d26\u6237\u5df2\u7ecf\u88ab\u5145\u503c\u4e86\u4e00\u6b21, \u8fd9\u65f6\u6709\u4e00\u4e2a\u5145\u503cthread\u8bbf\u95ee\n            \u4e86\u8d26\u6237, \u6b63\u51c6\u5907\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6b63\u5e38\u5199\u5165, \u6d88\u8d39thread \u8fde\u7eed\u6d88\u8d39\n            \u4e8620\u5143, \u8d60\u9001thread\u4f1a\u8bef\u8ba4\u4e3a\u8fd9\u4e2a\u8d26\u6237\u6ca1\u6709\u88ab\u8d60\u9001\u8fc7 , \u4f1a\u518d\u6b21\u8d60\u9001\n\n        - \u539f\u56e0: \u8d26\u6237\u4f59\u989d\u88ab\u591a\u4e2athread\u53cd\u590d\u4fee\u6539, \u6700\u7ec8\u6062\u590d\u6210\u539f\u6837, \u4f7f\u5f97 cas \u64cd\u4f5c\n            \u65e0\u6cd5\u51c6\u786e\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5199\u5165; ------ AtomicStampedReference \u53ef\u4ee5\u5f88\u597d\u7684\u89e3\u51b3\n        */\n        new Thread() {\n            public void run() {\n                for (int i = 0; i < 100; i++) {\n\n                    while (true) {\n                        Integer m = money.get();\n                        if (m > 10) {\n                            System.out.println("\u91d1\u989d\u5927\u4e8e10\u5143");\n                            if (money.compareAndSet(m, m - 10)) {\n                                System.out.println("\u6210\u529f\u6d88\u8d3910\u5143,\u4f59\u989d:" + money.get() + "\u5143");\n                                break;\n                            }\n                        } else {\n                            System.out.println("\u6ca1\u6709\u8db3\u591f\u7684\u91d1\u989d");\n                            break;\n                        }\n                    }\n                    try {\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }.start();\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1255-atomicstampedreference-\u5e26\u65f6\u95f4\u6233\u7684\u5f15\u7528"},"12.5.5. AtomicStampedReference-\u5e26\u65f6\u95f4\u6233\u7684\u5f15\u7528"),(0,i.kt)("p",null,"AtomicStampedReference \u5185\u90e8\u4e0d\u7ecf\u7ef4\u62a4\u4e86\u5bf9\u8c61\u503c, \u8fd8\u7531\u4e00\u4e2a\u65f6\u95f4\u6233, \u5f53\u5bf9\u8c61\u503c\u88ab\u4fee\u6539, \u65f6\u95f4\u6233\u4e5f\u76f8\u5e94\u53d8\u5316, cas\u64cd\u4f5c\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5199\u5165\u65f6, \u5bf9\u8c61\u503c\u548c\u65f6\u95f4\u6233\u90fd\u5fc5\u987b\u7b26\u5408\u671f\u671b\u503c, \u624d\u4f1a\u5199\u5165\u6210\u529f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class AtomicStampedReferenceDemo {\n    static AtomicStampedReference<Integer> money = new AtomicStampedReference<Integer>(19, 0);// 0 \u8868\u793a\u521d\u59cb\u65f6\u95f4\u6233\n\n    public static void main(String args[]) {\n\n        for (int i = 0; i < 100; i++) {\n            final int timestap = money.getStamp();// \u83b7\u5f97\u65f6\u95f4\u6233\n            new Thread() {\n                public void run() {\n                    while (true) {\n                        Integer m = money.getReference();\n                        if (m < 20) {\n                            // \u6bcf\u6b21\u5199\u5165, \u65f6\u95f4\u6233\u4e5f\u8981\u4fee\u6539\n                            if (money.compareAndSet(m, m + 20, timestap, timestap + 1)) {\n                                System.out.println("\u4f59\u989d\u5c0f\u4e8e20\u5143,\u5145\u503c\u6210\u529f,\u4f59\u989d:" + money.getReference() + "\u5143");\n                                break;\n                            }\n                        } else {\n                            System.out.println("\u4f59\u989d\u5927\u4e8e20,\u65e0\u9700\u5145\u503c");\n                            break;\n                        }\n                    }\n                }\n            }.start();\n        }\n\n        new Thread() {\n            public void run() {\n                for (int i = 0; i < 100; i++) {\n\n                    while (true) {\n                        int timestap = money.getStamp();\n                        Integer m = money.getReference();\n                        if (m > 10) {\n                            System.out.println("\u91d1\u989d\u5927\u4e8e10\u5143");\n                            if (money.compareAndSet(m, m - 10, timestap, timestap + 1)) {\n                                System.out.println("\u6210\u529f\u6d88\u8d3910\u5143,\u4f59\u989d:" + money.getReference() + "\u5143");\n                                break;\n                            }\n                        } else {\n                            System.out.println("\u6ca1\u6709\u8db3\u591f\u7684\u91d1\u989d");\n                            break;\n                        }\n                    }\n                    try {\n                        Thread.sleep(100);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        }.start();\n\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1256-atomicintegerarray-\u65e0\u9501\u7684\u6570\u7ec4"},"12.5.6. AtomicIntegerArray-\u65e0\u9501\u7684\u6570\u7ec4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class AtomicInterArrayDemo {\n    // \u58f0\u660e\u6570\u7ec4, \u957f\u5ea610\n    static AtomicIntegerArray array = new AtomicIntegerArray(10);\n\n    public static class AddThread implements Runnable {\n        @Override\n        public void run() {\n            for (int i = 0; i < 10000; i++) {\n                array.getAndIncrement(i % array.length());//\u6bcf\u4e2a\u5143\u7d20\u5404\u52a01000\u6b21\n            }\n        }\n    }\n\n    public static void main(String args[]) throws InterruptedException {\n        Thread[] threads = new Thread[10];\n        for (int i = 0; i < 10; i++) {\n            threads[i] = new Thread(new AddThread());\n        }\n\n        for (int i = 0; i < 10; i++) {\n            threads[i].start();\n        }\n        for (int i = 0; i < 10; i++) {\n            threads[i].join();\n            System.out.println(array);\n        }\n    }\n}\n\n")),(0,i.kt)("h3",{id:"1257-atomicintegerfieldupdater-\u5347\u7ea7\u666e\u901a\u53d8\u91cf\u652f\u6301\u539f\u5b50\u64cd\u4f5c"},"12.5.7. AtomicIntegerFieldUpdater-\u5347\u7ea7\u666e\u901a\u53d8\u91cf\u652f\u6301\u539f\u5b50\u64cd\u4f5c"),(0,i.kt)("p",null,"Integer, Long, \u666e\u901a\u5bf9\u8c61\u5f15\u7528 \u90fd\u6709\u81ea\u5df1\u7684 updater, \u7528\u6765\u652f\u6301 cas\u64cd\u4f5c"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"updater \u53ea\u80fd\u4fee\u6539\u81ea\u5df1\u53ef\u89c1\u8303\u56f4\u5185\u7684\u53d8\u91cf, \u6bd4\u5982 \u4e0b\u9762\u7684 score \u5982\u679c\u65f6 private \u7684, \u5c31\u4e0d\u884c"),(0,i.kt)("li",{parentName:"ul"},"\u53d8\u91cf\u5fc5\u987b\u662f volatile \u7684, \u8fd9\u662f\u4e3a\u4e86\u4fdd\u8bc1\u53d8\u91cf\u603b\u662f\u80fd\u88ab\u8bfb\u53d6\u5230"),(0,i.kt)("li",{parentName:"ul"},"updater \u4e0d\u652f\u6301 static \u7684\u53d8\u91cf - \u8fd9\u662f\u56e0\u4e3a cas\u64cd\u4f5c\u4f1a\u901a\u8fc7\u5bf9\u8c61\u5b9e\u4f8b\u4e2d\u7684\u504f\u79fb\u91cf\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c, static\u7684\u53d8\u91cf\u4e0d\u518d\u5bf9\u8c61\u5b9e\u4f8b\u4e2d")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// \u6a21\u62df\u9009\u4e3e\npublic class AtomicIntegerFieldUpdaterDemo {\n    public static class Candidate {// \u5019\u9009\u4eba\n        int id;\n        volatile int score;// \u5e76\u975e\u7ebf\u7a0b\u5b89\u5168\n    }\n\n    // \u9488\u5bf9 Candidate \u7c7b\u7684 score \u6210\u5458\u7684  updater\n    public final static AtomicIntegerFieldUpdater<Candidate> scoreUpdater = AtomicIntegerFieldUpdater.newUpdater(Candidate.class, "score");\n    //\n    public static AtomicInteger allScore = new AtomicInteger(0);// \u8fd9\u4e2a\u53d8\u91cf\u7528\u6765\u9a8c\u8bc1\u5b9e\u9a8c\u7ed3\u679c\n\n    public static void main(String args[]) throws InterruptedException {\n        final Candidate stu = new Candidate();\n        Thread[] t = new Thread[10000];\n\n        for (int i = 0; i < 10000; i++) {\n            t[i] = new Thread() {\n                public void run() {\n                    if (Math.random() > 0.4) {\n                        scoreUpdater.incrementAndGet(stu);\n                        allScore.incrementAndGet();\n                    }\n                }\n            };\n            t[i].start();\n        }\n\n        for (int i = 0; i < 10000; i++) {\n            t[i].join();\n        }\n        System.out.println("score=" + stu.score);\n        System.out.println("allScore=" + allScore);\n    }\n\n\n}\n\n')),(0,i.kt)("h3",{id:"1258-synchronousqueue\u5b9e\u73b0"},"12.5.8. SynchronousQueue\u5b9e\u73b0"),(0,i.kt)("h1",{id:"13-\u6b7b\u9501"},"13. \u6b7b\u9501"),(0,i.kt)("h2",{id:"131-\u600e\u4e48\u6253\u5370\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f"},"13.1. \u600e\u4e48\u6253\u5370\u7ebf\u7a0b\u5806\u6808\u4fe1\u606f"),(0,i.kt)("p",null,"\u6b7b\u5faa\u73af\u3001\u6b7b\u9501\u3001\u963b\u585e\u3001\u9875\u9762\u6253\u5f00\u6162\u7b49\u95ee\u9898\uff0c\u6253\u7ebf\u7a0bdump\u662f\u6700\u597d\u7684\u89e3\u51b3\u95ee\u9898\u7684\u9014\u5f84\u3002\u6240\u8c13\u7ebf\u7a0bdump\u4e5f\u5c31\u662f\u7ebf\u7a0b\u5806\u6808\uff0c\u83b7\u53d6\u5230\u7ebf\u7a0b\u5806\u6808\u6709\u4e24\u6b65\uff1a"),(0,i.kt)("p",null,"\uff081\uff09\u83b7\u53d6\u5230\u7ebf\u7a0b\u7684pid\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528jps\u547d\u4ee4\uff0c\u5728Linux\u73af\u5883\u4e0b\u8fd8\u53ef\u4ee5\u4f7f\u7528ps -ef | grep java"),(0,i.kt)("p",null,"\uff082\uff09\u6253\u5370\u7ebf\u7a0b\u5806\u6808\uff0c\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528jstack pid\u547d\u4ee4\uff0c\u5728Linux\u73af\u5883\u4e0b\u8fd8\u53ef\u4ee5\u4f7f\u7528kill -3 pid"),(0,i.kt)("p",null,"\u53e6\u5916\u63d0\u4e00\u70b9\uff0cThread\u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2agetStackTrace()\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u83b7\u53d6\u7ebf\u7a0b\u5806\u6808\u3002\u8fd9\u662f\u4e00\u4e2a\u5b9e\u4f8b\u65b9\u6cd5\uff0c"),(0,i.kt)("h1",{id:"14-\u5e76\u53d1\u76f8\u5173\u7684\u6a21\u5f0f\u548c\u7b97\u6cd5"},"14. \u5e76\u53d1\u76f8\u5173\u7684\u6a21\u5f0f\u548c\u7b97\u6cd5"),(0,i.kt)("h2",{id:"141-\u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u5b9e\u73b0\u65b9\u5f0f"},"14.1. \u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u5b9e\u73b0\u65b9\u5f0f"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u4f7f\u7528\u9891\u7387\u9ad8\u7684\u5bf9\u8c61, \u53ef\u4ee5\u8282\u7701new\u64cd\u4f5c\u8017\u8d39\u7684\u65f6\u95f4, \u540c\u65f6\u8282\u7701\u66f4\u591a\u5185\u5b58, GC \u538b\u529b\u4e5f\u51cf\u8f7b\u4e86"),(0,i.kt)("p",null,'\u6700\u7b80\u5355\u7684\u5355\u4f8b\u5982\u4e0b: \u6ca1\u6709\u4efb\u4f55\u52a0\u9501\u64cd\u4f5c, \u5e76\u53d1\u4e0b\u8868\u73b0\u4f1a\u5f88\u597d; \u4f46\u662f\u5b9e\u4f8b\u4e0d\u662f "\u61d2\u52a0\u8f7d" \u7684, \u5728\u7c7b\u88ab\u88c5\u8f7d\u7684\u65f6\u5019, \u5b9e\u4f8b\u5c31\u4f1a\u88ab\u521b\u5efa'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Singleton {\n    private Singleton() {\n        System.out.println("Singleton is create");\n    }\n\n    private static Singleton instance = new Singleton();\n\n    public static Singleton getInstance() {\n        return instance;\n    }\n}\n\n')),(0,i.kt)("p",null,"\u61d2\u52a0\u8f7d, \u4f46\u662f\u52a0\u4e86\u9501\uff0c \u5e76\u53d1\u8868\u73b0\u4e0d\u597d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * LazySingleton\n */\npublic class LazySingleton {\n\n    private LazySingleton() {\n        System.out.println("Singleton is create");\n    }\n\n    private static LazySingleton instance;\n\n    public static synchronized LazySingleton getInstance() {\n        if (instance == null) {\n            instance = new LazySingleton();\n        }\n        return instance;\n    }\n}\n')),(0,i.kt)("p",null,"\u6700\u597d\u7684\u65b9\u5f0f\uff1a\u61d2\u52a0\u8f7d\uff0c \u4e0d\u52a0\u9501"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class Singleton {\n    /**\n     * \u7c7b\u7ea7\u5185\u90e8\u7c7b\uff0c\u7528\u4e8e\u7f13\u5b58\u7c7b\u5b9e\u4f8b\n\n     * \u5185\u90e8\u7c7b\u7684\u521d\u59cb\u5316\u65b9\u5f0f\u4fdd\u8bc1\u4e86\u8be5\u7c7b\u5c06\u5728\u88ab\u8c03\u7528\u65f6\u624d\u4f1a\u88ab\u88c5\u8f7d\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u5ef6\u8fdf\u52a0\u8f7d\n     * instance \u4fee\u9970\u4e3a\u9759\u6001\uff0c \u4fdd\u8bc1\u4e86\u53ea\u4f1a\u5b9e\u4f8b\u5316\u4e00\u6b21\uff0c \u4e5f\u5c31\u662f\u5355\u4f8b\n\n     * \u540c\u65f6\u7531\u4e8einstance\u91c7\u7528\u9759\u6001\u521d\u59cb\u5316\u7684\u65b9\u5f0f\uff0c\u56e0\u6b64JVM\u80fd\u4fdd\u8bc1\u5176\u7ebf\u7a0b\u5b89\u5168\u6027\n     */\n    private static class Instance {\n        private static Singleton instance = new Singleton();\n    }\n \n    /**\n     * \u79c1\u6709\u5316\u6784\u9020\u65b9\u6cd5\uff0c\u4f7f\u5916\u90e8\u65e0\u6cd5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u6784\u9020\u9664instance\u5916\u7684\u7c7b\u5b9e\u4f8b\n     * \u4ece\u800c\u8fbe\u5230\u5355\u4f8b\u6a21\u5f0f\u63a7\u5236\u7c7b\u5b9e\u4f8b\u6570\u76ee\u7684\u76ee\u7684\n     */\n    private Singleton() {\n    }\n \n    /**\n     * \u7c7b\u5b9e\u4f8b\u7684\u5168\u5c40\u8bbf\u95ee\u65b9\u6cd5\n     * \u6dfb\u52a0static\u5173\u952e\u8bcd\u4f7f\u5f97\u5916\u90e8\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u76f4\u63a5\u8c03\u7528\u8be5\u65b9\u6cd5\u83b7\u53d6\u7c7b\u5b9e\u4f8b\n     * @return \u5355\u4f8b\u7c7b\u5b9e\u4f8b\n     */\n    public static Singleton getInstance() {\n        return Instance.instance;\n    }\n}\n\n")),(0,i.kt)("h2",{id:"142-\u4e0d\u53d8\u6a21\u5f0f"},"14.2. \u4e0d\u53d8\u6a21\u5f0f"),(0,i.kt)("p",null,"\u4e0d\u53d8\u6a21\u5f0f\u5929\u751f\u652f\u6301\u591a\u7ebf\u7a0b - \u6838\u5fc3\u601d\u8def: \u4e00\u4e2a\u5bf9\u8c61\u4e00\u65e6\u88ab\u521b\u5efa, \u5219\u4ed6\u7684\u5185\u90e8\u72b6\u6001/\u6570\u636e\u6c38\u8fdc\u4e0d\u4f1a\u6539\u53d8, so \u6ca1\u6709\u4e00\u4e2a thread \u53ef\u4ee5\u4fee\u6539\u8fd9\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001, \u9488\u5bf9\u4e0d\u53d8\u5bf9\u8c61\u7684\u591a\u7ebf\u7a0b\u64cd\u4f5c\u65e0\u9700\u540c\u6b65"),(0,i.kt)("p",null,"\u4ec0\u4e48\u662f\u4e0d\u53d8\u5bf9\u8c61:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u53bb\u9664\u6389 setter;"),(0,i.kt)("li",{parentName:"ul"},"\u6240\u6709 field \u79c1\u6709"),(0,i.kt)("li",{parentName:"ul"},"final \u4fee\u9970 \u5bf9\u8c61\u7684 class, \u786e\u4fdd\u4e0d\u4f1a\u88ab\u7ee7\u627f"),(0,i.kt)("li",{parentName:"ul"},"\u6709\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5")),(0,i.kt)("p",null,"\u5178\u578b\u4e0d\u53d8\u5bf9\u8c61 -- String, Integer, Long"),(0,i.kt)("p",null,"\u9002\u7528\u4e8e\uff1a\ud83d\udccc \u521b\u5efa\u540e\u4e0d\u518d\u53d1\u751f\u4efb\u4f55\u53d8\u5316 \ud83d\udccc \u5bf9\u8c61\u9700\u8981\u88ab\u5171\u4eab\uff0c \u591a\u7ebf\u7a0b\u8bbf\u95ee"),(0,i.kt)("p",null,"\u4e00\u4e2a\u5178\u578b\u7684\u4e0d\u53d8\u5bf9\u8c61"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public final class Product {\n    private final String no;\n    private final String name;\n    private final String price;\n\n    public Product(String no, String name, String price) {\n        super();\n        this.no = no;\n        this.name = name;\n        this.price = price;\n    }\n\n    public String getNo() {\n        return no;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public String getPrice() {\n        return price;\n    }\n}\n\n")),(0,i.kt)("h2",{id:"143-\u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f"},"14.3. \u751f\u4ea7\u8005-\u6d88\u8d39\u8005\u6a21\u5f0f"),(0,i.kt)("h3",{id:"1431-\u4f7f\u7528\u963b\u585e\u961f\u5217\u5b9e\u73b0"},"14.3.1. \u4f7f\u7528\u963b\u585e\u961f\u5217\u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * Data\n */\npublic class Data {\n\n  private final int intDdata;\n\n  public Data(int value) {\n    this.intDdata = value;\n  }\n\n  /**\n   * @return the intDdata\n   */\n  public int getIntDdata() {\n    return intDdata;\n  }\n\n  @Override\n  public String toString() {\n    return "data:[intData=]" + this.intDdata;\n  }\n\n}\n\n/////////////////////////////////////////////\n/**\n * Consumer\n */\npublic class Consumer implements Runnable {\n\n  private BlockingQueue<Data> queue;\n\n  public Consumer(BlockingQueue<Data> queue) {\n    this.queue = queue;\n  }\n\n  @Override\n  public void run() {\n    System.out.println("start [consumer], id=" + Thread.currentThread().getId());\n\n    try {\n      while (true) {\n        if (Thread.currentThread().isInterrupted()) {\n          System.out.println("stop [consumer], id=" + Thread.currentThread().getId());\n          break;\n        }\n\n        Data data = queue.take();\n        if (null != data) {\n          int re = data.getIntDdata() * data.getIntDdata();\n          Thread.sleep(new Random().nextInt(1000));// simulate the time consumption\n\n          System.out.println(MessageFormat.format("{0} * {1} = {2}", data.getIntDdata, data.getIntDdata(), re));\n        }\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      Thread.currentThread().interrupt();// \u4e2d\u65ad\n    }\n  }\n}\n\n/////////////////////////////////////\n\n/**\n * Producer\n */\npublic class Producer implements Runnable {\n\n  private volatile boolean running = true;\n  private BlockingQueue<Data> queue;\n  private AtomicInteger count = new AtomicInteger(0);\n\n  public Producer(BlockingQueue<Data> queue) {\n    this.queue = queue;\n  }\n\n  @Override\n  public void run() {\n    System.out.println("start [producer], id=" + Thread.currentThread().getId());\n\n    try {\n      while (running) {\n        // \u6784\u9020\u6570\u636e\n        Thread.sleep(new Random().nextInt(1000));\n        Data data = new Data(count.incrementAndGet());\n  \n        boolean ok = queue.offer(data, 2, TimeUnit.SECONDS);\n        if (!ok) {\n          System.err.println("failed to put data, data: " + data);\n        }\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n      Thread.currentThread().interrupt();\n    }\n\n  }\n\n  public void stop() {\n    this.running = false;\n  }\n}\n\n//////////////////////////////////\n\n/**\n * Client\n */\npublic class Client {\n\n  public static void main(String[] args) {\n    LinkedBlockingQueue<Data> queue = new LinkedBlockingQueue<Data>();\n\n    Consumer consumer1 = new Consumer(queue);\n    Consumer consumer2 = new Consumer(queue);\n    Consumer consumer3 = new Consumer(queue);\n\n    Producer producer1 = new Producer(queue);\n    Producer producer2 = new Producer(queue);\n    Producer producer3 = new Producer(queue);\n\n    ExecutorService pool = new ThreadPoolExecutor(6, 6, 0L, TimeUnit.SECONDS, Executors.defaultThreadFactory());\n    pool.execute(producer1);\n    pool.execute(producer2);\n    pool.execute(producer3);\n    pool.execute(consumer1);\n    pool.execute(consumer2);\n    pool.execute(consumer3);\n\n    try {\n      Thread.sleep(10*1000);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n    producer1.stop();\n    producer2.stop();\n    producer3.stop();\n\n    try {\n      Thread.sleep(3*1000);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n\n    pool.shutdown();\n  }\n}\n\n')),(0,i.kt)("h3",{id:"1432-\u65e0\u9501\u7684\u5b9e\u73b0"},"14.3.2. \u65e0\u9501\u7684\u5b9e\u73b0"),(0,i.kt)("p",null,"BlockingQueue \u4e0d\u662f\u9ad8\u6027\u80fd\u7684\u5b9e\u73b0\uff0c \u5b8c\u5168\u4f7f\u7528\u9501\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7684\u540c\u6b65"),(0,i.kt)("p",null,"ConcurrentLinkedQueue \u624d\u662f\u9ad8\u6027\u80fd\u7684\u5b9e\u73b0\uff0c \u5b8c\u5168\u4f7f\u7528 \u65e0\u9501\u7684\u65b9\u5f0f(CAS\u64cd\u4f5c) \u6765\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65"),(0,i.kt)("p",null,"disruptor\u6846\u67b6 - \u65e0\u9501\u65b9\u5f0f\u7684\u961f\u5217"),(0,i.kt)("h3",{id:"1433-\u4f7f\u7528\u7b49\u5f85\u901a\u77e5\u673a\u5236\u5b9e\u73b0"},"14.3.3. \u4f7f\u7528\u7b49\u5f85\u901a\u77e5\u673a\u5236\u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"/*\n\u8303\u5f0f:\n\nproducer:\n\u83b7\u53d6\u9501 { \n    while(\u6761\u4ef6\u4e0d\u6ee1\u8db3) { \n        \u5bf9\u8c61.wait(); \n    }\n    \u5bf9\u5e94\u7684\u5904\u7406\u903b\u8f91 \n}\n\u91ca\u653e\u9501\n\nconsumer:\n\u83b7\u53d6\u9501 {\n    \u6539\u53d8\u6761\u4ef6 \n    \u5bf9\u8c61.notifyAll();\n}\n\u91ca\u653e\u9501\n\nhttps://www.jianshu.com/p/8ba98bea481e\n\n\n\n*/\n\n")),(0,i.kt)("h2",{id:"144-\u7b49\u5f85\u901a\u77e5"},"14.4. \u7b49\u5f85\u901a\u77e5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://juejin.cn/post/6844904094532894727"},"https://juejin.cn/post/6844904094532894727"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/u011296165/article/details/89598025"},"https://blog.csdn.net/u011296165/article/details/89598025")),(0,i.kt)("h2",{id:"145-countdownlatch-cyclicbarrier"},"14.5. CountDownLatch CyclicBarrier"),(0,i.kt)("h2",{id:"146-semaphore"},"14.6. Semaphore"),(0,i.kt)("h2",{id:"147-reentrantlock\u4e0econdtion"},"14.7. ReentrantLock\u4e0eCondtion"),(0,i.kt)("h2",{id:"148-future\u6a21\u5f0f"},"14.8. Future\u6a21\u5f0f"),(0,i.kt)("p",null,"futureTask CompletableFuture"),(0,i.kt)("h3",{id:"1481-\u5178\u578bfuture\u6a21\u5f0f\u5b9e\u73b0"},"14.8.1. \u5178\u578bFuture\u6a21\u5f0f\u5b9e\u73b0"),(0,i.kt)("p",null,"\u6838\u5fc3\u601d\u60f3\u662f - \u5f02\u6b65\u8c03\u7528"),(0,i.kt)("p",null,"future\u6a21\u5f0f\u6d41\u7a0b\u56fe:"),(0,i.kt)("p",null,'main() \u65b9\u6cd5\u8c03\u7528\u8017\u65f6\u7684\u5b50\u51fd\u6570, \u4f1a\u7acb\u5373\u8fd4\u56de\u4e00\u4e2a "\u5951\u7ea6"(\u76f8\u5f53\u4e8e\u4f2a\u9020\u7684\u6570\u636e), \u8fd9\u65f6 main() \u4f1a\u63a5\u7740\u5f80\u4e0b\u6267\u884c, \u672a\u6765\u5f53\u8017\u65f6\u7684\u5b50\u51fd\u6570\u6267\u884c\u5b8c, main()\u624d\u83b7\u5f97\u771f\u6b63\u7684\u7ed3\u679c'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// \u6838\u5fc3 interface - \u8868\u793a\u5e0c\u671b\u83b7\u53d6\u7684\u6570\u636e\npublic interface Data {\n    public String getResult();\n\n}\n\n// \u771f\u5b9e\u6570\u636e\npublic class RealData implements Data {\n\n    protected final String result;\n\n    public RealData(String param) {\n        //RealData\u7684\u6784\u9020\u5f88\u6162,\u9700\u8981\u7528\u6237\u7b49\u5f85\u5f88\u4e45,\u8fd9\u91cc\u7528sleep\u6a21\u62df\n        StringBuffer stringBuffer = new StringBuffer();\n        for (int i = 0; i < 10; i++) {\n            stringBuffer.append(param);\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n        result = stringBuffer.toString();\n    }\n\n    @Override\n    public String getResult() {\n        return result;\n    }\n}\n\n// \u6838\u5fc3 \u4f2a\u9020\u7684\u6570\u636e - \u4f1a\u7acb\u5373\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\npublic class FutureData implements Data {\n\n    protected RealData realData = null; // \u771f\u5b9e\u6570\u636e\n    protected boolean isReady = false; // \u771f\u5b9e\u6570\u636e\u662f\u5426\u6784\u9020\u5b8c\u6bd5\n\n    public synchronized void setRealData(RealData realData) {\n        if (isReady) {\n            return;\n        }\n        this.realData = realData;\n        isReady = true;\n        notifyAll(); // \u5524\u9192\u6240\u6709\u7b49\u5f85\u7684 thread\n    }\n\n\n    @Override\n    public synchronized String getResult() {\n        while (!isReady) {\n            try {\n                wait(); // \u5982\u679c realData \u8fd8\u6ca1\u6709\u6784\u9020\u597d, \u7ebf\u7a0b\u7b49\u5f85\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n\n        return realData.result;\n    }\n}\n\n// \u5ba2\u6237\u7aef\npublic class Client {\n    public Data request(final String queryStr) {\n        final FutureData futureData = new FutureData();\n        \n        new Thread() {\n            public void run() {//RealData\u7684\u6784\u9020\u5f88\u6162,\u6240\u4ee5\u5728\u5355\u72ec\u7684\u7ebf\u7a0b\u4e2d\u8fd0\u884c\n                RealData realData = new RealData(queryStr);\n                futureData.setRealData(realData);\n            }\n        }.start();\n\n        return futureData; // \u76f4\u63a5\u8fd4\u56de\u5305\u88c5\u6570\u636e\n    }\n}\n\n// \u6d4b\u8bd5\npublic class Main {\n    public static void main(String args[]) {\n        Client client = new Client();\n        //\u8fd9\u91cc\u4f1a\u7acb\u5373\u8fd4\u56de,\u56e0\u4e3a\u5f97\u5230\u7684\u662fFutureData\u800c\u4e0d\u662fRealData\n        Data data = client.request("name");\n        System.out.println("\u8bf7\u6c42\u5b8c\u6bd5");\n\n        try {\n\n            //\u8fd9\u91cc\u7528\u4e00\u4e2asleep\u4ee3\u66ff\u4e86\u5bf9\u5176\u4ed6\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\n            //\u5728\u5904\u7406\u8fd9\u4e9b\u4e1a\u52a1\u903b\u8f91\u7684\u8fc7\u7a0b\u4e2d,RealData\u88ab\u521b\u5efa,\u4ece\u800c\u5145\u5206\u5229\u7528\u4e86\u7b49\u5f85\u65f6\u95f4\n            Thread.sleep(2000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n        //\u4f7f\u7528\u771f\u5b9e\u7684\u6570\u636e\n        System.out.println("\u6570\u636e=" + data.getResult());\n    }\n}\n\n')),(0,i.kt)("h3",{id:"1482-jdk\u4e2d\u7684future\u6a21\u5f0f"},"14.8.2. jdk\u4e2d\u7684future\u6a21\u5f0f"),(0,i.kt)("p",null,"jdk\u5185\u90e8\u63d0\u4f9b\u4e86\u4e00\u5957\u5b8c\u6574\u7684\u5b9e\u73b0"),(0,i.kt)("p",null,"\u7c7b\u7ed3\u6784\u56fe:"),(0,i.kt)("p",null,"\u5176\u4ed6\u4e00\u4e9b\u529f\u80fd\u6027api:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// Callable \u63a5\u53e3 - \u6784\u9020\u771f\u5b9e\u6570\u636e\npublic class RealData2 implements Callable<String> {\n    private String data;\n\n    public RealData2(String data) {\n        this.data = data;\n    }\n\n    @Override\n    public String call() throws Exception {\n        StringBuffer stringBuffer = new StringBuffer();\n        for (int i = 0; i < 10; i++) {\n            stringBuffer.append(data);\n            Thread.sleep(100);// \u6a21\u62df\u8017\u65f6\u64cd\u4f5c\n        }\n\n        return stringBuffer.toString();\n    }\n}\n\npublic class FutureMain {\n\n    public static void main(String args[]) throws ExecutionException, InterruptedException {\n        //\u6784\u9020FutureTask - \u6709\u8fd4\u56de\u503c\n        // new RealData2("a") \u544a\u8bc9\u4e86 FutureTask \u771f\u5b9e\u6570\u636e\u5982\u4f55\u4ea7\u751f\n        FutureTask<String> futureTask = new FutureTask<String>(new RealData2("a"));\n\n        ExecutorService executorService = Executors.newFixedThreadPool(1);\n\n        //\u6267\u884cFutureTask,\u76f8\u5f53\u4e8e\u524d\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684client.request("a")\u53d1\u9001\u8bf7\u6c42\n        //\u5728\u8fd9\u91cc\u5f00\u542f\u7ebf\u7a0b\u8fdb\u884cRealData\u7684call()\u6267\u884c\n        executorService.submit(futureTask);\n\n        System.out.println("\u8bf7\u6c42\u5b8c\u6bd5");\n\n        try {\n            //\u8fd9\u91cc\u4f9d\u7136\u53ef\u4ee5\u505a\u989d\u5916\u7684\u6570\u636e\u64cd\u4f5c,\u4f7f\u7528sleep\u4ee3\u66ff\u5176\u4ed6\u4e1a\u52a1\u903b\u8f91\u7684\u5904\u7406\n            Thread.sleep(2000);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        //\u76f8\u5f53\u4e8e\u524d\u4e00\u4e2a\u4f8b\u5b50\u4e2d\u7684data.getResult(),\u53d6\u5f97call()\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\n        //\u5982\u679c\u6b64\u65f6call()\u65b9\u6cd5\u6ca1\u6709\u6267\u884c\u5b8c\u6210,\u5219\u4f9d\u7136\u4f1a\u7b49\u5f85\n        System.out.println("\u6570\u636e=" + futureTask.get());\n    }\n}\n\n')),(0,i.kt)("h2",{id:"149-map-reduce-\u6a21\u5f0f"},"14.9. map-reduce \u6a21\u5f0f"),(0,i.kt)("p",null,"\u628a\u5de5\u4f5c\u62c6\u5206\u6210\u591a\u4efd\uff0c\u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u5b8c\u6210\u540e\uff0c\u518d\u7ec4\u5408\u7ed3\u679c\uff0cJava8\u4e2d\u7684stream\u4e0eFork/Join\u5c31\u662f\u8fd9\u79cd\u6a21\u5f0f\u7684\u4f53\u73b0"),(0,i.kt)("h2",{id:"1410-worker-pool-\u6a21\u5f0f"},"14.10. worker-pool \u6a21\u5f0f"),(0,i.kt)("p",null,"\u6536\u5230\u6d88\u606f\u7ed9\u4e0d\u540c\u7684Thread\u8fdb\u884c\u5904\u7406"),(0,i.kt)("h2",{id:"1411-\u5e76\u884c\u6d41\u6c34\u7ebf"},"14.11. \u5e76\u884c\u6d41\u6c34\u7ebf"),(0,i.kt)("p",null,"\u5e76\u53d1\u7b97\u6cd5\u9002\u5408\u5206\u89e3\u5404\u4e2a\u5b50\u8fd0\u7b97\u6ca1\u6709\u4f9d\u8d56\u7684\u8ba1\u7b97\u6765\u5229\u7528\u591a\u6838\u4f18\u52bf"),(0,i.kt)("p",null,'\u5982\u679c\u4e0d\u5e78\u78b0\u5230\u4e86\u76f8\u4e92\u4f9d\u8d56\u7684\u5b50\u8fd0\u7b97\u7ec4\u6210\u7684\u8ba1\u7b97, \u53ef\u4ee5\u4f7f\u7528 "\u5e76\u884c\u6d41\u6c34\u7ebf" \u6765\u5229\u7528\u591a\u6838\u4f18\u52bf - \u53ef\u4ee5\u7c7b\u6bd4 cpu\u7684\u6d41\u6c34\u7ebf\u5de5\u4f5c\u673a\u5236'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'// \u5b9a\u4e49\u4e00\u4e2a\u5728\u7ebf\u7a0b\u4e4b\u95f4\u6570\u636e\u4f20\u9012\u7684\u8f7d\u4f53\npublic class Msg {\n\n    public double i;\n    public double j;\n    public String orgStr = null;\n\n}\n\n// \u52a0\u6cd5 - \u6d41\u6c34\u7ebf\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\npublic class Plus implements Runnable {\n\n    public static BlockingDeque<Msg> blockingDeque = new LinkedBlockingDeque<Msg>();\n\n    @Override\n    public void run() {\n        while (true) {\n            Msg msg = null;\n            try {\n                msg = blockingDeque.take();\n                msg.i = msg.j + msg.i;\n                Multiply.blockingDeque.add(msg);// \u4f20\u9012\u7ed9\u4e58\u6cd5\u7ebf\u7a0b\u4e2d\u7684queue\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n// \u4e58\u6cd5\npublic class Multiply implements Runnable {\n    public static BlockingDeque<Msg> blockingDeque = new LinkedBlockingDeque<Msg>();\n\n    @Override\n    public void run() {\n        while (true) {\n            Msg msg = null;\n            try {\n                msg = blockingDeque.take();\n                msg.i = msg.j * msg.i;\n                Div.blockingDeque.add(msg);// \u4f20\u9012\u7ed9 \u9664\u6cd5\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n// \u9664\u6cd5\npublic class Div implements Runnable {\n    public static BlockingDeque<Msg> blockingDeque = new LinkedBlockingDeque<Msg>();\n\n    @Override\n    public void run() {\n        while (true) {\n            Msg msg = null;\n            try {\n                msg = blockingDeque.take();\n                msg.i = msg.i / 2;\n                System.out.println(msg.orgStr + "=" + msg.i);// \u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n\n// \u6d4b\u8bd5\npublic class PStreamMain {\n    public static void main(String args[]) {\n\n        new Thread(new Plus()).start();\n        new Thread(new Multiply()).start();\n        new Thread(new Div()).start();\n\n        // \u63d0\u4ea4 100 \u4e07\u4e2a\u8ba1\u7b97\u8bf7\u6c42\n        for (int i = 0; i <= 1000; i++) {\n            for (int j = 0; j <= 1000; j++) {\n                Msg msg = new Msg();\n                msg.i = i;\n                msg.j = j;\n                msg.orgStr = "((" + i + "+" + j + ")*" + i + ")/2";\n                Plus.blockingDeque.add(msg);\n            }\n        }\n    }\n}\n\n')),(0,i.kt)("h2",{id:"1412-\u5e76\u884c\u641c\u7d22"},"14.12. \u5e76\u884c\u641c\u7d22"),(0,i.kt)("p",null,"\u6709\u5e8f - \u4e8c\u5206\u6cd5\n\u65e0\u9700 - \u6328\u4e2a\u67e5\u627e, \u66f4\u597d\u7684\u65b9\u6cd5: \u5e76\u884c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * Main\n */\npublic class Main {\n\n    private static int[] arr;\n    private static ExecutorService pool = Executors.newCachedThreadPool();\n    private static final int thread_num = 2;\n    private static AtomicInteger result = new AtomicInteger(-1);// \u591a\u4e2a thread \u901a\u8fc7\u8fd9\u4e2a\u5171\u4eab\u4fe1\u606f\n\n    private static class SearchTask implements Callable<Integer> {\n\n        private int begin;\n        private int end;\n        private int target;\n\n        public SearchTask(int begin, int end, int target) {\n            this.begin = begin;\n            this.end = end;\n            this.target = target;\n        }\n\n        @Override\n        public Integer call() throws Exception {\n            return search(target, begin, end);\n        }\n\n    }\n\n    public static void main(String[] args) throws InterruptedException, ExecutionException {\n        arr = new int[] {2, 4, 5, 9, 11, 80, 294305, 777, 83};\n        int index = parallelSearch(777);\n        System.out.println("search finished, index=" + index);\n    }\n\n    private static int parallelSearch(int target) throws InterruptedException, ExecutionException {\n        ArrayList<Future<Integer>> re = new ArrayList<Future<Integer>>();\n\n        int subArrSize = arr.length / (thread_num + 1);// \u5b81\u613f\u6bcf\u4e2a\u5b50\u6570\u7ec4size\u5c0f\u4e00\u4e9b, \u6570\u7ec4\u4e2a\u6570\u591a\u4e00\u4e9b\n        for (int i = 0; i < arr.length; i += subArrSize) {\n            int end = i + subArrSize;\n            if (end > arr.length) {// \u53ef\u4ee5\u53bb\u6389\n                end = arr.length;\n            }\n            re.add(pool.submit(new SearchTask(i, end, target)));\n        }\n\n        for (Future<Integer> fu : re) {\n            Integer i = fu.get();\n            if (i >= 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    private static int search(int target, int begin, int end) {\n        if (result.get() >= 0) {// another thread should has finished the search\n            return result.get();\n        }\n\n        for (int i = begin; i < end; i++) {\n            if (arr[i] == target) {\n                boolean ok = result.compareAndSet(-1, i);// get the index of target, and put it into result;\n                if (ok) {\n                    return i;\n                }\n                // \u5982\u679c\u8bbe\u7f6e\u5931\u8d25, \u8868\u793a\u5176\u4ed6\u7ebf\u7a0b\u62a2\u5148\u627e\u5230\u4e86\n                return result.get();\n            }\n        }\n        // \u904d\u5386\u5b8c\u8fd8\u662f\u6ca1\u627e\u5230, \u8fd4\u56de -1\n        return -1;\n    }\n\n}\n\n')),(0,i.kt)("h2",{id:"1413-\u5e76\u884c\u6392\u5e8f"},"14.13. \u5e76\u884c\u6392\u5e8f"),(0,i.kt)("p",null,"\u4e00\u822c\u7684\u6392\u5e8f\u90fd\u662f\u4e32\u884c\u7684, \u8fd9\u91cc\u4ecb\u7ecd\u5e76\u884c\u7684\u6392\u5e8f\u7b97\u6cd5"),(0,i.kt)("h3",{id:"14131-\u6539\u8fdb\u5192\u6ce1\u6392\u5e8f-\u5206\u79bb\u6570\u636e\u76f8\u5173\u6027-\u5947\u5076\u4ea4\u6362\u6392\u5e8f"},"14.13.1. \u6539\u8fdb\u5192\u6ce1\u6392\u5e8f-\u5206\u79bb\u6570\u636e\u76f8\u5173\u6027-\u5947\u5076\u4ea4\u6362\u6392\u5e8f"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u5192\u6ce1\u6392\u5e8f\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20, \u5b83\u53ef\u80fd\u548c\u524d\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362, \u4e5f\u53ef\u80fd\u540c\u540e\u4e00\u4e2a\u5143\u7d20\u4ea4\u6362, \u6574\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u76f8\u4e92\u4f9d\u8d56\u7684\u6574\u4f53, \u600e\u4e48\u5206\u79bb\u6210\u591a\u4e2a\u90e8\u5206\u5462?"),(0,i.kt)("p",null,"\u5947\u5076\u4ea4\u6362\u6392\u5e8f - \u5c06\u6574\u4e2a\u6392\u5e8f\u8fc7\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206: \u5947\u4ea4\u6362 - \u53ea\u6bd4\u8f83\u5947\u6570\u7d22\u5f15\u7684\u5143\u7d20\u548c\u76f8\u90bb\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20; \u5076\u4ea4\u6362 - \u53ea\u6bd4\u8f83\u5076\u6570\u7d22\u5f15\u7684\u5143\u7d20\u53ca\u5176\u76f8\u90bb\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20"),(0,i.kt)("p",null,"\u5947\u5076\u6392\u5e8f\u793a\u610f\u56fe: from ",(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/lemon_tree12138/article/details/50605563"},"here")),(0,i.kt)("p",null,"\u5c06\u6574\u4e2a\u6bd4\u8f83\u5206\u5272\u4e3a \u72ec\u7acb\u7684 \u5947\u9636\u6bb5, \u5076\u9636\u6bb5. \u5728\u6bcf\u4e2a\u9636\u6bb5\u5185, \u6240\u6709\u7684\u6bd4\u8f83\u4ea4\u6362\u6ca1\u6709\u76f8\u4e92\u4f9d\u8d56, so \u6bcf\u6b21\u6bd4\u8f83\u90fd\u53ef\u4ee5\u72ec\u7acb\u6267\u884c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class Main {\n\n    private static int[] arr;\n\n    public static void main(String[] args) {\n        arr = new int[] { 763, 203, 2, 32, 8, 99, 455, 777, 343, 234 };\n        bubbleSort(arr);\n        \n        for (int i : arr) {\n            \n            System.out.print(i+", ");//2, 8, 32, 99, 203, 234, 343, 455, 763, 777,\n        }\n    }\n\n    //\u666e\u901a\u7684\u5192\u6ce1\u6392\u5e8f:\n    public static void bubbleSort(int[] arr) {\n        for (int i = arr.length - 1; i > 0; i--) {\n            for (int j = 0; j < i; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    int tmp = arr[j];\n                    arr[j] = arr[j + 1];\n                    arr[j + 1] = tmp;\n                }\n            }\n        }\n    }\n\n    // \u4e32\u884c\u7684\u5947\u5076\u5192\u6ce1\u6392\u5e8f\n    public static void oddEvenSort(int[] arr) {\n        boolean exch = true;// \u672c\u6b21\u5faa\u73af\u662f\u5426\u8fdb\u884c\u4e86\u6570\u636e\u4ea4\u6362\n        int startIndex = 0;// 1: \u5947\u4ea4\u6362, 0: \u5076\u4ea4\u6362\n\n        while (exch || startIndex == 1) {// \u5982\u679c\u4e0a\u4e00\u6b21\u5faa\u73af\u53d1\u751f\u4e86\u4ea4\u6362 or \u5947\u4ea4\u6362, \u91cd\u590d\u5faa\u73af\n                                    // \u5f53\u6ca1\u6709\u5143\u7d20\u4ea4\u6362, \u4e14\u5f53\u524d\u8fdb\u884c\u7684\u662f\u5076\u4ea4\u6362 - \u9000\u51fa\u5faa\u73af\n            exch = false;\n\n            for (int i = startIndex; i < arr.length - 1; i += 2) {\n                if (arr[i] > arr[i+1]) {\n                    int tmp = arr[i];\n                    arr[i] = arr[i+1];\n                    arr[i+1] = tmp;\n\n                    exch = true;\n                }\n            }\n\n            if (startIndex == 0) {\n                startIndex = 1;\n            } else {\n                startIndex = 0;\n            }\n        }\n    }\n}\n\n')),(0,i.kt)("h3",{id:"14132-\u6539\u8fdb\u63d2\u5165\u6392\u5e8f-\u5e0c\u5c14\u6392\u5e8f"},"14.13.2. \u6539\u8fdb\u63d2\u5165\u6392\u5e8f-\u5e0c\u5c14\u6392\u5e8f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"\n\n")),(0,i.kt)("h2",{id:"1414-\u7f51\u7edcnio"},"14.14. \u7f51\u7edcnio"),(0,i.kt)("h1",{id:"15-\u4f7f\u7528-akka-\u6784\u5efa\u9ad8\u5e76\u53d1\u7a0b\u5e8f"},"15. \u4f7f\u7528 akka \u6784\u5efa\u9ad8\u5e76\u53d1\u7a0b\u5e8f"),(0,i.kt)("h1",{id:"16-\u5e76\u884c\u7a0b\u5e8f\u600e\u4e48\u8c03\u8bd5"},"16. \u5e76\u884c\u7a0b\u5e8f\u600e\u4e48\u8c03\u8bd5"))}k.isMDXComponent=!0}}]);