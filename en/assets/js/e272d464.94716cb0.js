"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5279],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return N}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=u(t),N=a,k=m["".concat(p,".").concat(N)]||m[N]||h[N]||l;return t?r.createElement(k,i(i({ref:n},d),{},{components:t})):r.createElement(k,i({ref:n},d))}));function N(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},78093:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return p},default:function(){return N},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return h}});var r=t(83117),a=t(80102),l=(t(67294),t(3905)),i=["components"],o={title:"Data Structure and Algorithm",tags:["\u7b97\u6cd5"],date:new Date("2018-11-25T22:54:25.000Z"),toc_min_heading_level:2,toc_max_heading_level:5},p=void 0,u={unversionedId:"data-structure-and-algorithm",id:"data-structure-and-algorithm",title:"Data Structure and Algorithm",description:"https://github.com/afatcoder/LeetcodeTop \u4e92\u8054\u7f51\u516c\u53f8\u7b97\u6cd5\u9762\u8bd5",source:"@site/docs/data-structure-and-algorithm.md",sourceDirName:".",slug:"/data-structure-and-algorithm",permalink:"/en/docs/data-structure-and-algorithm",draft:!1,tags:[{label:"\u7b97\u6cd5",permalink:"/en/docs/tags/\u7b97\u6cd5"}],version:"current",frontMatter:{title:"Data Structure and Algorithm",tags:["\u7b97\u6cd5"],date:"2018-11-25T22:54:25.000Z",toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"\u51e0\u79cdCSS\u9884\u5904\u7406\u5668\u6bd4\u8f83\u9009\u578b",permalink:"/en/docs/css-pre-processor"},next:{title:"Design Pattern \u7b14\u8bb0",permalink:"/en/docs/design-pattern-note"}},d={},h=[{value:"1.1. \u5b58\u50a8\u65b9\u5f0f",id:"11-\u5b58\u50a8\u65b9\u5f0f",level:2},{value:"1.2. \u57fa\u672c\u64cd\u4f5c",id:"12-\u57fa\u672c\u64cd\u4f5c",level:2},{value:"1.3. \u65f6\u95f4\u590d\u6742\u5ea6",id:"13-\u65f6\u95f4\u590d\u6742\u5ea6",level:2},{value:"1.3.1. \u8ba1\u7b97\u65b9\u6cd5",id:"131-\u8ba1\u7b97\u65b9\u6cd5",level:3},{value:"1.3.2. \u5e38\u6570\u590d\u6742\u5ea6",id:"132-\u5e38\u6570\u590d\u6742\u5ea6",level:3},{value:"1.3.3. \u7ebf\u6027\u590d\u6742\u5ea6",id:"133-\u7ebf\u6027\u590d\u6742\u5ea6",level:3},{value:"1.3.4. \u5bf9\u6570\u590d\u6742\u5ea6",id:"134-\u5bf9\u6570\u590d\u6742\u5ea6",level:3},{value:"1.3.5. \u5e73\u65b9\u590d\u6742\u5ea6",id:"135-\u5e73\u65b9\u590d\u6742\u5ea6",level:3},{value:"1.3.6. \u6307\u6570\u590d\u6742\u5ea6",id:"136-\u6307\u6570\u590d\u6742\u5ea6",level:3},{value:"6.1. \u6811\u7684\u57fa\u672c\u6982\u5ff5and\u4e00\u822c\u7ed3\u6784",id:"61-\u6811\u7684\u57fa\u672c\u6982\u5ff5and\u4e00\u822c\u7ed3\u6784",level:2},{value:"6.2. \u4e8c\u53c9\u67e5\u627e\u6811",id:"62-\u4e8c\u53c9\u67e5\u627e\u6811",level:2},{value:"6.2.1. \u975e\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811",id:"621-\u975e\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811",level:3},{value:"6.2.1.1. BST(Binary Search Tree)-\u67e5\u627e\u6811\u7684\u4e00\u822c\u7ed3\u6784",id:"6211-bstbinary-search-tree-\u67e5\u627e\u6811\u7684\u4e00\u822c\u7ed3\u6784",level:4},{value:"6.2.1.2. Splay Tree \u4f38\u5c55\u6811",id:"6212-splay-tree-\u4f38\u5c55\u6811",level:4},{value:"6.2.2. \u5e73\u8861\u4e8c\u53c9\u6811",id:"622-\u5e73\u8861\u4e8c\u53c9\u6811",level:3},{value:"6.2.2.1. AVL\u6811",id:"6221-avl\u6811",level:4},{value:"6.2.2.2. \u7ea2\u9ed1\u6811",id:"6222-\u7ea2\u9ed1\u6811",level:4},{value:"6.3. \u591a\u8def\u5e73\u8861\u67e5\u627e\u6811",id:"63-\u591a\u8def\u5e73\u8861\u67e5\u627e\u6811",level:2},{value:"6.3.1. -3\u6811(\u4e8c\u4e09\u6811)",id:"631--3\u6811\u4e8c\u4e09\u6811",level:3},{value:"6.3.2. B\u6811(B-tree)",id:"632-b\u6811b-tree",level:3},{value:"6.3.2.1. b\u6811\u7684\u6982\u5ff5",id:"6321-b\u6811\u7684\u6982\u5ff5",level:4},{value:"6.3.2.2. b\u6811\u7684\u7279\u5f81",id:"6322-b\u6811\u7684\u7279\u5f81",level:4},{value:"6.3.3. B+tree(B\u52a0\u6811)",id:"633-btreeb\u52a0\u6811",level:3},{value:"6.3.3.1. b+tree\u5b9a\u4e49",id:"6331-btree\u5b9a\u4e49",level:4},{value:"6.3.3.2. \u6bd4b-tree\u597d\u7684\u70b9",id:"6332-\u6bd4b-tree\u597d\u7684\u70b9",level:4},{value:"6.3.4. B*\u6811",id:"634-b\u6811",level:3},{value:"6.3.5. \u524d\u7f00\u6811(Trie\u6811/\u5b57\u5178\u6811)",id:"635-\u524d\u7f00\u6811trie\u6811\u5b57\u5178\u6811",level:3},{value:"6.4. \u54c8\u592b\u66fc\u6811(Huffman Tree)",id:"64-\u54c8\u592b\u66fc\u6811huffman-tree",level:2},{value:"7.1. \u4e8c\u53c9\u5806",id:"71-\u4e8c\u53c9\u5806",level:2},{value:"7.2. \u5806\u6392\u5e8f",id:"72-\u5806\u6392\u5e8f",level:2},{value:"8.1. \u56fe\u7684\u6982\u5ff5",id:"81-\u56fe\u7684\u6982\u5ff5",level:2},{value:"10.1. \u9009\u62e9\u6392\u5e8f(select Sort)",id:"101-\u9009\u62e9\u6392\u5e8fselect-sort",level:2},{value:"10.2. \u5f52\u5e76\u6392\u5e8f(merge sort)",id:"102-\u5f52\u5e76\u6392\u5e8fmerge-sort",level:2},{value:"10.3. \u5192\u6ce1\u6392\u5e8f(bubble sort)",id:"103-\u5192\u6ce1\u6392\u5e8fbubble-sort",level:2},{value:"11.1. \u987a\u5e8f\u67e5\u627e",id:"111-\u987a\u5e8f\u67e5\u627e",level:2},{value:"11.2. \u6709\u5e8f\u8868\u67e5\u627e",id:"112-\u6709\u5e8f\u8868\u67e5\u627e",level:2},{value:"11.3. \u7ebf\u6027\u7d22\u5f15\u67e5\u627e",id:"113-\u7ebf\u6027\u7d22\u5f15\u67e5\u627e",level:2},{value:"12.1. \u7ebf\u6027\u7d22\u5f15",id:"121-\u7ebf\u6027\u7d22\u5f15",level:2},{value:"12.1.1. \u7a20\u5bc6\u7d22\u5f15",id:"1211-\u7a20\u5bc6\u7d22\u5f15",level:3},{value:"12.1.2. \u5206\u5757\u7d22\u5f15",id:"1212-\u5206\u5757\u7d22\u5f15",level:3},{value:"12.1.3. \u5012\u6392\u7d22\u5f15",id:"1213-\u5012\u6392\u7d22\u5f15",level:3},{value:"12.2. \u6811\u5f62\u7d22\u5f15",id:"122-\u6811\u5f62\u7d22\u5f15",level:2},{value:"12.3. \u591a\u7ea7\u7d22\u5f15",id:"123-\u591a\u7ea7\u7d22\u5f15",level:2}],m={toc:h};function N(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/afatcoder/LeetcodeTop"},"https://github.com/afatcoder/LeetcodeTop")," \u4e92\u8054\u7f51\u516c\u53f8\u7b97\u6cd5\u9762\u8bd5"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/doocs/leetcode"},"https://github.com/doocs/leetcode")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/geekxh/hello-algorithm"},"https://github.com/geekxh/hello-algorithm")," \u5c0f\u6d69\u7b97\u6cd5\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/geekxh/hello-interview"},"https://github.com/geekxh/hello-interview")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/apachecn/apachecn-algo-zh"},"https://github.com/apachecn/apachecn-algo-zh"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/algorithm-visualizer/algorithm-visualizer"},"https://github.com/algorithm-visualizer/algorithm-visualizer"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/trekhleb/javascript-algorithms"},"https://github.com/trekhleb/javascript-algorithms")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/MisterBooo/LeetCodeAnimation"},"https://github.com/MisterBooo/LeetCodeAnimation")," \u52a8\u753b\u7b97\u6cd5 java"),(0,l.kt)("p",null,"\u52a8\u56fe\u6f14\u793a\u7b97\u6cd5: ",(0,l.kt)("a",{parentName:"p",href:"https://visualgo.net/zh"},"https://visualgo.net/zh"),"\n\u6570\u636e\u7ed3\u6784: ",(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/skywang12345/p/3603935.html"},"https://www.cnblogs.com/skywang12345/p/3603935.html"),"\npython \u5b9e\u73b0\u6570\u636e\u7ed3\u6784: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/xiaoyuside/algorithm-python"},"https://github.com/xiaoyuside/algorithm-python"),"\njava \u5b9e\u73b0\u6570\u636e\u7ed3\u6784\u7b97\u6cd5: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/buptdavid/datastructure"},"https://github.com/buptdavid/datastructure"),"\nSuffix Trees - ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/npgall/concurrent-trees"},"https://github.com/npgall/concurrent-trees"),"\nRadix Trees"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/u012414189/article/details/83832161?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.nonecase"},"\u9762\u8bd5")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/kdn251/interviews/blob/master/README-zh-cn.md"},"https://github.com/kdn251/interviews/blob/master/README-zh-cn.md")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/labuladong/fucking-algorithm"},"https://github.com/labuladong/fucking-algorithm"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/liweiwei1419/LeetCode-Solutions-in-Good-Style"},"https://github.com/liweiwei1419/LeetCode-Solutions-in-Good-Style"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/greyireland/algorithm-pattern"},"https://github.com/greyireland/algorithm-pattern"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/geekxh/hello-algorithm"},"https://github.com/geekxh/hello-algorithm")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/apachecn/apachecn-algo-zh"},"https://github.com/apachecn/apachecn-algo-zh")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/facert/python-data-structure-cn"},"https://github.com/facert/python-data-structure-cn"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/keon/algorithms"},"https://github.com/keon/algorithms")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/xtaci/algorithms"},"https://github.com/xtaci/algorithms")," cpp \u4e2d\u6587"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93"},"1. \u6570\u636e\u7ed3\u6784\u603b\u7ed3"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#11-%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F"},"1.1. \u5b58\u50a8\u65b9\u5f0f")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#12-%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C"},"1.2. \u57fa\u672c\u64cd\u4f5c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#13-%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3. \u65f6\u95f4\u590d\u6742\u5ea6"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#131-%E8%AE%A1%E7%AE%97%E6%96%B9%E6%B3%95"},"1.3.1. \u8ba1\u7b97\u65b9\u6cd5")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#132-%E5%B8%B8%E6%95%B0%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3.2. \u5e38\u6570\u590d\u6742\u5ea6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#133-%E7%BA%BF%E6%80%A7%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3.3. \u7ebf\u6027\u590d\u6742\u5ea6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#134-%E5%AF%B9%E6%95%B0%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3.4. \u5bf9\u6570\u590d\u6742\u5ea6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#135-%E5%B9%B3%E6%96%B9%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3.5. \u5e73\u65b9\u590d\u6742\u5ea6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#136-%E6%8C%87%E6%95%B0%E5%A4%8D%E6%9D%82%E5%BA%A6"},"1.3.6. \u6307\u6570\u590d\u6742\u5ea6")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2-%E6%95%B0%E7%BB%84"},"2. \u6570\u7ec4")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#3-%E6%A0%88"},"3. \u6808")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#4-%E9%98%9F%E5%88%97"},"4. \u961f\u5217")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#5-%E9%93%BE%E8%A1%A8"},"5. \u94fe\u8868")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6-%E6%A0%91"},"6. \u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#61-%E6%A0%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5and%E4%B8%80%E8%88%AC%E7%BB%93%E6%9E%84"},"6.1. \u6811\u7684\u57fa\u672c\u6982\u5ff5and\u4e00\u822c\u7ed3\u6784")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#62-%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91"},"6.2. \u4e8c\u53c9\u67e5\u627e\u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#621-%E9%9D%9E%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91"},"6.2.1. \u975e\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6211-bstbinary-search-tree-%E6%9F%A5%E6%89%BE%E6%A0%91%E7%9A%84%E4%B8%80%E8%88%AC%E7%BB%93%E6%9E%84"},"6.2.1.1. BSTBinary Search Tree-\u67e5\u627e\u6811\u7684\u4e00\u822c\u7ed3\u6784")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6212-splay-tree-%E4%BC%B8%E5%B1%95%E6%A0%91"},"6.2.1.2. Splay Tree \u4f38\u5c55\u6811")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#622-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91"},"6.2.2. \u5e73\u8861\u4e8c\u53c9\u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6221-avl%E6%A0%91"},"6.2.2.1. AVL\u6811")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6222-%E7%BA%A2%E9%BB%91%E6%A0%91"},"6.2.2.2. \u7ea2\u9ed1\u6811")))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#63-%E5%A4%9A%E8%B7%AF%E5%B9%B3%E8%A1%A1%E6%9F%A5%E6%89%BE%E6%A0%91"},"6.3. \u591a\u8def\u5e73\u8861\u67e5\u627e\u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#631--3%E6%A0%91%E4%BA%8C%E4%B8%89%E6%A0%91"},"6.3.1. -3\u6811\u4e8c\u4e09\u6811")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#632-b%E6%A0%91b-tree"},"6.3.2. B\u6811B-tree"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6321-b%E6%A0%91%E7%9A%84%E6%A6%82%E5%BF%B5"},"6.3.2.1. b\u6811\u7684\u6982\u5ff5")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6322-b%E6%A0%91%E7%9A%84%E7%89%B9%E5%BE%81"},"6.3.2.2. b\u6811\u7684\u7279\u5f81")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#633-btreeb%E5%8A%A0%E6%A0%91"},"6.3.3. B+treeB\u52a0\u6811"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6331-btree%E5%AE%9A%E4%B9%89"},"6.3.3.1. b+tree\u5b9a\u4e49")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6332-%E6%AF%94b-tree%E5%A5%BD%E7%9A%84%E7%82%B9"},"6.3.3.2. \u6bd4b-tree\u597d\u7684\u70b9")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#634-b%E6%A0%91"},"6.3.4. B*\u6811")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#635-%E5%89%8D%E7%BC%80%E6%A0%91trie%E6%A0%91%E5%AD%97%E5%85%B8%E6%A0%91"},"6.3.5. \u524d\u7f00\u6811Trie\u6811/\u5b57\u5178\u6811")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#64-%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91huffman-tree"},"6.4. \u54c8\u592b\u66fc\u6811Huffman Tree")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#7-%E5%A0%86"},"7. \u5806"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#71-%E4%BA%8C%E5%8F%89%E5%A0%86"},"7.1. \u4e8c\u53c9\u5806")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#72-%E5%A0%86%E6%8E%92%E5%BA%8F"},"7.2. \u5806\u6392\u5e8f")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#8-%E5%9B%BE"},"8. \u56fe"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#81-%E5%9B%BE%E7%9A%84%E6%A6%82%E5%BF%B5"},"8.1. \u56fe\u7684\u6982\u5ff5")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#9-%E5%93%88%E5%B8%8C%E8%A1%A8hash-table"},"9. \u54c8\u5e0c\u8868hash-table")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#10-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95"},"10. \u6392\u5e8f\u7b97\u6cd5"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#101-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8Fselect-sort"},"10.1. \u9009\u62e9\u6392\u5e8fselect Sort")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#102-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8Fmerge-sort"},"10.2. \u5f52\u5e76\u6392\u5e8fmerge sort")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#103-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8Fbubble-sort"},"10.3. \u5192\u6ce1\u6392\u5e8fbubble sort")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#11-%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95"},"11. \u67e5\u627e\u7b97\u6cd5"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#111-%E9%A1%BA%E5%BA%8F%E6%9F%A5%E6%89%BE"},"11.1. \u987a\u5e8f\u67e5\u627e")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#112-%E6%9C%89%E5%BA%8F%E8%A1%A8%E6%9F%A5%E6%89%BE"},"11.2. \u6709\u5e8f\u8868\u67e5\u627e")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#113-%E7%BA%BF%E6%80%A7%E7%B4%A2%E5%BC%95%E6%9F%A5%E6%89%BE"},"11.3. \u7ebf\u6027\u7d22\u5f15\u67e5\u627e")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#12-%E7%B4%A2%E5%BC%95"},"12. \u7d22\u5f15"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#121-%E7%BA%BF%E6%80%A7%E7%B4%A2%E5%BC%95"},"12.1. \u7ebf\u6027\u7d22\u5f15"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1211-%E7%A8%A0%E5%AF%86%E7%B4%A2%E5%BC%95"},"12.1.1. \u7a20\u5bc6\u7d22\u5f15")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1212-%E5%88%86%E5%9D%97%E7%B4%A2%E5%BC%95"},"12.1.2. \u5206\u5757\u7d22\u5f15")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1213-%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95"},"12.1.3. \u5012\u6392\u7d22\u5f15")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#122-%E6%A0%91%E5%BD%A2%E7%B4%A2%E5%BC%95"},"12.2. \u6811\u5f62\u7d22\u5f15")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#123-%E5%A4%9A%E7%BA%A7%E7%B4%A2%E5%BC%95"},"12.3. \u591a\u7ea7\u7d22\u5f15")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#13-acm"},"13. acm")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#14-leetcode-%E8%AE%B0%E5%BD%95"},"14. leetcode \u8bb0\u5f55"))),(0,l.kt)("h1",{id:"1-\u6570\u636e\u7ed3\u6784\u603b\u7ed3"},"1. \u6570\u636e\u7ed3\u6784\u603b\u7ed3"),(0,l.kt)("h2",{id:"11-\u5b58\u50a8\u65b9\u5f0f"},"1.1. \u5b58\u50a8\u65b9\u5f0f"),(0,l.kt)("p",null,"\u6570\u636e\u7ed3\u6784\u7684\u5b58\u50a8\u65b9\u5f0f\u53ea\u6709\u4e24\u79cd\uff1a\u6570\u7ec4\uff08\u987a\u5e8f\u5b58\u50a8\uff09\u548c\u94fe\u8868\uff08\u94fe\u5f0f\u5b58\u50a8\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6570\u7ec4\u7531\u4e8e\u662f\u7d27\u51d1\u8fde\u7eed\u5b58\u50a8,\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\uff0c\u901a\u8fc7\u7d22\u5f15\u5feb\u901f\u627e\u5230\u5bf9\u5e94\u5143\u7d20\uff0c\u800c\u4e14\u76f8\u5bf9\u8282\u7ea6\u5b58\u50a8\u7a7a\u95f4\u3002\u4f46\u6b63\u56e0\u4e3a\u8fde\u7eed\u5b58\u50a8\uff0c\u5185\u5b58\u7a7a\u95f4\u5fc5\u987b\u4e00\u6b21\u6027\u5206\u914d\u591f\uff0c\u6240\u4ee5\u8bf4\u6570\u7ec4\u5982\u679c\u8981\u6269\u5bb9\uff0c\u9700\u8981\u91cd\u65b0\u5206\u914d\u4e00\u5757\u66f4\u5927\u7684\u7a7a\u95f4\uff0c\u518d\u628a\u6570\u636e\u5168\u90e8\u590d\u5236\u8fc7\u53bb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(N)\uff1b\u800c\u4e14\u4f60\u5982\u679c\u60f3\u5728\u6570\u7ec4\u4e2d\u95f4\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\uff0c\u6bcf\u6b21\u5fc5\u987b\u642c\u79fb\u540e\u9762\u7684\u6240\u6709\u6570\u636e\u4ee5\u4fdd\u6301\u8fde\u7eed\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(N)\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u94fe\u8868\u56e0\u4e3a\u5143\u7d20\u4e0d\u8fde\u7eed\uff0c\u800c\u662f\u9760\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u6570\u7ec4\u7684\u6269\u5bb9\u95ee\u9898\uff1b\u5982\u679c\u77e5\u9053\u67d0\u4e00\u5143\u7d20\u7684\u524d\u9a71\u548c\u540e\u9a71\uff0c\u64cd\u4f5c\u6307\u9488\u5373\u53ef\u5220\u9664\u8be5\u5143\u7d20\u6216\u8005\u63d2\u5165\u65b0\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u3002\u4f46\u662f\u6b63\u56e0\u4e3a\u5b58\u50a8\u7a7a\u95f4\u4e0d\u8fde\u7eed\uff0c\u4f60\u65e0\u6cd5\u6839\u636e\u4e00\u4e2a\u7d22\u5f15\u7b97\u51fa\u5bf9\u5e94\u5143\u7d20\u7684\u5730\u5740\uff0c\u6240\u4ee5\u4e0d\u80fd\u968f\u673a\u8bbf\u95ee\uff1b\u800c\u4e14\u7531\u4e8e\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u5b58\u50a8\u6307\u5411\u524d\u540e\u5143\u7d20\u4f4d\u7f6e\u7684\u6307\u9488\uff0c\u4f1a\u6d88\u8017\u76f8\u5bf9\u66f4\u591a\u7684\u50a8\u5b58\u7a7a\u95f4\u3002"))),(0,l.kt)("p",null,"\u6bd4\u5982\u8bf4\u300c\u961f\u5217\u300d\u3001\u300c\u6808\u300d\u8fd9\u4e24\u79cd\u6570\u636e\u7ed3\u6784\u65e2\u53ef\u4ee5\u4f7f\u7528\u94fe\u8868\u4e5f\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u5b9e\u73b0\u3002\u7528\u6570\u7ec4\u5b9e\u73b0\uff0c\u5c31\u8981\u5904\u7406\u6269\u5bb9\u7f29\u5bb9\u7684\u95ee\u9898\uff1b\u7528\u94fe\u8868\u5b9e\u73b0\uff0c\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4f46\u9700\u8981\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u8282\u70b9\u6307\u9488"),(0,l.kt)("p",null,"\u300c\u56fe\u300d\u7684\u4e24\u79cd\u8868\u793a\u65b9\u6cd5\uff0c\u90bb\u63a5\u8868\u5c31\u662f\u94fe\u8868\uff0c\u90bb\u63a5\u77e9\u9635\u5c31\u662f\u4e8c\u7ef4\u6570\u7ec4\u3002\u90bb\u63a5\u77e9\u9635\u5224\u65ad\u8fde\u901a\u6027\u8fc5\u901f\uff0c\u5e76\u53ef\u4ee5\u8fdb\u884c\u77e9\u9635\u8fd0\u7b97\u89e3\u51b3\u4e00\u4e9b\u95ee\u9898\uff0c\u4f46\u662f\u5982\u679c\u56fe\u6bd4\u8f83\u7a00\u758f\u7684\u8bdd\u5f88\u8017\u8d39\u7a7a\u95f4\u3002\u90bb\u63a5\u8868\u6bd4\u8f83\u8282\u7701\u7a7a\u95f4\uff0c\u4f46\u662f\u5f88\u591a\u64cd\u4f5c\u7684\u6548\u7387\u4e0a\u80af\u5b9a\u6bd4\u4e0d\u8fc7\u90bb\u63a5\u77e9\u9635\u3002"),(0,l.kt)("p",null,"\u300c\u6563\u5217\u8868\u300d\u5c31\u662f\u901a\u8fc7\u6563\u5217\u51fd\u6570\u628a\u952e\u6620\u5c04\u5230\u4e00\u4e2a\u5927\u6570\u7ec4\u91cc\u3002\u800c\u4e14\u5bf9\u4e8e\u89e3\u51b3\u6563\u5217\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u62c9\u94fe\u6cd5\u9700\u8981\u94fe\u8868\u7279\u6027\uff0c\u64cd\u4f5c\u7b80\u5355\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8\u6307\u9488\uff1b\u7ebf\u6027\u63a2\u67e5\u6cd5\u5c31\u9700\u8981\u6570\u7ec4\u7279\u6027\uff0c\u4ee5\u4fbf\u8fde\u7eed\u5bfb\u5740\uff0c\u4e0d\u9700\u8981\u6307\u9488\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u4f46\u64cd\u4f5c\u7a0d\u5fae\u590d\u6742\u4e9b\u3002"),(0,l.kt)("p",null,"\u300c\u6811\u300d\uff0c\u7528\u6570\u7ec4\u5b9e\u73b0\u5c31\u662f\u300c\u5806\u300d\uff0c\u56e0\u4e3a\u300c\u5806\u300d\u662f\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7528\u6570\u7ec4\u5b58\u50a8\u4e0d\u9700\u8981\u8282\u70b9\u6307\u9488\uff0c\u64cd\u4f5c\u4e5f\u6bd4\u8f83\u7b80\u5355\uff1b\u7528\u94fe\u8868\u5b9e\u73b0\u5c31\u662f\u5f88\u5e38\u89c1\u7684\u90a3\u79cd\u300c\u6811\u300d\uff0c\u56e0\u4e3a\u4e0d\u4e00\u5b9a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u4e0d\u9002\u5408\u7528\u6570\u7ec4\u5b58\u50a8\u3002\u4e3a\u6b64\uff0c\u5728\u8fd9\u79cd\u94fe\u8868\u300c\u6811\u300d\u7ed3\u6784\u4e4b\u4e0a\uff0c\u53c8\u884d\u751f\u51fa\u5404\u79cd\u5de7\u5999\u7684\u8bbe\u8ba1\uff0c\u6bd4\u5982\u4e8c\u53c9\u641c\u7d22\u6811\u3001AVL \u6811\u3001\u7ea2\u9ed1\u6811\u3001\u533a\u95f4\u6811\u3001B \u6811\u7b49\u7b49"),(0,l.kt)("h2",{id:"12-\u57fa\u672c\u64cd\u4f5c"},"1.2. \u57fa\u672c\u64cd\u4f5c"),(0,l.kt)("p",null,"\u6700\u4e3b\u8981\u7684\u64cd\u4f5c\u5c31\u662f \u904d\u5386"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7ebf\u6027\u904d\u5386, \u6bd4\u5982\u7528 for \u5faa\u73af\u904d\u5386\u4e00\u4e2a\u6570\u7ec4; \u6bd4\u5982\u94fe\u8868, \u65e2\u53ef\u4ee5\u7528 for \u5faa\u73af\u7ebf\u6027\u904d\u5386, \u4e5f\u80fd\u7528 \u9012\u5f52\u904d\u5386")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u975e\u7ebf\u6027(\u9012\u5f52) \u904d\u5386, \u6bd4\u5982 \u4e8c\u53c9\u6811\u9012\u5f52\u904d\u5386"))),(0,l.kt)("h2",{id:"13-\u65f6\u95f4\u590d\u6742\u5ea6"},"1.3. \u65f6\u95f4\u590d\u6742\u5ea6"),(0,l.kt)("h3",{id:"131-\u8ba1\u7b97\u65b9\u6cd5"},"1.3.1. \u8ba1\u7b97\u65b9\u6cd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53bb\u6389\u5e38\u6570\u9879\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53ea\u4fdd\u7559\u6700\u9ad8\u9636\u9879\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53bb\u6389\u6700\u9ad8\u7ed3\u9879\u7684\u7cfb\u6570")),(0,l.kt)("h3",{id:"132-\u5e38\u6570\u590d\u6742\u5ea6"},"1.3.2. \u5e38\u6570\u590d\u6742\u5ea6"),(0,l.kt)("p",null,"O(1) - \u4e00\u822c\u662f\u987a\u5e8f\u6267\u884c\u7684\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'/**\n * \u9ad8\u65af\u7b97\u6cd5, \u5e38\u6570\u590d\u6742\u5ea6\n */\nvoid gaosi() {\n    const int begin = 1;\n    const int end = 4;\n\n    int sum = (begin + end) * end / 2;\n    cout << "arr sum = " << sum << endl;\n}\n\n')),(0,l.kt)("h3",{id:"133-\u7ebf\u6027\u590d\u6742\u5ea6"},"1.3.3. \u7ebf\u6027\u590d\u6742\u5ea6"),(0,l.kt)("p",null,"O(n) - \u4e00\u5c42\u5faa\u73af"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'/**\n * \u7ebf\u6027\u590d\u6742\u5ea6\n */\nvoid changshu() {\n    for (int i = 0; i <; ++i) {\n        printf("xxx");\n    }\n}\n')),(0,l.kt)("h3",{id:"134-\u5bf9\u6570\u590d\u6742\u5ea6"},"1.3.4. \u5bf9\u6570\u590d\u6742\u5ea6"),(0,l.kt)("p",null,"O(logn) "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'/**\n * \u5bf9\u6570\u590d\u6742\u5ea6\n *\n * \u5047\u8bbe\u4f1a\u6267\u884c x \u6b21, \u5219 2^x = n, x = log n\n *\n */\nvoid duishu() {\n    const int n = 10;\n    for (int i = 1; i < n; i = i * 2) {\n        printf("xxx");\n    }\n}\n\n')),(0,l.kt)("h3",{id:"135-\u5e73\u65b9\u590d\u6742\u5ea6"},"1.3.5. \u5e73\u65b9\u590d\u6742\u5ea6"),(0,l.kt)("p",null,"O(n^2)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},'/**\n * \u5e73\u65b9\u590d\u6742\u5ea6\n *\n * \u5f53 i = 0, \u5185\u5faa\u73af\u6267\u884c n \u6b21\n * \u5f53 i = 1, \u5185\u5faa\u73af\u6267\u884c n - 1 \u6b21\n * ...\n *\n * sum = n + (n-1) + (n-2) + ... + 1 = (n + 1) * n /2 \u7ea6\u7b49\u4e8e n^2\n *\n */\nvoid pingfang() {\n    int n;\n    for (int i = 0; i < n; ++i) {\n        // \u6ce8\u610f\u8fd9\u91cc j = i, \u4e0d\u662f \u4ece 0 \u5f00\u59cb\u7684, \u4f46\u662f\u6700\u7ec8\u8ba1\u7b97\u51fa\u6765\u590d\u6742\u5ea6\u8fd8\u662f n^2, \n        for (int j = i; j < n; ++j) {\n            printf("xxx");\n        }\n    }\n}\n\n')),(0,l.kt)("h3",{id:"136-\u6307\u6570\u590d\u6742\u5ea6"},"1.3.6. \u6307\u6570\u590d\u6742\u5ea6"),(0,l.kt)("p",null,"O(2^n)"),(0,l.kt)("h1",{id:"2-\u6570\u7ec4"},"2. \u6570\u7ec4"),(0,l.kt)("p",null,"\u6570\u7ec4\u6709\u4e0a\u754c\u548c\u4e0b\u754c\uff0c\u6570\u7ec4\u7684\u5143\u7d20\u5728\u4e0a\u4e0b\u754c\u5185\u662f\u8fde\u7eed\u7684, \u56e0\u6b64 \u968f\u673a\u8bbf\u95ee\u901f\u5ea6\u5feb; \u4e00\u65e6\u5b9a\u4e49, \u5bb9\u91cf\u5c31\u56fa\u5b9a\u4e86, \u518d\u589e\u5220\u4f1a\u6d89\u53ca\u5230\u6570\u7ec4\u7684\u590d\u5236, \u90a3\u5c06\u662f\u8017\u65f6\u7684\u64cd\u4f5c"),(0,l.kt)("p",null,"\u591a\u7ef4\u6570\u7ec4(\u6570\u7ec4\u7684\u5143\u7d20\u4e3a\u6570\u7ec4)"),(0,l.kt)("p",null,"\u52a8\u6001\u6570\u7ec4: Java \u63d0\u4f9b\u4e86 ArrayList\u548cVector"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Insert - \u5728\u67d0\u4e2a\u7d22\u5f15\u5904\u63d2\u5165\u5143\u7d20"),(0,l.kt)("li",{parentName:"ul"},"Get - \u8bfb\u53d6\u67d0\u4e2a\u7d22\u5f15\u5904\u7684\u5143\u7d20"),(0,l.kt)("li",{parentName:"ul"},"Delete - \u5220\u9664\u67d0\u4e2a\u7d22\u5f15\u5904\u7684\u5143\u7d20"),(0,l.kt)("li",{parentName:"ul"},"Size - \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6")),(0,l.kt)("h1",{id:"3-\u6808"},"3. \u6808"),(0,l.kt)("p",null,"\u6808\u4e2d\u7684\u5143\u7d20\u91c7\u7528LIFO (Last In First Out)\uff0c\u5373\u540e\u8fdb\u5148\u51fa\u3002\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u4e2a\u6876 bucket"),(0,l.kt)("p",null,"\u5178\u578b\u5e94\u7528: \u5b9e\u73b0 ctrl + z \u64a4\u9500, \u628a\u4e4b\u524d\u7684\u5e94\u7528\u72b6\u6001(\u9650\u5236\u4e2a\u6570)\u4fdd\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u6700\u8fd1\u7684\u72b6\u6001\u653e\u5230\u7b2c\u4e00\u4e2a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"- Push\u200a\u2014\u200a\u63a8\u5165, \u5728\u6808\u7684\u6700\u4e0a\u65b9\u63d2\u5165\u5143\u7d20\n- Pop\u200a\u2014 \u5f39\u51fa, \u8fd4\u56de\u6808\u6700\u4e0a\u65b9\u7684\u5143\u7d20\uff0c\u5e76\u5c06\u5176\u5220\u9664\n- isEmpty\u200a\u2014\u200a\u67e5\u8be2\u6808\u662f\u5426\u4e3a\u7a7a\n- Top/peek\u200a\u2014\u200a\u8fd4\u56de\u6808\u6700\u4e0a\u65b9\u7684\u5143\u7d20\uff0c\u5e76\u4e0d\u5220\u9664\n/**\n * ArrayStack - \u6a21\u62df Stack \u7c7b, \u6570\u7ec4\u5b9e\u73b0\n */\npublic class ArrayStack<T> {\n\n    private T[] bucket;\n    private int count; // \u5143\u7d20\u4e2a\u6570\n\n    public ArrayStack(Class<T> clazz, int size) {\n        Object newInstance = Array.newInstance(clazz, size);\n        bucket = (T[]) newInstance;\n        count = 0; // \u521d\u59cb\u5316\u4e3a 0 \u4e2a \u5143\u7d20\n    }\n\n    public void push(T value) {\n        bucket[count] = value;\n        count = count + 1;\n    }\n\n    public T pop() {\n        int index = count -1;\n        T ret = bucket[index];\n        bucket[index] = null;\n        count = count -1;\n        return ret;\n    }\n\n    public T top() {\n        int index = count -1;\n        return bucket[index];\n    }\n}\n\n")),(0,l.kt)("h1",{id:"4-\u961f\u5217"},"4. \u961f\u5217"),(0,l.kt)("p",null,"\u961f\u5217(Queue)\u4e0e\u6808\u7c7b\u4f3c\uff0c\u90fd\u662f\u91c7\u7528\u7ebf\u6027\u7ed3\u6784\u5b58\u50a8\u6570\u636e\u3002\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\uff0c\u6808\u91c7\u7528LIFO\u65b9\u5f0f\uff0c\u800c\u961f\u5217\u91c7\u7528\u5148\u8fdb\u5148\u51fa\uff0c\u5373FIFO(First in First Out), "),(0,l.kt)("p",null,'\u961f\u5217\u53ea\u5141\u8bb8\u5728"\u961f\u9996"\u8fdb\u884c\u5220\u9664\u64cd\u4f5c\uff0c\u800c\u5728"\u961f\u5c3e"\u8fdb\u884c\u63d2\u5165\u64cd\u4f5c\u3002\u53ef\u4ee5\u60f3\u8c61\u6210\u4e00\u6761\u961f\u4f0d'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'Enqueue\u200a\u2014\u200a\u5728\u961f\u5217\u672b\u5c3e\u63d2\u5165\u5143\u7d20\nDequeue\u200a\u2014\u200a\u5c06\u961f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u5220\u9664\nisEmpty\u200a\u2014\u200a\u67e5\u8be2\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nTop\u200a\u2014\u200a\u8fd4\u56de\u961f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n/**\n * \u6570\u7ec4\u5b9e\u73b0\u7684\u961f\u5217\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class ArrayQueue<T> {\n\n    private T[] data;\n    private int count;\n\n    public ArrayQueue(Class<T> clazz, int size) {\n        Object newInstance = Array.newInstance(clazz, size);\n        data = (T[]) newInstance;\n        count = 0;\n    }\n\n    public T deQueue() {\n        T ret = data[0];\n        data[0] = null;\n        for (int i = 0; i < count; i++) {// \u987a\u6b21\u5411\u524d\u632a\u52a8\n            data[i] = data[i+1];\n        }\n        count = count -1;\n        return ret;\n    }\n\n    public void enQueue(T value) {\n        data[count] = value;\n        count = count + 1;\n    }\n\n    public T top() {\n        return data[0];\n    }\n\n    public boolean empty() {\n        if (count == 0) {\n            return true;\n        }\n        if (count < 0) {\n            throw new RuntimeException("count < 0");\n        }\n        return false;\n    }\n}\n\n')),(0,l.kt)("h1",{id:"5-\u94fe\u8868"},"5. \u94fe\u8868"),(0,l.kt)("p",null,"\u94fe\u8868\u662f\u4e00\u7cfb\u5217\u8282\u70b9\u7ec4\u6210\u7684\u94fe\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u4fdd\u5b58\u4e86\u6570\u636e\u4ee5\u53ca\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u6307\u9488\u3002\u94fe\u8868\u5934\u6307\u9488\u6307\u5411\u7b2c\u4e00\u4e2a\u8282\u70b9\uff0c\u5982\u679c\u94fe\u8868\u4e3a\u7a7a\uff0c\u5219\u5934\u6307\u9488\u4e3a\u7a7a\u6216\u8005\u4e3anull\u3002"),(0,l.kt)("p",null,"\u573a\u666f: \u5b9e\u73b0\u6587\u4ef6\u7cfb\u7edf, \u54c8\u5e0c\u8868"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5355\u5411\u94fe\u8868  - \u8282\u70b9\u7684\u94fe\u63a5\u65b9\u5411\u662f\u5355\u5411\u7684\uff1b\u76f8\u5bf9\u4e8e\u6570\u7ec4\u6765\u8bf4\uff0c\u5355\u94fe\u8868\u7684\u7684\u968f\u673a\u8bbf\u95ee\u901f\u5ea6\u8f83\u6162\uff0c\u4f46\u662f\u5355\u94fe\u8868\u5220\u9664/\u6dfb\u52a0\u6570\u636e\u7684\u6548\u7387\u5f88\u9ad8\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u53cc\u5411\u94fe\u8868 - \u4e00\u822c\u662f\u53cc\u5411\u5faa\u73af\u94fe\u8868, \u6bcf\u4e2a\u6570\u636e\u7ed3\u70b9\u4e2d\u90fd\u6709\u4e24\u4e2a\u6307\u9488\uff0c\u5206\u522b\u6307\u5411\u76f4\u63a5\u540e\u7ee7\u548c\u76f4\u63a5\u524d\u9a71")),(0,l.kt)("p",null,"\u53cc\u5411\u5faa\u73af\u94fe\u8868\u56fe\u793a:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'InsertAtEnd\u200a\u2014\u200a\u5728\u94fe\u8868\u7ed3\u5c3e\u63d2\u5165\u5143\u7d20\nInsertAtHead\u200a\u2014\u200a\u5728\u94fe\u8868\u5f00\u5934\u63d2\u5165\u5143\u7d20\nDelete\u200a\u2014\u200a\u5220\u9664\u94fe\u8868\u7684\u6307\u5b9a\u5143\u7d20\nDeleteAtHead\u200a\u2014\u200a\u5220\u9664\u94fe\u8868\u7b2c\u4e00\u4e2a\u5143\u7d20\nSearch\u200a\u2014\u200a\u5728\u94fe\u8868\u4e2d\u67e5\u8be2\u6307\u5b9a\u5143\u7d20\nisEmpty\u200a\u2014\u200a\u67e5\u8be2\u94fe\u8868\u662f\u5426\u4e3a\u7a7a\n/**\n * DoubleLink \u53cc\u5411\u5faa\u73af\u94fe\u8868 - \u6a21\u62df \u5355\u5217\u7684 LinkedHashMap\n */\npublic class DoubleLink<T> {\n\n    private int size;\n    private Node<T> head;// important\n                // \u4f5c\u4e3a\u57fa\u672c\u5750\u6807\n\n    private class Node<T> {\n    \n        private Node<T> prev;\n        private Node<T> next;\n        private T value;\n\n        public Node(T value, Node<T> prev, Node<T> next) {\n            this.next = next;\n            this.prev = prev;\n            this.value = value;\n        }\n    }\n\n    public DoubleLink() {\n        head = new Node<>(null, null, null);\n        head = head.next = head.prev;\n        this.size = 0;\n    }\n\n    /**\n     * insert element to the end\n     */\n    public void insertAtEnd(T value) {\n        Node<T> prev = head.prev;// \u524d\u4e00\u4e2a\u8282\u70b9\n        Node<T> next = head; // \u540e\u4e00\u4e2a\u8282\u70b9\n        Node<T> node = new Node<T>(value, prev, next);\n        prev.next = node;\n        next.prev = node;\n\n        size++;\n    }\n\n    public void insertAtHead(T value) {\n        Node<T> prev = head;\n        Node<T> next = head.next;\n        Node<T> node = new Node<T>(value, prev, next);\n        prev.next = node;\n        next.prev = node;\n\n        size++;\n    }\n\n    public void insertAt(int index, T value) {\n        DoubleLink<T>.Node<T> findNode = this.findNode(index);\n        Node<T> prev = findNode.prev;\n        Node<T> next = findNode.next;\n        DoubleLink<T>.Node<T> node = new Node<T>(value, prev, next);\n        prev.next = node;\n        next.prev = node;\n\n        size++;\n    }\n\n    public void deleteAt(int index) {\n        DoubleLink<T>.Node<T> findNode = this.findNode(index);\n        Node<T> prev = findNode.prev;\n        Node<T> next = findNode.next;\n        prev.next = next;\n        next.prev = prev;\n\n        findNode = null;\n        size--;\n    }\n\n    /**\n     * find specific node\n     * @param index index, start with 0\n     * @return\n     */\n    public Node<T> findNode(int index) {\n        Node<T> ret = null;\n\n        if (index < 0) {\n            throw new RuntimeException("index can not less than 0");\n        }\n\n        // \u53c2\u8003 LinkedHashmap \u5b9e\u73b0\n        if (index <= size / 2) {// \u6b63\u5411\n            Node<T> first =  head.next;\n            for (int i = 0; i < index; i++) {\n                ret = first.next;\n            }\n            return ret;\n        }\n\n        // \u53cd\u5411\u67e5\u627e\n        Node<T> last = head.prev;\n        for (int i = size - 1; i >= index; i--) {\n            ret = last.prev;\n        }\n        return ret;\n    }\n\n    public boolean empty() {\n        if (size == 0) {\n            return true;\n        }\n        return false;\n    }\n}\n\n')),(0,l.kt)("h1",{id:"6-\u6811"},"6. \u6811"),(0,l.kt)("h2",{id:"61-\u6811\u7684\u57fa\u672c\u6982\u5ff5and\u4e00\u822c\u7ed3\u6784"},"6.1. \u6811\u7684\u57fa\u672c\u6982\u5ff5and\u4e00\u822c\u7ed3\u6784"),(0,l.kt)("p",null,"\u6811(Tree)\u662f\u4e00\u4e2a\u5206\u5c42\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7531\u8282\u70b9\u548c\u8fde\u63a5\u8282\u70b9\u7684\u8fb9\u7ec4\u6210\u3002\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u56fe\uff0c\u5b83\u4e0e\u56fe\u6700\u5927\u7684\u533a\u522b\u662f\u6ca1\u6709\u5faa\u73af\u3002"),(0,l.kt)("p",null,'\u6838\u5fc3\u601d\u60f3\u662f\u4f7f\u7528 "\u4e8c\u5206\u6cd5", "\u6570\u636e\u5e73\u8861\u7b56\u7565" \u6765\u63d0\u9ad8\u67e5\u8be2\u6548\u7387'),(0,l.kt)("p",null,"\u51e0\u4e2a\u6982\u5ff5:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"root - \u6839\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"parent - \u8fd9\u4e2a\u8282\u70b9\u5177\u6709\u5b50\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"child - \u8fd9\u4e2a\u8282\u70b9\u5177\u6709\u7236\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"leaf - \u8fd9\u4e2a\u8282\u70b9\u6ca1\u6709\u5b50\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"sibling - \u540c\u7b49\u7ea7(\u540c\u8f88)\u8282\u70b9"),(0,l.kt)("li",{parentName:"ul"},"\u4e00\u9897\u6811\u6df1\u5ea6\u4e3ah\uff0c\u6700\u5927\u5c42\u6570\u4e3ak\uff0c\u6df1\u5ea6\u4e0e\u6700\u5927\u5c42\u6570\u76f8\u540c\uff0ck=h, \u53f6\u5b50\u6570\u4e3a2h; \u7b2ck\u5c42\u7684\u7ed3\u70b9\u6570\u6700\u591a\u662f\uff1a2^(k-1); \u603b\u7ed3\u70b9\u6570\u662f\uff1a2^(k-1)\uff0c\u4e14\u603b\u8282\u70b9\u6570\u4e00\u5b9a\u662f\u5947\u6570"),(0,l.kt)("li",{parentName:"ul"},"\u6811\u7684\u9ad8\u5ea6\u4e3a\u6700\u5927\u5c42\u6b21\u3002\u5373\u7a7a\u7684\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\u662f0\uff0c\u975e\u7a7a\u6811\u7684\u9ad8\u5ea6\u7b49\u4e8e\u5b83\u7684\u6700\u5927\u5c42\u6b21(\u6839\u7684\u5c42\u6b21\u4e3a1\uff0c\u6839\u7684\u5b50\u8282\u70b9\u4e3a\u7b2c2\u5c42\uff0c\u4f9d\u6b21\u7c7b\u63a8)\u3002")),(0,l.kt)("p",null,"N\u53c9\u6811(N-ary Tree)\n\u5e73\u8861\u6811(Balanced Tree)\n\u4e8c\u53c9\u6811(Binary Tree) - \u5e38\u89c1\n\u4e8c\u53c9\u67e5\u627e\u6811(Binary Search Tree) - \u5e38\u89c1\n\u5e73\u8861\u4e8c\u53c9\u6811(AVL Tree)\n\u7ea2\u9ed1\u6811(Red Black Tree)\n2-3\u6811(2\u20133 Tree)"),(0,l.kt)("p",null,"\u4e8c\u53c9\u6811\u4e00\u822c\u7ed3\u6784\uff1a\u4e8c\u53c9\u6811\u7684\u6bcf\u4e2a\u7ed3\u70b9\u81f3\u591a\u53ea\u6709\u4e8c\u68f5\u5b50\u6811\uff0c\u4e8c\u53c9\u6811\u7684\u5b50\u6811\u6709\u5de6\u53f3\u4e4b\u5206\u3002\u4e8c\u53c9\u6811\u7684\u7b2ci\u5c42\u81f3\u591a\u67092^(i-1)\u4e2a\u7ed3\u70b9\uff1b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6ee1\u4e8c\u53c9\u6811\uff1a\u9664\u53f6\u5b50\u7ed3\u70b9\u5916\u7684\u6240\u6709\u7ed3\u70b9\u5747\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u3002\u8282\u70b9\u6570\u8fbe\u5230\u6700\u5927\u503c\uff0c\u6240\u6709\u53f6\u5b50\u7ed3\u70b9\u5fc5\u987b\u5728\u540c\u4e00\u5c42\u4e0a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u82e5\u8bbe\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6\u4e3ah\uff0c\u9664\u7b2c h \u5c42\u5916\uff0c\u5176\u5b83\u5404\u5c42 (1\uff5e(h-1)\u5c42) \u7684\u7ed3\u70b9\u6570\u90fd\u8fbe\u5230\u6700\u5927\u4e2a\u6570\uff0c\u7b2ch\u5c42\u6240\u6709\u7684\u7ed3\u70b9\u90fd\u8fde\u7eed\u96c6\u4e2d\u5728\u6700\u5de6\u8fb9\uff0c\u8fd9\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811\u3002"))),(0,l.kt)("p",null,"\u56fe\u793a:"),(0,l.kt)("h2",{id:"62-\u4e8c\u53c9\u67e5\u627e\u6811"},"6.2. \u4e8c\u53c9\u67e5\u627e\u6811"),(0,l.kt)("h3",{id:"621-\u975e\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811"},"6.2.1. \u975e\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811"),(0,l.kt)("h4",{id:"6211-bstbinary-search-tree-\u67e5\u627e\u6811\u7684\u4e00\u822c\u7ed3\u6784"},"6.2.1.1. BST(Binary Search Tree)-\u67e5\u627e\u6811\u7684\u4e00\u822c\u7ed3\u6784"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5b9a\u4e49: \u5b83\u662f\u7279\u6b8a\u7684\u4e8c\u53c9\u6811, \u8282\u70b9\u53ef\u6bd4\u8f83\uff1a-- ",(0,l.kt)("inlineCode",{parentName:"p"},"\u4efb\u610f\u8282\u70b9, left subNode < node < right subNode")),(0,l.kt)("p",{parentName:"li"},"  \u5bf9\u4e8e\u4e8c\u53c9\u6811\uff0c\u5047\u8bbex\u4e3a\u4e8c\u53c9\u6811\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0cx\u8282\u70b9\u5305\u542b\u5173\u952e\u5b57key\uff0c\u8282\u70b9x\u7684key\u503c\u8bb0\u4e3akey","[x]","\u3002\u5982\u679cy\u662fx\u7684\u5de6\u5b50\u6811\u4e2d\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5219key","[y]"," <= key","[x]","\uff1b\u5982\u679cy\u662fx\u7684\u53f3\u5b50\u6811\u7684\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5219key","[y]"," >= key","[x]","\u3002\u90a3\u4e48\uff0c\u8fd9\u68f5\u6811\u5c31\u662f\u4e8c\u53c9\u67e5\u627e\u6811")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u524d\u9a71\u548c\u540e\u7ee7"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'\u8282\u70b9\u7684\u524d\u9a71\uff1a\u662f\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u8282\u70b9\u3002\u5373\uff0c"\u4e8c\u53c9\u6811\u4e2d\u6570\u636e\u503c\u5c0f\u4e8e\u8be5\u7ed3\u70b9"\u7684"\u6700\u5927\u7ed3\u70b9"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},'\u8282\u70b9\u7684\u540e\u7ee7\uff1a\u662f\u8be5\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u8282\u70b9\u3002\u5373\uff0c"\u4e8c\u53c9\u6811\u4e2d\u6570\u636e\u503c\u5927\u4e8e\u8be5\u7ed3\u70b9"\u7684"\u6700\u5c0f\u7ed3\u70b9"')))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7279\u5f81:"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-java"},"(01) \u82e5\u4efb\u610f\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u5de6\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5c0f\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b\n(02) \u4efb\u610f\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e0d\u7a7a\uff0c\u5219\u53f3\u5b50\u6811\u4e0a\u6240\u6709\u7ed3\u70b9\u7684\u503c\u5747\u5927\u4e8e\u5b83\u7684\u6839\u7ed3\u70b9\u7684\u503c\uff1b\n(03) \u4efb\u610f\u8282\u70b9\u7684\u5de6\u3001\u53f3\u5b50\u6811\u4e5f\u5206\u522b\u4e3a\u4e8c\u53c9\u67e5\u627e\u6811\u3002\n(04) \u6ca1\u6709\u952e\u503c\u76f8\u7b49\u7684\u8282\u70b9\uff08no duplicate nodes\uff09\u3002\n\n"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u65f6\u95f4\u590d\u6742\u5ea6  - \u5e73\u8861\u72b6\u6001\u4e0b, B\u6811\u7684\u641c\u7d22\u6027\u80fd\u903c\u8fd1\u4e8c\u5206\u67e5\u627e(\u63d2\u5165\u548c\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"O(log n)"),"), \u4f46\u662f\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\u4ecd\u7136\u4f1a\u6709",(0,l.kt)("inlineCode",{parentName:"p"},"O(n)"),"\u7684\u65f6\u95f4\u590d\u6742\u5ea6, n \u53ef\u4ee5\u770b\u4f5c \u9ad8\u5ea6"),(0,l.kt)("p",{parentName:"li"},"  \u4e0d\u5e73\u8861\u662f\u600e\u4e48\u9020\u6210\u7684? "),(0,l.kt)("p",{parentName:"li"},"  \u6bd4\u5982 \u63d2\u5165\u7684\u5e8f\u5217\u662f\u6709\u5e8f\u7684\u65f6; \u53ef\u4ee5\u901a\u8fc7\u968f\u673a\u5316\u5efa\u7acb\u4e8c\u53c9\u641c\u7d22\u6811\u6765\u5c3d\u91cf\u7684\u907f\u514d\u8fd9\u79cd\u60c5\u51b5"),(0,l.kt)("p",{parentName:"li"},"  \u518d\u6bd4\u5982 \u7531\u4e8e\u5728\u5220\u9664\u65f6\uff0c\u6211\u4eec\u603b\u662f\u9009\u62e9\u5c06\u5f85\u5220\u9664\u8282\u70b9\u7684\u540e\u7ee7\u4ee3\u66ff\u5b83\u672c\u8eab\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u603b\u662f\u53f3\u8fb9\u7684\u8282\u70b9\u6570\u76ee\u51cf\u5c11\uff0c\u4ee5\u81f3\u4e8e\u6811\u5411\u5de6\u504f\u6c89")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u63d2\u5165\u8fc7\u7a0b: (",(0,l.kt)("a",{parentName:"p",href:"https://lufficc.com/blog/binary-search-tree"},"https://lufficc.com/blog/binary-search-tree")," ",(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/MrListening/p/5782752.html"},"https://www.cnblogs.com/MrListening/p/5782752.html"),")"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u82e5\u5f53\u524d\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u4e3a\u7a7a\uff0c\u5219\u63d2\u5165\u7684\u5143\u7d20\u4e3a\u6839\u8282\u70b9")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u82e5\u63d2\u5165\u7684\u5143\u7d20\u503c\u5c0f\u4e8e\u6839\u8282\u70b9\u503c\uff0c\u5219\u5c06\u5143\u7d20\u63d2\u5165\u5230\u5de6\u5b50\u6811\u4e2d")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u82e5\u63d2\u5165\u7684\u5143\u7d20\u503c\u4e0d\u5c0f\u4e8e\u6839\u8282\u70b9\u503c\uff0c\u5219\u5c06\u5143\u7d20\u63d2\u5165\u5230\u53f3\u5b50\u6811\u4e2d")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5220\u9664\u8fc7\u7a0b(\u5e0c\u671b\u5220\u9664\u8282\u70b9 p)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"p\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\u8be5\u8282\u70b9\uff0c\u518d\u4fee\u6539\u5176\u7236\u8282\u70b9\u7684\u6307\u9488\uff08\u6ce8\u610f\u5206\u662f\u6839\u8282\u70b9\u548c\u4e0d\u662f\u6839\u8282\u70b9\uff09")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"p\u4e3a\u5355\u652f\u8282\u70b9\uff08\u5373\u53ea\u6709\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\uff09\u3002\u8ba9p\u7684\u5b50\u6811\u4e0ep\u7684\u7236\u4eb2\u8282\u70b9\u76f8\u8fde\uff0c\u5220\u9664p\u5373\u53ef")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"p\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u5747\u4e0d\u7a7a - \u627e\u5230 \u540e\u7ee7/\u524d\u9a71\u8282\u70b9 y \u79fb\u52a8\u8fc7\u6765\u4ee3\u66ff p, \u7136\u540e\u8fde\u63a5 y parent \u548c y \u7684 child (\u5bf9\u4e8e \u540e\u7ee7: \u8ba9 y \u7684 parent \u6210\u4e3a y \u7684\u53f3\u5b50\u6811 \u7684 parent; \u5bf9\u4e8e \u524d\u9a71: \u8ba9 y \u7684 parent \u6210\u4e3a y \u7684\u5de6\u5b50\u6811\u7684 parent )"),(0,l.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u8981\u627e \u540e\u7ee7/\u524d\u9a71? - \u56e0\u4e3a \u4ed6\u4eec\u4e00\u5b9a\u662f\u5355\u652f\u8282\u70b9(\u540e\u7ee7\u6ca1\u6709\u5de6\u5b50\u6811/\u524d\u9a71\u6ca1\u6709\u53f3\u5b50\u6811), \u8fd9\u79cd\u8282\u70b9\u5bb9\u6613\u79fb\u52a8, \u5e76\u4e14\u6ee1\u8db3\u8282\u70b9\u7684\u5927\u5c0f\u5173\u7cfb")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u641c\u7d22\u8fc7\u7a0b: \u4ece\u6839\u7ed3\u70b9\u5f00\u59cb\uff0c\u5982\u679c\u67e5\u8be2\u7684\u5173\u952e\u5b57\u4e0e\u7ed3\u70b9\u7684\u5173\u952e\u5b57\u76f8\u7b49\uff0c\u90a3\u4e48\u5c31\u547d\u4e2d; \u5426\u5219\uff0c\u5982\u679c\u67e5\u8be2\u5173\u952e\u5b57\u6bd4\u7ed3\u70b9\u5173\u952e\u5b57\u5c0f\uff0c\u5c31\u8fdb\u5165\u5de6\u5b50\u6811\uff1b\u5982\u679c\u6bd4\u7ed3\u70b9\u5173\u952e\u5b57\u5927\uff0c\u5c31\u8fdb\u5165\u53f3\u5b50\u6811\uff1b\u5982\u679c\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u7684\u6307\u9488\u4e3a\u7a7a\uff0c\u5219\u62a5\u544a\u627e\u4e0d\u5230\u76f8\u5e94\u7684\u5173\u952e\u5b57\uff1b"),(0,l.kt)("p",{parentName:"li"},"\u5982\u679cB\u6811\u7684\u6240\u6709\u975e\u53f6\u5b50\u7ed3\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u7684\u7ed3\u70b9\u6570\u76ee\u5747\u4fdd\u6301\u5dee\u4e0d\u591a\uff08\u5e73\u8861\uff09\uff0c\u90a3\u4e48B\u6811\u7684\u641c\u7d22\u6027\u80fd\u903c\u8fd1\u4e8c\u5206\u67e5\u627e(\u63d2\u5165\u548c\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(log n))\uff1b\u5b83\u6bd4\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u7684\u4e8c\u5206\u67e5\u627e\u7684\u4f18\u70b9\u662f\uff0c\u6539\u53d8B\u6811\u7ed3\u6784\uff08\u63d2\u5165\u4e0e\u5220\u9664\u7ed3\u70b9\uff09\u4e0d\u9700\u8981\u79fb\u52a8\u5927\u6bb5\u7684\u5185\u5b58\u6570\u636e (\u6bd4\u5982 b tree\u5728\u63d2\u5165\u8282\u70b9\u65f6\u5019, \u53ea\u9700\u8981\u5c06\u6307\u9488\u6307\u5411\u65b0\u589e\u8282\u70b9, \u539f\u6709\u6570\u636e\u5728\u5185\u5b58\u4e2d\u7684\u4f4d\u7f6e\u4e0d\u53d8)"),(0,l.kt)("p",{parentName:"li"},"\u76f8\u53cd, \u5982\u679c\u5de6\u53f3\u5b50\u6811\u4e0d\u5e73\u8861, \u8fd9\u65f6\u5019\u7684\u641c\u7d22\u6027\u80fd\u5df2\u7ecf\u662f\u7ebf\u6027\u7684\u4e86 (\u6b64\u65f6\u662f\u6700\u574f\u7684\u60c5\u51b5, \u4f1a\u6709O(n)\u7684\u65f6\u95f4\u590d\u6742\u5ea6), \u8981\u907f\u514d\u8fd9\u6837\u7684\u4e0d\u5e73\u8861 b tree"),(0,l.kt)("p",{parentName:"li"},"\u5b9e\u9645\u4f7f\u7528\u7684B\u6811\u90fd\u662f\u5728\u539fB\u6811\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u5e73\u8861\u7b97\u6cd5\uff0c\u5373\u201c",(0,l.kt)("inlineCode",{parentName:"p"},"\u5e73\u8861\u4e8c\u53c9\u6811"),"\u201d\uff08binary balanced tree\uff0c\u53c8\u79f0AVL\u6811\uff09\uff1b\u5982\u4f55\u4fdd\u6301B\u6811\u7ed3\u70b9\u5206\u5e03\u5747\u5300\u7684\u5e73\u8861\u7b97\u6cd5\u662f\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u5173\u952e\uff1b\u5e73\u8861\u7b97\u6cd5\u662f\u4e00\u79cd\u5728B\u6811\u4e2d\u63d2\u5165\u548c\u5220\u9664\u7ed3\u70b9\u7684\u7b56\u7565\uff1b"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u51e0\u79cd\u904d\u5386\u65b9\u5f0f - \u524d\u5e8f\u904d\u5386\u3001\u4e2d\u5e8f\u904d\u5386\u3001\u540e\u5e8f\u904d\u53863\u79cd\u65b9\u5f0f\u3002 - \u5bf9\u4e8c\u53c9\u67e5\u627e\u6811\u8fdb\u884c\u4e2d\u5e8f\u904d\u5386\uff0c\u5373\u53ef\u5f97\u5230\u6709\u5e8f(\u4ece\u5c0f\u5230\u5927)\u7684\u6570\u5217")),(0,l.kt)("p",null,"ref: ",(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/qq_33243189/article/details/80222629"},"https://blog.csdn.net/qq_33243189/article/details/80222629")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'2.1 \u524d\u5e8f\u904d\u5386 - parent\u8282\u70b9\u6392\u6700\u5148\uff0c\u7136\u540e\u540c\u7ea7\u5148\u5de6\u540e\u53f3\n\u82e5\u4e8c\u53c9\u6811\u975e\u7a7a\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n(01) \u8bbf\u95ee\u6839\u7ed3\u70b9\uff1b\n(02) \u5148\u5e8f\u904d\u5386\u5de6\u5b50\u6811\uff1b\n(03) \u5148\u5e8f\u904d\u5386\u53f3\u5b50\u6811\u3002\n\nprivate void preOrder(BSTNode<T> tree) {\n    if(tree != null) {\n        System.out.print(tree.key+" ");\n        preOrder(tree.left);\n        preOrder(tree.right);\n    }\n}\n\npublic void preOrder() {\n    preOrder(mRoot);\n}\n \n////////////////////////////////////////\n\n2.2 \u4e2d\u5e8f\u904d\u5386 -  \u5148\u5de6\u540eparent\u6700\u540e\u53f3\n\n\u82e5\u4e8c\u53c9\u6811\u975e\u7a7a\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n(01) \u4e2d\u5e8f\u904d\u5386\u5de6\u5b50\u6811\uff1b\n(02) \u8bbf\u95ee\u6839\u7ed3\u70b9\uff1b\n(03) \u4e2d\u5e8f\u904d\u5386\u53f3\u5b50\u6811\u3002\n\nprivate void inOrder(BSTNode<T> tree) {\n    if(tree != null) {\n        inOrder(tree.left);\n        System.out.print(tree.key+" ");\n        inOrder(tree.right);\n    }\n}\n\npublic void inOrder() {\n    inOrder(mRoot);\n}\n ////////////////////////////////////////////////////\n\n2.3 \u540e\u5e8f\u904d\u5386 - \u5148\u5de6\u540e\u53f3\u6700\u540eparent\n\n\u82e5\u4e8c\u53c9\u6811\u975e\u7a7a\uff0c\u5219\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n(01) \u540e\u5e8f\u904d\u5386\u5de6\u5b50\u6811\uff1b\n(02) \u540e\u5e8f\u904d\u5386\u53f3\u5b50\u6811\uff1b\n(03) \u8bbf\u95ee\u6839\u7ed3\u70b9\u3002\n\nprivate void postOrder(BSTNode<T> tree) {\n    if(tree != null)\n    {\n        postOrder(tree.left);\n        postOrder(tree.right);\n        System.out.print(tree.key+" ");\n    }\n}\n\npublic void postOrder() {\n    postOrder(mRoot);\n}\n\n')),(0,l.kt)("p",null,"\u904d\u5386\u7ed3\u679c\u56fe\u793a:"),(0,l.kt)("p",null,"Java\u5b9e\u73b0"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'\u904d\u5386: \u524d\u5e8f, \u4e2d\u5e8f, \u540e\u5e8f\u904d\u5386\nfind \u67e5\u627e\nmax \u6700\u5927\u503c\nmin \u6700\u5c0f\u503c\npredecessor \u524d\u9a71\u8282\u70b9\nsuccessor \u540e\u7ee7\u8282\u70b9\ninsert \u63d2\u5165\nremove \u5220\u9664\ndestroy \u9500\u6bc1\u4e8c\u53c9\u6811\n\n/**\n * @author xiaoyu\n * @since 1.0\n */\npublic class BinarySearchTree<T extends Comparable<T>> {\n\n    private Node<T> root;// root node\n\n    public class Node<T extends Comparable<T>> {\n        private T       value;\n        private Node<T> parent;\n        private Node<T> left;\n        private Node<T> right;\n\n        public Node(T value, Node<T> parent, Node<T> left, Node<T> right) {\n            this.value = value;\n            this.parent = parent;\n            this.left = left;\n            this.right = right;\n        }\n    }\n\n    public BinarySearchTree(T value) {\n        root = new Node<>(value, null, null, null);\n    }\n\n    // ------------------------------------------------\n\n    /**\n     * \u524d\u5e8f\u904d\u5386 - parent\u8282\u70b9\u6392\u6700\u5148\uff0c\u7136\u540e\u540c\u7ea7\u5148\u5de6\u540e\u53f3\n     *\n     * @param node\n     */\n    public void preOrderTraverse(Node<T> node) {\n        if (node == null) {\n            throw new RuntimeException("can not traverse null node");\n        }\n        System.out.print(node.value + " ");// print current node\'s value\n        preOrderTraverse(node.left);   //\n        preOrderTraverse(node.right);\n    }\n\n    /**\n     * \u4e2d\u5e8f\u904d\u5386 - \u5148\u5de6\u540eparent\u6700\u540e\u53f3\n     *\n     * @param node\n     */\n    public void middleOrderTraverse(Node<T> node) {\n        if (node == null) {\n            throw new RuntimeException("cannot traverse null node");\n        }\n        middleOrderTraverse(node.left);\n        System.out.print(node.value + " ");\n        middleOrderTraverse(node.right);\n    }\n\n    /**\n     * \u540e\u5e8f\u904d\u5386 - \u5148\u5de6\u540e\u53f3\u6700\u540eparent\n     *\n     * @param node\n     */\n    public void postOrderTraverse(Node<T> node) {\n        if (node == null) {\n            throw new RuntimeException("cannot traverse null node");\n        }\n        postOrderTraverse(node.left);\n        postOrderTraverse(node.right);\n        System.out.println(node.value + " ");\n    }\n\n    // ------------------------------------------------------\n\n    /**\n     * \u4f7f\u7528\u9012\u5f52\u67e5\u627e\n     *\n     * @param enterNode\n     * @param value\n     * @return\n     */\n    public Node<T> find(Node<T> enterNode, T value) {\n        if (enterNode == null) {\n            throw new RuntimeException("cannot find with null enterNode");\n        }\n\n        int tmp = value.compareTo(enterNode.value);\n        if (tmp == 0) {\n            return enterNode;\n        } else if (tmp < 0) {  // value < enterNode.value\n            return find(enterNode.left, value);\n        } else {\n            return find(enterNode.right, value);\n        }\n    }\n\n    /**\n     * \u6ca1\u6709\u9012\u5f52\u7684\u67e5\u627e\n     *\n     * @param enterNode\n     * @param value\n     * @return\n     */\n    public Node<T> find_2(Node<T> enterNode, T value) {\n        if (enterNode == null) {\n            throw new RuntimeException("cannot find with null enterNode");\n        }\n        while (enterNode != null) {// \u5982\u679c enterNode == null \u4e86\uff0c \u8bc1\u660e\u5faa\u73af\n            // \u5230\u53f6\u5b50\u8282\u70b9\u4e86\uff0c \u8df3\u51fa, \u8fd4\u56denull\n            int tmp = value.compareTo(enterNode.value);\n            if (tmp == 0) {\n                return enterNode;\n            } else if (tmp < 0) {\n                enterNode = enterNode.left;\n            } else {\n                enterNode = enterNode.right;\n            }\n        }\n        return null;\n    }\n\n    public Node<T> find(T value) {\n        return this.find(root, value);\n    }\n\n    // -------------------------------------------------------------\n\n    /**\n     * \u6700\u5927\u503c\n     *\n     * @param enterNode\n     * @return\n     */\n    public Node<T> maxNode(Node<T> enterNode) {\n        while (true) {\n            Node<T> right = enterNode.right;\n            if (right == null) { // \u8bc1\u660e\u6b64\u65f6enterNode \u662f\u53f6\u5b50\u8282\u70b9\u4e86\n                return enterNode;\n            }\n            enterNode = right;\n        }\n    }\n\n    /**\n     * \u6700\u5c0f\u503c\n     *\n     * @param enterNode\n     * @return\n     */\n    public Node<T> minNode(Node<T> enterNode) {\n        while (true) {\n            Node<T> left = enterNode.left;\n            if (left == null) {\n                return enterNode;\n            }\n            enterNode = left;\n        }\n    }\n\n    // ------------------------------------\n\n    /**\n     * \u8282\u70b9\u7684\u524d\u9a71\uff1a\u662f\u8be5\u8282\u70b9\u7684\u5de6\u5b50\u6811\u4e2d\u7684\u6700\u5927\u8282\u70b9\u3002\u5373\u6bd4\u5f53\u524d\u8282\u70b9\u5c0f\u7684\u6700\u5927\u8282\u70b9\n     *\n     * @param enterNode\n     * @return\n     */\n    public Node<T> predecessor(Node<T> enterNode) {\n        Node<T> left = enterNode.left;\n        // enterNode \u5b58\u5728 left node\n        //        p\n        //      /  \\\n        //     *    *\n        //      \\\n        //      ...\n        //       \\\n        //        o\n        //    - \u90a3\u4e48\u53ea\u9700\u8981 \u4ee5\u8fd9\u4e2aleft node \u4e3a \u6839\u8282\u70b9\uff0c \u627e\u5230\u6700\u5927\u503c\u5373\u53ef, \u5373\u8fd9\u91cc\u7684 o\n        if (left != null) {\n            return this.maxNode(left);\n        }\n\n        // \u5982\u679c enterNode \u6ca1\u6709 left node\uff0c\u5206\u4e24\u79cd\u60c5\u51b5\n        // 1. enterNode \u81ea\u8eab\u662f\u4e00\u4e2a right node\n        //        o\n        //      /  \\\n        //     *    p\n        //          \\\n        //     - \u627e\u5230 parent, \u5373\u8fd9\u91cc\u7684 o\uff0c \u8fd4\u56deparent (\u8fd9\u4e2a parent \u5c31\u662f\u6bd4 enterNode \u5c0f\u7684\u6700\u5927\u8282\u70b9)\n        // 2. enterNode \u81ea\u8eab\u662f\u4e00\u4e2aleft node\n        //      o\n        //       \\\n        //        *\n        //      /  \\\n        //     p    *\n        //     \\\n        //  - \u5219\u67e5\u627e"enterNode\u7684\u6700\u4f4e\u7684\u7236\u7ed3\u70b9\uff0c\u5e76\u4e14\u8be5\u7236\u7ed3\u70b9\u8981\u5177\u6709\u53f3\u5b69\u5b50", \u5373\u8fd9\u91cc\u7684 o\uff0c\u627e\n        //        \u5230\u7684\u8fd9\u4e2a"\u6700\u4f4e\u7684\u7236\u7ed3\u70b9"\u5c31\u662f"x\u7684\u524d\u9a71\u7ed3\u70b9"\n        Node<T> parent = enterNode.parent;\n        if (parent == null) {// enterNode is root\n            return null;\n        }\n        if (enterNode == parent.right) {\n            return parent;\n        }\n        if (enterNode == parent.left) {\n            // \u5faa\u73af\u627e parent\n            while (true) {\n                enterNode = parent; // enterNode \u6307\u9488\u79fb\u52a8\u5230 parent\n                parent = enterNode.parent; // parent \u6307\u9488\u79fb\u52a8\u5230 \u65b0\u7684 parent\n                if (enterNode == parent.right) {\n                    return parent;\n                }\n            }\n        }\n        throw new RuntimeException(MessageFormat.format(\n                "\u5b50\u8282\u70b9{0} \u548c \u7236\u8282\u70b9 {1} \u65ad\u5f00\u4e86", enterNode, parent));\n    }\n\n    /**\n     * \u8282\u70b9\u7684\u540e\u7ee7\uff1a\u662f\u8be5\u8282\u70b9\u7684\u53f3\u5b50\u6811\u4e2d\u7684\u6700\u5c0f\u8282\u70b9\uff0c \u5373\u6bd4\u5f53\u524d\u8282\u70b9\u5927\u7684\u6700\u5c0f\u8282\u70b9\n     *\n     * @param enterNode\n     * @return\n     */\n    public Node<T> successor(Node<T> enterNode) {\n        // \u5982\u679c\u5b58\u5728 right node\uff0c\u5219\u8fd4\u56de \u4ee5\u8fd9\u4e2a right node \u4e3a\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9\n        Node<T> right = enterNode.right;\n        if (right != null) {\n            return minNode(right);\n        }\n\n        Node<T> parent = enterNode.parent;\n        if (parent == null) {\n            return null;\n        }\n        if (enterNode == parent.left) {\n            return parent;\n        }\n        if (enterNode == parent.right) {\n            while (true) {\n                enterNode = parent;\n                parent = enterNode.parent;\n                if (enterNode == parent.left) {\n                    return parent;\n                }\n            }\n        }\n        throw new RuntimeException(MessageFormat.format(\n                "\u5b50\u8282\u70b9{0} \u548c \u7236\u8282\u70b9 {1} \u65ad\u5f00\u4e86", enterNode, parent));\n    }\n\n    // ----------------------------------------------\n\n    /**\n     * insert node into the tree\n     *\n     * @param node \u5f85\u63d2\u5165\u8282\u70b9\n     */\n    public void insert(Node<T> node) {\n        Node<T> enterPoint = this.root;\n        while (true) {\n            Node<T> enterPointTmp = enterPoint;// \u6682\u5b58\u6307\u9488\u79fb\u52a8\u524d\u7684 enterPoint\n\n            int tmp = node.value.compareTo(enterPoint.value);\n            if (tmp == 0) {\n                throw new RuntimeException("value already exist");\n            } else if (tmp < 0) {\n                enterPoint = enterPoint.left;\n            } else {\n                enterPoint = enterPoint.right;\n            }\n\n            if (enterPoint == null) {\n                enterPoint = enterPointTmp;\n                break;\n            }\n        }\n\n        int tmp = node.value.compareTo(enterPoint.value);\n        if (tmp == 0) {\n            throw new RuntimeException("value already exist");\n        } else if (tmp < 0) {\n            enterPoint.left = node;\n        } else {\n            enterPoint.right = node;\n        }\n\n    }\n\n    // ------------------------------------------\n\n    /**\n     * delete specific node\n     * @param node\n     */\n    public void delete(Node<T> node) {\n        // \u82e5 node \u4e3a leaf\u8282\u70b9\uff0c\u76f4\u63a5\u5220\u9664\n        //       *           *\n        //      /             \\\n        //     p               p\n        // \u82e5 node \u4e3a "\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9", \u8fd9\u4e2a\u5b50\u8282\u70b9\u4e3a singleSon, \u90a3\u4e48\u7528 singleSon \u4ee3\u66ff node \u5373\u53ef\n        //       p       p\n        //      /         \\\n        //     *           *\n        // \u82e5 node \u4e3a "\u6709\u4e24\u4e2a\u5b50\u8282\u70b9",   \u9700\u8981\u627enode\u7684\u540e\u7ee7\u8282\u70b9successor \u6216\u8005 \u524d\u9a71 predecessor, \u66ff\u6362 node, \u5206 2 \u79cd\u60c5\u51b5\n        //      1. successor \u4e3a node \u7684\u76f4\u63a5\u5b50\u8282\u70b9(\u5373\u53f3\u8282\u70b9)\n        //         p\n        //        / \\\n        //       *   su\n        //          - \u76f4\u63a5\u7528 successor \u66ff\u4ee3 node\n        //     2. successor \u4e0d\u4e3a node \u7684\u76f4\u63a5\u5b50\u8282\u70b9(\u5373\u4e0d\u662f\u53f3\u8282\u70b9)\n        //         p\n        //        / \\\n        //       *   *\n        //          /\n        //         su\n        //          - \u7528 successor \u66ff\u6362 node\n        // # \u4e3a\u4ec0\u4e48\u8981\u627e successor\u4ee3\u66ffnode? - \u60f3\u8981\u7528 o \u4ee3\u66ff node , o \u9700\u8981 \u6ee1\u8db3 node.left < o (node) < node.right\n        //      \u800c successor, predecessor\u7684\u4f4d\u7f6e\u6ee1\u8db3 node.left < predecessor < o (node) < successor < node.right\n        Node<T> left = node.left;\n        Node<T> right = node.right;\n        Node<T> parent = node.parent;\n\n        if (left ==null && right == null) {// \u6ca1\u6709\u5b50\u8282\u70b9\n            if (parent.left == node) {\n                parent.left = null;\n            }\n            if (parent.right == null) {\n                parent.right = null;\n            }\n        }\n\n        if (left != null && right != null) {// \u6709\u4e24\u4e2a\u5b50\u8282\u70b9\n            Node<T> successor = this.successor(node);\n            if (parent.left == node) {\n                parent.left = successor;\n            }\n            if (parent.right == node) {\n                parent.right = successor;\n            }\n            successor.parent = parent;\n\n            left.parent = successor;\n            successor.left = left;\n\n            if (right != successor) {\n                right.parent = successor;\n                successor.right = right;\n            }\n\n        }\n\n        // \u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9\n        Node<T> son = null;\n        if (left != null) {\n            son = left;\n        }\n        if (right != null) {\n            son = right;\n        }\n        if (parent.left == node) {\n            parent.left = son;\n        }\n        if (parent.right == node) {\n            parent.right = son;\n        }\n\n        node.parent = node.left = node.right = null;// \u5220\u9664node\n    }\n\n    /**\n     * destroy tree\n     */\n    public void destroy(Node<T> enterNode) {\n        if (enterNode == null) {\n            return;\n        }\n        Node<T> left = enterNode.left;\n        if (left != null) {\n            destroy(left);\n        }\n        Node<T> right = enterNode.right;\n        if (right != null) {\n            destroy(right);\n        }\n        enterNode = null;\n    }\n\n    public void destroy() {\n        destroy(root);\n    }\n\n}\n\n\n')),(0,l.kt)("h4",{id:"6212-splay-tree-\u4f38\u5c55\u6811"},"6.2.1.2. Splay Tree \u4f38\u5c55\u6811"),(0,l.kt)("p",null,"\u4f38\u5c55\u6811(Splay Tree)\u662f\u7279\u6b8a\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002\u5b83\u7684\u7279\u6b8a\u662f\u6307\uff0c\u5b83\u9664\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"\u672c\u8eab\u662f\u68f5\u4e8c\u53c9\u67e5\u627e\u6811"),"\u4e4b\u5916\uff0c\u5b83\u8fd8\u5177\u5907\u4e00\u4e2a\u7279\u70b9: ",(0,l.kt)("inlineCode",{parentName:"p"},"\u5f53\u67d0\u4e2a\u8282\u70b9\u88ab\u8bbf\u95ee\u65f6\uff0c\u4f38\u5c55\u6811\u4f1a\u901a\u8fc7\u65cb\u8f6c\u4f7f\u8be5\u8282\u70b9\u6210\u4e3a\u6811\u6839"),"\u3002\u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff0c\u4e0b\u6b21\u8981\u8bbf\u95ee\u8be5\u8282\u70b9\u65f6\uff0c\u80fd\u591f\u8fc5\u901f\u7684\u8bbf\u95ee\u5230\u8be5\u8282\u70b9\u3002"),(0,l.kt)("h3",{id:"622-\u5e73\u8861\u4e8c\u53c9\u6811"},"6.2.2. \u5e73\u8861\u4e8c\u53c9\u6811"),(0,l.kt)("h4",{id:"6221-avl\u6811"},"6.2.2.1. AVL\u6811"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://www.cnblogs.com/skywang12345/p/3577479.html"},"http://www.cnblogs.com/skywang12345/p/3577479.html")),(0,l.kt)("p",null,'\u76f8\u6bd4\u4e8e"\u4e8c\u53c9\u67e5\u627e\u6811"\uff0c\u5b83\u7684\u7279\u70b9\u662f\uff1aAVL\u6811\u4e2d\u4efb\u4f55\u8282\u70b9\u7684',(0,l.kt)("inlineCode",{parentName:"p"},"\u5de6\u53f3\u4e24\u4e2a\u5b50\u6811\u7684\u9ad8\u5ea6\u6700\u5927\u5dee\u522b\u4e3a1"),", \u6240\u4ee5\u5b83\u4e5f\u88ab\u79f0\u4e3a\u9ad8\u5ea6\u5e73\u8861\u6811; \u6ca1\u6709\u503c\u76f8\u7b49\u91cd\u590d\u7684\u8282\u70b9"),(0,l.kt)("p",null,"\u8fd9\u4e2a\u65b9\u6848\u5f88\u597d\u7684\u89e3\u51b3\u4e86\u4e8c\u53c9\u67e5\u627e\u6811\u9000\u5316\u6210\u94fe\u8868\u7684\u95ee\u9898\uff0c\u628a\u63d2\u5165\uff0c\u67e5\u627e\uff0c\u5220\u9664\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u6700\u597d\u60c5\u51b5\u548c\u6700\u574f\u60c5\u51b5\u90fd\u7ef4\u6301\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"O(logN)")),(0,l.kt)("p",null,"\u4e0d\u5e73\u8861\u5206\u56db\u79cd\u60c5\u51b5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'LL - LeftLeft\uff0c\u4e5f\u79f0\u4e3a"\u5de6\u5de6"\u3002\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u5bfc\u81f4"\u6839\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6"\u6bd4"\u6839\u7684\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6"\u59272\uff0c\u5bfc\u81f4AVL\u6811\u5931\u53bb\u4e86\u5e73\u8861\u3002'),(0,l.kt)("li",{parentName:"ul"},'LR\uff1aLeftRight\uff0c\u4e5f\u79f0\u4e3a"\u5de6\u53f3"\u3002\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u5bfc\u81f4"\u6839\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6"\u6bd4"\u6839\u7684\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6"\u59272\uff0c\u5bfc\u81f4AVL\u6811\u5931\u53bb\u4e86\u5e73\u8861'),(0,l.kt)("li",{parentName:"ul"},'RL\uff1aRightLeft\uff0c\u79f0\u4e3a"\u53f3\u5de6"\u3002\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u5bfc\u81f4"\u6839\u7684\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6"\u6bd4"\u6839\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6"\u59272\uff0c\u5bfc\u81f4AVL\u6811\u5931\u53bb\u4e86\u5e73\u8861\u3002'),(0,l.kt)("li",{parentName:"ul"},'RR\uff1aRightRight\uff0c\u79f0\u4e3a"\u53f3\u53f3"\u3002\u63d2\u5165\u6216\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u540e\uff0c\u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9\uff0c\u5bfc\u81f4"\u6839\u7684\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6"\u6bd4"\u6839\u7684\u5de6\u5b50\u6811\u7684\u9ad8\u5ea6"\u59272\uff0c\u5bfc\u81f4AVL\u6811\u5931\u53bb\u4e86\u5e73\u8861')),(0,l.kt)("p",null,"\u56fe\u793a:"),(0,l.kt)("p",null,"\u5bf9\u5e94\u7684\u65cb\u8f6c\u64cd\u4f5c"),(0,l.kt)("p",null,'LL\u5931\u53bb\u5e73\u8861\u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u65cb\u8f6c\u8ba9AVL\u6811\u6062\u590d\u5e73\u8861, LL\u65cb\u8f6c\u662f\u56f4\u7ed5"\u5931\u53bb\u5e73\u8861\u7684AVL\u6839\u8282\u70b9"\u8fdb\u884c\u7684 - \u5c06\u65cb\u8f6c\u8282\u70b9\u53d8\u4e3a\u53f3\u5b50\u8282\u70b9'),(0,l.kt)("p",null,"\u65cb\u8f6c\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private AVLTreeNode<T> leftLeftRotation(AVLTreeNode<T> k2) {\n    AVLTreeNode<T> k1;\n\n    k1 = k2.left;\n    k2.left = k1.right;\n    k1.right = k2;\n\n    k2.height = max( height(k2.left), height(k2.right)) + 1;\n    k1.height = max( height(k1.left), k2.height) + 1;\n\n    return k1;\n}\n\n")),(0,l.kt)("p",null,"RR\u662f\u4e0eLL\u5bf9\u79f0\u7684\u60c5\u51b5 - \u5c06\u65cb\u8f6c\u8282\u70b9\u53d8\u4e3a\u5de6\u5b50\u8282\u70b9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private AVLTreeNode<T> rightRightRotation(AVLTreeNode<T> k1) {\n    AVLTreeNode<T> k2;\n\n    k2 = k1.right;\n    k1.right = k2.left;\n    k2.left = k1;\n\n    k1.height = max( height(k1.left), height(k1.right)) + 1;\n    k2.height = max( height(k2.right), k1.height) + 1;\n\n    return k2;\n}\n\n")),(0,l.kt)("p",null,"LR\u5931\u53bb\u5e73\u8861\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7ecf\u8fc7\u4e24\u6b21\u65cb\u8f6c\u624d\u80fd\u8ba9AVL\u6811\u6062\u590d\u5e73\u8861\uff1a\u5148\u9488\u5bf9\u5c40\u90e8\uff08root\u7684\u5de6\u5b50\u6811\uff09\u8fdb\u884c\u4e00\u6b21 RR\u5355\u65cb\u8f6c\uff08\u5c06\u65cb\u8f6c\u8282\u70b9\u53d8\u4e3a\u5de6\u5b50\u8282\u70b9\uff09\uff0c \u6b64\u65f6 \u6574\u68f5\u6811\u8f6c\u6362\u4e3a\u4e86 LL \u7684\u60c5\u51b5 \uff0c \u518d\u8fdb\u884c LL\u5355\u65cb\u8f6c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private AVLTreeNode<T> leftRightRotation(AVLTreeNode<T> k3) {\n    k3.left = rightRightRotation(k3.left);\n\n    return leftLeftRotation(k3);\n}\n\n")),(0,l.kt)("p",null,"RL\u662f\u4e0eLR\u7684\u5bf9\u79f0\u60c5\u51b5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"private AVLTreeNode<T> rightLeftRotation(AVLTreeNode<T> k1) {\n    k1.right = leftLeftRotation(k1.right);\n\n    return rightRightRotation(k1);\n}\n\n")),(0,l.kt)("p",null,"\u5168\u90e8\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u81ea\u5e73\u8861\u4e8c\u53c9\u6811\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class AVLTree<T extends Comparable<T>> {\n\n    private Node<T> root;\n\n    private class Node<T extends Comparable> {// \u6ca1\u6709 parent \u6210\u5458\n        private T       value;\n        private Node<T> left;\n        private Node<T> right;\n        private int     height;\n\n        public Node(T value, Node<T> left, Node<T> right) {\n            this.value = value;\n            this.left = left;\n            this.right = right;\n            this.height = 0;\n        }\n    }\n\n    /**\n     * LL\uff1a\n     * \u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u5de6\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9 ( x \u6709\u5b50\u8282\u70b9, \u9020\u6210\u5de6\u8fb9\u504f\u91cd)\n     * <pre>\n     *         rn                    l\n     *       /  \\                  /  \\\n     *      l    r     --\x3e        x    rn\n     *    /  \\                   /\\   / \\\n     *   x    y                      y   r\n     *  /\\\n     * </pre>\n     *\n     * @param rotationNode \u56f4\u7ed5\u65cb\u8f6c\u7684\u8282\u70b9\n     * @return \u65cb\u8f6c\u540e\u7684\u6839\u8282\u70b9\n     */\n    public Node<T> leftLeftRotation(Node<T> rotationNode) {\n        Node<T> leftToTop = rotationNode.left;\n        rotationNode.left = leftToTop.right;\n        leftToTop.right = rotationNode;\n\n        rotationNode.height = max(height(rotationNode.left), height(rotationNode.right)) + 1;\n        leftToTop.height = max(height(leftToTop.left), height(leftToTop.right)) + 1;\n\n        return leftToTop;\n    }\n\n    /**\n     * RR:\n     * \u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u7684\u53f3\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9(y \u6709\u5b50\u8282\u70b9, \u9020\u6210\u53f3\u8fb9\u504f\u91cd)\n     *\n     * <pre>\n     *         rn                     r\n     *        /  \\                  /  \\\n     *      l    r     --\x3e        rn    y\n     *          / \\              / \\   /\\\n     *         x   y            l   x\n     *            /\\\n     * </pre>\n     *\n     * @param rotationNode\n     * @return\n     */\n    public Node<T> rightRightRotation(Node<T> rotationNode) {\n        Node<T> rightToTop = rotationNode.right;\n        rotationNode.right = rightToTop.left;\n        rightToTop.left = rotationNode;\n\n        rotationNode.height = max(height(rotationNode.left), height(rotationNode.right)) + 1;\n        rightToTop.height = max(height(rightToTop.left), height(rightToTop.right)) + 1;\n\n        return rightToTop;\n    }\n\n    /**\n     * LR:\n     * \u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u53f3\u5b50\u6811\u8fd8\u6709\u975e\u7a7a\u5b50\u8282\u70b9\n     * \u7b2c\u4e00\u6b21\u65cb\u8f6c - RR - \u901a\u8fc7\u5c40\u90e8 RR\u65cb\u8f6c, \u8f6c\u5316\u4e3a\u5b8c\u5168\u7684 \u5de6\u5de6\u7c7b\u578b\n     * \u7b2c\u4e8c\u6b21\u65cb\u8f6c - LL - LL \u65cb\u8f6c\n     *\n     * <pre>\n     *         rn                        rn                          y\n     *       /  \\                      /  \\                        /  \\\n     *      l    r     -- RR ->       y    r   -- LL --\x3e          l    rn\n     *    /  \\                      /  \\                        / \\   / \\\n     *   x    y                    l    w                      x  z  w   r\n     *       / \\                 /  \\\n     *      z   w               x   z\n     * </pre>\n     *\n     * @param rotationNode\n     * @return\n     */\n    public Node<T> leftRightRotation(Node<T> rotationNode) {\n        rotationNode.left = this.rightRightRotation(rotationNode.left);\n        return leftLeftRotation(rotationNode);\n    }\n\n    /**\n     * RL:\n     * \u548c LR \u76f8\u53cd\n     * @param rotationNode\n     * @return\n     */\n    public Node<T> rightLeftRotation(Node<T> rotationNode) {\n        rotationNode.right = this.leftLeftRotation(rotationNode.right);\n        return rightRightRotation(rotationNode);\n    }\n\n    // ----------------------------------------------------\n\n    /**\n     * \u63d2\u5165\n     * @param enterNode \u6839\u8282\u70b9\n     * @param value \u63d2\u5165\u503c\n     * @return\n     */\n    private Node<T> insert(Node<T> enterNode, T value) {\n        if (enterNode == null) {\n            enterNode = new Node<>(value, null, null);\n        } else {\n            int compareValue = value.compareTo(enterNode.value);\n            if (compareValue < 0) { // \u5c06 value \u63d2\u5165\u5230 \u5de6\u5b50\u6811\n                enterNode.left = insert(enterNode.left, value);\n                // \u63d2\u5165\u540e\uff0c \u5982\u679c\u5931\u53bb\u5e73\u8861\uff0c \u9700\u8981\u65cb\u8f6c\n                if (height(enterNode.left) - height(enterNode.right) >= 2) {\n                    if (value.compareTo(enterNode.left.value) < 0) {\n                        enterNode = leftLeftRotation(enterNode);\n                    } else {\n                        enterNode = leftRightRotation(enterNode);\n                    }\n                }\n            } else if (compareValue > 0) {// \u5c06value \u63d2\u5165\u5230\u53f3\u5b50\u6811\n                enterNode.right = insert(enterNode.right, value);\n                if (height(enterNode.right) - height(enterNode.left) >= 2) {\n                    if (value.compareTo(enterNode.right.value) > 0) {\n                        enterNode = rightRightRotation(enterNode);\n                    } else {\n                        enterNode = rightLeftRotation(enterNode);\n                    }\n                }\n            } else {\n                throw new RuntimeException("insert failed: cannot insert repeating value");\n            }\n\n            //while (true) {\n            //    int compareValue = value.compareTo(enterNode.value);\n            //    if (compareValue < 0) {\n            //        enterNode = enterNode.left;\n            //    } else if (compareValue > 0) {\n            //        enterNode = enterNode.right;\n            //    } else {\n            //        throw new RuntimeException("insert failed: cannot insert repeating value");\n            //    }\n            //    if (enterNode == null) {\n            //        break;\n            //    }\n            //}\n        }\n\n        enterNode.height = max(height(enterNode.left), height(enterNode.right)) + 1;\n        return enterNode;\n\n    }\n\n    public void insert(T value) {\n        root = insert(root, value);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * \u5220\u9664\n     * @param enterNode \u6839\u8282\u70b9\n     * @param delete \u5f85\u5220\u9664\u8282\u70b9\n     * @return \u5220\u9664\u64cd\u4f5c\u5b8c\u6210\u540e\u7684\u6839\u8282\u70b9\n     */\n    public Node<T> remove(Node<T> enterNode, Node<T> delete) {\n        int compareValue = delete.value.compareTo(enterNode.value);\n        if (compareValue < 0) {// \u5f85\u5220\u9664\u7684\u8282\u70b9\u5728"tree\u7684\u5de6\u5b50\u6811"\u4e2d\uff0c \u5220\u9664\u540e\uff0c \u53f3\u8fb9\u504f\u91cd\n            // \u8fdb\u5165\u70b9\u5f80\u5de6\u8fb9\u79fb\u52a8\n            // \u5220\u9664\u5b8c\u540e\uff0c \u539f\u59cb enterNode\u7684\u5de6\u6307\u9488\u6307\u5411\u5220\u9664\u5b8c\u6bd5\u540e\u7684\u6839\u8282\u70b9\n            enterNode.left = remove(enterNode.left, delete);\n\n            if (height(enterNode.right) - height(enterNode.left) >= 2) {\n                Node<T> r = enterNode.right;\n                if (height(r.left) < height(r.right)) {\n                    enterNode = rightRightRotation(enterNode);\n                } else  {\n                    enterNode = rightLeftRotation(enterNode);\n                }\n            }\n        } else if (compareValue > 0) {// \u5f85\u5220\u9664\u7684\u8282\u70b9\u5728"tree\u7684\u53f3\u5b50\u6811"\u4e2d, \u5220\u9664\u540e\uff0c \u5de6\u8fb9\u504f\u91cd\n\n            enterNode.right = remove(enterNode.right, delete);\n\n            if (height(enterNode.left) - height(enterNode.right) >= 2) {\n                Node<T> l = enterNode.left;\n                if (height(l.left) > height(l.right)) {\n                    enterNode = leftLeftRotation(enterNode);\n                }\n                else {\n                    enterNode = leftRightRotation(enterNode);\n                }\n            }\n\n        } else {// enterNode \u6b63\u662f\u8981\u5220\u9664\u7684\u8282\u70b9\n\n            if (enterNode.left != null && enterNode.right != null) {// \u5de6\u53f3\u5b50\u6811\u90fd\u4e0d\u4e3a\u7a7a\n                if (height(enterNode.left) > height(enterNode.right)) {// \u82e5\u5de6\u5b50\u6811\u66f4\u9ad8\n                    // \u627e\u5230\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9 (enterNode \u7684 \u524d\u9a71), \u4ee3\u66ff enterNode\n                    // \u6b64\u65f6, AVL\u6811\u4ecd\u7136\u662f\u5e73\u8861\u7684\n                    Node<T> leftMax = maxNode(enterNode.left);\n                    enterNode.value = leftMax.value;\n                    enterNode.left = remove(enterNode.left, leftMax);\n                } else {// \u82e5\u53f3\u5b50\u6811\u66f4\u9ad8\n                    // \u627e\u5f97\u5230\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u8282\u70b9(enterNode \u7684\u540e\u7ee7), \u4ee3\u66ff enterNode\n                    Node<T> rightMin = minNode(enterNode.right);\n                    enterNode.value = rightMin.value;\n                    enterNode.right = remove(enterNode.right, rightMin);\n                }\n            } else if (enterNode.left == null && enterNode.right == null) {// \u6ca1\u6709\u5b50\u6811\n                // \u76f4\u63a5\u5220\u9664\n                enterNode = null;\n            } else {// \u53ea\u6709\u4e00\u4e2a\u5b50\u6811(\u6709\u4e00\u4e2a\u5b50\u6811\u4e3a\u7a7a)\n                // \u5b50\u8282\u70b9\u4ee3\u66ffenterNode\n                if (enterNode.right != null) {\n                    enterNode = enterNode.right;\n                } else {\n                    enterNode = enterNode.left;\n                }\n            }\n        }\n\n        return enterNode;\n    }\n\n    public void remove(T value) {\n        Node<T> find = find(root, value);\n        if (find == null) {\n            throw new RuntimeException("delete error: value ["+value+"] is not exist.");\n        }\n        root = remove(root, find);\n    }\n\n    // ----------------------------------------------------\n\n    /**\n     * find\n     * @param enterNode \u6839\u8282\u70b9\n     * @param value \u67e5\u627e\u503c\n     * @return \u67e5\u627e\u5230\u7684\u8282\u70b9\n     */\n    public Node<T> find(Node<T> enterNode, T value) {\n        int compare = value.compareTo(enterNode.value);\n        if (compare < 0) {\n            enterNode =  find(enterNode.left, value);\n        } else if (compare > 0) {\n            enterNode = find(enterNode.right, value);\n        }\n        return enterNode;\n    }\n\n\n    private Node<T> maxNode(Node<T> enterNode) {\n        Node<T> right = enterNode.right;\n        if (right != null) {\n            enterNode = maxNode(right);\n        }\n        return enterNode;\n    }\n\n    private Node<T> minNode(Node<T> enterNode) {\n        Node<T> left = enterNode.left;\n        if (left != null) {\n            enterNode = minNode(left);\n        }\n        return enterNode;\n    }\n\n    private int max(int h1, int h2) {\n        if (h1 > h2) {\n            return h1;\n        }\n        return h2;\n    }\n\n    private int height(Node<T> node) {\n        if (node != null) {\n            return node.height;\n        }\n        return 0;\n    }\n\n    private int height() {\n        return height(root);\n    }\n}\n')),(0,l.kt)("h4",{id:"6222-\u7ea2\u9ed1\u6811"},"6.2.2.2. \u7ea2\u9ed1\u6811"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/24367771"},"https://zhuanlan.zhihu.com/p/24367771")),(0,l.kt)("p",null,"R-B Tree\uff0c\u5168\u79f0\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"Red-Black Tree"),"\uff0c\u53c8\u79f0\u4e3a\u201c\u7ea2\u9ed1\u6811\u201d\uff0c\u5b83\u4e00\u79cd\u81ea\u5e73\u8861\u7684\u4e8c\u53c9\u67e5\u627e\u6811\u3002\u7ea2\u9ed1\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u90fd\u6709\u5b58\u50a8\u4f4d\u8868\u793a\u8282\u70b9\u7684\u989c\u8272\uff0c\u53ef\u4ee5\u662f\u7ea2(Red)\u6216\u9ed1(Black)\u3002"),(0,l.kt)("p",null,"AVL\u6811\u7531\u4e8e\u5b9e\u73b0\u6bd4\u8f83\u590d\u6742\uff0c\u800c\u4e14\u63d2\u5165\u548c\u5220\u9664\u6027\u80fd\u5dee\uff0c\u5728\u5b9e\u9645\u73af\u5883\u4e0b\u7684\u5e94\u7528\u4e0d\u5982\u7ea2\u9ed1\u6811"),(0,l.kt)("p",null,"\u57fa\u4e8e 2-3\u6811 \u5b9e\u73b0, \u7ea2\u9ed1\u6811\u4e2d\u5c06\u8282\u70b9\u4e4b\u95f4\u7684\u94fe\u63a5\u5206\u4e3a\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"\u7ea2\u8272\u94fe\u63a5"),"\uff0c\u4ed6\u7528\u6765\u94fe\u63a5\u4e24\u4e2a2-nodes\u8282\u70b9\u6765\u8868\u793a\u4e00\u4e2a3-nodes\u8282\u70b9, \u5e76\u4e14\u5411\u5de6\u503e\u659c\uff0c\u5373\u4e00\u4e2a2-node\u662f\u53e6\u4e00\u4e2a2-node\u7684\u5de6\u5b50\u8282\u70b9\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"\u9ed1\u8272\u94fe\u63a5"),"\u7528\u6765\u94fe\u63a5\u666e\u901a\u76842-3\u8282\u70b9"),(0,l.kt)("p",null,"\u5982\u679c\u5c06\u7ea2\u8272\u8fde\u63a5\u6c34\u5e73\u7ed8\u5236, \u4f1a\u66f4\u5f62\u8c61\u5316:"),(0,l.kt)("p",null,"\u6709\u8fd9\u4e48\u51e0\u6761\u89c4\u5219\u9700\u8981\u9075\u5b88: (\u5982\u679c\u88ab\u65b0\u63d2\u5165\u7684\u8282\u70b9\u6253\u7834, \u5c31\u9700\u8981\u53d8\u8272, \u65cb\u8f6c...)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u8282\u70b9\u662f\u7ea2\u8272\u6216\u9ed1\u8272\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6839\u662f\u9ed1\u8272"),(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u53f6\u5b50\u90fd\u662f\u9ed1\u8272\uff08\u8fd9\u91cc\u7684\u53f6\u5b50\u662f\u6307NIL\u8282\u70b9, \u5373 null \u8282\u70b9\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u4e00\u4e2a\u8282\u70b9\u662f\u7ea2\u8272\u7684\uff0c\u5219\u5b83\u7684\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\u7684\u3002(\u5373\uff1a\u4ece\u6bcf\u4e2a\u53f6\u5b50\u5230\u6839\u7684\u6240\u6709\u8def\u5f84\u4e0a\u4e0d\u80fd\u6709\u4e24\u4e2a\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\u3002)"),(0,l.kt)("li",{parentName:"ul"},"\u4ece\u4efb\u4e00\u8282\u70b9\u5230\u5176\u6bcf\u4e2a\u53f6\u5b50\u7684\u6240\u6709\u8def\u5f84\u90fd\u5305\u542b\u76f8\u540c\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9\u3002 - \u8fd9\u4e00\u6761\u786e\u4fdd\u6ca1\u6709\u4e00\u6761\u8def\u5f84\u4f1a\u6bd4\u5176\u4ed6\u8def\u5f84\u957f\u51fa\u4fe9\u500d\u3002\u56e0\u800c\uff0c\u7ea2\u9ed1\u6811\u662f\u76f8\u5bf9\u662f\u63a5\u8fd1\u5e73\u8861\u7684\u4e8c\u53c9\u6811\u3002")),(0,l.kt)("p",null,"\u8fd9\u4e9b\u7ea6\u675f\u786e\u4fdd\u4e86\u7ea2\u9ed1\u6811\u7684\u5173\u952e\u7279\u6027: ",(0,l.kt)("inlineCode",{parentName:"p"},"\u4ece\u6839\u5230\u53f6\u5b50\u7684\u6700\u957f\u7684\u53ef\u80fd\u8def\u5f84\u4e0d\u591a\u4e8e\u6700\u77ed\u7684\u53ef\u80fd\u8def\u5f84\u7684\u4e24\u500d\u957f")),(0,l.kt)("p",null,"\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f",(0,l.kt)("inlineCode",{parentName:"p"},"O(lgn)"),"\uff0c\u6548\u7387\u975e\u5e38\u4e4b\u9ad8\u3002"),(0,l.kt)("p",null,"\u7ea2\u9ed1\u6811\u7684\u5e94\u7528\u6bd4\u8f83\u5e7f\u6cdb\uff0c\u4e3b\u8981\u662f\u7528\u5b83\u6765\u5b58\u50a8\u6709\u5e8f\u7684\u6570\u636e\uff0c\u4f8b\u5982\uff0cJava\u96c6\u5408\u4e2d\u7684TreeSet\u548cTreeMap, jdk1.8 \u4e2d\u7684hashmap"),(0,l.kt)("p",null,"\u76f8\u5bf9\u4e8e avl\uff0c\u7ea2\u9ed1\u6811\u7684\u63d2\u5165/\u5220\u9664\u6548\u7387\u66f4\u9ad8\uff0c \u56e0\u4e3a\u5141\u8bb8\u5b58\u5728\u90e8\u5206\u4e0d\u5e73\u8861\uff0c \u51cf\u5c11\u4e86\u65cb\u8f6c\u6b21\u6570 - \u6700\u591a\u53ea\u9700\u8981 3 \u6b21\u65cb\u8f6c"),(0,l.kt)("p",null,"\u76f8\u5e94\u7684\uff0c \u7531\u4e8e avl \u9075\u5faa\u4e25\u683c\u7684\u5e73\u8861\uff0c \u67e5\u627e\u6548\u7387\u8981\u9ad8\u4e00\u4e9b\uff0c \u4f46\u662f\u5dee\u522b\u4e0d\u5927"),(0,l.kt)("p",null,"\u6240\u4ee5\u7b80\u5355\u8bf4\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u4e2d\uff0c\u641c\u7d22\u7684\u6b21\u6570\u8fdc\u8fdc\u5927\u4e8e\u63d2\u5165\u548c\u5220\u9664\uff0c\u90a3\u4e48\u9009\u62e9AVL\uff0c\u5982\u679c\u641c\u7d22\uff0c\u63d2\u5165\u5220\u9664\u6b21\u6570\u51e0\u4e4e\u5dee\u4e0d\u591a\uff0c\u5e94\u8be5\u9009\u62e9RB\u3002"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"\u5de6\u65cb\u548c\u53f3\u65cb"),'\uff1a\u5de6\u65cb \u548c \u53f3\u65cb \u662f\u76f8\u5bf9\u7684\u4e24\u4e2a\u6982\u5ff5\uff0c\u5bf9x\u8fdb\u884c\u5de6\u65cb\uff0c\u610f\u5473\u7740"\u5c06x\u53d8\u6210\u4e00\u4e2a\u5de6\u8282\u70b9"; \u901a\u5e38\u5de6\u65cb\u64cd\u4f5c\u7528\u4e8e\u5c06\u4e00\u4e2a\u5411\u53f3\u503e\u659c\u7684\u7ea2\u8272\u94fe\u63a5\u65cb\u8f6c\u4e3a\u5411\u5de6\u503e\u659c\u3002\u5bf9\u6bd4\u64cd\u4f5c\u524d\u540e\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u8be5\u64cd\u4f5c\u5b9e\u9645\u4e0a\u662f\u5c06\u7ea2\u7ebf\u94fe\u63a5\u7684\u4e24\u4e2a\u8282\u70b9\u4e2d\u7684\u4e00\u4e2a\u8f83\u5927\u7684\u8282\u70b9\u79fb\u52a8\u5230\u6839\u8282\u70b9\u4e0a'),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"\u989c\u8272\u53cd\u8f6c"),":\u5f53\u51fa\u73b0\u4e00\u4e2a\u4e34\u65f6\u76844-node\u7684\u65f6\u5019\uff0c\u5373\u4e00\u4e2a\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u5747\u4e3a\u7ea2\u8272; \u8fd9\u5176\u5b9e\u662f\u4e2aA\uff0cE\uff0cS 4-node\u8fde\u63a5\uff0c\u6211\u4eec\u9700\u8981\u5c06E\u63d0\u5347\u81f3\u7236\u8282\u70b9\uff0c\u64cd\u4f5c\u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u628aE\u5bf9\u5b50\u8282\u70b9\u7684\u8fde\u7ebf\u8bbe\u7f6e\u4e3a\u9ed1\u8272\uff0c\u81ea\u5df1\u7684\u989c\u8272\u8bbe\u7f6e\u4e3a\u7ea2\u8272"),(0,l.kt)("p",null,"\u6216\u8005\u8fd9\u4e48\u7406\u89e3: \u65b0\u63d2\u5165\u7684\u8282\u70b9\u90fd\u5f53\u4f5c\u662f\u7ea2\u8272\u7684\uff0c\u5982\u679c\u9047\u5230\u7236\u8282\u70b9\u7684\u989c\u8272\u4e3a\u9ed1\u5219\u4fee\u590d\u64cd\u4f5c\u7ed3\u675f, \u5982\u679c\u7236\u8282\u70b9\u4e3a\u7ea2\u8272\u8282\u70b9\u7684\u65f6\u5019\u662f\u9700\u8981\u63d2\u5165\u4fee\u590d\u64cd\u4f5c\u7684\u3002"),(0,l.kt)("p",null,"todo\uff1a ",(0,l.kt)("a",{parentName:"p",href:"http://www.cnblogs.com/skywang12345/p/3603935.html"},"http://www.cnblogs.com/skywang12345/p/3603935.html")),(0,l.kt)("h2",{id:"63-\u591a\u8def\u5e73\u8861\u67e5\u627e\u6811"},"6.3. \u591a\u8def\u5e73\u8861\u67e5\u627e\u6811"),(0,l.kt)("h3",{id:"631--3\u6811\u4e8c\u4e09\u6811"},"6.3.1. -3\u6811(\u4e8c\u4e09\u6811)"),(0,l.kt)("p",null,"\u6bcf\u4e2a\u8282\u70b9\u5141\u8bb8\u4fdd\u5b58\u4e00\u4e2a\u503c\u6216\u8005\u4e24\u4e2a\u503c, \u5bf9\u4e8e\u666e\u901a\u7684 2-node, \u4fdd\u5b58\u4e00\u4e2a\u503c\u548c\u5de6\u53f3\u5b50\u8282\u70b9\u7684\u6307\u9488, \u5bf9\u4e8e 3-node, \u4fdd\u5b58 2 \u4e2a\u503c\u548c\u5de6\u4e2d\u53f3 3 \u4e2a\u6307\u9488, \u4e24\u4e2a\u503c\u5de6\u5c0f\u53f3\u5927"),(0,l.kt)("p",null,"2-3\u67e5\u627e\u6811\u5b9e\u73b0\u8d77\u6765\u6bd4\u8f83\u590d\u6742\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u63d2\u5165\u540e\u7684\u5e73\u8861\u64cd\u4f5c\u53ef\u80fd\u4f1a\u4f7f\u5f97\u6548\u7387\u964d\u4f4e\u3002\u57282-3\u67e5\u627e\u6811\u57fa\u7840\u4e0a\u6539\u8fdb\u7684\u7ea2\u9ed1\u6811\u4e0d\u4ec5\u5177\u6709\u8f83\u9ad8\u7684\u6548\u7387\uff0c\u5e76\u4e14\u5b9e\u73b0\u8d77\u6765\u8f832-3\u67e5\u627e\u6811\u7b80\u5355"),(0,l.kt)("p",null,"\u7ea2\u9ed1\u6811\u548cB\u6811\u90fd\u662f\u57fa\u4e8e\u5b83\u800c\u6765"),(0,l.kt)("h3",{id:"632-b\u6811b-tree"},"6.3.2. B\u6811(B-tree)"),(0,l.kt)("h4",{id:"6321-b\u6811\u7684\u6982\u5ff5"},"6.3.2.1. b\u6811\u7684\u6982\u5ff5"),(0,l.kt)("p",null,"B\u6811\u4e5f\u662f\u4e00\u79cd\u7528\u4e8e\u67e5\u627e\u7684\u5e73\u8861\u6811\uff0c\u4f46\u662f\u5b83\u4e0d\u662f\u4e8c\u53c9\u6811\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"\u53ef\u4ee5\u62e5\u6709\u591a\u4e8e2\u4e2a\u5b50\u8282\u70b9"),", \u80fd\u591f\u7528\u6765\u5b58\u50a8\u6392\u5e8f\u540e\u7684\u6570\u636e, \u4e3a",(0,l.kt)("inlineCode",{parentName:"p"},"\u4f18\u5316\u5927\u5757\u6570\u636e\u7684\u8bfb\u548c\u5199\u64cd\u4f5c"),"\u800c\u751f"),(0,l.kt)("p",null,"\u6570\u636e\u5e93\u7d22\u5f15\u6280\u672f\u91cc\u5927\u91cf\u4f7f\u7528\u8005B\u6811\u548cB+\u6811\u7684\u6570\u636e\u7ed3\u6784"),(0,l.kt)("p",null,"\u4e86\u89e3b-tree\u7684\u751f\u957f/\u6dfb\u52a0\u8fc7\u7a0b, \u5c31\u80fd\u63a8\u5bfc\u51fa\u8fd9\u4e9b\u7279\u6027: ",(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/24309634"},"https://zhuanlan.zhihu.com/p/24309634")),(0,l.kt)("p",null,"B-tree\u548c\u4e8c\u53c9\u6811\u7684\u4e00\u4e2a\u663e\u8457\u7684\u533a\u522b\u5c31\u662f\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"B-tree\u662f\u4ece\u4e0b\u5f80\u4e0a\u751f\u957f\uff0c\u800c\u4e8c\u53c9\u6811\u662f\u4ece\u4e0a\u5f80\u4e0b\u751f\u957f\u7684"),"\u3002"),(0,l.kt)("h4",{id:"6322-b\u6811\u7684\u7279\u5f81"},"6.3.2.2. b\u6811\u7684\u7279\u5f81"),(0,l.kt)("p",null,"\u89c4\u5219:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"- \u5b50\u8282\u70b9\u6570\u91cf\u6700\u5c11 2 \u4e2a, \u6700\u591a\u65e0\u7a77\u4e2a; \u6bcf\u4e2a\u8282\u70b9\u7684\u503c(\u5173\u952e\u5b57)\u6570\u91cf\u53ef\u4ee5\u6709\u591a\u4e2a, \u6309\u9012\u589e\u6b21\u5e8f\u6392\u5217\uff0c\u5e76\u9075\u5faa\u5de6\u5c0f\u53f3\u5927\u539f\u5219\n\n- \u975e\u6839\u8282\u70b9\u5173\u952e\u5b57\u6570\u91cf\u5927\u4e8e\u7b49\u4e8eceil(m/2)-1\u4e14\u5c0f\u4e8e\u7b49\u4e8em-1\u4e2a\uff1b\uff08\u6ce8\uff1aceil()\u662f\u4e2a\u671d\u6b63\u65e0\u7a77\u65b9\u5411\u53d6\u6574\u7684\u51fd\u6570 \u5982ceil(1.1)\u7ed3\u679c\u4e3a2, m\u8868\u793a\u8282\u70b9\u7684\u6700\u5927\u5206\u652f\u4e2a\u6570)\n\n- \u975e\u53f6\u8282\u70b9\u6709N\u4e2a\u5b50\u8282\u70b9\uff0c\u5219\u8be5\u8282\u70b9\u7684\u5173\u952e\u5b57\u6570\u7b49\u4e8eN-1;\n\n- \u6240\u6709\u53f6\u5b50\u8282\u70b9\u5747\u5728\u540c\u4e00\u5c42\n\n- \u53f6\u5b50\u8282\u70b9\u4e5f\u6709\u6307\u5411\u4e0b\u5c42\u7684\u6307\u9488, , \u53ea\u4e0d\u8fc7\u6307\u5411\u7684\u662f null\n\n")),(0,l.kt)("p",null,"\u67e5\u8be2\u7b97\u6cd5: \u6bd4\u5982\u8981\u67e5\u627e\u7684\u503c\u4e3a v"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u8282\u70b9\u7684\u5173\u952e\u5b57\u53ea\u6709\u4e00\u4e2a, \u6bd4\u5982 \u6839\u8282\u70b9, \u8fd9\u65f6\u8fdb\u5165\u5de6\u53f3\u5206\u652f, \u548c\u4e8c\u53c9\u67e5\u627e\u7b97\u6cd5\u4e00\u6837"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u8282\u70b9\u5173\u952e\u5b57\u6709\u591a\u4e2a, \u90a3\u4e48\u6839\u636e\u5927\u5c0f\u627e\u5230 v \u5728 \u8fd9\u4e9b\u503c\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e, \u6839\u636e\u4f4d\u7f6e\u51b3\u5b9a\u8fdb\u5165\u54ea\u4e2a\u5b50\u8282\u70b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"\u5982\u4e0a\u56fe\u6211\u8981\u4ece\u4e0a\u56fe\u4e2d\u627e\u5230E\u5b57\u6bcd\uff0c\u67e5\u627e\u6d41\u7a0b\u5982\u4e0b\n\n\uff081\uff09\u83b7\u53d6\u6839\u8282\u70b9\u7684\u5173\u952e\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c\u5f53\u524d\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e3aM\uff0cE\u8981\u5c0f\u4e8eM\uff0826\u4e2a\u5b57\u6bcd\u987a\u5e8f\uff09\uff0c\u6240\u4ee5\u5f80\u627e\u5230\u6307\u5411\u5de6\u8fb9\u7684\u5b50\u8282\u70b9\n\n\uff082\uff09\u62ff\u5230\u5173\u952e\u5b57D\u548cG\uff0cD<E<G \u6240\u4ee5\u76f4\u63a5\u627e\u5230D\u548cG\u4e2d\u95f4\u7684\u8282\u70b9\uff1b\n\n\uff083\uff09\u62ff\u5230E\u548cF\uff0c\u56e0\u4e3aE=E \u6240\u4ee5\u76f4\u63a5\u8fd4\u56de\u5173\u952e\u5b57\u548c\u6307\u9488\u4fe1\u606f\uff08\u5982\u679c\u6811\u7ed3\u6784\u91cc\u9762\u6ca1\u6709\u5305\u542b\u6240\u8981\u67e5\u627e\u7684\u8282\u70b9\u5219\u8fd4\u56denull\uff09\uff1b\n\n")),(0,l.kt)("p",null,"\u63d2\u5165\u7b97\u6cd5: \u751f\u957f\u8fc7\u7a0b\u662f\u4ece\u4e0b\u5f80\u4e0a\u7684"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5148\u786e\u5b9a\u662f\u51e0\u9636\u6811, \u4ee5\u786e\u5b9a\u6bcf\u4e2a\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570\u8303\u56f4, \u6bd4\u5982: \u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8eceil\uff085/2\uff09 -1\u5c0f\u4e8e\u7b49\u4e8e5-1\uff08\u5173\u952e\u5b57\u6570\u5c0f\u4e8ecei(5/2) -1\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u5408\u5e76\uff0c\u5927\u4e8e5-1\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u62c6\u5206,\u975e\u6839\u8282\u70b9\u5173\u952e\u5b57\u6570>=2\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6ee1\u8db3\u8282\u70b9\u672c\u8eab\u6bd4\u5de6\u8fb9\u8282\u70b9\u5927\uff0c\u6bd4\u53f3\u8fb9\u8282\u70b9\u5c0f, \u540c\u4e2a\u8282\u70b9\u5185\u7684\u5173\u952e\u5b57\u4e5f\u662f\u5de6\u8fb9\u5c0f \u53f3\u8fb9\u5927")),(0,l.kt)("p",null,"\u8981\u628a3\u30018\u300131\u300111\u300123\u300129\u300150\u300128 \u8fd9\u4e9b\u6570\u5b57\u6784\u5efa\u51fa\u4e00\u4e2a5\u9636\u6811\u51fa\u6765;"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f53\u524d\u662f\u8981\u7ec4\u6210\u4e00\u4e2a5\u8def\u67e5\u627e\u6811\uff0c\u90a3\u4e48\u6b64\u65f6m=5,\u5173\u952e\u5b57\u6570\u5fc5\u987b\u5927\u4e8e\u7b49\u4e8eceil\uff085/2\uff09 -1, \u5373 2, \u5c0f\u4e8e\u7b49\u4e8e5-1, \u5373 4;\uff08\u5173\u952e\u5b57\u6570\u5c0f\u4e8ecei(5/2) -1\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u5408\u5e76\uff0c\u5927\u4e8e5-1\u5c31\u8981\u8fdb\u884c\u8282\u70b9\u62c6\u5206)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5148\u63d2\u5165 3\u30018\u300131\u300111, \u6b64\u65f6\u8fbe\u5230\u8282\u70b9\u6700\u5927\u5173\u952e\u5b57\u4e2a\u6570, \u518d\u63d2\u5165\u9700\u8981\u62c6\u5206, \u62c6\u5206\u89c4\u5219\u662f: \u5c06\u9760\u8fd1\u4e2d\u95f4\u7684\u5173\u952e\u5b57\u63d0\u53d6\u51fa\u6765\u4f5c\u4e3a\u7236\u8282\u70b9, \u5de6\u53f3\u4e24\u8fb9\u7684\u6784\u6210\u4e24\u4e2a\u5b50\u8282\u70b9, \u7ee7\u7eed\u63d2\u5165\u5230\u5b50\u8282\u70b9\u4e2d, \u8d85\u8fc7\u8303\u56f4\u5c31\u63d0\u5347\u5230\u7236\u8282\u70b9\u4e2d..."))),(0,l.kt)("p",null,"\u5220\u9664\u7b97\u6cd5:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f9d\u7136\u662f\u6839\u636e\u6811\u7684\u9636\u6570\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u5173\u952e\u5b57\u4e2a\u6570\u8303\u56f4"),(0,l.kt)("li",{parentName:"ul"},"\u5220\u9664\u5173\u952e\u5b57, \u5220\u9664\u540e, \u5982\u679c\u5f53\u524d\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570\u5c0f\u4e8e ceil\uff08m/2\uff09 -1, \u5c31\u4ece \u7236\u8282\u70b9\u62c9\u4e00\u4e2a\u5173\u952e\u5b57\u4e0b\u6765, \u76f8\u5e94\u7684\u8981\u4ece\u5176\u4ed6\u8282\u70b9\u7ed9\u7236\u8282\u70b9\u8865\u4e00\u4e2a\u5173\u952e\u5b57")),(0,l.kt)("h3",{id:"633-btreeb\u52a0\u6811"},"6.3.3. B+tree(B\u52a0\u6811)"),(0,l.kt)("h4",{id:"6331-btree\u5b9a\u4e49"},"6.3.3.1. b+tree\u5b9a\u4e49"),(0,l.kt)("p",null,"B+\u6811\u662fB\u6811\u7684\u4e00\u4e2a\u5347\u7ea7\u7248\uff0c\u4e5f\u662f\u4e00\u79cd\u591a\u8def\u641c\u7d22\u6811, \u76f8\u5bf9\u4e8eB\u6811\u6765\u8bf4B+\u6811\u66f4\u5145\u5206\u7684\u5229\u7528\u4e86\u8282\u70b9\u7684\u7a7a\u95f4\uff0c\u6bd4b-tree \u67e5\u8be2\u6027\u80fd\u66f4\u597d\uff0c\u5176\u901f\u5ea6\u5b8c\u5168\u63a5\u8fd1\u4e8e\u4e8c\u5206\u6cd5\u67e5\u627e"),(0,l.kt)("p",null,"\u536b\u661f\u6570\u636e\uff1a\u6307\u7684\u662f\u8282\u70b9\u5143\u7d20\u6307\u5411\u7684\u5b9e\u9645\u6570\u636e\uff08\u6bd4\u5982\u6570\u636e\u5e93\u4e2d\u7684\u67d0\u4e00\u884c\u8bb0\u5f55\uff0c \u5728 b-tree \u4e2d\u6240\u6709\u8282\u70b9\u90fd\u6709\u536b\u661f\u6570\u636e\uff0c \u5373\u90fd\u5e26\u6709\u771f\u5b9e\u6570\u636e\uff0c b+tree \u4e2d\u53ea\u6709 leaf node \u6709\u536b\u661f\u6570\u636e\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6709k\u4e2a\u5b50\u6811\u7684\u4e2d\u95f4\u8282\u70b9\u5305\u542b\u6709k\u4e2a\u5143\u7d20\uff08B\u6811\u4e2d\u662fk-1\u4e2a\u5143\u7d20\uff0c \u5b58\u7591\uff1f\uff09\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e0d\u4fdd\u5b58\u6570\u636e\uff0c\u53ea\u7528\u6765\u7d22\u5f15\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"\u6240\u6709\u6570\u636e\u90fd\u4fdd\u5b58\u5728\u53f6\u5b50\u8282\u70b9")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"\u53f6\u5b50\u7ed3\u70b9\u672c\u8eab\u4f9d\u5173\u952e\u5b57\u7684\u5927\u5c0f\u81ea\u5c0f\u800c\u5927\u987a\u5e8f\u94fe\u63a5"),", \u5f62\u6210\u6709\u5e8f\u94fe\u8868"),(0,l.kt)("li",{parentName:"ul"},"\u6240\u6709\u7684",(0,l.kt)("inlineCode",{parentName:"li"},"\u4e2d\u95f4\u8282\u70b9\u5143\u7d20\u90fd\u91cd\u590d\u5b58\u5728\u4e8e\u5b50\u8282\u70b9"),"\uff0c\u5728\u5b50\u8282\u70b9\u5143\u7d20\u4e2d\u90fd\u662f\u6700\u5927\uff08\u6216\u90fd\u662f\u6700\u5c0f\uff09\u5143\u7d20"),(0,l.kt)("li",{parentName:"ul"},"\u6700\u5927\u5143\u7d20\u518d\u6839\u8282\u70b9\u4e2d")),(0,l.kt)("h4",{id:"6332-\u6bd4b-tree\u597d\u7684\u70b9"},"6.3.3.2. \u6bd4b-tree\u597d\u7684\u70b9"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u3010\u6811\u7684\u5c42\u7ea7\u66f4\u5c11\uff0c \u78c1\u76d8io\u66f4\u5c11\u901f\u5ea6\u66f4\u5feb\u3011 - \u975e\u53f6\u5b50\u8282\u70b9\u4e0d\u4fdd\u5b58\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u53ea\u8fdb\u884c\u6570\u636e\u7d22\u5f15\uff0c\u8fd9\u6837\u4f7f\u5f97B+\u6811",(0,l.kt)("inlineCode",{parentName:"li"},"\u6bcf\u4e2a\u975e\u53f6\u5b50\u8282\u70b9\u6240\u80fd\u4fdd\u5b58\u7684\u5173\u952e\u5b57\u5927\u5927\u589e\u52a0, \u6811\u7684\u5c42\u7ea7\u66f4\u5c11"),"\u6240\u4ee5\u67e5\u8be2\u6570\u636e\u66f4\u5feb"),(0,l.kt)("li",{parentName:"ul"},"\u3010\u67e5\u8be2\u901f\u5ea6\u66f4\u7a33\u5b9a\u3011 - \u53f6\u5b50\u8282\u70b9\u4fdd\u5b58\u4e86\u7236\u8282\u70b9\u7684\u6240\u6709\u5173\u952e\u5b57\u8bb0\u5f55\u7684\u6307\u9488\uff0c\u6240\u6709",(0,l.kt)("inlineCode",{parentName:"li"},"\u6570\u636e\u5730\u5740\u5fc5\u987b\u8981\u5230\u53f6\u5b50\u8282\u70b9\u624d\u80fd\u83b7\u53d6\u5230"),"\uff0c\u6240\u4ee5\u6bcf\u6b21\u6570\u636e\u67e5\u8be2\u7684\u6b21\u6570\u90fd\u4e00\u6837, ",(0,l.kt)("inlineCode",{parentName:"li"},"\u67e5\u8be2\u901f\u5ea6\u66f4\u7a33\u5b9a")),(0,l.kt)("li",{parentName:"ul"},"\u3010\u5177\u5907\u6392\u5e8f\u529f\u80fd\uff0c \u8303\u56f4\u67e5\u8be2\u66f4\u7b80\u5355\u3011 - \u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6784\u6210\u6709\u5e8f\u94fe\u8868, ",(0,l.kt)("inlineCode",{parentName:"li"},"\u5de6\u8fb9\u7ed3\u5c3e\u6570\u636e\u90fd\u4f1a\u4fdd\u5b58\u53f3\u8fb9\u8282\u70b9\u5f00\u59cb\u6570\u636e\u7684\u6307\u9488"),", \u5728\u67e5\u8be2\u5927\u5c0f\u533a\u95f4\u7684\u6570\u636e\u65f6\u5019\u66f4\u65b9\u4fbf"),(0,l.kt)("li",{parentName:"ul"},"\u3010\u5168\u8282\u70b9\u904d\u5386\u66f4\u5feb\u3011 - ",(0,l.kt)("inlineCode",{parentName:"li"},"\u904d\u5386\u6574\u68f5\u6811\u53ea\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u53f6\u5b50\u8282\u70b9\u5373\u53ef"),"\uff0c\u800c\u4e0d\u9700\u8981\u50cfB\u6811\u4e00\u6837\u9700\u8981\u5bf9\u6bcf\u4e00\u5c42\u8fdb\u884c\u904d\u5386\u3002",(0,l.kt)("inlineCode",{parentName:"li"},"\u6709\u5229\u4e8e\u6570\u636e\u5e93\u505a\u5168\u8868\u626b\u63cf")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"\u4e0d\u5982 b\u6811\u7684\u5730\u65b9: \u5982\u679c\u7ecf\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u79bb\u6839\u8282\u70b9\u5f88\u8fd1, b+\u6811\u4ecd\u7136\u9700\u8981\u5728 \u53f6\u5b50\u8282\u70b9\u624d\u80fd\u67e5\u5230, \u800c b \u6811 \u4e0d\u5fc5\u904d\u5386\u5230 \u53f6\u5b50\u8282\u70b9"))),(0,l.kt)("h3",{id:"634-b\u6811"},"6.3.4. B*\u6811"),(0,l.kt)("p",null,"B*\u6811\u662fB+\u6811\u7684\u53d8\u4f53, \u4e0d\u540c\u4e4b\u5904:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9996\u5148\u662f\u5173\u952e\u5b57\u4e2a\u6570\u9650\u5236\u95ee\u9898\uff0cB+\u6811\u521d\u59cb\u5316\u7684\u5173\u952e\u5b57\u521d\u59cb\u5316\u4e2a\u6570\u662fcei(m/2)\uff0cb",(0,l.kt)("em",{parentName:"li"}," \u6811\u7684\u521d\u59cb\u5316\u4e2a\u6570\u4e3a\uff08cei(2/3"),"m)\uff09"),(0,l.kt)("li",{parentName:"ul"},"B+\u6811\u8282\u70b9\u6ee1\u65f6\u5c31\u4f1a\u5206\u88c2\uff0c\u800cB*\u6811\u8282\u70b9\u6ee1\u65f6\u4f1a\u68c0\u67e5\u5144\u5f1f\u8282\u70b9\u662f\u5426\u6ee1\uff08\u56e0\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u6307\u5411\u5144\u5f1f\u7684\u6307\u9488\uff09\uff0c\u5982\u679c\u5144\u5f1f\u8282\u70b9\u672a\u6ee1\u5219\u5411\u5144\u5f1f\u8282\u70b9\u8f6c\u79fb\u5173\u952e\u5b57\uff0c\u5982\u679c\u5144\u5f1f\u8282\u70b9\u5df2\u6ee1\uff0c\u5219\u4ece\u5f53\u524d\u8282\u70b9\u548c\u5144\u5f1f\u8282\u70b9\u5404\u62ff\u51fa1/3\u7684\u6570\u636e\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\u51fa\u6765")),(0,l.kt)("h3",{id:"635-\u524d\u7f00\u6811trie\u6811\u5b57\u5178\u6811"},"6.3.5. \u524d\u7f00\u6811(Trie\u6811/\u5b57\u5178\u6811)"),(0,l.kt)("p",null,"Tire\u6811\u79f0\u4e3a\u5b57\u5178\u6811\uff0c\u53c8\u79f0\u5355\u8bcd\u67e5\u627e\u6811"),(0,l.kt)("p",null,"\u524d\u7f00\u6811(Prefix Trees\u6216\u8005Trie)\u4e0e\u6811\u7c7b\u4f3c, \u4e0d\u540c\u7684\u662f, \u524d\u7f00\u6811\u6bcf\u4e2a\u8282\u70b9\u5b58\u50a8\u7684\u662f\u4e00\u4e2a\u5b57\u7b26, \u76f8\u540c\u5b57\u7b26\u4e0d\u91cd\u590d\u5b58\u50a8\uff0c\u7528\u4e8e\u5904\u7406\u5b57\u7b26\u4e32\u76f8\u5173\u7684\u95ee\u9898\u65f6\u975e\u5e38\u9ad8\u6548\u3002"),(0,l.kt)("p",null,"\u573a\u666f: \u5b83\u53ef\u4ee5\u5b9e\u73b0\u5feb\u901f\u68c0\u7d22\uff0c\u5e38\u7528\u4e8e\u5b57\u5178\u4e2d\u7684\u5355\u8bcd\u67e5\u8be2\uff0c\u641c\u7d22\u5f15\u64ce\u7684\u81ea\u52a8\u8865\u5168\u751a\u81f3IP\u8def\u7531\u3002\u4fdd\u5b58\u5927\u91cf\u5b57\u7b26\u4e32"),(0,l.kt)("p",null,"\u5b83\u7684\u4f18\u70b9\u662f\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u51cf\u5c11\u67e5\u8be2\u65f6\u95f4"),"\uff0c\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\uff0c\u67e5\u8be2\u6548\u7387\u6bd4\u54c8\u5e0c\u6811\u9ad8\u3002\u3000"),(0,l.kt)("p",null,"\u4e0b\u56fe\u5c55\u793a\u4e86\u201ctop\u201d, \u201cthus\u201d\u548c\u201ctheir\u201d\u4e09\u4e2a\u5355\u8bcd\u5728\u524d\u7f00\u6811\u4e2d\u5982\u4f55\u5b58\u50a8\u7684\uff1a"),(0,l.kt)("p",null,"\u5e94\u7528\u793a\u4f8b:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e32\u7684\u5feb\u901f\u68c0\u7d22: \u7ed9\u51faN\u4e2a\u5355\u8bcd\u7ec4\u6210\u7684\u719f\u8bcd\u8868\uff0c\u4ee5\u53ca\u4e00\u7bc7\u5168\u7528\u5c0f\u5199\u82f1\u6587\u4e66\u5199\u7684\u6587\u7ae0\uff0c\u8bf7\u4f60\u6309\u6700\u65e9\u51fa\u73b0\u7684\u987a\u5e8f\u5199\u51fa\u6240\u6709\u4e0d\u5728\u719f\u8bcd\u8868\u4e2d\u7684\u751f\u8bcd\u3002"),(0,l.kt)("p",{parentName:"li"},"\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u7ec4\u679a\u4e3e\uff0c\u7528\u54c8\u5e0c\uff0c\u7528\u5b57\u5178\u6811\uff0c\u5148\u628a\u719f\u8bcd\u5efa\u4e00\u68f5\u6811\uff0c\u7136\u540e\u8bfb\u5165\u6587\u7ae0\u8fdb\u884c\u6bd4\u8f83\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u662f\u6bd4\u8f83\u9ad8\u7684\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u4e32\u7684\u6392\u5e8f: \u7ed9\u5b9aN\u4e2a\u4e92\u4e0d\u76f8\u540c\u7684\u4ec5\u7531\u4e00\u4e2a\u5355\u8bcd\u6784\u6210\u7684\u82f1\u6587\u540d\uff0c\u8ba9\u4f60\u5c06\u4ed6\u4eec\u6309\u5b57\u5178\u5e8f\u4ece\u5c0f\u5230\u5927\u8f93\u51fa\u3002"),(0,l.kt)("p",{parentName:"li"},"\u7528\u5b57\u5178\u6811\u8fdb\u884c\u6392\u5e8f\uff0c\u91c7\u7528\u6570\u7ec4\u7684\u65b9\u5f0f\u521b\u5efa\u5b57\u5178\u6811\uff0c\u8fd9\u68f5\u6811\u7684\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6240\u6709\u513f\u5b50\u5f88\u663e\u7136\u5730\u6309\u7167\u5176\u5b57\u6bcd\u5927\u5c0f\u6392\u5e8f\u3002\u5bf9\u8fd9\u68f5\u6811\u8fdb\u884c\u5148\u5e8f\u904d\u5386\u5373\u53ef")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6700\u957f\u516c\u5171\u524d\u7f00"),(0,l.kt)("p",{parentName:"li"},"\u5bf9\u6240\u6709\u4e32\u5efa\u7acb\u5b57\u5178\u6811\uff0c\u5bf9\u4e8e\u4e24\u4e2a\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u7684\u957f\u5ea6\u5373\u4ed6\u4eec\u6240\u5728\u7684\u7ed3\u70b9\u7684\u516c\u5171\u7956\u5148\u4e2a\u6570\uff0c\u4e8e\u662f\uff0c\u95ee\u9898\u5c31\u8f6c\u5316\u4e3a\u6c42\u516c\u5171\u7956\u5148\u7684\u95ee\u9898\u3002"))),(0,l.kt)("h2",{id:"64-\u54c8\u592b\u66fc\u6811huffman-tree"},"6.4. \u54c8\u592b\u66fc\u6811(Huffman Tree)"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://www.cnblogs.com/skywang12345/p/3706833.html"},"http://www.cnblogs.com/skywang12345/p/3706833.html")),(0,l.kt)("h1",{id:"7-\u5806"},"7. \u5806"),(0,l.kt)("h2",{id:"71-\u4e8c\u53c9\u5806"},"7.1. \u4e8c\u53c9\u5806"),(0,l.kt)("p",null,"\u4e8c\u53c9\u5806\u5c31\u662f\u5b8c\u5168\u4e8c\u53c9\u6811, "),(0,l.kt)("p",null,"\u4f46\u662f\u6392\u5e8f\u89c4\u5219\u4e0d\u540c, \u6309\u7167\u6570\u636e\u7684\u6392\u5217\u65b9\u5f0f\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u6700\u5927\u5806\u548c\u6700\u5c0f\u5806"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5927\u9876\u5806\uff1a\u7236\u7ed3\u70b9\u7684\u952e\u503c\u603b\u662f\u5927\u4e8e\u6216\u7b49\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u952e\u503c\uff1b"),(0,l.kt)("li",{parentName:"ul"},"\u5c0f\u9876\u5806\uff1a\u7236\u7ed3\u70b9\u7684\u952e\u503c\u603b\u662f\u5c0f\u4e8e\u6216\u7b49\u4e8e\u4efb\u4f55\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u952e\u503c\u3002")),(0,l.kt)("p",null,"\u6027\u8d28: \u4e0d\u4fdd\u8bc1\u8282\u70b9\u95f4\u7684\u6709\u5e8f, \u53ea\u80fd\u4fdd\u8bc1\u6700\u5927\u5806\u7684\u6839\u8282\u70b9\u4e3a\u6700\u5927\u503c, \u6700\u5c0f\u5806\u5f97\u6839\u8282\u70b9\u662f\u6700\u5c0f\u503c"),(0,l.kt)("p",null,"\u4f7f\u7528\u573a\u666f:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f18\u5148\u961f\u5217 - \u4f18\u5148\u961f\u5217\u4e2d\u7684\u5143\u7d20\u90fd\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7, \u6700\u9ad8\u7684\u5143\u7d20\u6700\u5148\u88ab\u53d6\u51fa, \u961f\u5217\u7ed3\u6784\u53ef\u4ee5\u7528\u5806\u5b9e\u73b0"),(0,l.kt)("li",{parentName:"ul"},"\u5806\u6392\u5e8f - \u627e\u6700\u503c\u5f97\u65f6\u5019\u53ef\u4ee5\u7528\u5806\u7ed3\u6784")),(0,l.kt)("p",null,'\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4, \u6240\u4ee5\u4e8c\u53c9\u5806\u4e00\u822c\u90fd\u901a\u8fc7"\u6570\u7ec4"\u6765\u5b58\u50a8, \u6570\u7ec4\u4e0b\u6807\u89c4\u5f8b: (\u5047\u8bbe \u5176\u4e2d\u67d0\u4e00\u4e2a\u5143\u7d20\u7684index\u5047\u8bbe\u4e3an, \u6570\u7ec4\u4e0b\u6807\u4ece 1 \u5f00\u59cb)'),(0,l.kt)("p",null,"1\uff09\u5b83\u7684\u7236\u8282\u70b9\u82e5\u5b58\u5728\uff0c\u7236\u8282\u70b9\u7684index\u4e3an//2(n//2\u6307n\u9664\u4ee52\u53d6\u6574\u6570)"),(0,l.kt)("p",null,"2\uff09\u82e5\u662f\u5de6\u5b50\u8282\u70b9\u5b58\u5728\uff0cindex\u4e3a2*n"),(0,l.kt)("p",null,"3\uff09\u82e5\u662f\u53f3\u5b50\u8282\u70b9\u5b58\u5728\uff0cindex\u4e3a2*n+1"),(0,l.kt)("h2",{id:"72-\u5806\u6392\u5e8f"},"7.2. \u5806\u6392\u5e8f"),(0,l.kt)("h1",{id:"8-\u56fe"},"8. \u56fe"),(0,l.kt)("h2",{id:"81-\u56fe\u7684\u6982\u5ff5"},"8.1. \u56fe\u7684\u6982\u5ff5"),(0,l.kt)("p",null,"\u56fe(graph)\u7531\u591a\u4e2a\u8282\u70b9(vertex)\u6784\u6210\uff0c\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u8fde\u63a5\u7ec4\u6210\u4e00\u4e2a\u7f51\u7edc\u3002(x, y)\u8868\u793a\u4e00\u6761\u8fb9(edge)\uff0c\u5b83\u8868\u793a\u8282\u70b9x\u4e0ey\u76f8\u8fde\u3002\u8fb9\u53ef\u80fd\u4f1a\u6709\u6743\u503c(weight/cost)\u3002"),(0,l.kt)("p",null,"\u6839\u636e\u8fb9\u662f\u5426\u6709\u65b9\u5411\uff0c\u5c06\u56fe\u53ef\u4ee5\u5212\u5206\u4e3a\uff1a\u65e0\u5411\u56fe\u548c\u6709\u5411\u56fe\u3002"),(0,l.kt)("p",null,"\u904d\u5386\u7b97\u6cd5: \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22(Breadth First Search), \u6df1\u5ea6\u4f18\u5148\u641c\u7d22(Depth First Search)"),(0,l.kt)("h1",{id:"9-\u54c8\u5e0c\u8868hash-table"},"9. \u54c8\u5e0c\u8868(hash-table)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u54c8\u5e0c(Hash): \u5c06\u67d0\u4e2a\u5bf9\u8c61\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u53d8\u6362\u4e3a\u552f\u4e00\u6807\u8bc6\u7b26(hash)\uff0c\u8be5\u6807\u8bc6\u7b26\u901a\u5e38\u7528\u4e00\u4e2a\u77ed\u7684\u968f\u673a\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u6765\u4ee3\u8868\u3002\u54c8\u5e0c\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u5c31\u662f\u54c8\u5e0c\u8868(hash table)\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u54c8\u5e0c\u51fd\u6570: \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u6620\u5c04\u6210\u7d22\u5f15\u3002\u8fd9\u79cd\u6620\u5c04\u51fd\u6570\u5c31\u662f\u54c8\u5e0c\u51fd\u6570; "),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u6b63\u6574\u6570\u4f5c\u4e3a\u952e, \u4e00\u822c\u7528\u8fd9\u4e2a\u6574\u6570, \u9664\u4ee5\u6570\u7ec4\u7684\u5bb9\u91cf, \u53d6\u4f59\u6570, \u7ed3\u679c\u4f5c\u4e3a\u4fdd\u5b58\u5230\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5b57\u7b26\u4e32\u4f5c\u4e3a\u952e\u7684\u65f6\u5019, \u53ef\u4ee5\u5c06\u7ec4\u6210\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4e2a\u5b57\u7b26\u53d6\u503c\u7136\u540e\u4ee5\u4e00\u5b9a\u89c4\u5219\u8fdb\u884c\u54c8\u5e0c")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u54c8\u5e0c\u8868\u5c31\u662f\u4e00\u79cd\u4ee5 \u952e-\u503c(key-indexed) \u5b58\u50a8\u6570\u636e\u7684\u7ed3\u6784\uff0c\u6211\u4eec\u53ea\u8981\u8f93\u5165\u5f85\u67e5\u627e\u7684\u503c\u5373key\uff0c\u5373\u53ef\u67e5\u627e\u5230\u5176\u5bf9\u5e94\u7684\u503c; \u54c8\u5e0c\u8868\u901a\u5e38\u7531\u6570\u7ec4\u5b9e\u73b0\u3002\u6570\u7ec4\u7684\u4e0b\u6807\u5373\u4e3a\u54c8\u5e0c\u503c\uff0c\u7531\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\uff0c\u4f5c\u4e3a\u54c8\u5e0c\u8868\u7684\u952e(key)\uff0c\u800c\u6570\u7ec4\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u5373\u4e3a\u503c(value)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u539f\u7406: \u5982\u679c\u6240\u6709\u7684\u952e\u90fd\u662f\u6574\u6570\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u65e0\u5e8f\u6570\u7ec4\u6765\u5b9e\u73b0\uff1a\u5c06\u952e\u4f5c\u4e3a\u7d22\u5f15\uff0c\u503c\u5373\u4e3a\u5176\u5bf9\u5e94\u7684\u503c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5feb\u901f\u8bbf\u95ee\u4efb\u610f\u952e\u7684\u503c; \u5982\u679c\u952e\u662f\u590d\u6742\u7c7b\u578b, \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5c06\u88ab\u67e5\u627e\u7684\u952e\u8f6c\u6362\u4e3a\u6570\u7ec4\u7684\u7d22\u5f15, \u7136\u540e\u6839\u636e\u7d22\u5f15\u5230\u6570\u7ec4\u4e2d\u67e5\u627e\u5bf9\u5e94\u7684\u503c; ")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u78b0\u649e\u51b2\u7a81: \u5728\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u7684\u952e\u4f1a\u88ab\u8f6c\u6362\u4e3a\u4e0d\u540c\u7684\u7d22\u5f15\u503c\uff0c\u4f46\u662f\u5728\u6709\u4e9b\u60c5\u51b5\u4e0b\u9700\u8981\u5904\u7406\u591a\u4e2a\u952e\u88ab\u54c8\u5e0c\u5230\u540c\u4e00\u4e2a\u7d22\u5f15\u503c\u7684\u60c5\u51b5, \u600e\u4e48\u89e3\u51b3: \u62c9\u94fe\u6cd5\u548c\u7ebf\u6027\u63a2\u6d4b\u6cd5"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u62c9\u94fe\u6cd5: \u4f7f\u5f97\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u6307\u5411\u4e00\u4e2a\u6761\u94fe\u8868, \u53d1\u751f\u78b0\u649e\u7684\u503c\u90fd\u5b58\u50a8\u5230\u94fe\u8868\u4e2d; \u539f\u5219: \u9009\u62e9\u5bb9\u91cf\u8db3\u591f\u5927\u7684\u6570\u7ec4\uff0c\u4f7f\u5f97\u6240\u6709\u7684\u94fe\u8868\u90fd\u5c3d\u53ef\u80fd\u7684\u77ed\u5c0f\uff0c\u4ee5\u4fdd\u8bc1\u67e5\u627e\u7684\u6548\u7387")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u7ebf\u6027\u63a2\u6d4b\u6cd5: \u4f7f\u7528\u5927\u5c0f\u4e3aM\u7684\u6570\u7ec4\u6765\u4fdd\u5b58N\u4e2a\u952e\u503c\u5bf9\uff0c\u5176\u4e2dM>N\uff0c\u9700\u8981\u4f7f\u7528\u6570\u7ec4\u4e2d\u7684\u7a7a\u4f4d\u89e3\u51b3\u78b0\u649e\u51b2\u7a81; \u5982\u679c\u53d1\u751f\u78b0\u649e, \u5c31\u5c06\u7d22\u5f15+1, \u503c\u5b58\u653e\u5230\u76f8\u90bb\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u5f71\u54cdhash table\u6027\u80fd\u7684\u6307\u6807:"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u54c8\u5e0c\u51fd\u6570"),(0,l.kt)("li",{parentName:"ul"},"\u54c8\u5e0c\u8868\u7684\u5927\u5c0f"),(0,l.kt)("li",{parentName:"ul"},"\u54c8\u5e0c\u51b2\u7a81\u5904\u7406\u65b9\u5f0f")))))),(0,l.kt)("h1",{id:"10-\u6392\u5e8f\u7b97\u6cd5"},"10. \u6392\u5e8f\u7b97\u6cd5"),(0,l.kt)("h2",{id:"101-\u9009\u62e9\u6392\u5e8fselect-sort"},"10.1. \u9009\u62e9\u6392\u5e8f(select Sort)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"Function selectionSort(arry)\n  For i = 0 To end of arry\n\n    smallestIndex = i\n    For j = i+1 To end of array\n      If array item j < array item smallestIndex\n        smallestIndex = j\n      End If\n    Next\n\n    swap array item at i and smallestIndex\n\n  Next\n\nreturn arry\n")),(0,l.kt)("p",null,"\u590d\u6742\u5ea6\u5206\u6790\uff1a for\u5faa\u73af\u5957for\u5faa\u73af\uff0c N*N -> O(N^2)"),(0,l.kt)("h2",{id:"102-\u5f52\u5e76\u6392\u5e8fmerge-sort"},"10.2. \u5f52\u5e76\u6392\u5e8f(merge sort)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"")),(0,l.kt)("p",null,"\u590d\u6742\u5ea6: O(n*log n)"),(0,l.kt)("h2",{id:"103-\u5192\u6ce1\u6392\u5e8fbubble-sort"},"10.3. \u5192\u6ce1\u6392\u5e8f(bubble sort)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Function bubbleSort(array)\n  For i = 0 To end of array\n\n    swappedFlag = false\n    For j = 0 To array size - i-1\n      If array item j > array item j+1\n        swap array item at j and j+1\n        swappedFlag = true\n      End If\n    Next\n\n    // \u5982\u679c \u6ca1\u6709\u53d1\u751f\u4ea4\u6362\uff0c \u8bf4\u660e\u5df2\u7ecf\u662f\u6709\u5e8f\u7684\u4e86\uff0c \u53ef\u4ee5\u76f4\u63a5\u8df3\u51fa\n    If Not swappedFlag\n      Break\n    Eng If\n\n  Next\n\nreturn array\n\n")),(0,l.kt)("p",null,"\u590d\u6742\u5ea6\uff1a O(N^2), \u6700\u597d\u60c5\u51b5O(N)"),(0,l.kt)("h1",{id:"11-\u67e5\u627e\u7b97\u6cd5"},"11. \u67e5\u627e\u7b97\u6cd5"),(0,l.kt)("p",null,"\u5728\u8868\u4e2d\u6267\u884c\u67e5\u627e\u52a8\u4f5c, \u5206\u4e3a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"static search table (\u9759\u6001\u67e5\u627e\u8868), \u5728\u8868\u4e2d\u53ea\u662f\u505a\u67e5\u627e\u64cd\u4f5c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"dynamic search table(\u52a8\u6001\u67e5\u627e\u8868), \u5728\u67e5\u627e\u8fc7\u7a0b\u4e2d, \u540c\u65f6\u63d2\u5165\u65b0\u7684\u6570\u636e\u8bb0\u5f55 \u6216\u8005\u5220\u9664\u67d0\u4e9b\u6570\u636e\u8bb0\u5f55"))),(0,l.kt)("h2",{id:"111-\u987a\u5e8f\u67e5\u627e"},"11.1. \u987a\u5e8f\u67e5\u627e"),(0,l.kt)("p",null,"\u5c31\u662f\u904d\u5386\u67e5\u627e, \u4e0d\u8981\u6c42\u8868\u6709\u5e8f"),(0,l.kt)("p",null,"\u65f6\u95f4\u590d\u6742\u5ea6: O(n)"),(0,l.kt)("h2",{id:"112-\u6709\u5e8f\u8868\u67e5\u627e"},"11.2. \u6709\u5e8f\u8868\u67e5\u627e"),(0,l.kt)("p",null,"\u4e8c\u5206\u67e5\u627e"),(0,l.kt)("p",null,"\u8981\u6c42\u8868\u6709\u5e8f, \u6bcf\u6b21\u53d6\u4e2d\u95f4\u5750\u6807, \u5faa\u73af\u6bd4\u8f83"),(0,l.kt)("p",null,"O(logn)"),(0,l.kt)("h2",{id:"113-\u7ebf\u6027\u7d22\u5f15\u67e5\u627e"},"11.3. \u7ebf\u6027\u7d22\u5f15\u67e5\u627e"),(0,l.kt)("h1",{id:"12-\u7d22\u5f15"},"12. \u7d22\u5f15"),(0,l.kt)("p",null,"\u7d22\u5f15\u662f\u4e00\u79cd\u52a0\u5feb\u67e5\u627e\u901f\u5ea6\u800c\u8bbe\u8ba1\u7684\u6570\u636e\u7ed3\u6784, "),(0,l.kt)("p",null,"\u4e00\u4e2a\u7d22\u5f15\u5305\u62ec\u591a\u4e2a\u7d22\u5f15\u9879, \u6bcf\u4e2a\u7d22\u5f15\u9879\u5305\u62ec\u5173\u952e\u5b57 and \u6570\u636e\u5728\u78c1\u76d8\u4e2d\u7684\u4f4d\u7f6e"),(0,l.kt)("p",null,"\u7d22\u5f15\u5c31\u662f\u628a\u4e00\u4e2a\u5173\u952e\u5b57\u548c\u5bf9\u5e94\u7684 record \u5173\u8054\u7684\u8fc7\u7a0b"),(0,l.kt)("h2",{id:"121-\u7ebf\u6027\u7d22\u5f15"},"12.1. \u7ebf\u6027\u7d22\u5f15"),(0,l.kt)("h3",{id:"1211-\u7a20\u5bc6\u7d22\u5f15"},"12.1.1. \u7a20\u5bc6\u7d22\u5f15"),(0,l.kt)("h3",{id:"1212-\u5206\u5757\u7d22\u5f15"},"12.1.2. \u5206\u5757\u7d22\u5f15"),(0,l.kt)("h3",{id:"1213-\u5012\u6392\u7d22\u5f15"},"12.1.3. \u5012\u6392\u7d22\u5f15"),(0,l.kt)("h2",{id:"122-\u6811\u5f62\u7d22\u5f15"},"12.2. \u6811\u5f62\u7d22\u5f15"),(0,l.kt)("h2",{id:"123-\u591a\u7ea7\u7d22\u5f15"},"12.3. \u591a\u7ea7\u7d22\u5f15"),(0,l.kt)("h1",{id:"acm"},"acm"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://baike.baidu.com/item/Timus%20Online%20Judge/6537795"},"https://baike.baidu.com/item/Timus%20Online%20Judge/6537795")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"https://acm.timus.ru/forum/?space=1&num=1394"},"https://acm.timus.ru/forum/?space=1&num=1394"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"ACM\u7a0b\u5e8f\u8bbe\u8ba1\u5927\u8d5b\u7b80\u4ecb\n\u5982\u679c\u771f\u6b63\u662f\u5728\u8ba1\u7b97\u673a\u9886\u57df\u505a\u5b66\u95ee\u7684\u8bdd\uff0c\u5bf9ACM\u7684\u5927\u540d\u4e00\u5b9a\u4e0d\u4f1a\u964c\u751f\uff0cACM\u7684\u5168\u79f0\u662fAssociation for Computing Machinery\uff08\u7f8e\u56fd\u8ba1\u7b97\u673a\u5b66\u4f1a\uff09\uff0c\u5efa\u7acb\u4e8e1947\u5e74\uff0c\u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u4e2a\u6559\u80b2\u548c\u79d1\u7814\u7684\uff0c\u4e5f\u662f\u6700\u6709\u5f71\u54cd\u7684\u8ba1\u7b97\u673a\u7ec4\u7ec7\u3002\u4eca\u5929\uff0cACM\u5df2\u7ecf\u6709\u8d85\u8fc78\u4e07\u4e2a\u6210\u5458\uff0c\u904d\u5e03\u5728\u4e16\u754c\u5404\u5730\u3002ACM\u7684\u4e3b\u8981\u6d3b\u52a8\u5305\u62ec\u4e00\u4e9b\u4e13\u9898\u7684\u5174\u8da3\u5c0f\u7ec4\uff08SIGs Special Interesting Groups\uff09\uff0c\u6bcf\u5e74\u8981\u7ec4\u7ec7\u4e00\u7cfb\u5217\u9ad8\u6c34\u5e73\u7684\u5b66\u672f\u4f1a\u8bae\uff0c\u8fd8\u6709\u4e00\u4e9b\u9762\u5411\u4e0d\u540c\u5c42\u6b21\u7684\u5b66\u672f\u7ade\u8d5b\uff0cACM/ICPC\u5c31\u662f\u5176\u4e2d\u4e4b\u4e00\u3002\n\n    ACM/ICPC\uff08ACM International Collegiate Programming Contest\uff09\uff0c\u5373ACM\u56fd\u9645\u5927\u5b66\u751f\u7a0b\u5e8f\u8bbe\u8ba1\u7ade\u8d5b\uff0c\u662f\u7531ACM\u534f\u4f1a\u63d0\u4f9b\u7ed9\u5927\u5b66\u751f\u7684\u4e00\u4e2a\u5c55\u793a\u548c\u63d0\u9ad8\u89e3\u9898\u4e0e\u7f16\u7a0b\u80fd\u529b\u7684\u673a\u4f1a\u3002\u9762\u5411\u5168\u4e16\u754c\u7684\u5927\u5b66\u751f\uff0c\u5206\u4e3a\u5730\u533a\u8d5b\u548c\u51b3\u8d5b\uff0c\u5730\u533a\u8d5b\u7684\u4f18\u80dc\u8005\uff08\u901a\u5e38\u662f\u524d\u4e24\u540d\uff09\u6709\u8d44\u683c\u53c2\u52a0\u51b3\u8d5b\uff0c\u51b3\u8d5b\u7684\u9881\u5956\u4eea\u5f0f\u5c06\u548c\u8ba1\u7b97\u673a\u754c\u6743\u5a01\u7684\u5b66\u672f\u5956\u2014\u2014\u56fe\u7075\u5956\u7684\u9881\u5956\u4eea\u5f0f\u540c\u65f6\u8fdb\u884c\u3002\n\n    ACM\u7ade\u8d5b\u6709\u7740\u72ec\u7279\u7684\u8d5b\u5236\uff0c\u6bd4\u8d5b\u662f\u4ee5\u53c2\u8d5b\u961f\u4e3a\u5355\u4f4d\u7684\uff0c\u6bcf\u961f\u4e09\u4e2a\u4eba\uff0c\u6bcf\u652f\u961f\u4f0d\u81f3\u5c11\u6709\u4e24\u540d\u53c2\u8d5b\u961f\u5458\u5fc5\u987b\u662f\u5927\u5b66\u672c\u79d1\u5c1a\u672a\u6bd5\u4e1a\u7684\u5b66\u751f\uff0c\u6240\u6709\u53c2\u8d5b\u961f\u5458\u7684\u5b66\u5386\u4e0d\u53ef\u4ee5\u8d85\u8fc7\u7814\u7a76\u751f\u4e24\u5e74\u3002\u5728\u8d5b\u573a\u4e0a\uff0c\u4e3a\u4e86\u4f53\u73b0\u56e2\u4f53\u534f\u4f5c\u7cbe\u795e\uff0c\u4e09\u4e2a\u4eba\u5171\u7528\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u53ef\u4ee5\u643a\u5e26\u4e00\u5207\u4e66\u9762\u6750\u6599\u3002\u6bd4\u8d5b\u65f6\u95f4\u4e00\u822c\u662f4-5\u4e2a\u5c0f\u65f6\uff0c\u5171\u67096-10\u9053\u9898\uff0c\u6309\u7167\u89e3\u7b54\u7684\u9898\u76ee\u591a\u5c11\u548c\u89e3\u7b54\u6240\u7528\u7684\u65f6\u95f4\u957f\u77ed\u51b3\u5b9a\u540d\u6b21\u3002\n\n    \u5bf9\u4e8e\u6bcf\u9053\u9898\u76ee\uff0c\u53c2\u8d5b\u961f\u5fc5\u987b\u5199\u51fa\u89e3\u51b3\u8be5\u9898\u7684\u7a0b\u5e8f\u6e90\u4ee3\u7801\uff0c\u63d0\u4ea4\u7ed9\u88c1\u5224\uff0c\u7531\u88c1\u5224\u7f16\u8bd1\u5f97\u5230\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u5982\u679c\u5bf9\u4e8e\u6240\u6709\u7684\u8f93\u5165\u6570\u636e\u8be5\u7a0b\u5e8f\u90fd\u80fd\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u624d\u80fd\u591f\u83b7\u5f97\u901a\u8fc7\u3002\u6d4b\u8bd5\u6570\u636e\u901a\u5e38\u6781\u4e3a\u4e25\u683c\u3002\u5f53\u67d0\u4e2a\u961f\u901a\u8fc7\u4e86\u4e00\u9053\u9898\u65f6\uff0c\u5de5\u4f5c\u4eba\u5458\u4f1a\u5728\u8fd9\u4e2a\u961f\u7684\u8ba1\u7b97\u673a\u524d\u63d2\u4e0a\u4e00\u4e2a\u4ee3\u8868\u8fd9\u9053\u9898\u989c\u8272\u7684\u6c14\u7403\uff0c\u8fd9\u6837\u6240\u6709\u6bd4\u8d5b\u7684\u60c5\u51b5\u4e00\u76ee\u4e86\u7136\uff0c\u4e3a\u4e86\u589e\u52a0\u6bd4\u8d5b\u7684\u7d27\u5f20\u6c14\u6c1b\uff0c\u6bd4\u8d5b\u7ed3\u675f\u524d\u4e00\u4e2a\u5c0f\u65f6\uff0c\u505c\u6b62\u516c\u5e03\u6240\u6709\u7684\u6210\u7ee9\n\n    \u7ade\u8d5b\u6db5\u76d6\u7684\u8303\u56f4\u5f88\u5e7f\uff0c\u5927\u81f4\u5212\u5206\u5982\u4e0b\uff1aDirect\uff08\u7b80\u5355\u9898\uff09\uff0cComputational Geometry\uff08\u8ba1\u7b97\u51e0\u4f55\uff09\uff0cNumber Theory\uff08\u6570\u8bba\uff09\uff0cCombinatorics\uff08\u7ec4\u5408\u6570\u5b66\uff09\uff0cSearch Techniques\uff08\u641c\u7d22\u6280\u672f\uff09\uff0cDynamic Programming\uff08\u52a8\u6001\u89c4\u5212\uff09\uff0cGraph Theory\uff08\u56fe\u8bba\uff09\uff0cOther\uff08\u5176\u4ed6\uff09\u3002\n\n    \u76ee\u524dACM/ICPC\u7531IBM\u8d5e\u52a9\uff0c\u5168\u7403\u5730\u533a\u8d5b\u5171\u5206\u82e5\u5e72\u4e2a\u8d5b\u533a\uff0c\u6570\u5341\u4e2a\u8d5b\u70b9\u3002\u4e2d\u56fd\u5b66\u751f\u53ef\u4ee5\u62a5\u540d\u53c2\u52a0\u4e9a\u6d32\u8d5b\u533a\u7684\u4efb\u4f55\u8d5b\u70b9\u7684\u6bd4\u8d5b(\u4ece2004\u5e74\u5f00\u59cb\uff0c\u5927\u9646\u5404\u8d5b\u70b9\u5c06\u589e\u52a0\u4e00\u8f6e\u5730\u533a\u8d5b\u7684\u9884\u9009\u8d5b)\u3002\u6bd4\u8d5b\u652f\u6301C/C++\uff0cJava,Pascal\u7b49\u8bed\u8a00\n\n    \u5728\u7ebf\u8bc4\u6d4b\u7cfb\u7edf(Online Judge)\n\n\u56fd\u5185\uff1a\n\n       \u6d59\u6c5f\u5927\u5b66ACM\u7f51\u5740: http://acm.zju.edu.cn/\n\n       \u5317\u4eac\u5927\u5b66ACM\u7f51\u5740:http://acm.pku.edu.cn\n\n       \u54c8\u5c14\u5bbe\u5de5\u4e1a\u5927\u5b66ACM\u7f51\u5740\uff1ahttp://acm.hit.edu.cn\n\n \n\n\u56fd\u5916\uff1a\n\n \n\nUSACO\uff1ahttp://ace.delos.com/usacogate/\n\n      \u897f\u73ed\u7259\u7f51\u7ad9http://acm.uva.es\n\n \n\n      \u4fc4\u7f57\u65af\u7ad9\u70b9http://acm.timus.ru\n\n \n\n\u8ba8\u8bba\u533a\n\n \n\n\u6b66\u6c49\u5927\u5b66\u3001\u5317\u4eac\u5927\u5b66\u3001\u5357\u4eac\u5927\u5b66\u3001\u4e0a\u6d77\u4ea4\u5927\u3001\u4e2d\u5c71\u5927\u5b66BBS\u7684ACM/ICPC\u8ba8\u8bba\u533a\n\n \n\nICPC\u5b98\u65b9\u7f51\u7ad9\uff1ahttp://icpc.baylor.edu/icpc/\n")),(0,l.kt)("h1",{id:"13-leetcode-\u8bb0\u5f55"},"13. leetcode \u8bb0\u5f55"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/aylei/leetcode-rust"},"https://github.com/aylei/leetcode-rust"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/warycat/rustgym"},"https://github.com/warycat/rustgym"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/TheAlgorithms/Rust"},"https://github.com/TheAlgorithms/Rust")))}N.isMDXComponent=!0}}]);