"use strict";(self.webpackChunkwiki_1=self.webpackChunkwiki_1||[]).push([[536],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>k});var a=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function r(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?r(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,a,i=function(n,e){if(null==n)return{};var t,a,i={},r=Object.keys(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(a=0;a<r.length;a++)t=r[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var p=a.createContext({}),o=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=o(n.components);return a.createElement(p.Provider,{value:e},n.children)},d="mdxType",u={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(n,e){var t=n.components,i=n.mdxType,r=n.originalType,p=n.parentName,s=c(n,["components","mdxType","originalType","parentName"]),d=o(t),m=i,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||r;return t?a.createElement(k,l(l({ref:e},s),{},{components:t})):a.createElement(k,l({ref:e},s))}));function k(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var r=t.length,l=new Array(r);l[0]=m;var c={};for(var p in e)hasOwnProperty.call(e,p)&&(c[p]=e[p]);c.originalType=n,c[d]="string"==typeof n?n:i,l[1]=c;for(var o=2;o<r;o++)l[o]=t[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6511:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var a=t(7462),i=(t(7294),t(3905));const r={title:"CPP and C \u5907\u5fd8",tags:["cpp","c"],date:new Date("2020-06-15T21:57:31.000Z"),toc_min_heading_level:2,toc_max_heading_level:5},l=void 0,c={unversionedId:"cpp",id:"cpp",title:"CPP and C \u5907\u5fd8",description:"https://github.com/jobbole/awesome-c-cn \u8d44\u6e90\u96c6\u5408",source:"@site/docs/cpp.md",sourceDirName:".",slug:"/cpp",permalink:"/en/docs/cpp",draft:!1,editUrl:"https://github.com/xiaoyureed/xiaoyureed.github.io/tree/main/docs/cpp.md",tags:[{label:"cpp",permalink:"/en/docs/tags/cpp"},{label:"c",permalink:"/en/docs/tags/c"}],version:"current",frontMatter:{title:"CPP and C \u5907\u5fd8",tags:["cpp","c"],date:"2020-06-15T21:57:31.000Z",toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"\u4e91\u670d\u52a1\u5e73\u53f0",permalink:"/en/docs/cloud-native-platform"},next:{title:"Cross The GFW",permalink:"/en/docs/cross-gfw"}},p={},o=[{value:"GCC",id:"gcc",level:2},{value:"Clang",id:"clang",level:2},{value:"\u5b89\u88c5\u73af\u5883",id:"\u5b89\u88c5\u73af\u5883",level:2},{value:"\u52a8\u6001\u94fe\u63a5\u5e93 \u9759\u6001\u94fe\u63a5\u5e93 \u547d\u4ee4\u884c\u4f7f\u7528",id:"\u52a8\u6001\u94fe\u63a5\u5e93-\u9759\u6001\u94fe\u63a5\u5e93-\u547d\u4ee4\u884c\u4f7f\u7528",level:2},{value:"CMakeLists.txt",id:"cmakeliststxt",level:2},{value:"in-source-build \u548c out-source-build",id:"in-source-build-\u548c-out-source-build",level:2},{value:"\u5185\u90e8\u6784\u5efa \u4e0d\u63a8\u8350",id:"\u5185\u90e8\u6784\u5efa-\u4e0d\u63a8\u8350",level:2},{value:"\u5916\u90e8\u6784\u5efa",id:"\u5916\u90e8\u6784\u5efa",level:2},{value:"c \u4e2d\u5212\u5206",id:"c-\u4e2d\u5212\u5206",level:2},{value:"cpp \u4e2d\u7684\u5212\u5206",id:"cpp-\u4e2d\u7684\u5212\u5206",level:2},{value:"\u9884\u5904\u7406\u5668\u6307\u4ee4",id:"\u9884\u5904\u7406\u5668\u6307\u4ee4",level:2},{value:"\u6807\u51c6\u8f93\u5165\u8f93\u51fa",id:"\u6807\u51c6\u8f93\u5165\u8f93\u51fa",level:2},{value:"\u53d8\u91cf-\u5e38\u91cf-\u6570\u636e\u7c7b\u578b",id:"\u53d8\u91cf-\u5e38\u91cf-\u6570\u636e\u7c7b\u578b",level:2},{value:"\u53d8\u91cf\u5b58\u50a8\u7c7b\u578b",id:"\u53d8\u91cf\u5b58\u50a8\u7c7b\u578b",level:2},{value:"\u51fd\u6570",id:"\u51fd\u6570",level:2},{value:"\u6307\u9488",id:"\u6307\u9488",level:2},{value:"\u6587\u4ef6\u8bfb\u5199-io",id:"\u6587\u4ef6\u8bfb\u5199-io",level:2},{value:"\u9519\u8bef\u5904\u7406",id:"\u9519\u8bef\u5904\u7406",level:2},{value:"\u5185\u5b58\u7ba1\u7406\u51fd\u6570",id:"\u5185\u5b58\u7ba1\u7406\u51fd\u6570",level:2},{value:"\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570",id:"\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570",level:2},{value:"\u5de5\u7a0b\u7ed3\u6784",id:"\u5de5\u7a0b\u7ed3\u6784",level:2},{value:"\u6570\u636e\u7c7b\u578b-\u6570\u5b66\u8ba1\u7b97-cpp",id:"\u6570\u636e\u7c7b\u578b-\u6570\u5b66\u8ba1\u7b97-cpp",level:2},{value:"\u5b58\u50a8\u7c7b\u578b-cpp",id:"\u5b58\u50a8\u7c7b\u578b-cpp",level:2},{value:"\u6d41\u7a0b\u63a7\u5236",id:"\u6d41\u7a0b\u63a7\u5236",level:2},{value:"\u51fd\u6570-cpp",id:"\u51fd\u6570-cpp",level:2},{value:"\u6307\u9488-cpp",id:"\u6307\u9488-cpp",level:2},{value:"\u5f15\u7528",id:"\u5f15\u7528",level:2},{value:"\u52a8\u6001\u5206\u914d\u5185\u5b58",id:"\u52a8\u6001\u5206\u914d\u5185\u5b58",level:2},{value:"\u547d\u540d\u7a7a\u95f4",id:"\u547d\u540d\u7a7a\u95f4",level:2},{value:"\u6a21\u677f",id:"\u6a21\u677f",level:2},{value:"\u6807\u51c6\u6a21\u677f\u5e93 stl",id:"\u6807\u51c6\u6a21\u677f\u5e93-stl",level:2},{value:"\u65e5\u671f\u65f6\u95f4",id:"\u65e5\u671f\u65f6\u95f4",level:2},{value:"io-\u8f93\u5165\u8f93\u51fa",id:"io-\u8f93\u5165\u8f93\u51fa",level:2},{value:"\u9762\u5411\u5bf9\u8c61",id:"\u9762\u5411\u5bf9\u8c61",level:2},{value:"\u7c7b-\u5bf9\u8c61",id:"\u7c7b-\u5bf9\u8c61",level:3},{value:"\u53cb\u5143",id:"\u53cb\u5143",level:3},{value:"\u5185\u8054\u51fd\u6570",id:"\u5185\u8054\u51fd\u6570",level:3},{value:"\u51fd\u6570\u91cd\u8f7d-\u8fd0\u7b97\u7b26\u91cd\u8f7d",id:"\u51fd\u6570\u91cd\u8f7d-\u8fd0\u7b97\u7b26\u91cd\u8f7d",level:3},{value:"\u7ee7\u627f",id:"\u7ee7\u627f",level:3},{value:"\u591a\u6001-\u865a\u51fd\u6570",id:"\u591a\u6001-\u865a\u51fd\u6570",level:3},{value:"io-\u8f93\u5165\u8f93\u51fa-cpp",id:"io-\u8f93\u5165\u8f93\u51fa-cpp",level:2},{value:"\u5f02\u5e38\u5904\u7406-cpp",id:"\u5f02\u5e38\u5904\u7406-cpp",level:2},{value:"\u4fe1\u53f7\u5904\u7406",id:"\u4fe1\u53f7\u5904\u7406",level:2},{value:"\u591a\u7ebf\u7a0b",id:"\u591a\u7ebf\u7a0b",level:2},{value:"web \u5f00\u53d1",id:"web-\u5f00\u53d1",level:2},{value:"\u6307\u9488\u7684\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u533a\u522b",id:"\u6307\u9488\u7684\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u533a\u522b",level:2}],s={toc:o},d="wrapper";function u(n){let{components:e,...t}=n;return(0,i.kt)(d,(0,a.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jobbole/awesome-c-cn"},"https://github.com/jobbole/awesome-c-cn")," \u8d44\u6e90\u96c6\u5408"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/changkun/modern-cpp-tutorial"},"https://github.com/changkun/modern-cpp-tutorial"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wuye9036/CppTemplateTutorial"},"https://github.com/wuye9036/CppTemplateTutorial")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/BrightXiaoHan/CMakeTutorial"},"https://github.com/BrightXiaoHan/CMakeTutorial")," "),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.learncpp.com/"},"https://www.learncpp.com/")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://zh.cppreference.com/w/cpp"},"https://zh.cppreference.com/w/cpp")," \u53c2\u8003\u6587\u6863"),(0,i.kt)("p",null,"\u300aEssential C++ \u4e2d\u6587\u7248\u300b\n\u300aC++ Primer Plus \u7b2c6\u7248\u4e2d\u6587\u7248\u300b\n\u300aC++ Primer\u4e2d\u6587\u7248\uff08\u7b2c5\u7248\uff09\u300b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://www.sunistudio.com/cppfaq/"},"cpp \u5e38\u89c1\u95ee\u9898")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.thefreecountry.com/sourcecode/cpp.shtml"},"cpp \u7c7b\u5e93\u6846\u67b6\u641c\u7d22")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://www.hal9k.com/cug/"},"C \u548c C++ \u7684\u7528\u6237\u7ec4"),", \u63d0\u4f9b\u4e86\u514d\u8d39\u7684\u6db5\u76d6\u5404\u79cd\u7f16\u7a0b\u9886\u57df C++ \u9879\u76ee\u7684\u6e90\u4ee3\u7801\uff0c\u5305\u62ec AI\u3001\u52a8\u753b\u3001\u7f16\u8bd1\u5668\u3001\u6570\u636e\u5e93\u3001\u8c03\u8bd5\u3001\u52a0\u5bc6\u3001\u6e38\u620f\u3001\u56fe\u5f62\u3001GUI\u3001\u8bed\u8a00\u5de5\u5177\u3001\u7cfb\u7edf\u7f16\u7a0b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.bookstack.cn/books/modern-cpp-tutorial-zh"},"\u73b0\u4ee3 cpp")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.bookstack.cn/books/algorithm-essentials-cpp"},"\u7b97\u6cd5\u73e0\u7391 cpp \u7248\u672c"),", ",(0,i.kt)("a",{parentName:"p",href:"https://www.bookstack.cn/read/algorithm-essentials-java/3.md"},"java \u7248\u672c"),", ",(0,i.kt)("a",{parentName:"p",href:"https://www.bookstack.cn/books/fucking-algorithm"},"\u7b97\u6cd5\u603b\u7ed3")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/luohaha/Chinese-uvbook"},"https://github.com/luohaha/Chinese-uvbook")," libuv \u6559\u7a0b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1-%E7%BC%96%E8%AF%91%E5%99%A8"},"1. \u7f16\u8bd1\u5668"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#11-gcc"},"1.1. GCC")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#12-clang"},"1.2. Clang")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#13-%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83"},"1.3. \u5b89\u88c5\u73af\u5883")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#14-%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93-%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93-%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8"},"1.4. \u52a8\u6001\u94fe\u63a5\u5e93 \u9759\u6001\u94fe\u63a5\u5e93 \u547d\u4ee4\u884c\u4f7f\u7528")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#2-make-%E5%92%8C-makefile"},"2. make \u548c makefile")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#3-cmake"},"3. cmake"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#31-cmakeliststxt"},"3.1. CMakeLists.txt")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#32-in-source-build-%E5%92%8C-out-source-build"},"3.2. in-source-build \u548c out-source-build")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#33-%E5%86%85%E9%83%A8%E6%9E%84%E5%BB%BA-%E4%B8%8D%E6%8E%A8%E8%8D%90"},"3.3. \u5185\u90e8\u6784\u5efa \u4e0d\u63a8\u8350")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#34-%E5%A4%96%E9%83%A8%E6%9E%84%E5%BB%BA"},"3.4. \u5916\u90e8\u6784\u5efa")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#4-%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B"},"4. \u5b58\u50a8\u7c7b\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#5-%E5%86%85%E5%AD%98%E5%88%92%E5%88%86"},"5. \u5185\u5b58\u5212\u5206"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#51-c-%E4%B8%AD%E5%88%92%E5%88%86"},"5.1. c \u4e2d\u5212\u5206")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#52-cpp-%E4%B8%AD%E7%9A%84%E5%88%92%E5%88%86"},"5.2. cpp \u4e2d\u7684\u5212\u5206")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6-c-%E8%AF%AD%E6%B3%95"},"6. c \u8bed\u6cd5"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#61-%E9%A2%84%E5%A4%84%E7%90%86%E5%99%A8%E6%8C%87%E4%BB%A4"},"6.1. \u9884\u5904\u7406\u5668\u6307\u4ee4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62-%E6%A0%87%E5%87%86%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA"},"6.2. \u6807\u51c6\u8f93\u5165\u8f93\u51fa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63-%E5%8F%98%E9%87%8F-%E5%B8%B8%E9%87%8F-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"},"6.3. \u53d8\u91cf-\u5e38\u91cf-\u6570\u636e\u7c7b\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#64-%E5%8F%98%E9%87%8F%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B"},"6.4. \u53d8\u91cf\u5b58\u50a8\u7c7b\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#65-%E5%87%BD%E6%95%B0"},"6.5. \u51fd\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#66-%E6%8C%87%E9%92%88"},"6.6. \u6307\u9488")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#67-%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99-io"},"6.7. \u6587\u4ef6\u8bfb\u5199-io")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#68-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86"},"6.8. \u9519\u8bef\u5904\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#69-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E5%87%BD%E6%95%B0"},"6.9. \u5185\u5b58\u7ba1\u7406\u51fd\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#610-%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0"},"6.10. \u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#611-%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%84"},"6.11. \u5de5\u7a0b\u7ed3\u6784")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7-cpp-%E8%AF%AD%E6%B3%95"},"7. cpp \u8bed\u6cd5"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B-%E6%95%B0%E5%AD%A6%E8%AE%A1%E7%AE%97-cpp"},"7.1. \u6570\u636e\u7c7b\u578b-\u6570\u5b66\u8ba1\u7b97-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#72-%E5%AD%98%E5%82%A8%E7%B1%BB%E5%9E%8B-cpp"},"7.2. \u5b58\u50a8\u7c7b\u578b-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#73-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6"},"7.3. \u6d41\u7a0b\u63a7\u5236")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#74-%E5%87%BD%E6%95%B0-cpp"},"7.4. \u51fd\u6570-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#75-%E6%8C%87%E9%92%88-cpp"},"7.5. \u6307\u9488-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#76-%E5%BC%95%E7%94%A8"},"7.6. \u5f15\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#77-%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D%E5%86%85%E5%AD%98"},"7.7. \u52a8\u6001\u5206\u914d\u5185\u5b58")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#78-%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4"},"7.8. \u547d\u540d\u7a7a\u95f4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#79-%E6%A8%A1%E6%9D%BF"},"7.9. \u6a21\u677f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#710-%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93-stl"},"7.10. \u6807\u51c6\u6a21\u677f\u5e93 stl")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#711-%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4"},"7.11. \u65e5\u671f\u65f6\u95f4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#712-io-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA"},"7.12. io-\u8f93\u5165\u8f93\u51fa")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#713-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1"},"7.13. \u9762\u5411\u5bf9\u8c61"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7131-%E7%B1%BB-%E5%AF%B9%E8%B1%A1"},"7.13.1. \u7c7b-\u5bf9\u8c61")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7132-%E5%8F%8B%E5%85%83"},"7.13.2. \u53cb\u5143")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7133-%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0"},"7.13.3. \u5185\u8054\u51fd\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7134-%E5%87%BD%E6%95%B0%E9%87%8D%E8%BD%BD-%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD"},"7.13.4. \u51fd\u6570\u91cd\u8f7d-\u8fd0\u7b97\u7b26\u91cd\u8f7d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7135-%E7%BB%A7%E6%89%BF"},"7.13.5. \u7ee7\u627f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7136-%E5%A4%9A%E6%80%81-%E8%99%9A%E5%87%BD%E6%95%B0"},"7.13.6. \u591a\u6001-\u865a\u51fd\u6570")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#714-io-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA-cpp"},"7.14. io-\u8f93\u5165\u8f93\u51fa-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#715-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86-cpp"},"7.15. \u5f02\u5e38\u5904\u7406-cpp")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#716-%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86"},"7.16. \u4fe1\u53f7\u5904\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#717-%E5%A4%9A%E7%BA%BF%E7%A8%8B"},"7.17. \u591a\u7ebf\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#718-web-%E5%BC%80%E5%8F%91"},"7.18. web \u5f00\u53d1")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#8-qt-%E6%A1%86%E6%9E%B6"},"8. qt \u6846\u67b6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#9-%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7"},"9. \u5f00\u53d1\u5de5\u5177")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10-debug-%E5%B7%A5%E5%85%B7"},"10. debug \u5de5\u5177")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#11-%E6%8B%BE%E9%81%97"},"11. \u62fe\u9057"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#111-%E6%8C%87%E9%92%88%E7%9A%84%E6%8C%87%E9%92%88%E5%92%8C%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E5%88%AB"},"11.1. \u6307\u9488\u7684\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u533a\u522b"))))),(0,i.kt)("h1",{id:"\u7f16\u8bd1\u5668"},"\u7f16\u8bd1\u5668"),(0,i.kt)("h2",{id:"gcc"},"GCC"),(0,i.kt)("p",null,"gcc \u662f\u6765\u81eaGNU\u5957\u88c5 \u7684 C/C++ \u7f16\u8bd1\u5668, linux \u9ed8\u8ba4\u63d0\u4f9b"),(0,i.kt)("p",null,"GCC\u5c06\u7f16\u8bd1\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"*C/*cpp"),"\u6587\u4ef6\uff0c\u5206\u522b\u4f5c\u4e3aC\u548cC++\u3002"),(0,i.kt)("p",null,"G++ \u662f gnu \u4e13\u95e8\u7528\u6765\u7f16\u8bd1 cpp \u7684, \u9ed8\u8ba4\u4f7f\u7528 c++ \u8bed\u6cd5\u6807\u51c6 (Gcc \u4e0d\u4f1a, \u4f46\u662f\u53ef\u4ee5\u7ed9 gcc \u6307\u5b9a\u8bed\u6cd5\u6807\u51c6), \u5c06\u7f16\u8bd1\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"*.c/*.cpp"),"\u6587\u4ef6\uff0c\u4f46\u5b83\u4eec\u90fd\u5c06\u88ab\u89c6\u4e3aC++\u6587\u4ef6\u3002"),(0,i.kt)("p",null,"GCC\u7f16\u8bd1C\u6587\u4ef6\u7684\u9884\u5b9a\u4e49\u5b8f\u8f83\u5c11\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'# \u67e5\u770b\u7248\u672c\ngcc -v\n\n# build\n# \u751f\u6210 a.out \u6587\u4ef6\ngcc hello.c\n# \u6307\u5b9a\u8f93\u51fa\u6587\u4ef6\u540d\uff0c \u7f16\u8bd1\u591a\u4e2a\u6587\u4ef6\ngcc test1.c test2.c -o main\n\n# run\n./a.out\n./main\n\n\n# g++ \u7528\u6cd5\u7c7b\u4f3c\n\n# g++ \u6709\u4e9b\u7cfb\u7edf\u9ed8\u8ba4\u662f\u4f7f\u7528 C++98\uff0c\u6211\u4eec\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528 C++11 \u6765\u7f16\u8bd1 \ng++ -g -Wall -std=c++11 main.cpp\n\n\n-ansi   \u53ea\u652f\u6301 ANSI \u6807\u51c6\u7684 C \u8bed\u6cd5\u3002\u8fd9\u4e00\u9009\u9879\u5c06\u7981\u6b62 GNU C \u7684\u67d0\u4e9b\u7279\u8272\uff0c \u4f8b\u5982 asm \u6216 typeof \u5173\u952e\u8bcd\u3002\n-c  \u53ea\u7f16\u8bd1\u5e76\u751f\u6210\u76ee\u6807\u6587\u4ef6\u3002\n-DMACRO \u4ee5\u5b57\u7b26\u4e32"1"\u5b9a\u4e49 MACRO \u5b8f\u3002\n-DMACRO=DEFN    \u4ee5\u5b57\u7b26\u4e32"DEFN"\u5b9a\u4e49 MACRO \u5b8f\u3002\n-E  \u53ea\u8fd0\u884c C \u9884\u7f16\u8bd1\u5668\u3002\n-g  \u751f\u6210\u8c03\u8bd5\u4fe1\u606f\u3002GNU \u8c03\u8bd5\u5668\u53ef\u5229\u7528\u8be5\u4fe1\u606f\u3002\n-IDIRECTORY \u6307\u5b9a\u989d\u5916\u7684\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84DIRECTORY\u3002\n-LDIRECTORY \u6307\u5b9a\u989d\u5916\u7684\u51fd\u6570\u5e93\u641c\u7d22\u8def\u5f84DIRECTORY\u3002\n-lLIBRARY   \u8fde\u63a5\u65f6\u641c\u7d22\u6307\u5b9a\u7684\u51fd\u6570\u5e93LIBRARY\u3002\n-m486   \u9488\u5bf9 486 \u8fdb\u884c\u4ee3\u7801\u4f18\u5316\u3002\n-o  FILE \u751f\u6210\u6307\u5b9a\u7684\u8f93\u51fa\u6587\u4ef6\u3002\u7528\u5728\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u65f6\u3002\n-O0 \u4e0d\u8fdb\u884c\u4f18\u5316\u5904\u7406\u3002\n-O  \u6216 -O1 \u4f18\u5316\u751f\u6210\u4ee3\u7801\u3002\n-O2 \u8fdb\u4e00\u6b65\u4f18\u5316\u3002\n-O3 \u6bd4 -O2 \u66f4\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u5305\u62ec inline \u51fd\u6570\u3002\n-shared \u751f\u6210\u5171\u4eab\u76ee\u6807\u6587\u4ef6\u3002\u901a\u5e38\u7528\u5728\u5efa\u7acb\u5171\u4eab\u5e93\u65f6\u3002\n-static \u7981\u6b62\u4f7f\u7528\u5171\u4eab\u8fde\u63a5\u3002\n-UMACRO \u53d6\u6d88\u5bf9 MACRO \u5b8f\u7684\u5b9a\u4e49\u3002\n-w  \u4e0d\u751f\u6210\u4efb\u4f55\u8b66\u544a\u4fe1\u606f\u3002\n-Wall   \u751f\u6210\u6240\u6709\u8b66\u544a\u4fe1\u606f\n')),(0,i.kt)("h2",{id:"clang"},"Clang"),(0,i.kt)("p",null,"Clang \u662f\u4e00\u4e2a C++ \u7f16\u5199\u3001\u57fa\u4e8e LLVM\u3001\u53d1\u5e03\u4e8e LLVM BSD \u8bb8\u53ef\u8bc1\u4e0b\u7684 C/C++/Objective C/Objective C++ \u7f16\u8bd1\u5668\uff0c\u5176\u76ee\u6807\uff08\u4e4b\u4e00\uff09\u5c31\u662f\u8d85\u8d8a GCC"),(0,i.kt)("p",null,"mac \u81ea\u5e26, clang\u6bd4gcc\u7f16\u8bd1\u901f\u5ea6\u66f4\u5feb\u4e00\u4e9b\uff0c\u800c\u4e14\u9519\u8bef\u63d0\u793a\u66f4\u4eba\u6027\u5316\u3002"),(0,i.kt)("p",null,"\u5206\u4e3a clang\uff0c clang++"),(0,i.kt)("p",null,"clang++ \u9ed8\u8ba4\u6309\u7167 c++ \u5904\u7406\u4ee3\u7801"),(0,i.kt)("p",null,"\u7f16\u8bd1\u53c2\u6570\u6700\u597d\u4f7f\u7528 \u201c-std=c++2a\u201d"),(0,i.kt)("p",null,"\u7f16\u8bd1\u8fc7\u7a0b: ( \u4ee5\u7f16\u8bd1\u5355\u6587\u4ef6 test.cc)"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u9884\u5904\u7406\u9636\u6bb5 - \u5904\u7406\u6e90\u7801\u6587\u4ef6, \u6bd4\u5982\u5305\u542b\u5934\u6587\u4ef6\u5230\u6587\u4ef6\u4e2d\uff0c\u66ff\u6362\u5b8f\u5b9a\u4e49\u3002\u751f\u6210\u9884\u5904\u7406\u540e\u7684\u6587\u4ef6test.i ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -E test.cc -o test.i"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u7f16\u8bd1\u9636\u6bb5 - \u5c06\u9884\u5904\u7406\u6587\u4ef6\u7ffb\u8bd1\u6210\u6c47\u7f16\u7a0b\u5e8f test.s ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -S test.i"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u6c47\u7f16\u9636\u6bb5 - \u5c06\u6c47\u7f16\u7a0b\u5e8f\u7ffb\u8bd1\u4e3a \u673a\u5668\u6307\u4ee4, \u6253\u5305\u6210 \u76ee\u6807\u6587\u4ef6 test.o (windows \u4e0b\u4e3a test.obj, \u5373 object file ) ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -c test.s")),(0,i.kt)("p",{parentName:"li"},"\u8fdb\u4e00\u6b65\u53ef\u751f\u6210\u9759\u6001\u94fe\u63a5\u5e93 xxx.a ",(0,i.kt)("inlineCode",{parentName:"p"},"ar -rcs xxx.a test.o")," (\u4e00\u822c\u5c06\u72ec\u7acb\u7684\u6587\u4ef6\u5982\u4e00\u4e2a\u65b9\u6cd5\u7f16\u8bd1\u4e3a\u9759\u6001\u94fe\u63a5\u5e93)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u94fe\u63a5\u9636\u6bb5 - \u5c06\u591a\u4e2a object file \u5408\u5e76\u6210\u53ef\u6267\u884c\u6587\u4ef6. \u6bd4\u5982: \u82e5\u8c03\u7528\u4e86\u7cfb\u7edf\u51fd\u6570 cout, \u94fe\u63a5\u5668\u5c06\u8be5\u51fd\u6570\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6 cout.o \u5408\u5e76\u5230 test.o, \u751f\u6210\u53ef\u6267\u884c\u4e8c\u8fdb\u5236\u6587\u4ef6 "),(0,i.kt)("p",{parentName:"li"},"(\u53ef\u4ee5\u52a0\u5165\u9759\u6001\u94fe\u63a5\u6587\u4ef6) ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -o main main.cc [xxx.a]"),"; "),(0,i.kt)("p",{parentName:"li"},"\u6216\u8005 \u5728\u7cfb\u7edf\u76ee\u5f55\u4e0b\u67e5\u627e\u6307\u5b9a\u9759\u6001\u94fe\u63a5\u5e93\u4e2d\u7684\u65b9\u6cd5 add ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -o main main.cc -l add"),", "),(0,i.kt)("p",{parentName:"li"},"\u6216\u8005\u4e0d\u5728\u7cfb\u7edf\u76ee\u5f55\u67e5\u627e, \u81ea\u5df1\u6307\u5b9a\u76ee\u5f55 ",(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -o main main.cc -L ./ -l add")))),(0,i.kt)("p",null,"\u7f16\u8bd1\u591a\u6587\u4ef6:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"clang++ -o main main.cc add.cc")," \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6, ",(0,i.kt)("inlineCode",{parentName:"p"},"/main")," \u6267\u884c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'// main.cc\n#include <iostream>\n\nextern int add(int, int);\nusing namespace std;\n\nint main()\n{\n    int a, b;\n    cin >> a >> b;\n    cout << "a + b = " << add(a, b) << endl;\n}\n\n// add.cc\nint add(int a, int b) \n{\n    return a + b;\n}\n\n')),(0,i.kt)("h2",{id:"\u5b89\u88c5\u73af\u5883"},"\u5b89\u88c5\u73af\u5883"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/languages/cpp"},"https://code.visualstudio.com/docs/languages/cpp"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/cpp/config-clang-mac"},"https://code.visualstudio.com/docs/cpp/config-clang-mac"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/cpp/CMake-linux"},"https://code.visualstudio.com/docs/cpp/CMake-linux"),"  \u63a8\u8350\u4f7f\u7528 cmake"),(0,i.kt)("p",null,"\u521b\u5efa task.json (\u6307\u5b9a\u7f16\u8bd1\u4efb\u52a1): terminal -> config default build task"),(0,i.kt)("p",null,"\u521b\u5efa c_pp_properties.json (\u6307\u5b9a\u7f16\u8bd1\u5668\u4f7f\u7528\u7684 cpp \u8bed\u6cd5\u6807\u51c6, \u7f16\u8bd1\u5668\u8def\u5f84): cmd+shift+p -> c/c++:edit configuration(json)"),(0,i.kt)("p",null,"\u521b\u5efa launch.json (debug \u7528): run ->  Add Configuration... and then choose C++ (GDB/LLDB)"),(0,i.kt)("h2",{id:"\u52a8\u6001\u94fe\u63a5\u5e93-\u9759\u6001\u94fe\u63a5\u5e93-\u547d\u4ee4\u884c\u4f7f\u7528"},"\u52a8\u6001\u94fe\u63a5\u5e93 \u9759\u6001\u94fe\u63a5\u5e93 \u547d\u4ee4\u884c\u4f7f\u7528"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html"},"http://www.yolinux.com/TUTORIALS/LibraryArchives-StaticAndDynamic.html")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u9759\u6001\u94fe\u63a5\u5e93: \u5373 obj \u6587\u4ef6 (xxx.o) \u7684\u96c6\u5408, \u5f62\u5982 libxxx.a (\u524d\u7f00 lib, \u540e\u7f00.a), ",(0,i.kt)("inlineCode",{parentName:"p"},"ar -rcs libxxx.a xxx.o"),", \u5728\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6(\u94fe\u63a5)\u65f6, \u5c06\u5f15\u7528\u7684\u4ee3\u7801\u590d\u5236\u5230\u5f15\u7528\u8be5\u5e93\u7684\u7a0b\u5e8f\u4e2d,\u76f8\u5f53\u4e8e\u62fc\u63a5"),(0,i.kt)("p",{parentName:"li"}," (\u4f18\u52bf\u662f\u5f00\u53d1\u8005\u53ef\u4ee5\u63d0\u4f9b\u5e93\u6587\u4ef6\u7ed9\u4f7f\u7528\u4eba\u5458\u4e0d\u7528\u5f00\u653e\u6e90\u4ee3\u7801\u3002\u7406\u8bba\u4e0a\u9759\u6001\u5e93\u6bd4\u52a8\u6001\u5e93\u901f\u5ea6\u5feb1%-5%.)"),(0,i.kt)("p",{parentName:"li"}," (\u6b64\u5916, \u6d6a\u8d39\u5b58\u50a8\u7a7a\u95f4)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u52a8\u6001\u94fe\u63a5\u5e93: \u52a8\u6001\u5e93\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a0\u8f7d\u7684\u5e93, \u628a\u94fe\u63a5\u8fd9 \u4e2a\u8fc7\u7a0b\u5ef6\u8fdf\u5230\u8fd0\u884c\u65f6\u8fdb\u884c, \u662f \u76ee\u6807\u6587\u4ef6\u7684\u96c6\u5408; "),(0,i.kt)("p",{parentName:"li"}," \u52a8\u6001\u5e93\u7684\u540d\u79f0\u6709\u522b\u540d(soname),\u771f\u540d(realname)\u548c\u94fe\u63a5\u540d(linker name)\u3002\u522b\u540d\u7531\u4e00\u4e2a\u524d\u7f00lib\uff0c\u7136\u540e\u662f\u5e93\u7684\u540d\u5b57\u52a0\u4e0a.so\u6784\u6210\u3002\u771f\u540d\u662f\u52a8\u6001\u5e93\u7684\u771f\u5b9e\u540d\u79f0\uff0c\u4e00\u822c\u603b\u662f\u5728\u522b\u540d\u7684\u57fa\u7840\u4e0a\u52a0\u4e0a\u4e00\u4e2a\u5c0f\u7684\u7248\u672c\u53f7, \u94fe\u63a5\u540d\uff0c\u5373\u7a0b\u5e8f\u94fe\u63a5\u65f6\u4f7f\u7528\u7684\u5e93\u7684\u540d\u5b57\u3002\u5728\u52a8\u6001\u94fe\u63a5\u5e93\u5b89\u88c5\u7684\u65f6\u5019\u603b\u662f\u590d\u5236\u5e93\u6587\u4ef6\u5230\u67d0\u4e2a\u76ee\u5f55\uff0c\u7136\u540e\u7528\u8f6f\u8fde\u63a5\u751f\u6210\u522b\u540d\uff0c\u5728\u5e93\u6587\u4ef6\u8fdb\u884c\u66f4\u65b0\u7684\u65f6\u5019\u4ec5\u4ec5\u66f4\u65b0\u8f6f\u8fde\u63a5\u5373\u53ef"),(0,i.kt)("p",{parentName:"li"}," \u76f8\u5bf9\u8282\u7701\u7a7a\u95f4"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# cc \u4ea6\u53ef, \u5728 macos \u4e0a\u4f7f\u7528 cc\n# g++ \u7528\u4e8e \u7f16\u8bd1 cpp , gcc \u7528\u4e8e\u7f16\u8bd1 c\n\n# \u4ec5\u4ec5\u7f16\u8bd1, \u4e0d\u94fe\u63a5, \u4ec5\u4ec5\u751f\u6210 main.o (\u4e0d\u53ef\u6267\u884c)\n# \u4e3a\u4ec0\u4e48\u8981\u5148 \u5236\u4f5c Object file , \u8fdb\u800c\u5236\u4f5c\u6210 \u53ef\u6267\u884c\u6587\u4ef6? - Object file \u53ef\u80fd\u6709\u591a\u4e2a , \u800c\u6211\u4eec\u7684\u6700\u7ec8\u76ee\u6807\u662f\u53ea\u751f\u6210\u4e00\u4e2a\u6267\u884c\u6587\u4ef6\ngcc -c main.c [-o main.o]\n\n# \u5c06 main.o \u94fe\u63a5\u4e3a main \u53ef\u6267\u884c\u6587\u4ef6 \ngcc -o main main.o\n# \u7b49\u540c\u4e0a\u4e24\u6b65\ngcc -o main main.c\n\n# check whether xx is a executable file\nfile xxx\n   \n# generate add.o\ngcc -c add.c\n# \u94fe\u63a5\u591a\u4e2a\u76ee\u6807\u6587\u4ef6, \u751f\u6210 main\ngcc -o main.o add.o\n\n# \u5c06 add.o \u6253\u5305\u6210 \u9759\u6001\u94fe\u63a5\u5e93(archive random library) libadd.a (\u53ef\u770b\u505a \u591a\u4e2a xxx.o \u7684\u96c6\u5408)\nar rc libadd.a add.o\n\n# \u94fe\u63a5\u9759\u6001\u5e93\u6587\u4ef6, -L \u6307\u5b9a\u5e93\u6587\u4ef6\u76ee\u5f55(\u7701\u7565\u4e86\u5c31\u4f7f\u7528\u9ed8\u8ba4\u8def\u5f84(/lib \u6216 /usr/lib)), -l \u6307\u5b9a\u5e93\u6587\u4ef6\u540d (\u53bb\u6389 lib \u524d\u7f00 \u548c .a \u540e\u7f00)\ngcc -o main main.o -L./ -ladd\n\n# \u751f\u6210\u52a8\u6001\u94fe\u63a5\u5e93 (dynamically linked shared library), (-fPIC \u751f\u6210\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801)\ngcc   add2.c -fPIC -shared  -o libadd2.so\n\n# \u94fe\u63a5\u52a8\u6001\u94fe\u63a5\u5e93, \u7c7b\u4f3c\u9759\u6001\u94fe\u63a5\u5e93\n# \u53ef\u80fd\u9700\u8981\u5c06\u5e93\u6587\u4ef6\u76ee\u5f55\u52a0\u5165 LD_LIBRARY_PATH \u73af\u5883\u53d8\u91cf\u4e2d\n# or \u5c06\u52a8\u6001\u5e93\u6587\u4ef6\u62f7\u8d1d\u5230 /lib/ \u6216 /usr/lib/ \u6587\u4ef6\u5939\u4e0b\n\n\n")),(0,i.kt)("h1",{id:"make-\u548c-makefile"},"make \u548c makefile"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://makefiletutorial.com/"},"https://makefiletutorial.com/"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/"},"https://www.cs.colby.edu/maxwell/courses/tutorials/maketutor/")),(0,i.kt)("p",null,"vscode Makefile \u63d2\u4ef6 \u4f7f\u7528: ",(0,i.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/cppblog/now-announcing-makefile-support-in-visual-studio-code/"},"https://devblogs.microsoft.com/cppblog/now-announcing-makefile-support-in-visual-studio-code/")),(0,i.kt)("p",null,"\u597d\u5904"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u7b80\u5316\u7f16\u8bd1\u547d\u4ee4"),(0,i.kt)("li",{parentName:"ul"},"\u589e\u91cf\u7f16\u8bd1 - \u4ec5\u4ec5\u4f1a\u91cd\u65b0\u7f16\u8bd1\u4fee\u6539\u8fc7\u7684\u6e90\u6587\u4ef6")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/magefile/mage"},"https://github.com/magefile/mage")," \u4ee3\u66ff make"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"make"),"\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u627e\u540d\u5b57\u53eb\u201cMakefile\u201d\u6216\u201cmakefile\u201d\u7684\u6587\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-makefile"},"# \u8bed\u6cd5: (make\u4f1a\u6bd4\u8f83targets\u6587\u4ef6\u548cprerequisites\u6587\u4ef6\u7684\u4fee\u6539\u65e5\u671f\uff0c\u5982\u679cprerequisites\u6587\u4ef6\u7684\u65e5\u671f\u8981\u6bd4targets\u6587\u4ef6\u7684\u65e5\u671f\u8981\u65b0\uff0c\u6216\u8005target\u4e0d\u5b58\u5728\u7684\u8bdd\uff0c\u90a3\u4e48\uff0cmake\u5c31\u4f1a\u6267\u884c\u540e\u7eed\u5b9a\u4e49\u7684\u547d\u4ee4)\n# \u5192\u53f7\u540e\u53ef\u6709\u7a7a\u683c\n# <target_obj_name>: [\u524d\u63d0\u4f9d\u8d56\u6587\u4ef6] \n#       <commands>\n\n\n# \u5b9a\u4e49\u53d8\u91cf\n   # = \u662f\u6700\u57fa\u672c\u7684\u8d4b\u503c   (make\u4f1a\u5c06\u6574\u4e2amakefile\u5c55\u5f00\u540e\uff0c\u518d\u51b3\u5b9a\u53d8\u91cf\u7684\u503c\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d8\u91cf\u7684\u503c\u5c06\u4f1a\u662f\u6574\u4e2amakefile\u4e2d\u6700\u540e\u88ab\u6307\u5b9a\u7684\u503c, \u503c\u4f1a\u52a8\u6001\u53d8\u5316)\n   # := \u662f\u8986\u76d6\u4e4b\u524d\u7684\u503c   (\u53d8\u91cf\u7684\u503c\u51b3\u5b9a\u4e8e\u5b83\u5728makefile\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u6574\u4e2amakefile\u5c55\u5f00\u540e\u7684\u6700\u7ec8\u503c\u3002)\n   # ?= \u662f\u5982\u679c\u6ca1\u6709\u88ab\u8d4b\u503c\u8fc7\u5c31\u8d4b\u4e88\u7b49\u53f7\u540e\u9762\u7684\u503c\n   # += \u662f\u6dfb\u52a0\u7b49\u53f7\u540e\u9762\u7684\u503c\n# \u5185\u7f6e\u53d8\u91cf:\n#  $@ \u76ee\u6807\u6587\u4ef6\uff0c$^ \u6240\u6709\u7684\u4f9d\u8d56\u6587\u4ef6\uff0c$< \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6\u3002\nLIBS = -lm\nOBJS = hello.o sin.o\nBASE_LIB_PATH = -L/lib -L/usr/lib\n\n# \u73af\u5883\u53d8\u91cf; gcc \u5728\u7f16\u8bd1\u65f6\u59cb\u7ec8\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u53c2\u6570\n        # \u4f18\u5148\u7ea7: make\u540e\u8ddf\u7684 > makefile\u6587\u4ef6\u5185\u90e8\u6307\u5b9a\u7684(\u4e5f\u5373\u662f\u8fd9\u91cc\u7684) > shell\u6307\u5b9a\u7684\nCFLAGS = -Wall -g\n# $@ \u4ee3\u8868\u5f53\u524d\u7684 target , \u5373 main \n\n# cc \u7684\u7f16\u8bd1\u5668\u6307\u5b9a\u4e3a gcc , \u4e0d\u4f7f\u7528\u9ed8\u8ba4\u7684 cc\nCC := gcc\n\n\nmain: ${OBJS}\n   gcc -o main ${OBJS} ${LIBS} ${BASE_LIB_PATH}\n\n# \u4e00\u822c \u4f1a `make clean all` \u5148\u6e05\u7406\u540e\u7f16\u8bd1\u6240\u6709\n   # \u4f2a\u76ee\u6807,\u8868\u793a clean \u4f5c\u4e3a\u4e00\u4e2a\u6307\u4ee4\u6267\u884c, \u4e0d\u751f\u6210 target object (\u591a\u7528\u6765\u7ba1\u7406 shell \u811a\u672c)\n   # \u4e5f\u53ef\u4ee5\u5728\u6587\u4ef6\u9876\u90e8\u4e00\u6b21\u58f0\u660e\u591a\u4e2a\u4f2a\u76ee\u6807 \n.PHONY:clean\nclean:\n   rm -f main ${OBJS}\n")),(0,i.kt)("p",null,"\u4f7f\u7528 - ",(0,i.kt)("inlineCode",{parentName:"p"},"make main"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"make clean main")),(0,i.kt)("p",null,"\u82e5 Makefile \u540d\u79f0\u4e3a xxx, \u53ef\u4ee5 ",(0,i.kt)("inlineCode",{parentName:"p"},"make -f xxx")," \u6307\u5b9a"),(0,i.kt)("h1",{id:"cmake"},"cmake"),(0,i.kt)("p",null,"\u7528\u4e8e\u751f\u6210 Makefile, \u7edf\u4e00\u4e86\u8de8\u5e73\u53f0\u7684\u7f16\u8bd1\u73af\u5883"),(0,i.kt)("h2",{id:"cmakeliststxt"},"CMakeLists.txt"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/qq_36355662/article/details/80059432"},"https://blog.csdn.net/qq_36355662/article/details/80059432")," \u591a\u6a21\u5757\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'# \u8bed\u6cd5\n# params \u7528 \u7a7a\u683c or \u5206\u53f7 \u9694\u5f00\n# directive is case insensitive, but params/variable is case sensitive\n# <directive>(param1[ param2 ...])\n\n# variable \u53d6\u503c\u4f7f\u7528 ${}, \u4f46\u662f\u5728 if \u63a7\u5236\u8bed\u53e5\u4e2d, \u76f4\u63a5\u4f7f\u7528 \u53d8\u91cf\u540d \u5373\u53ef\n\n\n\n\n# \u6307\u5b9a cmake \u6700\u5c0f\u7248\u672c\u8981\u6c42\ncmake_minimum_required(VERSION 3.0.0)\n# \u6307\u5b9a \u5de5\u7a0b\u540d (version xxx \u53ef\u7701\u7565)\nproject(cmakehello VERSION 0.1.0)\n# \u9879\u76ee\u540d\u79f0\nproject(hello_hah)\n\n# \u8bbe\u7f6e\u53d8\u91cf\n# cmake \u4f7f\u7528 c++2017 \u6807\u51c6 \nset(CMAKE_CXX_STANDARD 17)\n\n\n\n# \u6dfb\u52a0\u81ea\u5b9a\u4e49\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84( \u7c7b\u4f3c \u547d\u4ee4\u884c -Ixxx)\n# \u7edd\u5bf9\u8def\u5f84/\u76f8\u5bf9\u8def\u5f84 \u5747\u53ef\ninclude_directories(\n    # \u5305\u542b\u5934\u6587\u4ef6\n   #  \u53d8\u91cf\u53d6\u503c\u4f7f\u7528 ${} $() \u5747\u53ef\n    ${CMAKE_CURRENT_SOURCE_DIR}/include\n\n   #  \u7b49\u4ef7\n    # include\n    # \u7b49\u4ef7\n    ${CMAKE_SOURCE_DIR}/include\n\n)\n\n\n\n# \u6dfb\u52a0\u81ea\u5b9a\u4e49\u5e93\u6587\u4ef6\u641c\u7d20\u8def\u5f84 (\u547d\u4ee4\u884c -Lxxx)\nlink_directories(\n   xx\n   xxx\n)\n\n\n\nset(SRC hello.cpp add.cpp)\n# \u901a\u8fc7 src \u53d8\u91cf \u751f\u6210\u5e93\u6587\u4ef6 libhello.so\n# shared - \u751f\u6210\u52a8\u6001\u5e93, static \u9759\u6001\u5e93\nadd_library(hello SHARED ${SRC})\n\n\n\n# \u6dfb\u52a0\u7f16\u8bd1\u53c2\u6570\nadd_compile_options(-Wall -std=c++17 -O2)\n\n\n# \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u540d \u6d89\u53ca\u5230\u7684cpp\u6587\u4ef6\u9700\u8981\u5217\u5728\u540e\u9762\nadd_executable(hello helloworld.cpp add.cpp)\nadd_executable(cmakehello main.cpp src/swap.cpp)\n\n\n# \u94fe\u63a5\u5916\u90e8\u5e93\n# \u4e3a \u53ef\u6267\u884c\u6587\u4ef6 main \u94fe\u63a5\u5916\u90e8\u5e93libhello.so (\u7b49\u540c -l)\n# \u53c2\u6570   target lib1<debug | optimized> lib2...\ntarget_link_libraries(main hello)\n\n\n\n\n# \u6dfb\u52a0\u5b50\u76ee\u5f55 srcsub, srcsub \u5fc5\u987b\u5b58\u5728\u4e00\u4e2a cmakelists.txt\nadd_subdirectory(srcsub)\n\n\n\n# \u5c06\u67d0\u4e2a\u76ee\u5f55\u4e0b\u6e90\u6587\u4ef6\u5217\u8868\u8d4b\u503c\u7ed9\u67d0\u4e2a\u53d8\u91cf\n# \u4e00\u822c\u548c add_executable \u5408\u7528\naux_source_directory(. SRC)\nadd_executable(main ${SRC})\n\n\n\n# \u5e38\u7528\u53d8\u91cf\u540d\n\n# gcc \u6dfb\u52a0\u7f16\u8bd1\u53c2\u6570\nset(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c++17")\n# g++ \u7f16\u8bd1\u53c2\u6570\nset(CMAKE_CXX_FLAGS "${CMAKE_C_FLAGS} -std=c++17")\nset(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -Wall -Wextra -O2")\n\n# \u6307\u5b9a\u7f16\u8bd1\u7c7b\u578b\nset(CMAKE_BUILD_TYPE Debug)\n# set(CMAKE_BUILD_TYPE Release)\n\n# \u5747\u6307\u5de5\u7a0b\u9876\u7ea7\u76ee\u5f55 (\u82e5\u662f in-source-build \u5219\u662f\u9876\u7ea7\u76ee\u5f55, \u82e5\u662f out-source-build, \u5219\u6307\u7684\u662f \u5f53\u524d\u547d\u4ee4\u6267\u884c\u7684\u8def\u5f84)\n# cmake_binary_dir\n# project_binary_dir\n# <project_name>_binary_dir\n\n# \u5747\u6307\u7684\u662f\u9876\u7ea7\u76ee\u5f55\n# cmake_source_dir\n# project_source_dir\n# <project_name>_source_dir\n\n# cmake_c_compiler   \u6307\u5b9a c \u7f16\u8bd1\u5668\n# cmake_c xx_compiler   \u6307\u5b9a c++ \u7f16\u8bd1\u5668\n# executable_output_path \u53ef\u6267\u884c\u6587\u4ef6\u8f93\u51fa\u8def\u5f84\n# library_output_path \u5e93\u6587\u4ef6\u8f93\u51fa\u8def\u5f84\n# \n\n\nset(CPACK_PROJECT_NAME ${PROJECT_NAME})\nset(CPACK_PROJECT_VERSION ${PROJECT_VERSION})\nset(CMAKE_CXX_STANDARD 17)\n\n\n\ninclude(CTest)\nenable_testing()\n\n\ninclude(CPack)\n\n\n\n')),(0,i.kt)("h2",{id:"in-source-build-\u548c-out-source-build"},"in-source-build \u548c out-source-build"),(0,i.kt)("h2",{id:"\u5185\u90e8\u6784\u5efa-\u4e0d\u63a8\u8350"},"\u5185\u90e8\u6784\u5efa \u4e0d\u63a8\u8350"),(0,i.kt)("p",null,"\u4f1a\u5728\u7edf\u8ba1\u76ee\u5f55\u4e0b\u4ea7\u751f\u5927\u91cf\u4e2d\u95f4\u6587\u4ef6, \u6c61\u67d3\u6e90\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u7f16\u8bd1 \u9876\u7ea7\u76ee\u5f55\u4e0b\u7684 cmakelists, \u751f\u6210 Makefile \u548c\u4e2d\u95f4\u6587\u4ef6\ncmake .\n\n# \u6267\u884c Makefile \u751f\u6210 target\nmake\n\n\n")),(0,i.kt)("h2",{id:"\u5916\u90e8\u6784\u5efa"},"\u5916\u90e8\u6784\u5efa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"mkdir build\ncd build\ncmake ..\nmake\n")),(0,i.kt)("h1",{id:"\u5b58\u50a8\u7c7b\u578b"},"\u5b58\u50a8\u7c7b\u578b"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"\u5b58\u50a8\u7c7b"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u65f6\u671f"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u4f5c\u7528\u57df"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u8fde\u63a5"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\u58f0\u660e\u65b9\u5f0f"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u81ea\u52a8"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u81ea\u52a8"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7a7a"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757\u5185 or \u52a0 auto")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5bc4\u5b58\u5668"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u81ea\u52a8"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7a7a"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757\u5185\uff0c\u4f7f\u7528\u5173\u952e\u5b57register")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5177\u6709\u5916\u90e8\u8fde\u63a5\u7684\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6587\u4ef6"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5916\u90e8"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6240\u6709\u51fd\u6570\u4e4b\u5916")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5177\u6709\u5185\u90e8\u8fde\u63a5\u7684\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6587\u4ef6"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u5185\u90e8"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u6240\u6709\u51fd\u6570\u4e4b\u5916\uff0c\u4f7f\u7528\u5173\u952e\u5b57static")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7a7a\u8fde\u63a5\u7684\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u9759\u6001"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u7a7a"),(0,i.kt)("td",{parentName:"tr",align:"center"},"\u4ee3\u7801\u5757\u5185\uff0c\u4f7f\u7528\u5173\u952e\u5b57static")))),(0,i.kt)("h1",{id:"\u5185\u5b58\u5212\u5206"},"\u5185\u5b58\u5212\u5206"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/derkampf/article/details/51000466"},"https://blog.csdn.net/derkampf/article/details/51000466")),(0,i.kt)("h2",{id:"c-\u4e2d\u5212\u5206"},"c \u4e2d\u5212\u5206"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u5185\u5b58\u6808\u533a\uff1a \u5b58\u653e\u5c40\u90e8\u53d8\u91cf\u540d\uff0c \u51fd\u6570\u7684\u5f62\u53c2/\u5c40\u90e8\u53d8\u91cf\uff0c\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u5185\u5b58\u5806\u533a\uff1a \u5b58\u653enew\u6216\u8005malloc\u51fa\u6765\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u624b\u52a8\u5206\u914d\u91ca\u653e\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u5e38\u91cf\u533a\uff1a \u5e38\u91cf\u5b57\u7b26\u4e32\u5c31\u662f\u653e\u5728\u8fd9\u91cc\u7684\u3002 \u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u9759\u6001\u533a/\u5168\u5c40\u533a\uff1a \u7528\u4e8e\u5b58\u653e\u5168\u5c40\u53d8\u91cf\u6216\u8005\u9759\u6001\u5c40\u90e8\u53d8\u91cf, \u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u7cfb\u7edf\u91ca\u653e\uff1b"),(0,i.kt)("li",{parentName:"ol"},"\u4ee3\u7801\u533a\uff1a\u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801")),(0,i.kt)("p",null,"\u4f7f\u7528free\u548cdelete\u9500\u6bc1new\u548cmalloc\u7533\u8bf7\u7684\u5806\u5185\u5b58\uff0c\u800c\u6808\u5185\u5b58\u662f\u52a8\u6001\u91ca\u653e\u3002"),(0,i.kt)("p",null,"\u4e86\u51cf\u5c11\u5185\u5b58\u788e\u7247\u7684\u4ea7\u751f\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u5c06\u5806\u533a\u53c8\u5206\u4e3ablock\u548cheap\u533a\u3002block\u7531\u4e00\u7cfb\u5217\u5927\u5c0f\u76f8\u7b49\u7684\u5185\u5b58\u5757\u7ec4\u6210\u3002\u5206\u914d\u5185\u5b58\u65f6\u5148\u5728block\u4e2d\u5206\u914d\uff0c\u5982\u679cblock\u5360\u6ee1\u5219\u4eceheap\u533a\u4e2d\u5206\u914d\u3002\u540c\u65f6block\u7684\u5927\u5c0f\u548c\u4e2a\u6570\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff0c\u4f7f\u4e4b\u8fbe\u5230\u4e00\u4e2a\u5408\u9002\u7684\u6570\u91cf"),(0,i.kt)("p",null,"\u5728\u9759\u6001\u5168\u5c40\u533a\u4e2d\uff0c \u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5728\u4e00\u5757\u533a\u57df\uff08RW\uff09\uff0c \u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u672a\u521d\u59cb\u5316\u7684\u9759\u6001\u53d8\u91cf\u5728\u76f8\u90bb\u7684\u53e6\u4e00\u5757\u533a\u57df\uff08ZI\uff09"),(0,i.kt)("h2",{id:"cpp-\u4e2d\u7684\u5212\u5206"},"cpp \u4e2d\u7684\u5212\u5206"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u6808\uff0c\u5c31\u662f\u90a3\u4e9b\u7531\u7f16\u8bd1\u5668\u5728\u9700\u8981\u7684\u65f6\u5019\u5206\u914d\uff0c\u5728\u4e0d\u9700\u8981\u7684\u65f6\u5019\u81ea\u52a8\u6e05\u9664\u7684\u53d8\u91cf\u7684\u5b58\u50a8\u533a\u3002\u91cc\u9762\u7684\u53d8\u91cf\u901a\u5e38\u662f\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u7b49\u3002")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5806(C\u91cc\u9762\u7684\u6982\u5ff5)\uff0c\u5c31\u662f\u90a3\u4e9b\u7531malloc\u5206\u914d\u7684\u5185\u5b58\u5757 (\u7528\u4e8e\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58)\uff0c\u4e00\u822c\u4e00\u4e2amalloc\u5c31\u8981\u5bf9\u5e94\u4e00\u4e2afree.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u81ea\u7531\u5b58\u50a8\u533a\uff08C++\u5f15\u5165\u7684\u6982\u5ff5\uff09\uff0c\u5c31\u662f\u90a3\u4e9b\u7531new\u7b49\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u4ed6\u548c\u5806\u662f\u5341\u5206\u76f8\u4f3c\u7684")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5e38\u91cf\u5b58\u50a8\u533a\uff0c\u8fd9\u662f\u4e00\u5757\u6bd4\u8f83\u7279\u6b8a\u7684\u5b58\u50a8\u533a\uff0c\u4ed6\u4eec\u91cc\u9762\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539(\u5f53\u7136\uff0c\u4f60\u8981\u901a\u8fc7\u975e\u6b63\u5f53\u624b\u6bb5\u4e5f\u53ef\u4ee5\u4fee\u6539)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\uff0c\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u88ab\u5206\u914d\u5230\u540c\u4e00\u5757\u5185\u5b58\u4e2d\uff0c\u5728\u4ee5\u524d\u7684C\u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u53d8\u91cf\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff0c\u5728C++\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002"))),(0,i.kt)("h1",{id:"c-\u8bed\u6cd5"},"c \u8bed\u6cd5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://wangdoc.com/clang/"},"https://wangdoc.com/clang/")),(0,i.kt)("p",null,"hello.c \u6587\u4ef6\u62d3\u5c55\u540d "),(0,i.kt)("p",null,"(clang \u9ed8\u8ba4 \u5c06 *.c \u89c6\u4e3a c++ \u6587\u4ef6, \u4f46\u662f\u5df2\u7ecf \u8fc7\u65f6\u4e86 deprecated)"),(0,i.kt)("p",null,"C11\uff08\u4e5f\u88ab\u79f0\u4e3aC1X\uff09\u6307ISO\u6807\u51c6ISO/IEC 9899:2011\uff0c\u662f\u5f53\u524d\u6700\u65b0\u7684C\u8bed\u8a00\u6807\u51c6\u3002\u5728\u5b83\u4e4b\u524d\u7684C\u8bed\u8a00\u6807\u51c6\u4e3aC99"),(0,i.kt)("p",null,"C \u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\u7f16\u7a0b\u8bed\u8a00"),(0,i.kt)("h2",{id:"\u9884\u5904\u7406\u5668\u6307\u4ee4"},"\u9884\u5904\u7406\u5668\u6307\u4ee4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u9884\u5904\u7406\u5668\u547d\u4ee4\n//C \u9884\u5904\u7406\u5668\u4e0d\u662f\u7f16\u8bd1\u5668\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u4f46\u662f\u5b83\u662f\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u4e00\u4e2a\u5355\u72ec\u7684\u6b65\u9aa4\u3002\u7b80\u8a00\u4e4b\uff0c\u662f\u4e00\u4e2a\u6587\u672c\u66ff\u6362\u5de5\u5177\uff0c\u5728\u5b9e\u9645\u7f16\u8bd1\u4e4b\u524d\u5b8c\u6210\u6240\u9700\u7684\u9884\u5904\u7406\u3002 C \u9884\u5904\u7406\u5668\uff08C Preprocessor\uff09\u7b80\u5199\u4e3a CPP\n// \u5e38\u89c1\u9884\u5904\u7406\u5668:\n// #define  \u5b9a\u4e49\u5b8f\n// #include \u5305\u542b\u4e00\u4e2a\u6e90\u4ee3\u7801\u6587\u4ef6\n// #undef   \u53d6\u6d88\u5df2\u5b9a\u4e49\u7684\u5b8f\n// #ifdef   \u5982\u679c\u5b8f\u5df2\u7ecf\u5b9a\u4e49\uff0c\u5219\u8fd4\u56de\u771f\n// #ifndef  \u5982\u679c\u5b8f\u6ca1\u6709\u5b9a\u4e49\uff0c\u5219\u8fd4\u56de\u771f\n// #if  \u5982\u679c\u7ed9\u5b9a\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u7f16\u8bd1\u4e0b\u9762\u4ee3\u7801\n// #else    #if \u7684\u66ff\u4ee3\u65b9\u6848\n// #elif    \u5982\u679c\u524d\u9762\u7684 #if \u7ed9\u5b9a\u6761\u4ef6\u4e0d\u4e3a\u771f\uff0c\u5f53\u524d\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u7f16\u8bd1\u4e0b\u9762\u4ee3\u7801\n// #endif   \u7ed3\u675f\u4e00\u4e2a #if\u2026\u2026#else \u6761\u4ef6\u7f16\u8bd1\u5757\n// #error   \u5f53\u9047\u5230\u6807\u51c6\u9519\u8bef\u65f6\uff0c\u8f93\u51fa\u9519\u8bef\u6d88\u606f\n// #pragma  \u4f7f\u7528\u6807\u51c6\u5316\u65b9\u6cd5\uff0c\u5411\u7f16\u8bd1\u5668\u53d1\u5e03\u7279\u6b8a\u7684\u547d\u4ee4\u5230\u7f16\u8bd1\u5668\u4e2d\n\n#define MAX_ARRAY_LENGTH 20 // \u544a\u8bc9 CPP \u628a\u6240\u6709\u7684 MAX_ARRAY_LENGTH \u66ff\u6362\u4e3a 20\u3002\u4f7f\u7528 #define \u5b9a\u4e49\u5e38\u91cf\u6765\u589e\u5f3a\u53ef\u8bfb\u6027\n#undef  FILE_SIZE  // \u544a\u8bc9 CPP \u53d6\u6d88\u5df2\u5b9a\u4e49\u7684 FILE_SIZE\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u5b83\u4e3a 42\n#define FILE_SIZE 42\n// \u5f15\u5165\u5934\u6587\u4ef6\n#include <stdio.h> // \u544a\u8bc9 CPP \u4ece\u7cfb\u7edf\u5e93\u4e2d\u83b7\u53d6 stdio.h\uff0c\u5e76\u6dfb\u52a0\u6587\u672c\u5230\u5f53\u524d\u7684\u6e90\u6587\u4ef6\u4e2d\n#include "myheader.h" //\u544a\u8bc9 CPP \u4ece\u672c\u5730\u76ee\u5f55\u4e2d\u83b7\u53d6 myheader.h\n// \u544a\u8bc9 CPP \u53ea\u6709\u5f53 MESSAGE \u672a\u5b9a\u4e49\u65f6\uff0c\u624d\u5b9a\u4e49 MESSAGE\n// \u63a8\u8350\u5f15\u5165\u5934\u6587\u4ef6\u65f6\u8fd9\u6837\u505a, \u5148\u9a8c\u8bc1\u662f\u5426\u5f15\u5165\u8fc7\n#ifndef MESSAGE\n   #define MESSAGE "You wish!"\n#endif\n// \u544a\u8bc9 CPP \u5982\u679c\u5b9a\u4e49\u4e86 DEBUG\uff0c\u5219\u6267\u884c\u5904\u7406\u8bed\u53e5\u3002\u5728\u7f16\u8bd1\u65f6\uff0c\u5982\u679c\u5411 gcc \u7f16\u8bd1\u5668\u4f20\u9012\u4e86 -DDEBUG \u5f00\u5173\u91cf\uff0c\u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u95f4\u968f\u65f6\u5f00\u542f\u6216\u5173\u95ed\u8c03\u8bd5\n#ifdef DEBUG\n   /* Your debugging statements here */\n#endif\n// \u6709\u6761\u4ef6\u5f15\u7528\n// SYSTEM_H \u53ef\u901a\u8fc7 -D \u9009\u9879\u88ab Makefile \u5b9a\u4e49\n#if SYSTEM_1\n   # include "system_1.h"\n#elif SYSTEM_2\n   # include "system_2.h"\n#elif SYSTEM_3\n   ...\n#endif\n// \u5982\u679c\u5934\u6587\u4ef6\u8f83\u591a\n#define SYSTEM_H "system_1.h"\n ...\n #include SYSTEM_H\n\n// \u4fdd\u8bc1\u53ea\u5f15\u7528\u4e00\u6b21\u5934\u6587\u4ef6 (\u56e0\u4e3a\u591a\u6b21\u5f15\u7528\u5934\u6587\u4ef6, \u7f16\u8bd1\u5668\u4f1a\u62a5\u9519)\n//\u5f53\u518d\u6b21\u5f15\u7528\u5934\u6587\u4ef6\u65f6\uff0c\u6761\u4ef6\u4e3a\u5047\uff0c\u56e0\u4e3a HEADER_FILE \u5df2\u5b9a\u4e49\u3002\u6b64\u65f6\uff0c\u9884\u5904\u7406\u5668\u4f1a\u8df3\u8fc7\u6587\u4ef6\u7684\u6574\u4e2a\u5185\u5bb9\uff0c\u7f16\u8bd1\u5668\u4f1a\u5ffd\u7565\u5b83\u3002\n#ifndef HEADER_FILE\n#define HEADER_FILE\nthe entire header file file\n#endif\n\n// \u9884\u5b9a\u4e49\u5b8f\n// ANSI C \u5df2\u7ecf\u5b9a\u4e49\u4e86\u8bb8\u591a\u5b8f\n// __DATE__ \u5f53\u524d\u65e5\u671f\uff0c\u4e00\u4e2a\u4ee5 "MMM DD YYYY" \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u5e38\u91cf\u3002\n// __TIME__ \u5f53\u524d\u65f6\u95f4\uff0c\u4e00\u4e2a\u4ee5 "HH:MM:SS" \u683c\u5f0f\u8868\u793a\u7684\u5b57\u7b26\u5e38\u91cf\u3002\n// __FILE__ \u8fd9\u4f1a\u5305\u542b\u5f53\u524d\u6587\u4ef6\u540d\uff0c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u3002\n// __LINE__ \u8fd9\u4f1a\u5305\u542b\u5f53\u524d\u884c\u53f7\uff0c\u4e00\u4e2a\u5341\u8fdb\u5236\u5e38\u91cf\u3002\n// __STDC__ \u5f53\u7f16\u8bd1\u5668\u4ee5 ANSI \u6807\u51c6\u7f16\u8bd1\u65f6\uff0c\u5219\u5b9a\u4e49\u4e3a 1\u3002\n\n// \u9884\u5904\u7406\u5668\u8fd0\u7b97\u7b26\n// \u5b8f\u5ef6\u7eed\u8fd0\u7b97\u7b26\uff08\\\uff09: \u4e00\u4e2a\u5b8f\u901a\u5e38\u5199\u5728\u4e00\u4e2a\u5355\u884c\u4e0a\u3002\u4f46\u662f\u5982\u679c\u5b8f\u592a\u957f\uff0c\u4e00\u4e2a\u5355\u884c\u5bb9\u7eb3\u4e0d\u4e0b, \u53ef\u4ee5\u6298\u884c\n// \u5b57\u7b26\u4e32\u5e38\u91cf\u5316\u8fd0\u7b97\u7b26\uff08#\uff09: \u628a\u4e00\u4e2a\u5b8f\u7684\u53c2\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5e38\u91cf\n#define  message_for(a, b)  \\\n    printf(#a " and " #b ": We love you!\\n")\nint main(void)\n{\n   message_for(Carole, Debra);\n   return 0;\n}\n\n// \u6807\u8bb0\u7c98\u8d34\u8fd0\u7b97\u7b26\uff08##\uff09: \u5728\u5b8f\u5b9a\u4e49\u4e2d\u5c06\u4e24\u4e2a\u72ec\u7acb\u7684\u6807\u8bb0/\u4ee4\u724c \u88ab\u5408\u5e76\u4e3a\u4e00\u4e2a\u6807\u8bb0/\u4ee4\u724c\n#define tokenpaster(n) printf ("token" #n " = %d", token##n)\nint main(void)\n{\n   int token34 = 40;\n   \n   tokenpaster(34); // \u8f93\u51fa token34 = 40\n   return 0;\n}\n\n// defined() \u8fd0\u7b97\u7b26: \u786e\u5b9a\u4e00\u4e2a\u6807\u8bc6\u7b26\u662f\u5426\u5df2\u7ecf\u4f7f\u7528 #define \u5b9a\u4e49\u8fc7\n#if !defined (MESSAGE)\n   #define MESSAGE "You wish!"\n#endif\nint main(void)\n{\n   printf("Here is the message: %s\\n", MESSAGE);  \n   return 0;\n}\n\n// \u53c2\u6570\u5316\u7684\u5b8f, \u4f7f\u7528\u5b8f\u5b9a\u4e49\u53d6\u4ee3\u51fd\u6570\n// \u5b8f\u540d\u79f0\u548c\u5de6\u5706\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5141\u8bb8\u6709\u7a7a\u683c\n#define MAX(x,y) ((x) > (y) ? (x) : (y))\nint main(void)\n{\n   printf("Max between 20 and 10 is %d\\n", MAX(10, 20));  \n   return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u6807\u51c6\u8f93\u5165\u8f93\u51fa"},"\u6807\u51c6\u8f93\u5165\u8f93\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n//\u5f15\u5165\u6807\u51c6\u8f93\u5165\u8f93\u51fa\u5934\u6587\u4ef6\n// \u7f16\u8bd1\u5668\u9047\u5230 printf() \u51fd\u6570\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230 stdio.h \u5934\u6587\u4ef6\uff0c\u4f1a\u53d1\u751f\u7f16\u8bd1\u9519\u8bef\u3002\n// \u4f7f\u7528 #include <iostream> \u4ea6\u53ef\n#include <stdio.h>// \u4ece\u6587\u4ef6 stdio.h \u4e2d\u8bfb\u5165\u6570\u636e, \u6bd4\u5982 printf\u7684\u5b9a\u4e49\n            // \u9ed8\u8ba4\u4f4d\u7f6e\u5728 /usr/include\n            // \u82e5\u4e0d\u662f\u5728\u9ed8\u8ba4\u4f4d\u7f6e , \u7f16\u8bd1\u65f6\u8981\u5236\u5b9a include \u76ee\u5f55: gcc <target_file> [-I<include_path>]\n \nint main()\n{\n    char str[100];\n   int i;\n   printf( "Enter a value :");\n   scanf("%s %d", str, &i);\n   printf( "\\nYou entered: %s %d ", str, i);\n   printf("\\n");\n\n    int c;\n    printf( "Enter a value :");\n    // \u53ea\u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26, \u4ee5\u6570\u5b57\u8fd4\u56de\n    c = getchar( );\n    printf( "\\nYou entered: ");\n    // \u53ea\u6253\u5370\u4e00\u4e2a\u5b57\u7b26\n    putchar( c );\n    printf( "\\n");\n\n    char str[100];\n   printf( "Enter a value :");\n   // \u8bfb\u53d6\u4e00\u884c\u5230 s \u6240\u6307\u5411\u7684\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u4e00\u4e2a\u7ec8\u6b62\u7b26\u6216 EOF\n   gets( str );\n   printf( "\\nYou entered: ");\n   // \u628a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u5c3e\u968f\u7684\u6362\u884c\u7b26\u5199\u5165\u5230 stdout\u3002\n   puts( str );\n\n    return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u53d8\u91cf-\u5e38\u91cf-\u6570\u636e\u7c7b\u578b"},"\u53d8\u91cf-\u5e38\u91cf-\u6570\u636e\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n// \u53d8\u91cf\n//\u5de6\u503c\uff08lvalue\uff09\uff1a\u6307\u5411\u5185\u5b58\u4f4d\u7f6e\u7684\u8868\u8fbe\u5f0f\u88ab\u79f0\u4e3a\u5de6\u503c\uff08lvalue\uff09\u8868\u8fbe\u5f0f\u3002\u5de6\u503c\u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u7684\u5de6\u8fb9\u6216\u53f3\u8fb9\u3002\n//\u53f3\u503c\uff08rvalue\uff09\uff1a\u672f\u8bed\u53f3\u503c\uff08rvalue\uff09\u6307\u7684\u662f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u67d0\u4e9b\u5730\u5740\u7684\u6570\u503c\u3002\u53f3\u503c\u662f\u4e0d\u80fd\u5bf9\u5176\u8fdb\u884c\u8d4b\u503c\u7684\u8868\u8fbe\u5f0f\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53f3\u503c\u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u7684\u53f3\u8fb9\uff0c\u4f46\u4e0d\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u53f7\u7684\u5de6\u8fb9\n\n// \u5c40\u90e8\u53d8\u91cf\n// \u4e5f\u53eb auto\u81ea\u52a8\u53d8\u91cf(auto\u53ef\u5199\u53ef\u4e0d\u5199)\uff0c\u6808\u533a\u5b58\u50a8\uff0c\u4ee3\u7801\u5757{}\u5185\u90e8\u5b9a\u4e49\u7684\u53d8\u91cf\u90fd\u662f\u81ea\u52a8\u53d8\u91cf\uff0c \n// \u53ea\u5728\u51fd\u6570/\u4ee3\u7801\u5757\u5185\u90e8\u6709\u6548\n// \u5c40\u90e8\u53d8\u91cf\u672a\u521d\u59cb\u5316\uff0c\u503c\u4e3a\u4e71\u7801\n\n// \u5168\u5c40\u53d8\u91cf\n// \u5728\u51fd\u6570\u5916\u5b9a\u4e49\uff0c\u53ef\u88ab\u672c\u6587\u4ef6\u53ca\u5176\u5b83\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u6240\u5171\u7528\uff0c\u82e5\u5176\u5b83\u6587\u4ef6\u4e2d\u7684\u51fd\u6570\u8c03\u7528\u6b64\u53d8\u91cf,\u987b\u7528extern\u58f0\u660e\n// \u5168\u5c40\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u548c\u7a0b\u5e8f\u8fd0\u884c\u5468\u671f\u4e00\u6837\n// \u5168\u5c40\u53d8\u91cf\u672a\u521d\u59cb\u5316\u3001\u503c\u4e3a0\n//\u4e0d\u540c\u6587\u4ef6\u7684\u5168\u5c40\u53d8\u91cf\u4e0d\u53ef\u91cd\u540d\n\n// \u9759\u6001\u5c40\u90e8\u53d8\u91cf\n// \u4f5c\u7528\u57df\u4e5f\u662f\u5728\u5b9a\u4e49\u7684\u51fd\u6570\u5185\u6709\u6548\n//\u751f\u547d\u5468\u671f\u548c\u7a0b\u5e8f\u8fd0\u884c\u5468\u671f\u4e00\u6837\n//\u53ea\u4f1a\u521d\u59cb\u5316\u4e00\u6b21\uff0c\u53ef\u4ee5\u591a\u6b21\u8d4b\u503c\n//\u82e5\u672a\u8d4b\u4ee5\u521d\u503c\uff0c\u5219\u7531\u7cfb\u7edf\u81ea\u52a8\u8d4b\u503c\uff1a\u6570\u503c\u578b\u53d8\u91cf\u81ea\u52a8\u8d4b\u521d\u503c0\uff0c\u5b57\u7b26\u578b\u53d8\u91cf\u8d4b\u7a7a\u5b57\u7b26\n// \u53d8\u91cf\u53ea\u88ab\u5f15\u7528\u800c\u4e0d\u6539\u53d8\u5176\u503c\uff0c\u5219\u8fd9\u65f6\u7528\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u6bd4\u8f83\u65b9\u4fbf\uff0c\u5982\u4e0d\u5fc5\u8981\uff0c\u4e0d\u8981\u591a\u7528\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08\u7528\u9759\u6001\u5b58\u50a8\u8981\u591a\u5360\u5185\u5b58\uff0c\u800c\u4e14\u964d\u4f4e\u4e86\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\uff09\n\n//\u9759\u6001(static)\u5168\u5c40\u53d8\u91cf\n//\u5728\u51fd\u6570\u5916\u5b9a\u4e49,\u4f5c\u7528\u8303\u56f4\u88ab\u9650\u5236\u5728\u6240\u5b9a\u4e49\u7684\u6587\u4ef6\u4e2d\n//static\u5168\u5c40\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\u548c\u7a0b\u5e8f\u8fd0\u884c\u5468\u671f\u4e00\u6837\uff0c\u540c\u65f6staitc\u5168\u5c40\u53d8\u91cf\u7684\u503c\u53ea\u521d\u59cb\u5316\u4e00\u6b21\n//\u4e0d\u540c\u6587\u4ef6\u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ef\u4ee5\u91cd\u540d,\u4f46\u4f5c\u7528\u57df\u4e0d\u51b2\u7a81\n\n// \u53d8\u91cf\u4fee\u9970\u7b26\n//const const \u7c7b\u578b\u7684\u5bf9\u8c61\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4e0d\u80fd\u88ab\u4fee\u6539\u6539\u53d8\u3002\n// volatile \u4fee\u9970\u7b26 volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u9700\u8981\u4f18\u5316volatile\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u8ba9\u7a0b\u5e8f\u53ef\u4ee5\u76f4\u63a5\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u53d8\u91cf\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u53d8\u91cf\u7f16\u8bd1\u5668\u4f1a\u5bf9\u53d8\u91cf\u8fdb\u884c\u4f18\u5316\uff0c\u5c06\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u503c\u653e\u5728\u5bc4\u5b58\u5668\u4e2d\u4ee5\u52a0\u5feb\u8bfb\u5199\u6548\u7387\u3002\n// restrict \u7531 restrict \u4fee\u9970\u7684\u6307\u9488\u662f\u552f\u4e00\u4e00\u79cd\u8bbf\u95ee\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\u3002\u53ea\u6709 C99 \u589e\u52a0\u4e86\u65b0\u7684\u7c7b\u578b\u9650\u5b9a\u7b26 restrict\u3002\n\nint main()\n{\n    // \u6570\u636e\u7c7b\u578b \n    // \u5b9a\u4e49\uff0c\u4f1a\u5206\u914d\u7a7a\u95f4 \n    // \u521d\u59cb\u5316, \u5c40\u90e8\u53d8\u91cf\u9700\u8981\u624b\u52a8\u521d\u59cb\u5316\n    float f,x=3.6,y=5.2; // 4 byte\n    // 4 byte\n    int i=4,a,b;\n    \n    a=x+y;\n    b=(int)(x+y);\n    f=10/i;\n    printf("a=%d,b=%d,f=%f,x=%f\\n",a,b,f,x);\n\n    // \u5b9a\u4e49\n    char   c, ch; // 1 byte\n    short sh; // 2 byte\n    long lo; // 4 byte  \n    double d; // 8 byte\n    byte z = 22;\n\n    // \u53d8\u91cf\u58f0\u660e\n    //\u5411\u7f16\u8bd1\u5668\u4fdd\u8bc1\u53d8\u91cf\u4ee5\u6307\u5b9a\u7684\u7c7b\u578b\u548c\u540d\u79f0\u5b58\u5728\uff0c\u8fd9\u6837\u7f16\u8bd1\u5668\u5728\u4e0d\u9700\u8981\u77e5\u9053\n    //\u53d8\u91cf\u5b8c\u6574\u7ec6\u8282\u7684\u60c5\u51b5\u4e0b\u4e5f\u80fd\u7ee7\u7eed\u8fdb\u4e00\u6b65\u7684\u7f16\u8bd1\u3002\u53d8\u91cf\u58f0\u660e\u53ea\u5728\u7f16\u8bd1\u65f6\u6709\u5b83\u7684\u610f\u4e49\n\n    int j; // \u58f0\u660e\uff0c \u4e5f\u662f\u5b9a\u4e49\uff0c\u5206\u914d\u4e86\u7a7a\u95f4\n    extern int i; //\u58f0\u660e\uff0c\u4e0d\u662f\u5b9a\u4e49\uff0c \u4e0d\u5206\u914d\u7a7a\u95f4\uff0c \u53d8\u91cf i \u53ef\u4ee5\u5728\u522b\u5904\u5b9a\u4e49\uff0c \u5982\u5728 \u51fd\u6570\u5916\u90e8\uff0c \u751a\u81f3\u53e6\u5916\u7684\u6587\u4ef6\n\n    // \u8fd0\u7b97\u7b26\n    // \u79fb\u4f4d\u8fd0\u7b97 https://www.runoob.com/cprogramming/c-operators.html\n}\n\n// \u83b7\u53d6 int \u7c7b\u578b\u7684\u5927\u5c0f\n// sizeof\u662f\u7528\u6765\u6c42\u7c7b\u578b\u7684\u5b57\u8282\u6570\u7684\u3002\u5982int a;\u90a3\u4e48\u65e0\u8bbasizeof(int)\u6216\u8005\u662fsizeof(a)\u90fd\u662f\u7b49\u4e8e4\uff0c\u56e0\u4e3asizeof(a)\u5176\u5b9e\u5c31\u662fsizeof(type of a)\n#include <stdio.h>\n#include <limits.h>\n \nint main()\n{\n   printf("int \u5b58\u50a8\u5927\u5c0f : %lu \\n", sizeof(int));\n   \n   return 0;\n}\n\n\n// \u5e38\u91cf\n//\u524d\u7f00\u6307\u5b9a\u57fa\u6570\uff1a0x \u6216 0X \u8868\u793a\u5341\u516d\u8fdb\u5236\uff0c0 \u8868\u793a\u516b\u8fdb\u5236\uff0c\u4e0d\u5e26\u524d\u7f00\u5219\u9ed8\u8ba4\u8868\u793a\u5341\u8fdb\u5236\u3002\n//\u6574\u6570\u5e38\u91cf\u4e5f\u53ef\u4ee5\u5e26\u4e00\u4e2a\u540e\u7f00\uff0c\u540e\u7f00\u662f U \u548c L \u7684\u7ec4\u5408\uff0cU \u8868\u793a\u65e0\u7b26\u53f7\u6574\u6570\uff08unsigned\uff09\uff0cL \u8868\u793a\u957f\u6574\u6570\uff08long\uff09\u3002\u540e\u7f00\u53ef\u4ee5\u662f\u5927\u5199\uff0c\u4e5f\u53ef\u4ee5\u662f\u5c0f\u5199\uff0cU \u548c L \u7684\u987a\u5e8f\u4efb\u610f\u3002\n\n// \u5b57\u7b26\u4e32\u5e38\u91cf\n// \u4e09\u8005\u7b49\u4ef7\n"hello, dear"\n\n"hello, \\\ndear"\n\n"hello, " "d" "ear"\n\n// \u5b9a\u4e49\u5e38\u91cf\n#define LENGTH 10   \n#define WIDTH  5\n#define NEWLINE \'\\n\'\n\n//\u7b49\u4ef7\nconst int  LENGTH = 10;\n//Const  \u5c06\u6570\u636e\u5b9a\u4e3a\u4e0d\u53d8\u7684\n// \u4ee5\u540e\u4e0d\u53ef\u6539\u53d8\u5176\u503c\u3002\u5728\u6307\u9488\u4e2d\u4f7f\u7528\u65f6\uff0cconst\u7684\u4f4d\u7f6e\u51b3\u5b9a\u662f\u6307\u9488\u672c\u8eab\u4e0d\u53d8\u8fd8\u662f\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u4e0d\u53d8\n\n\n\n// \u6570\u7ec4\n// \u58f0\u660e\ndouble balance[10];\n// \u521d\u59cb\u5316\ndouble balance[5] = {1000.0, 2.0, 3.4, 7.0, 50.0};\ndouble balance[] = {1000.0, 2.0, 3.4, 7.0, 50.0};\n\n// \u6570\u7ec4\u548c\u6307\u9488\n//balance \u662f\u4e00\u4e2a\u6307\u5411 &balance[0] \u7684\u5e38\u91cf\u6307\u9488 (\u5e38\u91cf\u6307\u9488\u5c31\u662f\u6307\u9488\u65e0\u6cd5\u52a0\u51cf, \u53ea\u80fd\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u83b7\u53d6\u503c)\uff0c\u5373\u6570\u7ec4 balance \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u5730\u5740\uff0c \u53ef\u4ee5\u901a\u8fc7 *balance \u8bbf\u95ee\u8fd9\u4e2a\u5143\u7d20\n// balance+4 \u662f\u6307\u5411 &balance[4] \u7684\u6307\u9488\uff0c\u53ef\u4ee5\u901a\u8fc7 *(balance+4)\u8bbf\u95ee\u5143\u7d20\n\n// \u6307\u9488\u6570\u7ec4\nint  var[] = {10, 100, 200};\nint i, *ptr[MAX];\n\nfor ( i = 0; i < MAX; i++)\n{\n    ptr[i] = &var[i]; /* \u8d4b\u503c\u4e3a\u6574\u6570\u7684\u5730\u5740 */\n}\nfor ( i = 0; i < MAX; i++)\n{\n    printf("Value of var[%d] = %d\\n", i, *ptr[i] );\n}\n\n//// \u5b57\u7b26\u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u4e32\nchar *str = "This is a string."; // \u5b57\u7b26\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u9996\u5730\u5740\n// \u7528\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u7684\u6307\u9488\u6570\u7ec4\u6765\u5b58\u50a8\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\nconst char *names[] = {\n                "Zara Ali",\n                "Hina Ali",\n                "Nuha Ali",\n                "Sara Ali",\n};\nint i = 0;\n\nfor ( i = 0; i < MAX; i++)\n{\n    printf("Value of names[%d] = %s\\n", i, names[i] );\n}\n\n\n\n\n/**\n  * \u5b57\u7b26\u4e32 \u5b57\u7b26\u6570\u7ec4 \n  *  \n  * \uff08\u5b57\u7b26\u4e32\u5b9e\u9645\u4e0a\u662f\u4f7f\u7528 null \u5b57\u7b26 \'\\0\' \u7ec8\u6b62\u7684\u4e00\u7ef4\u5b57\u7b26\u6570\u7ec4\uff09\n  * \n \u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u51fa\u73b0\u7684\uff0c\u7f16\u8bd1\u5668\u90fd\u4f1a\u4e3a\u8be5\u5b57\u7b26\u4e32\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a0\u4f5c\u4e3a\u7ed3\u675f\u7b26\uff0c\u5982\u5728\u4ee3\u7801\u4e2d\u5199\uff1a"abc",\u90a3\u4e48\u7f16\u8bd1\u5668\u5e2e\u4f60\u5b58\u50a8\u7684\u662f"abc\\0"\n \u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u7c7b\u578b\u53ef\u4ee5\u7406\u89e3\u4e3a\u76f8\u5e94\u5b57\u7b26\u5e38\u91cf\u6570\u7ec4\u7684\u7c7b\u578b\uff0c\u5982\uff1a\n    "abcdef"\u7684\u7c7b\u578b\u5c31\u53ef\u4ee5\u770b\u6210\u662fconst char[7]\n*/\n// "abc"\u662f\u5e38\u91cf\u5417\uff1f\u7b54\u6848\u662f\u6709\u65f6\u662f\uff0c\u6709\u65f6\u4e0d\u662f\n char str[] = "abc"; // \u6b64\u65f6\u4e0d\u662f\u5e38\u91cf\uff0c\u5b58\u653e\u4e8e\u6808\n // \u7b49\u4ef7\u4e8e\nchar str[4] = {\'a\',\'b\',\'c\',\'/0\'};\n\n  // \u6b64\u65f6\u662f\u5e38\u91cf\uff0c\u5b58\u653e\u5728\u5e38\u91cf\u533a\n  //ptr[0] = \'x\';\u80fd\u7f16\u8bd1\u901a\u8fc7\uff0c\u4f46\u662f\u6267\u884cptr[0] = \'x\';\u5c31\u4f1a\u53d1\u751f\u8fd0\u884c\u65f6\u5f02\u5e38\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u8bed\u53e5\u8bd5\u56fe\u53bb\u4fee\u6539\u7a0b\u5e8f\u5e38\u91cf\u533a\u4e2d\u7684\u4e1c\u897f\nchar* ptr = "abc";\n// \u63a8\u8350\u7684\u5199\u6cd5\nconst char* ptr = "abc"\n\nchar string[]="This is a string.";\n// \u5b57\u7b26\u6570\u7ec4\n//\u5b57\u7b26\u6307\u9488\n// \u5b57\u7b26\u6307\u9488\u53ef\u4ee5\u6307\u5411\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6307\u5411\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf\u7684\u9996\u5730\u5740\nchar *str, *str1="This is another string.";\nchar string[100]="This is a string.";\nstr++; /* \u6307\u9488str\u52a01 */\nstr = "This is a NEW string."; /* \u4f7f\u6307\u9488\u6307\u5411\u65b0\u7684\u5b57\u7b26\u4e32\u5e38\u91cf */\nstr = str1; /* \u6539\u53d8\u6307\u9488str\u7684\u6307\u5411\uff0c\u56de\u590d\u539f\u6765\u7684\u503c */\nstrcpy( string, "This is a NEW string.") /* \u6539\u53d8\u5b57\u7b26\u4e32\u7684\u7684\u5185\u5bb9 */\nstrcat( string, str) /* \u8fdb\u884c\u4e32\u8fde\u63a5\u64cd\u4f5c */\n\nstring++; /* \u4e0d\u80fd\u5bf9\u6570\u7ec4\u540d\u8fdb\u884c++\u8fd0\u7b97 */\nstring = "This is a NEW string."; /* \u9519\u8bef\u7684\u4e32\u64cd\u4f5c\uff0c\u5b57\u7b26\u6570\u7ec4\u65e0\u6cd5\u6574\u4f53\u8d4b\u503c\uff0c\u53ea\u80fd\u5355\u4e2a\u5143\u7d20\u8d4b\u503c */\nstring = str1; /* \u5bf9\u6570\u7ec4\u540d\u4e0d\u80fd\u8fdb\u884c\u8d4b\u503c */\nstrcat(str, "This is a NEW string.") /* \u4e0d\u80fd\u5728\u6307\u9488\u7684\u540e\u9762\u8fdb\u884c\u4e32\u8fde\u63a5 */\nstrcpy(str, string) /* \u4e0d\u80fd\u5411\u6307\u9488\u8fdb\u884c\u4e32\u590d\u5236 */\n// \u533a\u522b\uff1a\n// (1)\u5b57\u7b26\u6570\u7ec4\u7531\u82e5\u5e72\u4e2a\u5143\u7d20\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5143\u7d20\u4e2d\u5b58\u653e\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u800c\u5b57\u7b26\u6307\u9488\u53d8\u91cf\u4e2d\u5b58\u653e\u7684\u662f\u5b57\u7b26\u4e32\u7684\u9996\u5730\u5740\u3002\n// (2)\u521d\u59cb\u5316\u65b9\u5f0f\u4e0d\u540c\u3002\u5bf9\u5b57\u7b26\u6570\u7ec4\u521d\u59cb\u5316\u8981\u7528static\u5b58\u50a8\u7c7b\u522b\uff0c\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u3002\u800c\u5bf9\u5b57\u7b26\u6307\u9488\u53d8\u91cf\u521d\u59cb\u5316\u4e0d\u5fc5\u52a0static\uff0c\u5728\u5b9e\u9645\u6267\u884c\u65f6\u8fdb\u884c\u3002\n// (3)\u8d4b\u503c\u65b9\u5f0f\u4e0d\u540c\u3002\u5bf9\u5b57\u7b26\u6570\u7ec4\u4e0d\u80fd\u6574\u4f53\u8d4b\u503c\uff0c\u53ea\u80fd\u8f6c\u5316\u6210\u4efd\u91cf\uff0c\u5bf9\u5355\u4e2a\u5143\u7d20\u8fdb\u884c\u3002\u800c\u5b57\u7b26\u6307\u9488\u53d8\u91cf\u8d4b\u503c\u53ef\u6574\u4f53\u8fdb\u884c\n// (4)\u5728\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u65f6\uff0c\u7f16\u8bd1\u65f6\u5373\u5df2\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u6709\u786e\u5b9a\u7684\u5730\u5740\u3002\u800c\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6307\u9488\u53d8\u91cf\u65f6\uff0c\u7ed9\u6307\u9488\u53d8\u91cf\u5206\u914d\u5185\u5b58\u5355\u5143\uff0c\u4f46\u8be5\u6307\u9488\u53d8\u91cf\u5177\u4f53\u6307\u5411\u54ea\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e0d\u77e5\u9053\uff0c\u5373\u6307\u9488\u53d8\u91cf\u5b58\u653e\u7684\u5730\u5740\u4e0d\u786e\u5b9a\n\n// \u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570u\nstrcpy(s1, s2); // \u590d\u5236\u5b57\u7b26\u4e32 s2 \u5230\u5b57\u7b26\u4e32 s1\u3002\nstrcat(s1, s2); //\u8fde\u63a5\u5b57\u7b26\u4e32 s2 \u5230\u5b57\u7b26\u4e32 s1 \u7684\u672b\u5c3e\u3002\nstrlen(s1); //\u8fd4\u56de\u5b57\u7b26\u4e32 s1 \u7684\u957f\u5ea6\u3002\nstrcmp(s1, s2); // \u5982\u679c s1 \u548c s2 \u662f\u76f8\u540c\u7684\uff0c\u5219\u8fd4\u56de 0\uff1b\u5982\u679c s1<s2 \u5219\u8fd4\u56de\u5c0f\u4e8e 0\uff1b\u5982\u679c s1>s2 \u5219\u8fd4\u56de\u5927\u4e8e 0\u3002\nstrchr(s1, ch); // \u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u4e32 s1 \u4e2d\u5b57\u7b26 ch \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\nstrstr(s1, s2); // \u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5b57\u7b26\u4e32 s1 \u4e2d\u5b57\u7b26\u4e32 s2 \u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e   \n\n\n// \u679a\u4e3e\n//\u5728C \u8bed\u8a00\u4e2d\uff0c\u679a\u4e3e\u7c7b\u578b\u662f\u88ab\u5f53\u505a int \u6216\u8005 unsigned int \u7c7b\u578b\u6765\u5904\u7406\u7684\uff0c \u56e0\u6b64\u53ef\u4ee5\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u679a\u4e3e\n// \u5b9a\u4e49\u7c7b\u578b\nenum DAY\n{//\u7b2c\u4e00\u4e2a\u679a\u4e3e\u6210\u5458\u7684\u9ed8\u8ba4\u503c\u4e3a\u6574\u578b\u7684 0\uff0c\u540e\u7eed\u679a\u4e3e\u6210\u5458\u7684\u503c\u5728\u524d\u4e00\u4e2a\u6210\u5458\u4e0a\u52a0 1\u3002\u6211\u4eec\u5728\u8fd9\u4e2a\u5b9e\u4f8b\u4e2d\u628a\u7b2c\u4e00\u4e2a\u679a\u4e3e\u6210\u5458\u7684\u503c\u5b9a\u4e49\u4e3a 1\uff0c\u7b2c\u4e8c\u4e2a\u5c31\u4e3a 2\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\n      MON=1, TUE, WED, THU, FRI, SAT, SUN\n};\n//\u6ca1\u6709\u6307\u5b9a\u503c\u7684\u679a\u4e3e\u5143\u7d20\uff0c\u5176\u503c\u4e3a\u524d\u4e00\u5143\u7d20\u52a0 1\u3002\u4e5f\u5c31\u8bf4 spring \u7684\u503c\u4e3a 0\uff0csummer \u7684\u503c\u4e3a 3\uff0cautumn \u7684\u503c\u4e3a 4\uff0cwinter \u7684\u503c\u4e3a 5\nenum season {spring, summer=3, autumn, winter};\n\n// \u5b9a\u4e49\u679a\u4e3e\u53d8\u91cf\nenum DAY day;\n// \u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\nenum DAY\n{\n      MON=1, TUE, WED, THU, FRI, SAT, SUN\n} day;\n// \u751a\u81f3 \u679a\u4e3e\u540d\u79f0\u53ef\u7701\u7565\nenum\n{\n      MON=1, TUE, WED, THU, FRI, SAT, SUN\n} day;\n\n// \u6574\u578b\u8f6c\u6362\nenum day\n{\n    saturday,\n    sunday,\n    monday,\n    tuesday,\n    wednesday,\n    thursday,\n    friday\n} workday;\n\nint a = 1;\nenum day weekend;\nweekend = ( enum day ) a;  //\u7c7b\u578b\u8f6c\u6362\n//weekend = a; //\u9519\u8bef\n\n\n/**\n  * \u7ed3\u6784\u4f53\n  * \n  *\n **/\n// \u5b8c\u6574\u58f0\u660e\nstruct Books\n{\n   char  title[50];\n   char  author[50];\n   char  subject[100];\n   int   book_id;\n} book;\n// \u6ca1\u6709\u6807\u7b7e\nstruct \n{\n    int a;\n    char b;\n    double c;\n} s1;\n// \u6ca1\u6709\u58f0\u660e\u53d8\u91cf\nstruct SIMPLE\n{\n    int a;\n    char b;\n    double c;\n};\n//\u7528SIMPLE\u6807\u7b7e\u7684\u7ed3\u6784\u4f53\uff0c\u53e6\u5916\u58f0\u660e\u4e86\u53d8\u91cft1\u3001t2\u3001t3\nstruct SIMPLE t1, t2[20], *t3;\n\n//\u4e5f\u53ef\u4ee5\u7528typedef\u521b\u5efa\u65b0\u7c7b\u578b\ntypedef struct\n{\n    int a;\n    char b;\n    double c; \n} Simple2;\n//\u73b0\u5728\u53ef\u4ee5\u7528Simple2\u4f5c\u4e3a\u7c7b\u578b\u58f0\u660e\u65b0\u7684\u7ed3\u6784\u4f53\u53d8\u91cf\nSimple2 u1, u2[20], *u3;\n\n\n/** typeof \n\u4e3a\u7c7b\u578b\u53d6\u4e00\u4e2a\u65b0\u7684\u540d\u5b57\n\ntypedef vs #define\n- typedef \u4ec5\u9650\u4e8e\u4e3a\u7c7b\u578b\u5b9a\u4e49\u7b26\u53f7\u540d\u79f0\uff0c#define \u4e0d\u4ec5\u53ef\u4ee5\u4e3a\u7c7b\u578b\u5b9a\u4e49\u522b\u540d\uff0c\u4e5f\u80fd\u4e3a\u6570\u503c\u5b9a\u4e49\u522b\u540d\uff0c\u6bd4\u5982\u60a8\u53ef\u4ee5\u5b9a\u4e49 1 \u4e3a ONE\u3002\n- typedef \u662f\u7531\u7f16\u8bd1\u5668\u6267\u884c\u89e3\u91ca\u7684\uff0c#define \u8bed\u53e5\u662f\u7531\u9884\u7f16\u8bd1\u5668\u8fdb\u884c\u5904\u7406\u7684\u3002\n*/\ntypedef unsigned char BYTE;// \u4e3a\u5355\u5b57\u8282\u6570\u5b57\u5b9a\u4e49\u4e86\u4e00\u4e2a\u672f\u8bed BYTE\nBYTE  b1, b2; // BYTE \u53ef\u4f5c\u4e3a\u7c7b\u578b unsigned char \u7684\u7f29\u5199\n\n\n\n\n// \u7ed3\u6784\u4f53\u53ef\u5d4c\u5957\n//\u6b64\u7ed3\u6784\u4f53\u7684\u58f0\u660e\u5305\u542b\u4e86\u5176\u4ed6\u7684\u7ed3\u6784\u4f53\nstruct COMPLEX\n{\n    char string[100];\n    struct SIMPLE a;\n};\n \n//\u6b64\u7ed3\u6784\u4f53\u7684\u58f0\u660e\u5305\u542b\u4e86\u6307\u5411\u81ea\u5df1\u7c7b\u578b\u7684\u6307\u9488\nstruct NODE\n{\n    char string[100];\n    struct NODE *next_node;\n};\n\n// \u5982\u679c\u4e24\u4e2a\u7ed3\u6784\u4f53\u4e92\u76f8\u5305\u542b\uff0c\u5219\u9700\u8981\u5bf9\u5176\u4e2d\u4e00\u4e2a\u7ed3\u6784\u4f53\u8fdb\u884c\u4e0d\u5b8c\u6574\u58f0\u660e\uff0c\u5982\u4e0b\u6240\u793a\uff1a\nstruct B;    //\u5bf9\u7ed3\u6784\u4f53B\u8fdb\u884c\u4e0d\u5b8c\u6574\u58f0\u660e\n//\u7ed3\u6784\u4f53A\u4e2d\u5305\u542b\u6307\u5411\u7ed3\u6784\u4f53B\u7684\u6307\u9488\nstruct A\n{\n    struct B *partner;\n    //other members;\n};\n//\u7ed3\u6784\u4f53B\u4e2d\u5305\u542b\u6307\u5411\u7ed3\u6784\u4f53A\u7684\u6307\u9488\uff0c\u5728A\u58f0\u660e\u5b8c\u540e\uff0cB\u4e5f\u968f\u4e4b\u8fdb\u884c\u58f0\u660e\nstruct B\n{\n    struct A *partner;\n    //other members;\n};\n\n// \u7ed3\u6784\u4f53\u5b9a\u4e49 & \u521d\u59cb\u5316\nstruct Books\n{\n   char  title[50];\n   char  author[50];\n   char  subject[100];\n   int   book_id;\n} book = {"C \u8bed\u8a00", "RUNOOB", "\u7f16\u7a0b\u8bed\u8a00", 123456};\n\n// \u4e5f\u53ef\u4ee5\u5148\u5b9a\u4e49\u518d\u521d\u59cb\u5316\nstruct Books Book1;        /* \u58f0\u660e Book1\uff0c\u7c7b\u578b\u4e3a Books */\n/* Book1 \u8be6\u8ff0 */\nstrcpy( Book1.title, "C Programming");\nstrcpy( Book1.author, "Nuha Ali"); \nstrcpy( Book1.subject, "C Programming Tutorial");\nBook1.book_id = 6495407;\n/* \u8f93\u51fa Book1 \u4fe1\u606f */\nprintf( "Book 1 title : %s\\n", Book1.title);\nprintf( "Book 1 author : %s\\n", Book1.author);\nprintf( "Book 1 subject : %s\\n", Book1.subject);\nprintf( "Book 1 book_id : %d\\n", Book1.book_id);\n\n/* \u901a\u8fc7\u4f20 Book1 \u7684\u5730\u5740\u6765\u8f93\u51fa Book1 \u4fe1\u606f */\nprintBook( &Book1 );\n\n// \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\nvoid printBook( struct Books *book ) {\n    // \u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u7ed3\u6784\u4f53\n   printf( "Book title : %s\\n", book->title);\n   printf( "Book author : %s\\n", book->author);\n   printf( "Book subject : %s\\n", book->subject);\n   printf( "Book book_id : %d\\n", book->book_id);\n}\n\n/**\n \u4f4d\u57df/\u4f4d\u6bb5\n \u628a\u4e00\u4e2a\u5b57\u8282\u4e2d\u7684\u4e8c\u8fdb\u4f4d\u5212\u5206\u4e3a\u51e0\u4e2a\u4e0d\u540c\u7684\u533a\u57df\uff0c\u5e76\u8bf4\u660e\u6bcf\u4e2a\u533a\u57df\u7684\u4f4d\u6570\u3002\u6bcf\u4e2a\u57df\u6709\u4e00\u4e2a\u57df\u540d\uff0c\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u6309\u57df\u540d\u8fdb\u884c\u64cd\u4f5c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u51e0\u4e2a\u4e0d\u540c\u7684\u5bf9\u8c61\u7528\u4e00\u4e2a\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u4f4d\u57df\u6765\u8868\u793a\n \u5982: \u7528 1 \u4f4d\u4e8c\u8fdb\u4f4d\u5b58\u653e\u4e00\u4e2a\u5f00\u5173\u91cf\u65f6\uff0c\u53ea\u6709 0 \u548c 1 \u4e24\u79cd\u72b6\u6001\u3002\n-  \u4e00\u4e2a\u4f4d\u57df\u4e0d\u80fd\u8de8\u5b57\u8282, \u5982\u4e00\u4e2a\u5b57\u8282\u6240\u5269\u7a7a\u95f4\u4e0d\u591f\u5b58\u653e\u53e6\u4e00\u4f4d\u57df\u65f6\uff0c\u5219\u4f1a\u4ece\u4e0b\u4e00\u5355\u5143\u8d77\u5b58\u653e\u8be5\u4f4d\u57df\u3002\u4e5f\u53ef\u4ee5\u6709\u610f\u4f7f\u67d0\u4f4d\u57df\u4ece\u4e0b\u4e00\u5355\u5143\u5f00\u59cb\n*/\n// \u5b9a\u4e49\n// data \u4e3a bs \u53d8\u91cf\uff0c\u5171\u5360\u4e24\u4e2a\u5b57\u8282\u3002\u5176\u4e2d\u4f4d\u57df a \u5360 8 \u4f4d\uff0c\u4f4d\u57df b \u5360 2 \u4f4d\uff0c\u4f4d\u57df c \u5360 6 \u4f4d\nstruct bs{\n    int a:8; // \u4f4d\u57dfa\n    int  :4;    /* \u7a7a\u57df/\u65e0\u540d\u4f4d\u57df , \u4f1a\u5728\u5bf9\u5e94\u4f4d\u586b 0 \u8868\u793a\u4e0d\u7528*/\n    int b:2; // \u4f4d\u57dfb, \u4ece\u4e0b\u4e00\u5355\u5143(\u5b57\u8282)\u5f00\u59cb\u5b58\u653e  // \u6700\u5927\u80fd\u591f\u8868\u793a 3\n    int c:6; // \u4f4d\u57dfc\n} data;\nstruct bs{\n    unsigned a:1;\n    unsigned b:3; // \u6700\u5927\u53ef\u4ee5\u8868\u793a 7\n    unsigned c:4;\n} bit,*pbit;\nbit.a=1;    /* \u7ed9\u4f4d\u57df\u8d4b\u503c\uff08\u5e94\u6ce8\u610f\u8d4b\u503c\u4e0d\u80fd\u8d85\u8fc7\u8be5\u4f4d\u57df\u7684\u5141\u8bb8\u8303\u56f4\uff09 */\nbit.b=7;    /* \u7ed9\u4f4d\u57df\u8d4b\u503c\uff08\u5e94\u6ce8\u610f\u8d4b\u503c\u4e0d\u80fd\u8d85\u8fc7\u8be5\u4f4d\u57df\u7684\u5141\u8bb8\u8303\u56f4\uff09 */\nbit.c=15;    /* \u7ed9\u4f4d\u57df\u8d4b\u503c\uff08\u5e94\u6ce8\u610f\u8d4b\u503c\u4e0d\u80fd\u8d85\u8fc7\u8be5\u4f4d\u57df\u7684\u5141\u8bb8\u8303\u56f4\uff09 */\nprintf("%d,%d,%d\\n",bit.a,bit.b,bit.c);    /* \u4ee5\u6574\u578b\u91cf\u683c\u5f0f\u8f93\u51fa\u4e09\u4e2a\u57df\u7684\u5185\u5bb9 */\npbit=&bit;    /* \u628a\u4f4d\u57df\u53d8\u91cf bit \u7684\u5730\u5740\u9001\u7ed9\u6307\u9488\u53d8\u91cf pbit */\npbit->a=0;    /* \u7528\u6307\u9488\u65b9\u5f0f\u7ed9\u4f4d\u57df a \u91cd\u65b0\u8d4b\u503c\uff0c\u8d4b\u4e3a 0 */\npbit->b&=3;    /* \u4f7f\u7528\u4e86\u590d\u5408\u7684\u4f4d\u8fd0\u7b97\u7b26 "&="\uff0c\u76f8\u5f53\u4e8e\uff1apbit->b=pbit->b&3\uff0c\u4f4d\u57df b \u4e2d\u539f\u6709\u503c\u4e3a 7\uff0c\u4e0e 3 \u4f5c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u7684\u7ed3\u679c\u4e3a 3\uff08111&011=011\uff0c\u5341\u8fdb\u5236\u503c\u4e3a 3\uff09 */\npbit->c|=1;    /* \u4f7f\u7528\u4e86\u590d\u5408\u4f4d\u8fd0\u7b97\u7b26"|="\uff0c\u76f8\u5f53\u4e8e\uff1apbit->c=pbit->c|1\uff0c\u5176\u7ed3\u679c\u4e3a 15 */\nprintf("%d,%d,%d\\n",pbit->a,pbit->b,pbit->c);    /* \u7528\u6307\u9488\u65b9\u5f0f\u8f93\u51fa\u4e86\u8fd9\u4e09\u4e2a\u57df\u7684\u503c */\n\n\n/** \u5171\u7528\u4f53\n\u5728\u76f8\u540c\u7684\u5185\u5b58\u4f4d\u7f6e\u5b58\u50a8\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b, \u4f46\u662f\u4efb\u4f55\u65f6\u5019\u53ea\u80fd\u6709\u4e00\u4e2a\u6210\u5458\u5e26\u6709\u503c\n\u5171\u7528\u4f53\u5360\u7528\u7684\u5185\u5b58\u5e94\u8db3\u591f\u5b58\u50a8\u5171\u7528\u4f53\u4e2d\u6700\u5927\u7684\u6210\u5458\n*/\n// Data \u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u6574\u6570\u3001\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u6216\u8005\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u8fd9\u610f\u5473\u7740\u4e00\u4e2a\u53d8\u91cf\uff08\u76f8\u540c\u7684\u5185\u5b58\u4f4d\u7f6e\uff09\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u591a\u79cd\u7c7b\u578b\u7684\u6570\u636e\n//Data \u5c06\u5360\u7528 20 \u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5728\u5404\u4e2a\u6210\u5458\u4e2d\uff0c\u5b57\u7b26\u4e32\u6240\u5360\u7528\u7684\u7a7a\u95f4\u662f\u6700\u5927\u7684\nunion Data\n{\n   int i;\n   float f;\n   char  str[20];\n} data;\nint main( )\n{\n   union Data data;        \n   printf( "Memory size occupied by data : %d\\n", sizeof(data));// 20\n\n   data.i = 10;\n   data.f = 220.5;\n   strcpy( data.str, "C Programming");// \u4f1a\u8986\u76d6\u524d\u9762\u8d4b\u7ed9\u7684\u503c\n \n   printf( "data.i : %d\\n", data.i);// \u65e0\u6cd5\u6b63\u786e\u663e\u793a\n   printf( "data.f : %f\\n", data.f);// \u65e0\u6cd5\u6b63\u786e\u663e\u793a\n   printf( "data.str : %s\\n", data.str);// \u663e\u793a\u6b63\u5e38\n\n   // \u6b63\u786e\u7684\u7528\u6cd5: (\u540c\u4e00\u65f6\u95f4\u53ea\u7528\u5230\u4e00\u4e2a\u6210\u5458)\n   data.i = 10;\n   printf( "data.i : %d\\n", data.i);\n   \n   data.f = 220.5;\n   printf( "data.f : %f\\n", data.f);\n   \n   strcpy( data.str, "C Programming");\n   printf( "data.str : %s\\n", data.str);\n\n   return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u53d8\u91cf\u5b58\u50a8\u7c7b\u578b"},"\u53d8\u91cf\u5b58\u50a8\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\n/**\n\u5b58\u50a8\u7c7b\u578b storage type\n\u7528\u6765\u5b9a\u4e49\u53d8\u91cf/\u51fd\u6570\u7684\u4f5c\u7528\u57df/\u751f\u547d\uff08\u5b58\u50a8\uff09\u5468\u671f/\u8fde\u63a5\u5c5e\u6027\n\u5206\u4e3a\uff1a\u52a8\u6001\u5b58\u50a8\u3001\u9759\u6001\u5b58\u50a8(static)\u3001\u81ea\u52a8\u53d8\u91cf(auto)\u3001\u5bc4\u5b58\u5668\u53d8\u91cf (register)\u3001\u5916\u90e8\u53d8\u91cf(extern)\n\nauto char c; //\u5b57\u7b26\u578b\u81ea\u52a8\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u5185\u5b9a\u4e49  \nregister int d; //\u6574\u578b\u5bc4\u5b58\u5668\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u5185\u5b9a\u4e49  \nstatic int a; //\u9759\u6001\u5c40\u90e8\u6574\u578b\u53d8\u91cf\u6216\u9759\u6001\u5916\u90e8\u6574\u578b\u53d8\u91cf  \nextern int b; //\u58f0\u660e\u4e00\u4e2a\u5df2\u5b9a\u4e49\u7684\u5916\u90e8\u6574\u578b\u53d8\u91cf  \n\n\u4f5c\u7528\u57df\uff1a\u4e5f\u5c31\u662f\u53d8\u91cf\u7684\u53ef\u89c1\u8303\u56f4\uff0c \u6709\u4e09\u4e2a\u7b49\u7ea7\uff1a\n      - \u4ee3\u7801\u5757\u4f5c\u7528\u57df (\u5728\u51fd\u6570\u5185\u90e8\u4ee3\u7801\u5757\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3001\u5f62\u53c2\uff0c\u79f0\u4e3a\u5c40\u90e8\u53d8\u91cf)\n      - \u51fd\u6570\u539f\u578b\u4f5c\u7528\u57df\uff08\u4ece\u53d8\u91cf\u5b9a\u4e49\u5904\u4e00\u76f4\u5230\u539f\u578b\u58f0\u660e\u7684\u672b\u5c3e\uff09\n      - \u6587\u4ef6\u4f5c\u7528\u57df (\u5728\u51fd\u6570\u4e4b\u5916\u5b9a\u4e49\u7684\u53d8\u91cf\uff0c\u6574\u4e2a\u6587\u4ef6\u90fd\u53ef\u89c1\uff0c\u79f0\u4e3a\u5168\u5c40\u53d8\u91cf)\n      - \u51fd\u6570\u4f5c\u7528\u57df (\u53ea\u9002\u7528\u4e8egoto\u8bed\u53e5\u4f7f\u7528\u7684\u6807\u7b7e, \u610f\u5473\u7740\u4e00\u4e2a\u7279\u5b9a\u51fd\u6570\u4e2d\u7684goto\u6807\u7b7e\u5bf9\u8be5\u51fd\u6570\u4e2d\u4efb\u4f55\u5730\u65b9\u7684\u4ee3\u7801\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u65e0\u8bba\u8be5\u6807\u7b7e\u51fa\u73b0\u5728\u54ea\u4e00\u4e2a\u4ee3\u7801\u5757\u4e2d\u3002)\n\u5b58\u50a8\u5468\u671f/\u751f\u547d\u5468\u671f\uff1a\u5b9a\u4e49\u53d8\u91cf\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u65b9\u5f0f\uff0c\u52062\u7c7b\n      - \u9759\u6001\u5b58\u50a8\u5468\u671f \uff08\u53d8\u91cf\u5728\u9759\u6001\u5b58\u50a8\u533a\u5b58\u50a8\uff0c\u7cfb\u7edf\u5bf9\u53d8\u91cf\u5206\u914d\u56fa\u5b9a\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4e00\u76f4\u5b58\u5728\uff0c \u4f8b\u5982\u5168\u5c40\u53d8\u91cf\uff09\n      - \u81ea\u52a8/\u52a8\u6001\u5b58\u50a8\u5468\u671f \uff08\u53d8\u91cf\u52a8\u6001\u5b58\u50a8\u533a\u5b58\u50a8\uff0c\u7cfb\u7edf\u5bf9\u53d8\u91cf\u5728\u8fd0\u884c\u671f\u95f4\u52a8\u6001\u5730\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c  \u5728\u7a0b\u5e8f\u8fdb\u5165\u5b9a\u4e49\u7684\u53d8\u91cf\u4ee3\u7801\u5757\u4e2d\u65f6\u5728\u6808\u4e2d\u5206\u914d\u5185\u5b58\uff0c\u9000\u51fa\u65f6\u91ca\u653e\u5185\u5b58,\u4f8b\u5982\u5c40\u90e8\u53d8\u91cf\uff09\n\u8fde\u63a5\u5c5e\u6027\uff1a\n      - \u5916\u90e8\u8fde\u63a5 \uff08\u5177\u6709\u5916\u90e8\u8fde\u63a5\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u591a\u6587\u4ef6\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\uff0c\u591a\u4e2a\u6587\u4ef6\u53ef\u6709\u5171\u4eab\uff09\n      - \u5185\u90e8\u8fde\u63a5 \uff08\u5177\u6709\u5185\u90e8\u8fde\u63a5\u7684\u53d8\u91cf\u53ef\u4ee5\u5728\u4e00\u4e2a\u6587\u4ef6\u7684\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\uff0c\u5f52\u8be5\u6587\u4ef6\u79c1\u6709\uff09\u5982 \u7528static\u5728\u6240\u6709\u51fd\u6570\u7684\u5916\u90e8\u8fdb\u884c\u5b9a\u4e49\u6765\u521b\u5efa\n      - \u7a7a\u8fde\u63a5 \uff08\u5177\u6709\u4ee3\u7801\u5757\u4f5c\u7528\u57df\u548c\u51fd\u6570\u539f\u578b\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u662f\u7a7a\u8fde\u63a5\uff0c\u7531\u5b9a\u4e49\u6240\u5728\u7684\u4ee3\u7801\u5757\u548c\u51fd\u6570\u539f\u578b\u6240\u79c1\u6709\uff09\n\n\u81ea\u52a8\u53d8\u91cf \uff08auto\uff09\n- \u7528auto\u4fee\u9970\u6216\u8005\u4e0d\u4fee\u9970\u5c31\u9ed8\u8ba4\u5c5e\u4e8e\u81ea\u52a8\u5b58\u50a8\u7c7b\u7684\u53d8\u91cf\uff0c\u5177\u6709\u81ea\u52a8\u5b58\u50a8\u5468\u671f\u3001\u4ee3\u7801\u5757\u4f5c\u7528\u57df\u3001\u7a7a\u8fde\u63a5\u3002\n- \u5728\u9ed8\u8ba4\u4e0b\uff0c\u5728\u4ee3\u7801\u5feb\u6216\u8005\u51fd\u6570\u5f00\u5934\u5b9a\u4e49\u7684\u4efb\u610f\u53d8\u91cf\u90fd\u5c5e\u4e8e\u81ea\u52a8\u5b58\u50a8\u7c7b\u3002\u4e5f\u53ea\u80fd\u7528\u4e8e\u4ee3\u7801\u5757\u5185/\u51fd\u6570\u5185\u90e8\u7684\u53d8\u91cf\n- \u5bf9\u4e8e\u81ea\u52a8\u53d8\u91cf\uff0c\u9664\u975e\u663e\u5f0f\u7684\u521d\u59cb\u5316\uff0c\u5426\u5219\u4e0d\u4f1a\u81ea\u52a8\u521d\u59cb\u5316, \u5728\u8fd0\u884c\u65f6\u7a0b\u5e8f\u624d\u8d4b\u521d\u503c\uff0c \u6bcf\u8fd0\u884c\u4e00\u6b21\uff0c \u8d4b\u521d\u503c\u4e00\u6b21\n\n\u5bc4\u5b58\u5668\u53d8\u91cf\uff08register \uff09\n- \u7528\u4e8e\u5c06\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u653e\u5728CPU\u4e2d\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u9700\u8981\u7528\u65f6\u76f4\u63a5\u4ece\u5bc4\u5b58\u5668\u53d6\u51fa\u53c2\u52a0\u8fd0\u7b97\uff0c\u4e0d\u5fc5\u518d\u5230\u5185\u5b58\u4e2d\u53bb\u5b58\u53d6 (\u6240\u4ee5\u65e0\u6cd5\u83b7\u5f97\u5176\u5730\u5740\uff0c\u53d8\u91cf\u7684\u6700\u5927\u5c3a\u5bf8\u7b49\u4e8e\u5bc4\u5b58\u5668\u7684\u5927\u5c0f \uff08\u901a\u5e38\u662f\u4e00\u4e2a\u8bcd\uff09\uff0c\u4e14\u4e0d\u80fd\u5bf9\u5b83\u5e94\u7528\u4e00\u5143\u7684 '&' \u8fd0\u7b97\u7b26\uff08\u56e0\u4e3a\u5b83\u6ca1\u6709\u5185\u5b58\u4f4d\u7f6e\uff09)\n- register i;\u7b49\u4ef7\u4e8eregister int i;,register\u9ed8\u8ba4\u662fint\u7c7b\u578b.\n- \u53ea\u80fd\u7528\u5728\u5177\u6709\u4ee3\u7801\u5757\u4f5c\u7528\u57df\u7684\u53d8\u91cf\n- \u53ea\u7528\u4e8e\u9700\u8981\u5feb\u901f\u8bbf\u95ee\u7684\u53d8\u91cf\uff0c\u6bd4\u5982\u8ba1\u6570\u5668\n- \u4ec5\u4ec5\u610f\u5473\u7740\u53d8\u91cf\u53ef\u80fd\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u8fd9\u53d6\u51b3\u4e8e\u786c\u4ef6\u548c\u5b9e\u73b0\u7684\u9650\u5236\u3002\n\n\u9759\u6001\u5b58\u50a8\u53d8\u91cf\uff08static\uff09\n- \u5728\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u5185\u59cb\u7ec8\u4fdd\u6301\u53d8\u91cf\u4e0d\u9500\u6bc1 \n- \u8d4b\u521d\u503c\u662f\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7684\uff0c\u5373\u53ea\u8d4b\u521d\u503c\u4e00\u6b21\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5b83\u5df2\u6709\u521d\u503c\uff0c\u82e5\u4e0d\u6307\u5b9a\uff0c\u7f16\u8bd1\u65f6\u81ea\u52a8\u521d\u59cb\u5316\u4e3a0\n- \u4f7f\u7528 static \u4fee\u9970\u5c40\u90e8\u53d8\u91cf\u53ef\u4ee5\u5728\u51fd\u6570\u8c03\u7528\u4e4b\u95f4\u4fdd\u6301\u5c40\u90e8\u53d8\u91cf\u7684\u503c \uff08\u4e5f\u5c31\u662f\u4f7f\u8be5\u53d8\u91cf\u5177\u6709\u9759\u6001\u5b58\u50a8\u5468\u671f\uff0c\u53d8\u91cf\u4ecd\u4fdd\u7559\u4ee3\u7801\u5757\u4f5c\u7528\u57df\u548c\u7a7a\u8fde\u63a5\uff0c \u5728\u5176\u4ed6\u51fd\u6570\u4e2d\u5b83\u662f\u201c\u4e0d\u53ef\u89c1\u201d\u7684\uff09\n- \u5f53 static \u4fee\u9970\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u4f1a\u4f7f\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u9650\u5236\u5728\u58f0\u660e\u5b83\u7684\u6587\u4ef6\u5185 \uff08\u4e5f\u5c31\u662f \u4f7f\u8be5\u53d8\u91cf\u5177\u6709\u5185\u90e8\u8fde\u63a5\uff09\n\n\u5916\u90e8\u53d8\u91cf(extern)\n- \u7528\u4e8e\u63d0\u4f9b\u4e00\u4e2a\u5df2\u5b9a\u4e49\u7684\u5168\u5c40\u53d8\u91cf\u7684\u5f15\u7528 \uff08\u8fd9\u4e2a\u5168\u5c40\u53d8\u91cf\u53ef\u80fd\u5b9a\u4e49\u5728\u53e6\u5916\u7684\u6587\u4ef6\uff09\uff0c\u58f0\u660e\u4e00\u4e2a\u5728\u5176\u4ed6\u5730\u65b9\u5b9a\u4e49\u4e86\u7684\u53d8\u91cf\n- \u5b9a\u4e49\u5728\u51fd\u6570\u5916\u90e8\u7684\u53d8\u91cf\u7684\u5b58\u50a8\u7c7b\u578b\u90fd\u662fextern,\u5373\u4f7f\u4e0d\u4f7f\u7528\u5173\u952e\u5b57extern.\n\n\n*/\n\n\n\n")),(0,i.kt)("h2",{id:"\u51fd\u6570"},"\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n\n/** \u51fd\u6570\n * \u5b58\u50a8\u5728 \u4ee3\u7801\u533a\n\n\u51fd\u6570\u58f0\u660e\u53ef\u4ee5\u4e0d\u8981\u53c2\u6570\u540d \u5982\uff1a int max(int, int);\n\n\u533f\u540d\u5185\u90e8\u51fd\u6570\n- \u6267\u884c\u5b8c\u540e\u7acb\u5373\u9500\u6bc1\uff0c \u7528 {} \u5305\u88f9\n\n\u51fd\u6570\u4f5c\u7528\u57df\n- \u6240\u6709\u7684\u51fd\u6570\u9ed8\u8ba4\u90fd\u662f\u5168\u5c40\u7684\uff0c\u610f\u5473\u7740\u6240\u6709\u7684\u51fd\u6570\u90fd\u4e0d\u80fd\u91cd\u540d\uff0c\u4f46\u5982\u679c\u662fstaitc\u51fd\u6570\uff0c\u90a3\u4e48\u4f5c\u7528\u57df\u662f\u6587\u4ef6\u7ea7\u7684\uff0c\u5728\u5176\u4ed6\u6587\u4ef6\u4e2d\u4e0d\u80fd\u8c03\u7528\uff0c\u6240\u4ee5\u4e0d\u540c\u7684\u6587\u4ef6static\u51fd\u6570\u540d\u662f\u53ef\u4ee5\u76f8\u540c\u7684\u3002 \n- \u540c\u4e00\u6e90\u6587\u4ef6\u4e2d,\u5141\u8bb8\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u540c\u540d\uff0c\u5728\u5c40\u90e8\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u5185\uff0c\u5168\u5c40\u53d8\u91cf\u6682\u65f6\u88ab\u8986\u76d6\n\n\u503c\u4f20\u9012\uff1ac \u9ed8\u8ba4\u91c7\u7528\uff0c\u4f20\u9012\u7684\u662f \u590d\u5236\u62f7\u8d1d\n\u5f15\u7528\u4f20\u9012\uff1a\u4f20\u9012\u6307\u9488\n\n\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\uff1a\nvoid myFunction(int *param) {}\nvoid myFunction(int param[10]){}\nvoid myFunction(int param[]){} // \u5c31\u51fd\u6570\u800c\u8a00\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u65e0\u5173\u7d27\u8981\u7684\uff0c\u56e0\u4e3a C++ \u4e0d\u4f1a\u5bf9\u5f62\u5f0f\u53c2\u6570\u6267\u884c\u8fb9\u754c\u68c0\u67e5\n\u5982\u679c\u5f62\u53c2\u4e3a\u6570\u7ec4\uff0c\u5219\u7f16\u8bd1\u5668\u628a\u5176\u89e3\u91ca\u4e3a\u666e\u901a\u7684\u6307\u9488\u7c7b\u578b\uff0c\u5982\n   \u5bf9\u4e8evoid func(char sa[100],int ia[20],char *p)\n  \u5219sa\u7684\u7c7b\u578b\u4e3achar*\uff0cia\u7684\u7c7b\u578b\u4e3aint*\uff0cp\u7684\u7c7b\u578b\u4e3achar*\n\n\n\u6570\u7ec4\u4f5c\u4e3a\u8fd4\u56de\u503c (\u8fd4\u56de\u503c\u7c7b\u578b\u4e3a\u6307\u9488, \u56e0\u4e3a c / c++ \u4e0d\u652f\u6301\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4, \u53ea\u80fd\u8fd4\u56de\u6267\u884c\u6570\u7ec4\u7684\u6307\u9488)\nint * myFunction(){\n    C \u4e0d\u652f\u6301\u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\uff0c\u9664\u975e\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u4e3a static \u53d8\u91cf\n    static int result[10];\n    ...\n    return result;\n}\n*/\n\n\n/**\n\u53ef\u53d8\u53c2\u6570\n\u7701\u7565\u53f7\u4e4b\u524d\u7684\u90a3\u4e2a\u53c2\u6570\u662f int\uff0c\u4ee3\u8868\u4e86\u8981\u4f20\u9012\u7684\u53ef\u53d8\u53c2\u6570\u7684\u603b\u6570\u3002\u4e3a\u4e86\u4f7f\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u60a8\u9700\u8981\u4f7f\u7528 stdarg.h \u5934\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u63d0\u4f9b\u4e86\u5b9e\u73b0\u53ef\u53d8\u53c2\u6570\u529f\u80fd\u7684\u51fd\u6570\u548c\u5b8f\nint func(int, ... ) {}\nint main()\n{\n   func(2, 2, 3);\n   func(3, 2, 3, 4);\n}\n*/\n#include <stdio.h>\n#include <stdarg.h>\n \ndouble average(int num,...)\n{\n \n    // \u521b\u5efa\u4e00\u4e2a va_list \u7c7b\u578b\u53d8\u91cf\uff0c\u8be5\u7c7b\u578b\u662f\u5728 stdarg.h \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\n    // \u4ee3\u8868\u53c2\u6570\u5217\u8868\n    va_list valist;\n    double sum = 0.0;\n    int i;\n \n    // \u521d\u59cb\u5316\u53c2\u6570\u5217\u8868\n    // \u5b8f va_start \u662f\u5728 stdarg.h \u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\n    va_start(valist, num);\n \n    /* \u8bbf\u95ee\u6240\u6709\u8d4b\u7ed9 valist \u7684\u53c2\u6570 */\n    for (i = 0; i < num; i++)\n    {\n        // \u8bbf\u95ee\u53c2\u6570\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\n       sum += va_arg(valist, int);\n    }\n    /* \u6e05\u7406\u4e3a valist \u4fdd\u7559\u7684\u5185\u5b58 */\n    va_end(valist);\n \n    // \u8fd4\u56de\u5e73\u5747\u503c\n    return sum/num;\n}\n \nint main()\n{\n   printf("Average of 2, 3, 4, 5 = %f\\n", average(4, 2,3,4,5));\n   printf("Average of 5, 10, 15 = %f\\n", average(3, 5,10,15));\n}\n\n')),(0,i.kt)("h2",{id:"\u6307\u9488"},"\u6307\u9488"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n\n/**\n\n    \u6307\u9488\n\n\n * \u6307\u9488\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u5176\u503c\u4e3a\u53e6\u4e00\u4e2a\u53d8\u91cf\u7684\u5730\u5740\uff0c\u5373\uff0c\u5185\u5b58\u4f4d\u7f6e\u7684\u76f4\u63a5\u5730\u5740\n * 4/8 byte\n*/\n// \u6307\u9488\u58f0\u660e\nint    *ip;    /* \u4e00\u4e2a\u6574\u578b\u7684\u6307\u9488 */\ndouble *dp;    /* \u4e00\u4e2a double \u578b\u7684\u6307\u9488 */\nfloat  *fp;    /* \u4e00\u4e2a\u6d6e\u70b9\u578b\u7684\u6307\u9488 */\nchar   *ch;     /* \u4e00\u4e2a\u5b57\u7b26\u578b\u7684\u6307\u9488 */\n\n// \u5bf9\u53d8\u91cf\u53d6\u5730\u5740\nint  var1;\nchar var2[10];\nprintf("var1 \u53d8\u91cf\u7684\u5730\u5740\uff1a %p\\n", &var1  );\nprintf("var2 \u53d8\u91cf\u7684\u5730\u5740\uff1a %p\\n", &var2  );\n\nint  var = 20;   \n//\u63a8\u8350\u521d\u59cb\u5316\u4e3a null\uff0c\u8d4b\u4e3a NULL \u503c\u7684\u6307\u9488\u88ab\u79f0\u4e3a\u7a7a\u6307\u9488\uff0cNULL \u6307\u9488\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u6807\u51c6\u5e93\u4e2d\u7684\u503c\u4e3a\u96f6\u7684\u5e38\u91cf\uff0c\n// \u68c0\u67e5\u7a7a\u6307\u9488\u53ef\u4ee5\u8fd9\u6837\u505a: if(!ip)  \u5982\u679c\u4e3a\u7a7a\u3002\u3002\u3002\nint  *ip = NULL;        /* \u6307\u9488\u53d8\u91cf\u7684\u58f0\u660e */\n\nip = &var;  /* \u5728\u6307\u9488\u53d8\u91cf\u4e2d\u5b58\u50a8 var \u7684\u5730\u5740 */\n\nprintf("Address of var variable: %p\\n", &var  );\n/* \u5728\u6307\u9488\u53d8\u91cf\u4e2d\u5b58\u50a8\u7684\u5730\u5740 */\nprintf("Address stored in ip variable: %p\\n", ip );\n/* \u4f7f\u7528\u6307\u9488\u8bbf\u95ee\u503c */\nprintf("Value of *ip variable: %d\\n", *ip );\n\n\n// \u6307\u9488\u8fd0\u7b97 ++\u3001--\u3001+\u3001-\n//\u6307\u9488\u7684\u6bcf\u4e00\u6b21\u9012\u589e\uff0c\u5b83\u5176\u5b9e\u4f1a\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u5b58\u50a8\u5355\u5143 \uff08\u8df3\u8dc3\u7684\u5b57\u8282\u6570\u53d6\u51b3\u4e8e\u6307\u9488\u6240\u6307\u5411\u53d8\u91cf\u6570\u636e\u7c7b\u578b\u957f\u5ea6\uff0c\u6bd4\u5982 int \u5c31\u662f 4 \u4e2a\u5b57\u8282\uff09\n//v\u6307\u9488\u7684\u6bcf\u4e00\u6b21\u9012\u51cf\uff0c\u5b83\u90fd\u4f1a\u6307\u5411\u524d\u4e00\u4e2a\u5143\u7d20\u7684\u5b58\u50a8\u5355\u5143\u3002\n\n// \u6307\u9488\u9012\u589e\n// \u4f7f\u7528\u6307\u9488\u4ee3\u66ff\u6570\u7ec4\uff0c\u56e0\u4e3a\u53d8\u91cf\u6307\u9488\u53ef\u4ee5\u9012\u589e\uff0c\u800c\u6570\u7ec4\u4e0d\u80fd\u9012\u589e\uff0c\u6570\u7ec4\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\nint  var[] = {10, 100, 200};\nint  i, *ptr;\n// \u6570\u7ec4\u540d\u53ef\u4ee5\u76f4\u63a5\u8d4b\u503c\u7ed9\u6307\u9488, \u6307\u5411\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\nptr = var;\nfor ( i = 0; i < MAX; i++)\n{\n\n    printf("\u5b58\u50a8\u5730\u5740\uff1avar[%d] = %x\\n", i, ptr );\n    printf("\u5b58\u50a8\u503c\uff1avar[%d] = %d\\n", i, *ptr );\n\n    /* \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e */\n    ptr++;\n}\n\n// \u6307\u9488\u6bd4\u8f83\nint  var[] = {10, 100, 200};\nint  i, *ptr;\nptr = var;\ni = 0;\nwhile ( ptr <= &var[MAX - 1] )\n{\n\n    printf("Address of var[%d] = %p\\n", i, ptr );\n    printf("Value of var[%d] = %d\\n", i, *ptr );\n\n    /* \u6307\u5411\u4e0a\u4e00\u4e2a\u4f4d\u7f6e */\n    ptr++;\n    i++;\n}\n\n\n\n\n\n// \u51fd\u6570\u6307\u9488\n// \u6307\u5411\u51fd\u6570\u7684\u6307\u9488\u53d8\u91cf\n// typedef int (*fun_ptr)(int,int); // \u58f0\u660e\u4e00\u4e2a\u6307\u5411\u540c\u6837\u53c2\u6570\u3001\u8fd4\u56de\u503c\u7684\u51fd\u6570\u6307\u9488\u7c7b\u578b\nint max(int x, int y)\n{\n    return x > y ? x : y;\n}\nint main(void)\n{\n    /* p \u662f\u51fd\u6570\u6307\u9488 */\n    int (* p)(int, int) = & max; // &\u53ef\u4ee5\u7701\u7565\n    int a, b, c, d;\n \n    printf("\u8bf7\u8f93\u5165\u4e09\u4e2a\u6570\u5b57:");\n    scanf("%d %d %d", & a, & b, & c);\n \n    /* \u4e0e\u76f4\u63a5\u8c03\u7528\u51fd\u6570\u7b49\u4ef7\uff0cd = max(max(a, b), c) */\n    d = p(p(a, b), c); \n \n    printf("\u6700\u5927\u7684\u6570\u5b57\u662f: %d\\n", d);\n \n    return 0;\n}\n\n// \u51fd\u6570\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\n// \u56de\u8c03\u51fd\u6570\n// size_t \u5c31\u662f unsigned int \uff0c\u4e3a\u4e86\u8de8\u5e73\u53f0\nvoid populate_array(int *array, size_t arraySize, int (*getNextValue)(void))\n{\n    for (size_t i=0; i<arraySize; i++)\n        array[i] = getNextValue();\n}\n// \u83b7\u53d6\u968f\u673a\u503c\nint getNextRandomValue(void)\n{\n    return rand();\n}\nint main(void)\n{\n    int myarray[10];\n    populate_array(myarray, 10, getNextRandomValue);\n    for(int i = 0; i < 10; i++) {\n        printf("%d ", myarray[i]);\n    }\n    printf("\\n");\n    return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u6587\u4ef6\u8bfb\u5199-io"},"\u6587\u4ef6\u8bfb\u5199-io"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/** \u6587\u4ef6\u8bfb\u5199\n\u6253\u5f00\u6587\u4ef6\nFILE *fopen( const char * filename, const char * mode );\nmode \u6253\u5f00\u6a21\u5f0f:\nr   \u6253\u5f00\u4e00\u4e2a\u5df2\u6709\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u53d6\u6587\u4ef6\u3002\nw   \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u5199\u5165\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u7684\u7a0b\u5e8f\u4f1a\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u5199\u5165\u5185\u5bb9\u3002\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u8be5\u4f1a\u88ab\u622a\u65ad\u4e3a\u96f6\u957f\u5ea6\uff0c\u91cd\u65b0\u5199\u5165\u3002\na   \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u5199\u5165\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\u5728\u8fd9\u91cc\uff0c\u60a8\u7684\u7a0b\u5e8f\u4f1a\u5728\u5df2\u6709\u7684\u6587\u4ef6\u5185\u5bb9\u4e2d\u8ffd\u52a0\u5185\u5bb9\u3002\nr+  \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u5199\u6587\u4ef6\u3002\nw+  \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u5199\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u4f1a\u88ab\u622a\u65ad\u4e3a\u96f6\u957f\u5ea6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\na+  \u6253\u5f00\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5141\u8bb8\u8bfb\u5199\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\u3002\u8bfb\u53d6\u4f1a\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u5f00\u59cb\uff0c\u5199\u5165\u5219\u53ea\u80fd\u662f\u8ffd\u52a0\u6a21\u5f0f\u3002\n\u5982\u679c\u5904\u7406\u4e8c\u8fdb\u5236\u6587\u4ef6, \u9700\u8981\u52a0 "b"\n\n\u5173\u95ed\u6587\u4ef6\nint fclose( FILE *fp ); \u4f1a\u6e05\u7a7a\u7f13\u51b2\u533a\u4e2d\u7684\u6570\u636e, \u8fd4\u56de 0\n\n\u5199\u5165\u6587\u4ef6\nint fputc( int c, FILE *fp ); \u5199\u5165\u4e00\u4e2a\u5b57\u7b26\nint fputs( const char *s, FILE *fp ); \u5199\u5165\u5b57\u7b26\u4e32, \u5199\u5165\u6210\u529f\uff0c\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u975e\u8d1f\u503c\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4f1a\u8fd4\u56de EOF\nint fprintf(FILE *fp,const char *format, ...) \n\n\u8bfb\u53d6\u6587\u4ef6\nint fgetc( FILE * fp ); \u8bfb\u53d6\u4e00\u4e2a\u5b57\u7b26\nchar *fgets( char *buf, int n, FILE *fp ); \u8bfb\u53d6\u5b57\u7b26\u4e32\nint fscanf(FILE *fp, const char *format, ...) \u5728\u9047\u5230\u7b2c\u4e00\u4e2a\u7a7a\u683c\u548c\u6362\u884c\u7b26\u65f6\uff0c\u5b83\u4f1a\u505c\u6b62\u8bfb\u53d6\n\n\u8bfb\u5199\u4e8c\u8fdb\u5236\u6d41\n\u7528\u4e8e\u5b58\u50a8\u5757\u7684\u8bfb\u5199 - \u901a\u5e38\u662f\u6570\u7ec4\u6216\u7ed3\u6784\u4f53\nsize_t fread(void *ptr, size_t size_of_elements, \n             size_t number_of_elements, FILE *a_file);\nsize_t fwrite(const void *ptr, size_t size_of_elements, \n             size_t number_of_elements, FILE *a_file);\n*/\n#include <stdio.h>\n \nint main()\n{\n   FILE *fp = NULL;\n \n   fp = fopen("/tmp/test.txt", "w+");\n   fprintf(fp, "This is testing for fprintf...\\n");\n   fputs("This is testing for fputs...\\n", fp);\n   fclose(fp);\n\n   char buff[255];\n \n   fp = fopen("/tmp/test.txt", "r");\n   fscanf(fp, "%s", buff);\n   printf("1: %s\\n", buff );\n \n   fgets(buff, 255, (FILE*)fp);\n   printf("2: %s\\n", buff );\n   \n   fgets(buff, 255, (FILE*)fp);\n   printf("3: %s\\n", buff );\n   fclose(fp);\n}\n\n')),(0,i.kt)("h2",{id:"\u9519\u8bef\u5904\u7406"},"\u9519\u8bef\u5904\u7406"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/** \u9519\u8bef\u5904\u7406\n\u53d1\u751f\u9519\u8bef\u65f6\uff0c\u5927\u591a\u6570\u7684 C \u6216 UNIX \u51fd\u6570\u8c03\u7528\u8fd4\u56de 1 \u6216 NULL\uff0c\u540c\u65f6\u4f1a\u8bbe\u7f6e\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801 errno\uff0c\u8be5\u9519\u8bef\u4ee3\u7801\u662f\u5168\u5c40\u53d8\u91cf\n\u53ef\u4ee5\u5728errno.h \u5934\u6587\u4ef6\u4e2d\u627e\u5230\u5404\u79cd\u5404\u6837\u7684\u9519\u8bef\u4ee3\u7801\n\nperror() \u51fd\u6570\u663e\u793a\u60a8\u4f20\u7ed9\u5b83\u7684\u5b57\u7b26\u4e32\uff0c\u540e\u8ddf\u4e00\u4e2a\u5192\u53f7\u3001\u4e00\u4e2a\u7a7a\u683c\u548c\u5f53\u524d errno \u503c\u7684\u6587\u672c\u8868\u793a\u5f62\u5f0f\u3002\nstrerror() \u51fd\u6570\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u9488\u6307\u5411\u5f53\u524d errno \u503c\u7684\u6587\u672c\u8868\u793a\u5f62\u5f0f\u3002\n\n*/\n#include <stdio.h>\n#include <errno.h>\n#include <string.h>\n \nextern int errno ;\n \nint main ()\n{\n   FILE * pf;\n   int errnum;\n   pf = fopen ("unexist.txt", "rb");\n   if (pf == NULL)\n   {\n      errnum = errno;\n      fprintf(stderr, "\u9519\u8bef\u53f7: %d\\n", errno);\n      perror("\u901a\u8fc7 perror \u8f93\u51fa\u9519\u8bef");\n      fprintf(stderr, "\u6253\u5f00\u6587\u4ef6\u9519\u8bef: %s\\n", strerror( errnum ));\n      // \u7a0b\u5e8f\u51fa\u9519, \u5b8f EXIT_FAILURE\uff0c\u88ab\u5b9a\u4e49\u4e3a -1\n    //   exit(EXIT_FAILURE);\n   }\n   else\n   {\n      fclose (pf);\n   }\n   return 0;\n   // \u987a\u5229\u7ed3\u675f, \u5b8f EXIT_SUCCESS \u88ab\u5b9a\u4e49\u4e3a 0 \n   // exit(EXIT_SUCCESS);\n}\n// \u9519\u8bef\u53f7: 2\n// \u901a\u8fc7 perror \u8f93\u51fa\u9519\u8bef: No such file or directory\n// \u6253\u5f00\u6587\u4ef6\u9519\u8bef: No such file or directory\n\n')),(0,i.kt)("h2",{id:"\u5185\u5b58\u7ba1\u7406\u51fd\u6570"},"\u5185\u5b58\u7ba1\u7406\u51fd\u6570"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/u014427196/article/details/52568029"},"https://blog.csdn.net/u014427196/article/details/52568029"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/weixin_40548136/article/details/101351135"},"https://blog.csdn.net/weixin_40548136/article/details/101351135"),"\nTODO"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n\u5185\u5b58\u7ba1\u7406\u51fd\u6570\n\nC \u8bed\u8a00\u4e3a\u5185\u5b58\u7684\u5206\u914d\u548c\u7ba1\u7406\u63d0\u4f9b\u4e86\u51e0\u4e2a\u51fd\u6570\u3002\u8fd9\u4e9b\u51fd\u6570\u53ef\u4ee5\u5728 <stdlib.h> \u5934\u6587\u4ef6\u4e2d\u627e\u5230\nvoid *calloc(int num, int size); \u5728\u5185\u5b58\u4e2d\u52a8\u6001\u5730\u5206\u914d num \u4e2a\u957f\u5ea6\u4e3a size \u5b57\u8282 \u7684\u8fde\u7eed\u7a7a\u95f4\uff0c\u5e76\u5c06\u6bcf\u4e00\u4e2a\u5b57\u8282\u90fd\u521d\u59cb\u5316\u4e3a 0\nvoid free(void *address); \u91ca\u653e address \u6240\u6307\u5411\u7684\u5185\u5b58\u5757,\u91ca\u653e\u7684\u662f\u52a8\u6001\u5206\u914d\u7684\u5185\u5b58\u7a7a\u95f4 (void * \u7c7b\u578b\u8868\u793a\u672a\u786e\u5b9a\u7c7b\u578b\u7684\u6307\u9488)\nvoid *malloc(int num); \u5728\u5806\u533a\u5206\u914d\u4e00\u5757\u6307\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7528\u6765\u5b58\u653e\u6570\u636e\u3002\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\u5728\u51fd\u6570\u6267\u884c\u5b8c\u6210\u540e\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\nvoid *realloc(void *address, int newsize); \u8be5\u51fd\u6570\u91cd\u65b0\u5206\u914d\u5185\u5b58\uff0c\u628a\u5185\u5b58\u6269\u5c55\u5230 newsize\u3002\n\n*/\n// \u52a8\u6001\u5206\u914d\u5185\u5b58\n//\u91cd\u65b0\u8c03\u6574\u5185\u5b58\u7684\u5927\u5c0f\u548c\u91ca\u653e\u5185\u5b58\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\nint main()\n{\n   char name[100]; // \u56fa\u5b9a\u5bb9\u91cf\u7684\u5b57\u7b26\u4e32\n   char *description; // \u5b57\u7b26\u6307\u9488, \u5927\u5c0f\u672a\u786e\u5b9a\n \n   strcpy(name, "Zara Ali");\n \n   /* \u52a8\u6001\u5206\u914d\u5185\u5b58 200 \u4e2a\u5b57\u7b26\u5927\u5c0f */\n   description = (char *)malloc( 200 * sizeof(char) );\n   // \u7b49\u4ef7\n   // calloc(200, sizeof(char));\n\n   if( description == NULL )\n   {\n       // \u8f93\u51fa\u9519\u8bef\u4fe1\u606f\n      fprintf(stderr, "Error - unable to allocate required memory\\n");\n   }\n   else\n   {\n       // \u521d\u59cb\u5316\n      strcpy( description, "Zara ali a DPS student in class 10th");\n   }\n   printf("Name = %s\\n", name );\n   printf("Description: %s\\n", description );\n\n\n    // \u91cd\u65b0\u5206\u914d\u5185\u5b58\u5927\u5c0f\n   description = (char *) realloc( description, 100 * sizeof(char) );\n   if( description == NULL )\n   {\n      fprintf(stderr, "Error - unable to allocate required memory\\n");\n   }\n   else\n   {\n      strcat( description, "She is in class 10th");\n   }\n   \n   printf("Name = %s\\n", name );\n   printf("Description: %s\\n", description );\n \n   /* \u4f7f\u7528 free() \u51fd\u6570\u91ca\u653e\u5185\u5b58 */\n   free(description);\n}\n\n\n')),(0,i.kt)("h2",{id:"\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570"},"\u4f7f\u7528\u547d\u4ee4\u884c\u53c2\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n// \u547d\u4ee4\u884c\u53c2\u6570\n\n#include <stdio.h>\n//argc \u662f\u6307\u4f20\u5165\u53c2\u6570\u7684\u4e2a\u6570 (\u53c2\u6570\u4e2a\u6570 \u5305\u62ec\u547d\u4ee4\u6267\u884c\u672c\u8eab, \u5982 ./main.out)\uff0cargv[] \u662f\u4e00\u4e2a\u6307\u9488\u6570\u7ec4\uff0c\u6307\u5411\u4f20\u9012\u7ed9\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u53c2\u6570\nint main( int argc, char *argv[] )  \n{\n   if( argc == 2 )\n   {\n      printf("The argument supplied is %s\\n", argv[1]);\n   }\n   else if( argc > 2 )\n   {\n      printf("Too many arguments supplied.\\n");\n   }\n   else\n   {\n      printf("One argument expected.\\n");\n   }\n}\n\n')),(0,i.kt)("h2",{id:"\u5de5\u7a0b\u7ed3\u6784"},"\u5de5\u7a0b\u7ed3\u6784"),(0,i.kt)("p",null,"\u5982\u4f55\u5f15\u5165\u5176\u4ed6 c \u4ee3\u7801\u4e2d\u7684\u65b9\u6cd5?"),(0,i.kt)("p",null,"\u9700\u8981\u4e00\u4e2a\u4e2d\u95f4\u6865\u6881 ",(0,i.kt)("inlineCode",{parentName:"p"},"xxx.h"),", \u5728\u5176\u4e2d\u58f0\u660e\u65b9\u6cd5, add.c \u4e2d\u5177\u4f53\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5(\u9700\u8981\u5f15\u5165 xxx.h), , main.c \u4e2d\u5f15\u5165 xxx.h \u540e, \u5373\u53ef\u4f7f\u7528 add.c \u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u4e86 (",(0,i.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/ifantastic/p/3914756.html"},"ref"),")"),(0,i.kt)("h1",{id:"cpp-\u8bed\u6cd5"},"cpp \u8bed\u6cd5"),(0,i.kt)("p",null,'\u6587\u4ef6\u62d3\u5c55\u540d ".cpp .cc .C .cxx"'),(0,i.kt)("p",null,"\u591a\u4e2a\u6807\u51c6:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"c++98 \u4f20\u7edf c++")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"c++11\uff0cc++14/17\uff0c c++20 \u73b0\u4ee3 c++"))),(0,i.kt)("p",null,"C++ \u662f C \u7684\u4e00\u4e2a\u8d85\u96c6\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u4efb\u4f55\u5408\u6cd5\u7684 C \u7a0b\u5e8f\u90fd\u662f\u5408\u6cd5\u7684 C++ \u7a0b\u5e8f\u3002"),(0,i.kt)("p",null,"C++ \u901a\u5e38\u7528\u4e8e\u7f16\u5199\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u548c\u5176\u4ed6\u8981\u6c42\u5b9e\u65f6\u6027\u7684\u76f4\u63a5\u64cd\u4f5c\u786c\u4ef6\u7684\u8f6f\u4ef6\u3002"),(0,i.kt)("p",null,"\u6807\u51c6\u7684 C++ \u7531\u4e09\u4e2a\u91cd\u8981\u90e8\u5206\u7ec4\u6210\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u6838\u5fc3\u8bed\u8a00\uff0c\u63d0\u4f9b\u4e86\u6240\u6709\u6784\u4ef6\u5757\uff0c\u5305\u62ec\u53d8\u91cf\u3001\u6570\u636e\u7c7b\u578b\u548c\u5e38\u91cf\uff0c\u7b49\u7b49\u3002"),(0,i.kt)("li",{parentName:"ul"},"C++ \u6807\u51c6\u5e93\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u51fd\u6570\uff0c\u7528\u4e8e\u64cd\u4f5c\u6587\u4ef6\u3001\u5b57\u7b26\u4e32\u7b49\u3002"),(0,i.kt)("li",{parentName:"ul"},"\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\uff0c\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u64cd\u4f5c\u6570\u636e\u7ed3\u6784\u7b49")),(0,i.kt)("h2",{id:"\u6570\u636e\u7c7b\u578b-\u6570\u5b66\u8ba1\u7b97-cpp"},"\u6570\u636e\u7c7b\u578b-\u6570\u5b66\u8ba1\u7b97-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <stdio.h> //\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\uff0c\u4f46C++\u5efa\u8bae\u4f7f\u7528 #include <cstdio>\nusing namespace std;\nint main()\n{\n    cout << "Hello, world!" << endl; // \u53ef\u4ee5\u7528 "\\n" \u4ee3\u66ff\u4ee5\u4e0a\u4ee3\u7801\u91cc\u7684 endl\n    return 0;\n}\n\n/**\n\u6570\u636e\u7c7b\u578b\n \n\u53d8\u91cf\n\nbool:         \u6240\u5360\u5b57\u8282\u6570\uff1a1    \u6700\u5927\u503c\uff1a1        \u6700\u5c0f\u503c\uff1a0\nchar:         \u6240\u5360\u5b57\u8282\u6570\uff1a1    \u6700\u5927\u503c\uff1a        \u6700\u5c0f\u503c\uff1a?\nsigned char:     \u6240\u5360\u5b57\u8282\u6570\uff1a1    \u6700\u5927\u503c\uff1a        \u6700\u5c0f\u503c\uff1a?\nunsigned char:     \u6240\u5360\u5b57\u8282\u6570\uff1a1    \u6700\u5927\u503c\uff1a?        \u6700\u5c0f\u503c\uff1a\nshort:         \u6240\u5360\u5b57\u8282\u6570\uff1a2    \u6700\u5927\u503c\uff1a32767        \u6700\u5c0f\u503c\uff1a-32768\nint:         \u6240\u5360\u5b57\u8282\u6570\uff1a4    \u6700\u5927\u503c\uff1a2147483647    \u6700\u5c0f\u503c\uff1a-2147483648\nunsigned:     \u6240\u5360\u5b57\u8282\u6570\uff1a4    \u6700\u5927\u503c\uff1a4294967295    \u6700\u5c0f\u503c\uff1a0\nlong:         \u6240\u5360\u5b57\u8282\u6570\uff1a8    \u6700\u5927\u503c\uff1a9223372036854775807    \u6700\u5c0f\u503c\uff1a-9223372036854775808\nunsigned long:     \u6240\u5360\u5b57\u8282\u6570\uff1a8    \u6700\u5927\u503c\uff1a18446744073709551615    \u6700\u5c0f\u503c\uff1a0\ndouble:     \u6240\u5360\u5b57\u8282\u6570\uff1a8    \u6700\u5927\u503c\uff1a1.79769e+308    \u6700\u5c0f\u503c\uff1a2.22507e-308\nlong double:     \u6240\u5360\u5b57\u8282\u6570\uff1a16    \u6700\u5927\u503c\uff1a1.18973e+4932    \u6700\u5c0f\u503c\uff1a3.3621e-4932\nfloat:         \u6240\u5360\u5b57\u8282\u6570\uff1a4    \u6700\u5927\u503c\uff1a3.40282e+38    \u6700\u5c0f\u503c\uff1a1.17549e-38\nsize_t:     \u6240\u5360\u5b57\u8282\u6570\uff1a8    \u6700\u5927\u503c\uff1a18446744073709551615    \u6700\u5c0f\u503c\uff1a0\nwchar_t:     \u6240\u5360\u5b57\u8282\u6570\uff1a4    \u6700\u5927\u503c\uff1a2147483647        \u6700\u5c0f\u503c\uff1a-2147483648\nstring:     \u6240\u5360\u5b57\u8282\u6570\uff1a24\n\n*/\nextern int d = 3, f = 5;    // d \u548c f \u7684\u58f0\u660e \nint d = 3, f = 5;           // \u5b9a\u4e49\u5e76\u521d\u59cb\u5316 d \u548c f\nbyte z = 22;                // \u5b9a\u4e49\u5e76\u521d\u59cb\u5316 z\nchar x = \'x\';               // \u53d8\u91cf x \u7684\u503c\u4e3a \'x\'\n\n/**\n\u6570\u5b57\nc++ \u5bf9\u6570\u5b66\u8fd0\u7b97\u52a0\u5f3a\u4e86\n\u6253\u5370\u6570\u5b57\u66f4\u52a0\u65b9\u4fbf\n\u6570\u5b66\u5934\u6587\u4ef6 <cmath> \u63d0\u4f9b\u4e86\u591a\u79cd\u6570\u5b66\u8fd0\u7b97\u65b9\u6cd5\n*/\n// \u6570\u5b57\u5b9a\u4e49\nshort  s;\nint    i;\nlong   l;\nfloat  f;\ndouble d;\n// \u6570\u5b57\u8d4b\u503c\ns = 10;      \ni = 1000;    \nl = 1000000; \nf = 230.47;  \nd = 30949.374;\n// \u6570\u5b57\u8f93\u51fa\ncout << "short  s :" << s << endl;\ncout << "int    i :" << i << endl;\ncout << "long   l :" << l << endl;\ncout << "float  f :" << f << endl;\ncout << "double d :" << d << endl;\n\ndouble cos(double); //\u8be5\u51fd\u6570\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u4f59\u5f26\u3002\ndouble sin(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u6b63\u5f26\u3002\ndouble tan(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u5f27\u5ea6\u89d2\uff08double \u578b\uff09\u7684\u6b63\u5207\u3002\ndouble log(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u53c2\u6570\u7684\u81ea\u7136\u5bf9\u6570\u3002\ndouble pow(double, double);//\u5047\u8bbe\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a x\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a y\uff0c\u5219\u8be5\u51fd\u6570\u8fd4\u56de x \u7684 y \u6b21\u65b9\u3002\ndouble hypot(double, double);//\u8be5\u51fd\u6570\u8fd4\u56de\u4e24\u4e2a\u53c2\u6570\u7684\u5e73\u65b9\u603b\u548c\u7684\u5e73\u65b9\u6839\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53c2\u6570\u4e3a\u4e00\u4e2a\u76f4\u89d2\u4e09\u89d2\u5f62\u7684\u4e24\u4e2a\u76f4\u89d2\u8fb9\uff0c\u51fd\u6570\u4f1a\u8fd4\u56de\u659c\u8fb9\u7684\u957f\u5ea6\u3002\ndouble sqrt(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u53c2\u6570\u7684\u5e73\u65b9\u6839\u3002\nint abs(int);//\u8be5\u51fd\u6570\u8fd4\u56de\u6574\u6570\u7684\u7edd\u5bf9\u503c\u3002\ndouble fabs(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u4efb\u610f\u4e00\u4e2a\u6d6e\u70b9\u6570\u7684\u7edd\u5bf9\u503c\u3002\ndouble floor(double);//\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5c0f\u4e8e\u6216\u7b49\u4e8e\u4f20\u5165\u53c2\u6570\u7684\u6700\u5927\u6574\u6570\n\n// \u968f\u673a\u6570\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\nusing namespace std;\nint main ()\n{\n   int i,j;\n   // \u751f\u6210\u968f\u673a\u6570\u4e4b\u524d\u5fc5\u987b\u5148\u8c03\u7528 srand() \u51fd\u6570\u3002\n   // \u8bbe\u7f6e\u79cd\u5b50\n   //  time() \u51fd\u6570\u6765\u83b7\u53d6\u7cfb\u7edf\u65f6\u95f4\u7684\u79d2\u6570\n   srand( (unsigned)time( NULL ) );\n   /* \u751f\u6210 10 \u4e2a\u968f\u673a\u6570 */\n   for( i = 0; i < 10; i++ )\n   {\n      // \u751f\u6210\u5b9e\u9645\u7684\u968f\u673a\u6570\n      // \u5982\u679c\u4e0d\u8bbe\u7f6e\u79cd\u5b50, \u5c06\u4f1a\u53ea\u8fd4\u56de\u4e00\u4e2a\u4f2a\u968f\u673a\u6570\n      j= rand();\n      cout <<"\u968f\u673a\u6570\uff1a " << j << endl;\n   }\n   return 0;\n}\n\n// \u5e38\u91cf\n\n// \u5b57\u7b26\u5e38\u91cf\n//\u5b57\u7b26\u5e38\u91cf\u662f\u62ec\u5728\u5355\u5f15\u53f7\u4e2d\u3002\u5982\u679c\u5e38\u91cf\u4ee5 L\uff08\u4ec5\u5f53\u5927\u5199\u65f6\uff09\u5f00\u5934\uff0c\u5219\u8868\u793a\u5b83\u662f\u4e00\u4e2a\u5bbd\u5b57\u7b26\u5e38\u91cf\uff08\u4f8b\u5982 L\'x\'\uff09\uff0c\u6b64\u65f6\u5b83\u5fc5\u987b\u5b58\u50a8\u5728 wchar_t \u7c7b\u578b\u7684\u53d8\u91cf\u4e2d\u3002\u5426\u5219\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7a84\u5b57\u7b26\u5e38\u91cf\uff08\u4f8b\u5982 \'x\'\uff09\uff0c\u6b64\u65f6\u5b83\u53ef\u4ee5\u5b58\u50a8\u5728 char \u7c7b\u578b\u7684\u7b80\u5355\u53d8\u91cf\u4e2d\n\n/**\n\n\u5b57\u7b26\u4e32 String \u7c7b\n\n\nC++ \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 string \u7c7b\u7c7b\u578b\n*/\n#include <iostream>\n#include <string>\n \nusing namespace std;\n \nint main ()\n{\n   string str1 = "Hello";\n   string str2 = "World";\n   string str3;\n   int  len ;\n \n   // \u590d\u5236 str1 \u5230 str3\n   str3 = str1;\n   cout << "str3 : " << str3 << endl;\n \n   // \u8fde\u63a5 str1 \u548c str2\n   str3 = str1 + str2;\n   cout << "str1 + str2 : " << str3 << endl;\n \n   // \u8fde\u63a5\u540e\uff0cstr3 \u7684\u603b\u957f\u5ea6\n   len = str3.size();\n   cout << "str3.size() :  " << len << endl;\n \n   return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u5b58\u50a8\u7c7b\u578b-cpp"},"\u5b58\u50a8\u7c7b\u578b-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\n/**\n\n\u5b58\u50a8\u7c7b\u578b:\n\u4ece C++ 17 \u5f00\u59cb\uff0cauto \u5173\u952e\u5b57\u4e0d\u518d\u662f C++ \u5b58\u50a8\u7c7b\u8bf4\u660e\u7b26\uff0c\u4e14 register \u5173\u952e\u5b57\u88ab\u5f03\u7528\u3002\n\nauto: \u7528\u4e8e\u4e24\u79cd\u60c5\u51b5\uff1a\u58f0\u660e\u53d8\u91cf\u65f6\u6839\u636e\u521d\u59cb\u5316\u8868\u8fbe\u5f0f\u81ea\u52a8\u63a8\u65ad\u8be5\u53d8\u91cf\u7684\u7c7b\u578b\u3001\u58f0\u660e\u51fd\u6570\u65f6\u51fd\u6570\u8fd4\u56de\u503c\u7684\u5360\u4f4d\u7b26\n\nregister: \u540c c\n\nstatic: \u540c c \n\u6b64\u5916, \u5728 C++ \u4e2d\uff0c\u5f53 static \u7528\u5728\u7c7b\u6570\u636e\u6210\u5458\u4e0a\u65f6\uff0c\u4f1a\u5bfc\u81f4\u4ec5\u6709\u4e00\u4e2a\u8be5\u6210\u5458\u7684\u526f\u672c\u88ab\u7c7b\u7684\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u3002\n\nextern: \u540c c\n\nmutable: \u4ec5\u9002\u7528\u4e8e\u7c7b\u7684\u5bf9\u8c61, \u5141\u8bb8\u5bf9\u8c61\u7684\u6210\u5458\u66ff\u4ee3\u5e38\u91cf\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cmutable \u6210\u5458\u53ef\u4ee5\u901a\u8fc7 const \u6210\u5458\u51fd\u6570\u4fee\u6539\u3002\n\nthread_local (C++11): \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u8be5\u53d8\u91cf\u7684\u526f\u672c\n\n*/\n\n")),(0,i.kt)("h2",{id:"\u6d41\u7a0b\u63a7\u5236"},"\u6d41\u7a0b\u63a7\u5236"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\u5faa\u73af \u6d41\u7a0b\u63a7\u5236\ngoto \u8bed\u53e5\u5141\u8bb8\u628a\u63a7\u5236\u65e0\u6761\u4ef6\u8f6c\u79fb\u5230\u540c\u4e00\u51fd\u6570\u5185\u7684\u88ab\u6807\u8bb0\u7684\u8bed\u53e5\u3002\n\u4e0d\u5efa\u8bae\u4f7f\u7528\n*/\n\n// \u5c40\u90e8\u53d8\u91cf\u58f0\u660e\nint a = 10;\n\n// \u5b9a\u4e49\u4e00\u4e2a label: LOOP\nLOOP:do\n{\n    if( a == 15)\n    {\n        // \u8df3\u8fc7\u8fed\u4ee3\n        a = a + 1;\n        goto LOOP;\n    }\n    cout << "a \u7684\u503c\uff1a" << a << endl;\n    a = a + 1;\n}while( a < 20 );\n\n// goto \u8bed\u53e5\u4e00\u4e2a\u5f88\u597d\u7684\u4f5c\u7528\u662f\u9000\u51fa\u6df1\u5d4c\u5957\u4f8b\u7a0b\nfor(...) {\n   for(...) {\n      while(...) {\n         if(...) goto stop;\n         .\n         .\n         .\n      }\n   }\n}\nstop:\ncout << "Error in program.\\n";\n\n\n')),(0,i.kt)("h2",{id:"\u51fd\u6570-cpp"},"\u51fd\u6570-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n\u51fd\u6570\n\n\n\u4f20\u503c\u8c03\u7528    \u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5b9e\u9645\u503c\u8d4b\u503c\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4fee\u6539\u51fd\u6570\u5185\u7684\u5f62\u5f0f\u53c2\u6570\u5bf9\u5b9e\u9645\u53c2\u6570\u6ca1\u6709\u5f71\u54cd\u3002\n\u6307\u9488\u8c03\u7528    \u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5730\u5740\u8d4b\u503c\u7ed9\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u51fd\u6570\u5185\uff0c\u8be5\u5730\u5740\u7528\u4e8e\u8bbf\u95ee\u8c03\u7528\u4e2d\u8981\u7528\u5230\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4fee\u6539\u5f62\u5f0f\u53c2\u6570\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002\n\u5f15\u7528\u8c03\u7528    \u8be5\u65b9\u6cd5\u628a\u53c2\u6570\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u5f62\u5f0f\u53c2\u6570\u3002\u5728\u51fd\u6570\u5185\uff0c\u8be5\u5f15\u7528\u7528\u4e8e\u8bbf\u95ee\u8c03\u7528\u4e2d\u8981\u7528\u5230\u7684\u5b9e\u9645\u53c2\u6570\u3002\u8fd9\u610f\u5473\u7740\uff0c\u4fee\u6539\u5f62\u5f0f\u53c2\u6570\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002\n\nC++ \u4f7f\u7528\u4f20\u503c\u8c03\u7528\u6765\u4f20\u9012\u53c2\u6570\n*/\n// \u53c2\u6570\u9ed8\u8ba4\u503c\nint sum(int a, int b=20)\n{\n  int result;\n  result = a + b;\n  return (result);\n}\n\n//Lambda \u51fd\u6570\u4e0e\u8868\u8fbe\u5f0f\n// \u8bed\u6cd5:\n[capture](parameters)->return-type{body} // \u6709\u8fd4\u56de\u503c\u7684 lambda\n[capture](parameters){body} // \u6ca1\u6709\u8fd4\u56de\u503c\u7684 lambda\n\n// "[]" \u4e2d\u62ec\u53f7 \u7528\u6765\u6307\u5b9a\u5916\u90e8\u53d8\u91cf, \u4ee5\u4fbf\u5728\u8868\u8fbe\u5f0f\u5185\u90e8\u8bbf\u95ee\n\n// []      // \u6c92\u6709\u5b9a\u4e49\u4efb\u4f55\u53d8\u91cf\u3002\u4f7f\u7528\u672a\u5b9a\u4e49\u53d8\u91cf\u4f1a\u5f15\u53d1\u9519\u8bef\u3002\n// [x, &y] // x\u4ee5\u4f20\u503c\u65b9\u5f0f\u4f20\u5165\uff08\u9ed8\u8ba4\uff09\uff0cy\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u5165\u3002\n// [&]     // \u4efb\u4f55\u88ab\u4f7f\u7528\u5230\u7684\u5916\u90e8\u53d8\u91cf\u90fd\u9690\u5f0f\u5730\u4ee5\u5f15\u7528\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\n// [=]     // \u4efb\u4f55\u88ab\u4f7f\u7528\u5230\u7684\u5916\u90e8\u53d8\u91cf\u90fd\u9690\u5f0f\u5730\u4ee5\u4f20\u503c\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\n// [&, x]  // x\u663e\u5f0f\u5730\u4ee5\u4f20\u503c\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\u5176\u4f59\u53d8\u91cf\u4ee5\u5f15\u7528\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\n// [=, &z] // z\u663e\u5f0f\u5730\u4ee5\u5f15\u7528\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\u5176\u4f59\u53d8\u91cf\u4ee5\u4f20\u503c\u65b9\u5f0f\u52a0\u4ee5\u5f15\u7528\u3002\n\n//\u5bf9\u4e8e[=]\u6216[&]\u7684\u5f62\u5f0f\uff0clambda \u8868\u8fbe\u5f0f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 this \u6307\u9488\u3002\u4f46\u662f\uff0c\u5bf9\u4e8e[]\u7684\u5f62\u5f0f\uff0c\u5982\u679c\u8981\u4f7f\u7528 this \u6307\u9488\uff0c\u5fc5\u987b\u663e\u5f0f\u4f20\u5165\uff1a\n[this]() { this->someFunc(); }();\n\n\n[](int x, int y){ return x < y ; }\n[]{ ++global_x; } \n[](int x, int y) -> int { int z = x + y; return z + x; }\n\n\n')),(0,i.kt)("h2",{id:"\u6307\u9488-cpp"},"\u6307\u9488-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u6307\u9488\n        \n\u58f0\u660e\u6307\u9488, \u6700\u597d\u4e3a\u6307\u9488\u53d8\u91cf\u8d4b\u4e00\u4e2a NULL \u503c (NULL \u6307\u9488\u662f\u4e00\u4e2a\u5b9a\u4e49\u5728\u6807\u51c6\u5e93\u4e2d\u7684\u503c\u4e3a\u96f6\u7684\u5e38\u91cf)\n\n\n*/\n#include <iostream>\n \nusing namespace std;\n \nint main ()\n{\n   int  var = 20;   // \u5b9e\u9645\u53d8\u91cf\u7684\u58f0\u660e\n   int  *ip;        // \u6307\u9488\u53d8\u91cf\u7684\u58f0\u660e\n \n   ip = &var;       // \u5728\u6307\u9488\u53d8\u91cf\u4e2d\u5b58\u50a8 var \u7684\u5730\u5740\n \n   cout << "Value of var variable: ";\n   cout << var << endl;\n \n   // \u8f93\u51fa\u5728\u6307\u9488\u53d8\u91cf\u4e2d\u5b58\u50a8\u7684\u5730\u5740\n   cout << "Address stored in ip variable: ";\n   cout << ip << endl;\n \n   // \u8bbf\u95ee\u6307\u9488\u4e2d\u5730\u5740\u7684\u503c\n   cout << "Value of *ip variable: ";\n   cout << *ip << endl;\n \n   return 0;\n}\n\n//\u68c0\u67e5\u7a7a\u6307\u9488:\nif(ptr)     /* \u5982\u679c ptr \u975e\u7a7a\uff0c\u5219\u5b8c\u6210 */\nif(!ptr)    /* \u5982\u679c ptr \u4e3a\u7a7a\uff0c\u5219\u5b8c\u6210 */\n\n\n//c++ \u5141\u8bb8 \u6307\u5411\u6307\u9488\u7684\u6307\u9488\u3002\nint  var;\nint  *ptr;\nint  **pptr;\n\nvar = 3000;\n\n// \u83b7\u53d6 var \u7684\u5730\u5740\nptr = &var;\n\n// \u4f7f\u7528\u8fd0\u7b97\u7b26 & \u83b7\u53d6 ptr \u7684\u5730\u5740\npptr = &ptr;\n\n// \u4f7f\u7528 pptr \u83b7\u53d6\u503c\ncout << "var \u503c\u4e3a :" << var << endl;\ncout << "*ptr \u503c\u4e3a:" << *ptr << endl;\ncout << "**pptr \u503c\u4e3a:" << **pptr << endl;\n\n')),(0,i.kt)("h2",{id:"\u5f15\u7528"},"\u5f15\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u5f15\u7528 reference\n\n\u7c7b\u4f3c\u6307\u9488\uff0c\u5b83\u4eec\u4e4b\u95f4\u6709\u4e09\u4e2a\u4e3b\u8981\u7684\u4e0d\u540c\uff1a\n- \u4e0d\u5b58\u5728\u7a7a\u5f15\u7528\u3002\u5f15\u7528\u5fc5\u987b\u8fde\u63a5\u5230\u4e00\u5757\u5408\u6cd5\u7684\u5185\u5b58\u3002\n- \u4e00\u65e6\u5f15\u7528\u88ab\u521d\u59cb\u5316\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c31\u4e0d\u80fd\u88ab\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u6307\u9488\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u5019\u6307\u5411\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\n- \u5f15\u7528\u5fc5\u987b\u5728\u521b\u5efa\u65f6\u88ab\u521d\u59cb\u5316\u3002\u6307\u9488\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u95f4\u88ab\u521d\u59cb\u5316\n\n\u6240\u4ee5, \u51c6\u786e\u7684\u7c7b\u6bd4\u662f: \u5f15\u7528\u76f8\u5f53\u4e8e\u7b2c\u4e8c\u4e2a\u53d8\u91cf\u540d\n\n\u5f15\u7528\u901a\u5e38\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u5217\u8868\u548c\u51fd\u6570\u8fd4\u56de\u503c, \u6bd4\u4f7f\u7528\u6307\u9488\u66f4\u65b9\u4fbf\n*/\nint i = 17;\nint&  r = i; // r \u662f\u4e00\u4e2a\u521d\u59cb\u5316\u4e3a i \u7684\u6574\u578b\u5f15\u7528\ndouble& s = d;\n\n\n// \u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\n// \u51fd\u6570\u58f0\u660e\nvoid swap(int& x, int& y);\n// \u51fd\u6570\u5b9a\u4e49\nvoid swap(int& x, int& y)\n{\n   int temp;\n   temp = x; /* \u4fdd\u5b58\u5730\u5740 x \u7684\u503c */\n   x = y;    /* \u628a y \u8d4b\u503c\u7ed9 x */\n   y = temp; /* \u628a x \u8d4b\u503c\u7ed9 y  */\n  \n   return;\n}\n\n// \u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\n//\u5f53\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5f15\u7528\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8fd4\u56de\u503c\u7684\u9690\u5f0f\u6307\u9488\u3002\u8fd9\u6837\uff0c\u51fd\u6570\u5c31\u53ef\u4ee5\u653e\u5728\u8d4b\u503c\u8bed\u53e5\u7684\u5de6\u8fb9\n//\u5f53\u8fd4\u56de\u4e00\u4e2a\u5f15\u7528\u65f6\uff0c\u8981\u6ce8\u610f\u88ab\u5f15\u7528\u7684\u5bf9\u8c61\u4e0d\u80fd\u8d85\u51fa\u4f5c\u7528\u57df\u3002\u6240\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u662f\u4e0d\u5408\u6cd5\u7684\uff0c\u4f46\u662f\uff0c\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u9759\u6001\u53d8\u91cf\u7684\u5f15\u7528\u3002\n\ndouble vals[] = {10.1, 12.6, 33.1, 24.1, 50.0};\ndouble& setValues( int i )\n{\n  return vals[i];   // \u8fd4\u56de\u7b2c i \u4e2a\u5143\u7d20\u7684\u5f15\u7528\n}\nint main ()\n{\n   cout << "\u6539\u53d8\u524d\u7684\u503c" << endl;\n   for ( int i = 0; i < 5; i++ )\n   {\n       cout << "vals[" << i << "] = ";\n       cout << vals[i] << endl;\n   }\n   setValues(1) = 20.23; // \u6539\u53d8\u7b2c 2 \u4e2a\u5143\u7d20\n   setValues(3) = 70.8;  // \u6539\u53d8\u7b2c 4 \u4e2a\u5143\u7d20\n   cout << "\u6539\u53d8\u540e\u7684\u503c" << endl;\n   for ( int i = 0; i < 5; i++ )\n   {\n       cout << "vals[" << i << "] = ";\n       cout << vals[i] << endl;\n   }\n   return 0;\n}\n\n\n')),(0,i.kt)("h2",{id:"\u52a8\u6001\u5206\u914d\u5185\u5b58"},"\u52a8\u6001\u5206\u914d\u5185\u5b58"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n    new , \u7c7b\u4f3c malloc()\n\nmalloc() \u51fd\u6570\u5728 C \u8bed\u8a00\u4e2d\u5c31\u51fa\u73b0\u4e86\uff0c\u5728 C++ \u4e2d\u4ecd\u7136\u5b58\u5728\uff0c\u4f46\u5efa\u8bae\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 malloc() \u51fd\u6570\u3002\nnew \u4e0e malloc() \u51fd\u6570\u76f8\u6bd4\uff0c\u5176\u4e3b\u8981\u7684\u4f18\u70b9\u662f\uff0cnew \u4e0d\u53ea\u662f\u5206\u914d\u4e86\u5185\u5b58\uff0c\u5b83\u8fd8\u521b\u5efa\u4e86\u5bf9\u8c61\n*/\n\ndouble* pvalue  = NULL;\n// new \u7528\u4e8e\u5728\u5806\u4e2d\u52a8\u6001\u5206\u914d\u5185\u5b58\n// \u5982\u679c\u5806\u533a\u5df2\u88ab\u7528\u5b8c\uff0c\u53ef\u80fd\u65e0\u6cd5\u6210\u529f\u5206\u914d\u5185\u5b58, \u9700\u8981\u68c0\u67e5\u5206\u914d\u662f\u5426\u6210\u529f\nif( !(pvalue  = new double ))\n{\n   cout << "Error: out of memory." <<endl;\n   exit(1);\n \n}\n*pvalue = 29494.99;     // \u5728\u5206\u914d\u7684\u5730\u5740\u5b58\u50a8\u503c\ncout << "Value of pvalue : " << *pvalue << endl;\ndelete pvalue;        // \u91ca\u653e pvalue \u6240\u6307\u5411\u7684\u5185\u5b58\n\n// \u6570\u7ec4\u52a8\u6001\u5185\u5b58\u5206\u914d\n// \u591a\u7ef4\u6570\u7ec4 https://www.runoob.com/cplusplus/cpp-dynamic-memory.html\nchar* pvalue  = NULL;   // \u521d\u59cb\u5316\u4e3a null \u7684\u6307\u9488\npvalue  = new char[20]; // \u4e3a\u53d8\u91cf\u8bf7\u6c42\u5185\u5b58\ndelete [] pvalue;        // \u5220\u9664 pvalue \u6240\u6307\u5411\u7684\u6570\u7ec4\n\n\n')),(0,i.kt)("h2",{id:"\u547d\u540d\u7a7a\u95f4"},"\u547d\u540d\u7a7a\u95f4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'//\u4f5c\u4e3a\u9644\u52a0\u4fe1\u606f\u6765\u533a\u5206\u4e0d\u540c\u5e93\u4e2d\u76f8\u540c\u540d\u79f0\u7684\u51fd\u6570\u3001\u7c7b\u3001\u53d8\u91cf\n#include <iostream>\n// using \u6307\u4ee4\n// \u7528\u4e8e\u6307\u5b9a\u9ed8\u8ba4\u4f7f\u7528\u7684\u547d\u540d\u7a7a\u95f4, \u8fd9\u6837\u5728\u4f7f\u7528\u547d\u540d\u7a7a\u95f4\u65f6\u5c31\u53ef\u4ee5\u4e0d\u7528\u5728\u524d\u9762\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u7684\u540d\u79f0\u3002\u8fd9\u4e2a\u6307\u4ee4\u4f1a\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u540e\u7eed\u7684\u4ee3\u7801\u5c06\u4f7f\u7528\u6307\u5b9a\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u79f0\u3002\nusing namespace std; \n// using \u6307\u4ee4\u4e5f\u53ef\u4ee5\u7528\u6765\u6307\u5b9a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u7279\u5b9a\u9879\u76ee\n// \u5982: using std::cout;, \u968f\u540e\u7684\u4ee3\u7801\u4e2d\uff0c\u5728\u4f7f\u7528 cout \u65f6\u5c31\u53ef\u4ee5\u4e0d\u7528\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\uff0c\u4f46\u662f std \u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u5176\u4ed6\u9879\u76ee\u4ecd\u7136\u9700\u8981\u52a0\u4e0a\u547d\u540d\u7a7a\u95f4\u540d\u79f0\u4f5c\u4e3a\u524d\u7f00\n\n// \u7b2c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\n// \u521b\u5efa\u65b0\u7684\u547d\u540d\u7a7a\u95f4\n// or\n// \u4e3a\u5df2\u6709\u7684\u547d\u540d\u7a7a\u95f4\u589e\u52a0\u65b0\u7684\u5143\u7d20\nnamespace first_space{\n   void func(){\n      cout << "Inside first_space" << endl;\n   }\n}\n// \u7b2c\u4e8c\u4e2a\u547d\u540d\u7a7a\u95f4\nnamespace second_space{\n   void func(){\n      cout << "Inside second_space" << endl;\n   }\n}\nint main ()\n{\n \n   // \u8c03\u7528\u7b2c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u51fd\u6570\n   first_space::func();\n   \n   // \u8c03\u7528\u7b2c\u4e8c\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u51fd\u6570\n   second_space::func(); \n \n   return 0;\n}\n\n\n\n// \u547d\u540d\u7a7a\u95f4\u5d4c\u5957\n#include <iostream>\nusing namespace std;\n \n// \u7b2c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\nnamespace first_space{\n   void func(){\n      cout << "Inside first_space" << endl;\n   }\n   // \u7b2c\u4e8c\u4e2a\u547d\u540d\u7a7a\u95f4\n   namespace second_space{\n      void func(){\n         cout << "Inside second_space" << endl;\n      }\n   }\n}\nusing namespace first_space::second_space;\nint main ()\n{\n \n   // \u8c03\u7528\u7b2c\u4e8c\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u51fd\u6570\n   func();\n   \n   return 0;\n}\n')),(0,i.kt)("h2",{id:"\u6a21\u677f"},"\u6a21\u677f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u6a21\u677f\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u57fa\u7840\n\n// \u51fd\u6570\u6a21\u677f\ntemplate <typename type> \nret-type func-name(parameter list) {.....}\n// \u7c7b\u6a21\u677f\ntemplate <class type> \nclass class-name {.....} \n\n// \u51fd\u6570\u6a21\u677f demo\n#include <iostream>\n#include <string>\nusing namespace std;\ntemplate <typename T>\ninline T const& Max (T const& a, T const& b) \n{ \n    return a < b ? b:a; \n} \nint main ()\n{\n    int i = 39;\n    int j = 20;\n    cout << "Max(i, j): " << Max(i, j) << endl; \n    double f1 = 13.5; \n    double f2 = 20.7; \n    cout << "Max(f1, f2): " << Max(f1, f2) << endl; \n    string s1 = "Hello"; \n    string s2 = "World"; \n    cout << "Max(s1, s2): " << Max(s1, s2) << endl; \n   return 0;\n}\n\n// \u7c7b\u6a21\u677f demo\n#include <iostream>\n#include <vector>\n#include <cstdlib>\n#include <string>\n#include <stdexcept>\nusing namespace std;\ntemplate <class T>\nclass Stack { \n  private: \n    vector<T> elems;     // \u5143\u7d20 \n \n  public: \n    void push(T const&);  // \u5165\u6808\n    void pop();               // \u51fa\u6808\n    T top() const;            // \u8fd4\u56de\u6808\u9876\u5143\u7d20\n    bool empty() const{       // \u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de\u771f\u3002\n        return elems.empty(); \n    } \n}; \n \ntemplate <class T>\nvoid Stack<T>::push (T const& elem) \n{ \n    // \u8ffd\u52a0\u4f20\u5165\u5143\u7d20\u7684\u526f\u672c\n    elems.push_back(elem);    \n} \n \ntemplate <class T>\nvoid Stack<T>::pop () \n{ \n    if (elems.empty()) { \n        throw out_of_range("Stack<>::pop(): empty stack"); \n    }\n    // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n    elems.pop_back();         \n} \n \ntemplate <class T>\nT Stack<T>::top () const \n{ \n    if (elems.empty()) { \n        throw out_of_range("Stack<>::top(): empty stack"); \n    }\n    // \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u526f\u672c \n    return elems.back();      \n} \n \nint main() \n{ \n    try { \n        Stack<int>         intStack;  // int \u7c7b\u578b\u7684\u6808 \n        Stack<string> stringStack;    // string \u7c7b\u578b\u7684\u6808 \n \n        // \u64cd\u4f5c int \u7c7b\u578b\u7684\u6808 \n        intStack.push(7); \n        cout << intStack.top() <<endl; \n \n        // \u64cd\u4f5c string \u7c7b\u578b\u7684\u6808 \n        stringStack.push("hello"); \n        cout << stringStack.top() << std::endl; \n        stringStack.pop(); \n        stringStack.pop(); \n    } \n    catch (exception const& ex) { \n        cerr << "Exception: " << ex.what() <<endl; \n        return -1;\n    } \n}\n\n')),(0,i.kt)("h2",{id:"\u6807\u51c6\u6a21\u677f\u5e93-stl"},"\u6807\u51c6\u6a21\u677f\u5e93 stl"),(0,i.kt)("p",null,"C++ STL\uff08\u6807\u51c6\u6a21\u677f\u5e93\uff09\u662f\u4e00\u5957\u529f\u80fd\u5f3a\u5927\u7684 C++ \u6a21\u677f\u7c7b\uff0c\u63d0\u4f9b\u4e86\u901a\u7528\u7684\u6a21\u677f\u7c7b\u548c\u51fd\u6570\uff0c\u8fd9\u4e9b\u6a21\u677f\u7c7b\u548c\u51fd\u6570\u53ef\u4ee5\u5b9e\u73b0\u591a\u79cd\u6d41\u884c\u548c\u5e38\u7528\u7684\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\uff0c\u5982\u5411\u91cf\u3001\u94fe\u8868\u3001\u961f\u5217\u3001\u6808\u3002"),(0,i.kt)("p",null,"\u5bb9\u5668\uff08Containers\uff09\t\u5bb9\u5668\u662f\u7528\u6765\u7ba1\u7406\u67d0\u4e00\u7c7b\u5bf9\u8c61\u7684\u96c6\u5408\u3002C++ \u63d0\u4f9b\u4e86\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5bb9\u5668\uff0c\u6bd4\u5982 deque\u3001list\u3001vector\u3001map \u7b49\u3002 (",(0,i.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/Cnxz/p/12313780.html"},"https://www.cnblogs.com/Cnxz/p/12313780.html"),")"),(0,i.kt)("p",null,"\u7b97\u6cd5\uff08Algorithms\uff09\t\u7b97\u6cd5\u4f5c\u7528\u4e8e\u5bb9\u5668\u3002\u5b83\u4eec\u63d0\u4f9b\u4e86\u6267\u884c\u5404\u79cd\u64cd\u4f5c\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\u5bf9\u5bb9\u5668\u5185\u5bb9\u6267\u884c\u521d\u59cb\u5316\u3001\u6392\u5e8f\u3001\u641c\u7d22\u548c\u8f6c\u6362\u7b49\u64cd\u4f5c\u3002"),(0,i.kt)("p",null,"\u8fed\u4ee3\u5668\uff08iterators\uff09\t\u8fed\u4ee3\u5668\u7528\u4e8e\u904d\u5386\u5bf9\u8c61\u96c6\u5408\u7684\u5143\u7d20\u3002\u8fd9\u4e9b\u96c6\u5408\u53ef\u80fd\u662f\u5bb9\u5668\uff0c\u4e5f\u53ef\u80fd\u662f\u5bb9\u5668\u7684\u5b50\u96c6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <vector>\nusing namespace std;\n \nint main()\n{\n   // \u521b\u5efa\u4e00\u4e2a\u5411\u91cf\u5b58\u50a8 int\n   vector<int> vec; \n   int i;\n \n   // \u663e\u793a vec \u7684\u539f\u59cb\u5927\u5c0f\n   cout << "vector size = " << vec.size() << endl;\n \n   // \u63a8\u5165 5 \u4e2a\u503c\u5230\u5411\u91cf\u4e2d\n   for(i = 0; i < 5; i++){\n       // \u5728\u5411\u91cf\u7684\u672b\u5c3e\u63d2\u5165\u503c\uff0c\u5982\u679c\u6709\u5fc5\u8981\u4f1a\u6269\u5c55\u5411\u91cf\u7684\u5927\u5c0f\n      vec.push_back(i);\n   }\n \n   // \u663e\u793a vec \u6269\u5c55\u540e\u7684\u5927\u5c0f\n   cout << "extended vector size = " << vec.size() << endl;\n \n   // \u8bbf\u95ee\u5411\u91cf\u4e2d\u7684 5 \u4e2a\u503c\n   for(i = 0; i < 5; i++){\n      cout << "value of vec [" << i << "] = " << vec[i] << endl;\n   }\n \n   // \u4f7f\u7528\u8fed\u4ee3\u5668 iterator \u8bbf\u95ee\u503c\n   // begin( )  \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5411\u91cf\u5f00\u5934\u7684\u8fed\u4ee3\u5668, end( ) \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5411\u91cf\u672b\u5c3e\u7684\u8fed\u4ee3\u5668\n   vector<int>::iterator v = vec.begin();\n   while( v != vec.end()) {\n      cout << "value of v = " << *v << endl;\n      v++;\n   }\n \n   return 0;\n}\n')),(0,i.kt)("h2",{id:"\u65e5\u671f\u65f6\u95f4"},"\u65e5\u671f\u65f6\u95f4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u65e5\u671f\u65f6\u95f4\n\n\u9700\u8981\u5728 C++ \u7a0b\u5e8f\u4e2d\u5f15\u7528 <ctime> \u5934\u6587\u4ef6\u3002\n\u6709\u56db\u4e2a\u4e0e\u65f6\u95f4\u76f8\u5173\u7684\u7c7b\u578b\uff1aclock_t\u3001time_t\u3001size_t \u548c tm\n*/\nstruct tm {\n  int tm_sec;   // \u79d2\uff0c\u6b63\u5e38\u8303\u56f4\u4ece 0 \u5230 59\uff0c\u4f46\u5141\u8bb8\u81f3 61\n  int tm_min;   // \u5206\uff0c\u8303\u56f4\u4ece 0 \u5230 59\n  int tm_hour;  // \u5c0f\u65f6\uff0c\u8303\u56f4\u4ece 0 \u5230 23\n  int tm_mday;  // \u4e00\u6708\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u8303\u56f4\u4ece 1 \u5230 31\n  int tm_mon;   // \u6708\uff0c\u8303\u56f4\u4ece 0 \u5230 11\n  int tm_year;  // \u81ea 1900 \u5e74\u8d77\u7684\u5e74\u6570\n  int tm_wday;  // \u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u8303\u56f4\u4ece 0 \u5230 6\uff0c\u4ece\u661f\u671f\u65e5\u7b97\u8d77\n  int tm_yday;  // \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u8303\u56f4\u4ece 0 \u5230 365\uff0c\u4ece 1 \u6708 1 \u65e5\u7b97\u8d77\n  int tm_isdst; // \u590f\u4ee4\u65f6\n}\n\n// \u5173\u4e8e\u65f6\u95f4\u65e5\u671f\u7684\u51fd\u6570\ntime_t time(time_t *time); //\u8be5\u51fd\u6570\u8fd4\u56de\u7cfb\u7edf\u7684\u5f53\u524d\u65e5\u5386\u65f6\u95f4\uff0c\u81ea 1970 \u5e74 1 \u6708 1 \u65e5\u4ee5\u6765\u7ecf\u8fc7\u7684\u79d2\u6570\u3002\u5982\u679c\u7cfb\u7edf\u6ca1\u6709\u65f6\u95f4\uff0c\u5219\u8fd4\u56de .1\u3002\nchar *ctime(const time_t *time); //\u8be5\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u5f53\u5730\u65f6\u95f4\u7684\u5b57\u7b26\u4e32\u6307\u9488\uff0c\u5b57\u7b26\u4e32\u5f62\u5f0f day month year hours:minutes:seconds year\\n\\0\u3002\nstruct tm *localtime(const time_t *time); //\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8868\u793a\u672c\u5730\u65f6\u95f4\u7684 tm \u7ed3\u6784\u7684\u6307\u9488\u3002\nclock_t clock(void); //\u8be5\u51fd\u6570\u8fd4\u56de\u7a0b\u5e8f\u6267\u884c\u8d77\uff08\u4e00\u822c\u4e3a\u7a0b\u5e8f\u7684\u5f00\u5934\uff09\uff0c\u5904\u7406\u5668\u65f6\u949f\u6240\u4f7f\u7528\u7684\u65f6\u95f4\u3002\u5982\u679c\u65f6\u95f4\u4e0d\u53ef\u7528\uff0c\u5219\u8fd4\u56de .1\u3002\nchar * asctime ( const struct tm * time ); //\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u5b57\u7b26\u4e32\u5305\u542b\u4e86 time \u6240\u6307\u5411\u7ed3\u6784\u4e2d\u5b58\u50a8\u7684\u4fe1\u606f\uff0c\u8fd4\u56de\u5f62\u5f0f\u4e3a\uff1aday month date hours:minutes:seconds year\\n\\0\u3002\nstruct tm *gmtime(const time_t *time); //\u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411 time \u7684\u6307\u9488\uff0ctime \u4e3a tm \u7ed3\u6784\uff0c\u7528\u534f\u8c03\u4e16\u754c\u65f6\uff08UTC\uff09\u4e5f\u88ab\u79f0\u4e3a\u683c\u6797\u5c3c\u6cbb\u6807\u51c6\u65f6\u95f4\uff08GMT\uff09\u8868\u793a\u3002\ntime_t mktime(struct tm *time); //\u8be5\u51fd\u6570\u8fd4\u56de\u65e5\u5386\u65f6\u95f4\uff0c\u76f8\u5f53\u4e8e time \u6240\u6307\u5411\u7ed3\u6784\u4e2d\u5b58\u50a8\u7684\u65f6\u95f4\u3002\ndouble difftime ( time_t time2, time_t time1 ); //\u8be5\u51fd\u6570\u8fd4\u56de time1 \u548c time2 \u4e4b\u95f4\u76f8\u5dee\u7684\u79d2\u6570\u3002\nsize_t strftime(); //\u8be5\u51fd\u6570\u53ef\u7528\u4e8e\u683c\u5f0f\u5316\u65e5\u671f\u548c\u65f6\u95f4\u4e3a\u6307\u5b9a\u7684\u683c\u5f0f\u3002\n\n// \u83b7\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f4\n#include <iostream>\n#include <ctime>\nusing namespace std;\nint main( )\n{\n   // \u57fa\u4e8e\u5f53\u524d\u7cfb\u7edf\u7684\u5f53\u524d\u65e5\u671f/\u65f6\u95f4\n   time_t now = time(0);\n   \n   // \u628a now \u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\n   char* dt = ctime(&now);\n \n   cout << "\u672c\u5730\u65e5\u671f\u548c\u65f6\u95f4\uff1a" << dt << endl; // Sat Jan  8 20:07:41 2011\n \n   // \u628a now \u8f6c\u6362\u4e3a tm \u7ed3\u6784\n   tm *gmtm = gmtime(&now);\n   dt = asctime(gmtm);\n   cout << "UTC \u65e5\u671f\u548c\u65f6\u95f4\uff1a"<< dt << endl; // Sat Jan  8 20:07:41 2011\n\n    //////////////////////////////\n\n   // \u683c\u5f0f\u5316\u65f6\u95f4\n   \n   // \u57fa\u4e8e\u5f53\u524d\u7cfb\u7edf\u7684\u5f53\u524d\u65e5\u671f/\u65f6\u95f4\n   time_t now = time(0);\n   cout << "1970 \u5230\u76ee\u524d\u7ecf\u8fc7\u79d2\u6570:" << now << endl;\n   tm *ltm = localtime(&now);\n   // \u8f93\u51fa tm \u7ed3\u6784\u7684\u5404\u4e2a\u7ec4\u6210\u90e8\u5206\n   cout << "\u5e74: "<< 1900 + ltm->tm_year << endl;\n   cout << "\u6708: "<< 1 + ltm->tm_mon<< endl;\n   cout << "\u65e5: "<<  ltm->tm_mday << endl;\n   cout << "\u65f6\u95f4: "<< ltm->tm_hour << ":";\n   cout << ltm->tm_min << ":";\n   cout << ltm->tm_sec << endl;\n   //1970 \u5230\u76ee\u524d\u65f6\u95f4:1503564157\n    //\u5e74: 2017\n    //\u6708: 8\n   // \u65e5: 24\n   // \u65f6\u95f4: 16:42:37\n}\n\n')),(0,i.kt)("h2",{id:"io-\u8f93\u5165\u8f93\u51fa"},"io-\u8f93\u5165\u8f93\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n\n/**\n\n    io \u8f93\u5165\u8f93\u51fa\n\nio \u5e93\u5934\u6587\u4ef6:\n<iostream>  \u8be5\u6587\u4ef6\u5b9a\u4e49\u4e86 cin\u3001cout\u3001cerr \u548c clog \u5bf9\u8c61\uff0c\u5206\u522b\u5bf9\u5e94\u4e8e\u6807\u51c6\u8f93\u5165\u6d41\u3001\u6807\u51c6\u8f93\u51fa\u6d41\u3001\u975e\u7f13\u51b2\u6807\u51c6\u9519\u8bef\u6d41\u548c\u7f13\u51b2\u6807\u51c6\u9519\u8bef\u6d41\u3002\n<iomanip>   \u8be5\u6587\u4ef6\u901a\u8fc7\u6240\u8c13\u7684\u53c2\u6570\u5316\u7684\u6d41\u64cd\u7eb5\u5668\uff08\u6bd4\u5982 setw \u548c setprecision\uff09\uff0c\u6765\u58f0\u660e\u5bf9\u6267\u884c\u6807\u51c6\u5316 I/O \u6709\u7528\u7684\u670d\u52a1\u3002\n<fstream>   \u8be5\u6587\u4ef6\u4e3a\u7528\u6237\u63a7\u5236\u7684\u6587\u4ef6\u5904\u7406\u58f0\u660e\u670d\u52a1\u3002\n*/\n// \u6807\u51c6\u8f93\u51fa/\u8f93\u5165, \u90fd\u662f iostream \u4e2d\u5b9a\u4e49\u7684\u5b9e\u4f8b\n#include <iostream>\nusing namespace std; // cout \u8fd9\u4e9b\u5bf9\u8c61\u90fd\u5728 std \u7a7a\u95f4\u4e0b\nint main( )\n{\n   char str[] = "Hello C++";\n   // "<<" \u8fd0\u7b97\u7b26\u88ab\u91cd\u8f7d\u6765\u8f93\u51fa\u5185\u7f6e\u7c7b\u578b\uff08\u6574\u578b\u3001\u6d6e\u70b9\u578b\u3001double \u578b\u3001\u5b57\u7b26\u4e32\u548c\u6307\u9488\uff09, \u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\n   // endl \u7528\u4e8e\u5728\u884c\u672b\u6dfb\u52a0\u4e00\u4e2a\u6362\u884c\u7b26\n   cout << "Value of str is : " << str << endl;\n\n   char name[50];\n   cout << "\u8bf7\u8f93\u5165\u60a8\u7684\u540d\u79f0\uff1a ";\n   cin >> name;\n   // \u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26 >> \u5728\u4e00\u4e2a\u8bed\u53e5\u4e2d\u53ef\u4ee5\u591a\u6b21\u4f7f\u7528\n   // \u5982:\n   cin >> name >> age;\n}\n\n// \u6807\u51c6\u9519\u8bef\u6d41\uff08cerr\uff09\n//cerr \u5bf9\u8c61\u9644\u5c5e\u5230\u6807\u51c6\u9519\u8bef\u8bbe\u5907\uff0c\u901a\u5e38\u4e5f\u662f\u663e\u793a\u5c4f\uff0c\u4f46\u662f cerr \u5bf9\u8c61\u662f\u975e\u7f13\u51b2\u7684\uff0c\u4e14\u6bcf\u4e2a\u6d41\u63d2\u5165\u5230 cerr \u90fd\u4f1a\u7acb\u5373\u8f93\u51fa\u3002\n#include <iostream>\nusing namespace std;\nint main( )\n{\n   char str[] = "Unable to read....";\n   cerr << "Error message : " << str << endl; // Error message : Unable to read....\n}\n\n//\u6807\u51c6\u65e5\u5fd7\u6d41\uff08clog\uff09\n//clog \u5bf9\u8c61\u9644\u5c5e\u5230\u6807\u51c6\u9519\u8bef\u8bbe\u5907\uff0c\u901a\u5e38\u4e5f\u662f\u663e\u793a\u5c4f\uff0c\u4f46\u662f clog \u5bf9\u8c61\u662f\u7f13\u51b2\u7684\u3002\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u6d41\u63d2\u5165\u5230 clog \u90fd\u4f1a\u5148\u5b58\u50a8\u5728\u7f13\u51b2\u533a\uff0c\u76f4\u5230\u7f13\u51b2\u586b\u6ee1\u6216\u8005\u7f13\u51b2\u533a\u5237\u65b0\u65f6\u624d\u4f1a\u8f93\u51fa\u3002\n// \u7528\u6cd5 \u548c cerr \u7c7b\u4f3c\n// \u4f7f\u7528 cerr \u6d41\u6765\u663e\u793a\u9519\u8bef\u6d88\u606f\uff0c\u800c\u5176\u4ed6\u7684\u65e5\u5fd7\u6d88\u606f\u5219\u4f7f\u7528 clog \u6d41\u6765\u8f93\u51fa\n\n\n')),(0,i.kt)("h2",{id:"\u9762\u5411\u5bf9\u8c61"},"\u9762\u5411\u5bf9\u8c61"),(0,i.kt)("h3",{id:"\u7c7b-\u5bf9\u8c61"},"\u7c7b-\u5bf9\u8c61"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n\n/**\n\n    \u7c7b, \u5bf9\u8c61\n\nclass \u548c struct \u533a\u522b:\n- \u9ed8\u8ba4\u7684\u8bfb\u53d6\u6743\u9650\u4e0d\u540c\u3002struct\u662fpublic,\u800cclass\u662fprivate\u3002\n- class\u53ef\u7528\u4e8e\u58f0\u660e\u7c7b\u6a21\u677f\uff0c\u800cstruct\u4e0d\u53ef\u4ee5\n\n* ---struct\u597d\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u4f60\u80fd\u591f\u76f4\u63a5\u4ece\u6808\u4e2d\u83b7\u53d6\u6570\u636e\uff0c\u800c\u4e0d\u9700\u8981\u518d\u5230\u5806\u4e2d\u53bb\u627e\u3002\n\n*/\n#include <iostream>\n \nusing namespace std;\n \nclass Box\n{\n    // \u7c7b\u8bbf\u95ee\u4fee\u9970\u7b26\n    // private\u3001\u5728\u7c7b\u7684\u5916\u90e8\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684, \u5982\u679c\u4e0d\u6307\u5b9a\u4fee\u9970\u7b26,\u9ed8\u8ba4 \u6210\u5458\u90fd\u662f\u79c1\u6709\u7684\n    //protected, \u7c7b\u4f3c private, \u4f46\u662f \u4fdd\u62a4\u6210\u5458\u5728\u6d3e\u751f\u7c7b\uff08\u5373\u5b50\u7c7b\uff09\u4e2d\u662f\u53ef\u8bbf\u95ee\u7684\n    //public\u3001 \u7c7b\u5916\u90e8\u53ef\u76f4\u63a5\u8bbf\u95ee\n   public:\n      static int objectCount;// \u58f0\u660e\u7c7b\u7684\u6210\u5458\u4e3a\u9759\u6001\u65f6\uff0c\u8fd9\u610f\u5473\u7740\u6210\u5458\u72ec\u7acb\u4e8e\u5bf9\u8c61\u5b9e\u4f8b\u5b58\u5728\uff0c\u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5b9e\u4f8b, \u9759\u6001\u6210\u5458\u90fd\u53ea\u6709\u4e00\u4e2a\u526f\u672c\n      double length;   // \u957f\u5ea6\n      double breadth;  // \u5bbd\u5ea6\n      double height;   // \u9ad8\u5ea6\n      double getVolume(void); // \u58f0\u660e\u6210\u5458\u51fd\u6570, \u6210\u5458\u51fd\u6570\u628a\u51fd\u6570\u58f0\u660e\u4e3a\u5185\u8054\u7684\uff0c\u5373\u4fbf\u6ca1\u6709\u4f7f\u7528 inline \u6807\u8bc6\u7b26\n      // \u53ef\u4ee5\u58f0\u660e\u5b9a\u4e49\u5728\u4e00\u8d77\n      double getVolume(void)\n      {\n         return length * breadth * height;\n      }\n};\n// \u53ef\u4ee5\u5728\u7c7b\u5185\u90e8\u58f0\u660e, \u5916\u90e8\u5b9a\u4e49, \u501f\u52a9 "::"\ndouble Box::getVolume(void)\n{\n    return length * breadth * height;\n}\n\nint main( )\n{\n   Box Box1;        // \u58f0\u660e Box1\uff0c\u7c7b\u578b\u4e3a Box\n   Box Box2;        // \u58f0\u660e Box2\uff0c\u7c7b\u578b\u4e3a Box\n   double volume = 0.0;     // \u7528\u4e8e\u5b58\u50a8\u4f53\u79ef\n   // box 1 \u8be6\u8ff0\n   Box1.height = 5.0; \n   Box1.length = 6.0; \n   Box1.breadth = 7.0;\n   // box 2 \u8be6\u8ff0\n   Box2.height = 10.0;\n   Box2.length = 12.0;\n   Box2.breadth = 13.0;\n   // box 1 \u7684\u4f53\u79ef\n   volume = Box1.height * Box1.length * Box1.breadth;\n   cout << "Box1 \u7684\u4f53\u79ef\uff1a" << volume <<endl;\n   // box 2 \u7684\u4f53\u79ef\n   volume = Box2.height * Box2.length * Box2.breadth;\n   cout << "Box2 \u7684\u4f53\u79ef\uff1a" << volume <<endl;\n   return 0;\n}\n\n\n// \u6784\u9020\u51fd\u6570 : \u6bcf\u6b21\u5b9a\u4e49/\u521b\u5efa\u5bf9\u8c61\u65f6\u8fd0\u884c, \u7528\u4e8e\u521d\u59cb\u5316\u5bf9\u8c61\n            //\u53ef\u91cd\u8f7d\n//\u6790\u6784\u51fd\u6570: \u6bcf\u6b21\u5220\u9664\u6240\u521b\u5efa\u7684\u5bf9\u8c61\u65f6\u6267\u884c, \u7528\u4e8e\u91ca\u653e\u8d44\u6e90\n            // \u4e0d\u53ef\u91cd\u8f7d\n//\u62f7\u8d1d\u6784\u9020\u51fd\u6570: \u4f5c\u7528\u6709 \u4e09, (\u4e5f\u5c31\u662f\u5728\u8fd9\u4e09\u4e2a\u573a\u666f\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570); \u53ef\u91cd\u8f7d\n//      - \u4f7f\u7528\u540c\u4e00\u7c7b\u578b\u4e4b\u524d\u521b\u5efa\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u65b0\u5b9a\u4e49\u7684\u5bf9\u8c61\n//      - \u590d\u5236\u5bf9\u8c61\u628a\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u51fd\u6570\n//      - \u590d\u5236\u5bf9\u8c61\uff0c\u5e76\u4ece\u51fd\u6570\u8fd4\u56de\u8fd9\u4e2a\u5bf9\u8c61\n\n// - \u5982\u679c\u5728\u7c7b\u4e2d\u6ca1\u6709\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u884c\u5b9a\u4e49\u4e00\u4e2a\u3002(\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570, \u6267\u884c\u7684\u662f\u6d45\u62f7\u8d1d, \u4e00\u65e6\u5bf9\u8c61\u5b58\u5728\u4e86\u52a8\u6001\u6210\u5458 (\u5373\u5b58\u5728\u6307\u9488\u65f6)\uff0c\u90a3\u4e48\u6d45\u62f7\u8d1d\u5c31\u4f1a\u51fa\u95ee\u9898 \u5fc5\u987b\u6df1\u62f7\u8d1d)\n//      - \u4e3a\u4ec0\u4e48\u4f1a\u51fa\u95ee\u9898: \u56e0\u4e3a\u9ed8\u8ba4\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u6309\u6210\u5458\u62f7\u8d1d\u6784\u9020\uff0c\u8fd9\u5bfc\u81f4\u4e86\u4e24\u4e2a\u4e0d\u540c\u7684\u6307\u9488(\u5982ptr1=ptr2)\u6307\u5411\u4e86\u76f8\u540c\u7684\u5185\u5b58\u3002\u5f53\u4e00\u4e2a\u5b9e\u4f8b\u9500\u6bc1\u65f6\uff0c\u8c03\u7528\u6790\u6784\u51fd\u6570 free(ptr1)\u91ca\u653e\u4e86\u8fd9\u6bb5\u5185\u5b58\uff0c\u90a3\u4e48\u5269\u4e0b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6307\u9488ptr2\u5c31\u65e0\u6548\u4e86\uff0c\u5728\u88ab\u9500\u6bc1\u7684\u65f6\u5019free(ptr2)\u5c31\u4f1a\u51fa\u73b0\u9519\u8bef\u4e86\n// -  \u5982\u679c\u7c7b\u5e26\u6709\u6307\u9488\u53d8\u91cf\uff0c\u5e76\u6709\u52a8\u6001\u5185\u5b58\u5206\u914d\uff0c\u5219\u5b83\u5fc5\u987b\u6709\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n// - \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5fc5\u987b\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u672c\u7c7b\u578b\u7684\u4e00\u4e2a\u5f15\u7528\u53d8\u91cf\u3002(\u6784\u9020\u51fd\u6570 \u548c \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u5408\u5e76\u5728\u4e00\u8d77)\n// - \u4e3a\u4ec0\u4e48\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5fc5\u987b\u662f\u5f15\u7528\u4f20\u9012\uff0c\u4e0d\u80fd\u662f\u503c\u4f20\u9012\uff1f- \u662f\u4e3a\u4e86\u9632\u6b62\u9012\u5f52\u5f15\u7528 (\u56e0\u4e3a\u5982\u679c\u4f7f\u7528\u503c\u4f20\u9012, \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u7684\u65f6\u5019, \u5b9e\u53c2\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u62f7\u8d1d, \u90a3\u4e48\u6709\u9700\u8981\u8c03\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570, \u5957\u5a03\u4e86)\n\nclass Line\n{\n   public:\n      void setLength( double len );\n      double getLength( void );\n      Line();  // \u8fd9\u662f\u6784\u9020\u51fd\u6570\n      Line(double len);// \u5e26\u53c2\u6811\u6784\u9020\u51fd\u6570\n      ~Line();  // \u8fd9\u662f\u6790\u6784\u51fd\u6570\u58f0\u660e\n      Line( const Line &obj);      // \u62f7\u8d1d\u6784\u9020\u51fd\u6570, \u5f62\u5f0f\u901a\u5e38\u8fd9\u6837: classname (const classname &obj) {}\n\n   private:\n      double length;\n      int *ptr;\n};\nLine::Line(void)\n{\n    cout << "Object is being created" << endl;\n}\n// \u4e5f\u53ef\u5e26\u6709\u53c2\u6570\nLine::Line( double len)\n{\n    cout << "Object is being created, length = " << len << endl;\n    length = len;\n    // \u4e3a\u6307\u9488\u5206\u914d\u5185\u5b58\n    ptr = new double;\n    // \u4e3a\u6307\u9488\u8d4b\u503c\n    *ptr = len;\n}\n\nvoid display(Line obj)\n{\n   cout << "line \u5927\u5c0f : " << obj.getLength() <<endl;\n}\n\n// \u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\nint main( )\n{\n   Line line; // \u5b9a\u4e49 Line \u53d8\u91cf, \u8c03\u7528\u6784\u9020\u51fd\u6570, \u62f7\u8d1d\u6784\u9020\u51fd\u6570\n   Line line1(10);\n \n   Line line2 = line1; // \u8fd9\u91cc\u4e5f\u8c03\u7528\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n\n   display(line1); // \u8c03\u7528\u5b8c\u540e, line1 \u4f1a\u88ab\u9500\u6bc1, \u8c03\u7528\u6790\u6784\u51fd\u6570\n   display(line2);\n}\n\n// \u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u5b57\u6bb5\nLine::Line( double len): length(len) // \u7b49\u4ef7\u4e8e \u4ee3\u7801 length = len;\n{\n    cout << "Object is being created, length = " << len << endl;\n} \n// \u82e5\u6709\u591a\u4e2a\u5b57\u6bb5 X\u3001Y\u3001Z \u9700\u8981\u521d\u59cb\u5316\nC::C( double a, double b, double c): X(a), Y(b), Z(c)\n{\n  ....\n}\n\n// \u6790\u6784\u51fd\u6570\u5b9a\u4e49\nLine::~Line(void)\n{\n    cout << "Object is being deleted" << endl;\n    delete ptr;\n}\n// \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b9a\u4e49\nLine::Line(const Line &obj)\n{\n    cout << "\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5e76\u4e3a\u6307\u9488 ptr \u5206\u914d\u5185\u5b58" << endl;\n    ptr = new int;\n    *ptr = *obj.ptr; // \u62f7\u8d1d\u503c\n}\n\n')),(0,i.kt)("h3",{id:"\u53cb\u5143"},"\u53cb\u5143"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u53cb\u5143\u51fd\u6570\n    \u7c7b\u7684\u53cb\u5143\u51fd\u6570\u662f\u5b9a\u4e49\u5728\u7c7b\u5916\u90e8 (\u4e0d\u5c5e\u4e8e\u7c7b\u6210\u5458)\uff0c\u4f46\u6709\u6743\u8bbf\u95ee\u7c7b\u7684\u6240\u6709\u79c1\u6709\uff08private\uff09\u6210\u5458\u548c\u4fdd\u62a4\uff08protected\uff09\u6210\u5458\n\n\u53cb\u5143\u53ef\u4ee5\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u88ab\u79f0\u4e3a\u53cb\u5143\u51fd\u6570\uff1b\u53cb\u5143\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u8be5\u7c7b\u88ab\u79f0\u4e3a\u53cb\u5143\u7c7b\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6574\u4e2a\u7c7b\u53ca\u5176\u6240\u6709\u6210\u5458\u90fd\u662f\u53cb\u5143\n*/\nclass Box\n{\n   double width;\npublic:\n   double length;\n   friend void printWidth( Box box ); //\u58f0\u660e\u51fd\u6570\u4e3a\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\n   void setWidth( double wid );\n};\n\n\n// \u8bf7\u6ce8\u610f\uff1aprintWidth() \u4e0d\u662f\u4efb\u4f55\u7c7b\u7684\u6210\u5458\u51fd\u6570\nvoid printWidth( Box box )\n{\n   /* \u56e0\u4e3a printWidth() \u662f Box \u7684\u53cb\u5143\uff0c\u5b83\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u8be5\u7c7b\u7684\u4efb\u4f55\u6210\u5458 */\n   cout << "Width of box : " << box.width <<endl;\n}\n\n// \u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\nint main( )\n{\n   Box box;\n   // \u4f7f\u7528\u6210\u5458\u51fd\u6570\u8bbe\u7f6e\u5bbd\u5ea6\n   box.setWidth(10.0);\n   // \u4f7f\u7528\u53cb\u5143\u51fd\u6570\u8f93\u51fa\u5bbd\u5ea6\n   printWidth( box );\n   return 0;\n}\n\n// \u58f0\u660e\u7c7b ClassTwo \u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u4f5c\u4e3a\u7c7b ClassOne \u7684\u53cb\u5143\uff0c\u9700\u8981\u5728\u7c7b ClassOne \u7684\u5b9a\u4e49\u4e2d\u653e\u7f6e\nfriend class ClassTwo; \n// \u628a\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u7c7b\uff0c\u4f1a\u66b4\u9732\u5b9e\u73b0\u7ec6\u8282\uff0c\u4ece\u800c\u964d\u4f4e\u4e86\u5c01\u88c5\u6027\n\n\n')),(0,i.kt)("h3",{id:"\u5185\u8054\u51fd\u6570"},"\u5185\u8054\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u5185\u8054\u51fd\u6570\n\n\u7f16\u8bd1\u5668\u4f1a\u628a\u5185\u8054\u51fd\u6570\u7684\u4ee3\u7801\u526f\u672c\u66ff\u6362\u5230\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9 (\u800c\u5bf9\u4e8e\u5176\u4ed6\u7684\u51fd\u6570\uff0c\u90fd\u662f\u5728\u8fd0\u884c\u65f6\u5019\u624d\u88ab\u66ff\u4ee3\u3002) \u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u601d\u60f3\n\n- \u7c7b\u6210\u5458\u51fd\u6570\u90fd\u662f\u5185\u8054\u51fd\u6570\uff0c\u5373\u4f7f\u6ca1\u6709\u4f7f\u7528 inline \u8bf4\u660e\u7b26\u3002(\u5982 \u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u3001\u666e\u901a\u6210\u5458\u51fd\u6570\u7b49\uff09)\n- \u5bf9\u4e8e\u7c7b\u5185\u58f0\u660e\uff0c\u5728\u7c7b\u5916\u5b9a\u4e49\u51fd\u6570\uff0c\u5219\u53ef\u4ee5\u5728\u7c7b\u5185\u58f0\u660e\u65f6, \u6216\u8005\u5728\u7c7b\u5916\u5b9a\u4e49\u51fd\u6570\u65f6\u52a0\u4e0ainline\u5173\u952e\u5b57\n- \u5185\u8054\u51fd\u6570\u7684\u51fd\u6570\u4f53\u8fc7\u5927\uff0c\u4e00\u822c\u7684\u7f16\u8bd1\u5668\u4f1a\u653e\u5f03\u5185\u8054\u65b9\u5f0f\uff0c\u800c\u91c7\u7528\u666e\u901a\u7684\u65b9\u5f0f\u8c03\u7528\u51fd\u6570\u3002\u4e00\u822c\u4e0d\u8981\u5185\u8054\u8d85\u8fc7 10 \u884c\u7684\u51fd\u6570, \u4e0d\u8981\u5185\u8054\u542b\u6709\u5faa\u73afor \u6d41\u7a0b\u63a7\u5236\u7684\u51fd\u6570\n- \u51fd\u6570\u5373\u4f7f\u58f0\u660e\u4e3a\u5185\u8054\u7684\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u88ab\u7f16\u8bd1\u5668\u5185\u8054 (\u4f7f\u7528\u5185\u8054\u51fd\u6570\uff0c\u53ea\u4e0d\u8fc7\u662f\u5411\u7f16\u8bd1\u5668\u63d0\u51fa\u4e00\u4e2a\u7533\u8bf7\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u62d2\u7edd\u4f60\u7684\u7533\u8bf7); \u6bd4\u5982\u865a\u51fd\u6570\u548c\u9012\u5f52\u51fd\u6570\u5c31\u4e0d\u4f1a\u88ab\u6b63\u5e38\u5185\u8054\n\n\u5185\u8054\u51fd\u6570\u548c\u5b8f\u5b9a\u4e49\u7684\u533a\u522b:\n- \u5b8f\u662f\u7531\u9884\u5904\u7406\u5668\u5bf9\u5b8f\u8fdb\u884c\u66ff\u4ee3\uff0c\u800c\u5185\u8054\u51fd\u6570\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u63a7\u5236\u6765\u5b9e\u73b0\u7684\n- \u5b8f\u5b9a\u4e49\u5728\u4f7f\u7528\u65f6\u53ea\u662f\u7b80\u5355\u7684\u6587\u672c\u66ff\u6362\uff0c\u5e76\u6ca1\u6709\u505a\u4e25\u683c\u7684\u53c2\u6570\u68c0\u67e5\uff0c\u4e5f\u5c31\u4e0d\u80fd\u4eab\u53d7C++\u7f16\u8bd1\u5668\u4e25\u683c\u7c7b\u578b\u68c0\u67e5\u7684\u597d\u5904\n\n*/\ninline int Max(int x, int y)\n{\n   return (x > y)? x : y;\n}\n\n// \u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\nint main( )\n{\n   cout << "Max (20,10): " << Max(20,10) << endl;// \u4f1a\u88ab\u7f16\u8bd1\u5668\u66ff\u6362\u4e3a  (x > y)? x : y\n   cout << "Max (0,200): " << Max(0,200) << endl;\n   cout << "Max (100,1010): " << Max(100,1010) << endl;\n   return 0;\n}\n\n')),(0,i.kt)("h3",{id:"\u51fd\u6570\u91cd\u8f7d-\u8fd0\u7b97\u7b26\u91cd\u8f7d"},"\u51fd\u6570\u91cd\u8f7d-\u8fd0\u7b97\u7b26\u91cd\u8f7d"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\n// \u51fd\u6570\u91cd\u8f7d, \u8fd0\u7b97\u7b26\u91cd\u8f7d\n// \u53ef\u4ee5\u58f0\u660e\u51e0\u4e2a\u529f\u80fd\u7c7b\u4f3c\u7684\u540c\u540d\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e9b\u540c\u540d\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\uff08\u6307\u53c2\u6570\u7684\u4e2a\u6570\u3001\u7c7b\u578b\u6216\u8005\u987a\u5e8f\uff09\u5fc5\u987b\u4e0d\u540c\u3002\u60a8\u4e0d\u80fd\u4ec5\u901a\u8fc7\u8fd4\u56de\u7c7b\u578b\u7684\u4e0d\u540c\u6765\u91cd\u8f7d\u51fd\u6570\n// \u91cd\u8f7d + \u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u628a\u4e24\u4e2a Box \u5bf9\u8c61\u76f8\u52a0\nBox operator+(const Box& b)\n{\n    Box box;\n    box.length = this->length + b.length;\n    box.breadth = this->breadth + b.breadth;\n    box.height = this->height + b.height;\n    return box;\n}\n// https://www.runoob.com/cplusplus/cpp-overloading.html\n// \u53ef\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26:\n// \u53cc\u76ee\u7b97\u672f\u8fd0\u7b97\u7b26  + (\u52a0)\uff0c-(\u51cf)\uff0c*(\u4e58)\uff0c/(\u9664)\uff0c% (\u53d6\u6a21)\n// \u5173\u7cfb\u8fd0\u7b97\u7b26    ==(\u7b49\u4e8e)\uff0c!= (\u4e0d\u7b49\u4e8e)\uff0c< (\u5c0f\u4e8e)\uff0c> (\u5927\u4e8e>\uff0c<=(\u5c0f\u4e8e\u7b49\u4e8e)\uff0c>=(\u5927\u4e8e\u7b49\u4e8e)\n// \u903b\u8f91\u8fd0\u7b97\u7b26    ||(\u903b\u8f91\u6216)\uff0c&&(\u903b\u8f91\u4e0e)\uff0c!(\u903b\u8f91\u975e)\n// \u5355\u76ee\u8fd0\u7b97\u7b26    + (\u6b63)\uff0c-(\u8d1f)\uff0c*(\u6307\u9488)\uff0c&(\u53d6\u5730\u5740)\n// \u81ea\u589e\u81ea\u51cf\u8fd0\u7b97\u7b26  ++(\u81ea\u589e)\uff0c--(\u81ea\u51cf)\n// \u4f4d\u8fd0\u7b97\u7b26 | (\u6309\u4f4d\u6216)\uff0c& (\u6309\u4f4d\u4e0e)\uff0c~(\u6309\u4f4d\u53d6\u53cd)\uff0c^(\u6309\u4f4d\u5f02\u6216),\uff0c<< (\u5de6\u79fb)\uff0c>>(\u53f3\u79fb)\n// \u8d4b\u503c\u8fd0\u7b97\u7b26    =, +=, -=, *=, /= , % = , &=, |=, ^=, <<=, >>=\n// \u7a7a\u95f4\u7533\u8bf7\u4e0e\u91ca\u653e  new, delete, new[ ] , delete[]\n// \u5176\u4ed6\u8fd0\u7b97\u7b26    ()(\u51fd\u6570\u8c03\u7528)\uff0c->(\u6210\u5458\u8bbf\u95ee)\uff0c,(\u9017\u53f7)\uff0c[](\u4e0b\u6807)\n\n// \u4e0d\u53ef\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26:\n// .\uff1a\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26\n// .*, ->*\uff1a\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\n// ::\uff1a\u57df\u8fd0\u7b97\u7b26\n// sizeof\uff1a\u957f\u5ea6\u8fd0\u7b97\u7b26\n// ?:\uff1a\u6761\u4ef6\u8fd0\u7b97\u7b26\n// #\uff1a \u9884\u5904\u7406\u7b26\u53f7\n\n")),(0,i.kt)("h3",{id:"\u7ee7\u627f"},"\u7ee7\u627f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n// \u7c7b\u7684\u7ee7\u627f\n// \u7ee7\u627f\u65f6, \u53ef\u6307\u5b9a \u7236\u7c7b\u7684 \u8bbf\u95ee\u7ea7\u522b:\n// public (\u5728 struct \u4e2d\u9ed8\u8ba4 public \u7ee7\u627f): \n// protected\n// private (\u5982\u679c\u7ee7\u627f\u65f6\u4e0d\u663e\u793a\u58f0\u660e, \u9ed8\u8ba4\u5c31\u662f private \u7ee7\u627f)\n// \u603b\u7ed3:\n\u7ee7\u627f\u65b9\u5f0f    \u57fa\u7c7b\u7684public\u6210\u5458 \u57fa\u7c7b\u7684protected\u6210\u5458  \u57fa\u7c7b\u7684private\u6210\u5458    \u7ee7\u627f\u5f15\u8d77\u7684\u8bbf\u95ee\u63a7\u5236\u5173\u7cfb\u53d8\u5316\npublic\u7ee7\u627f    \u4ecd\u4e3apublic\u6210\u5458  \u4ecd\u4e3aprotected\u6210\u5458   \u4e0d\u53ef\u89c1 \u57fa\u7c7b\u7684\u975e\u79c1\u6709\u6210\u5458\u5728\u5b50\u7c7b\u7684\u8bbf\u95ee\u5c5e\u6027\u4e0d\u53d8\nprotected\u7ee7\u627f \u53d8\u4e3aprotected\u6210\u5458   \u53d8\u4e3aprotected\u6210\u5458   \u4e0d\u53ef\u89c1 \u57fa\u7c7b\u7684\u975e\u79c1\u6709\u6210\u5458\u90fd\u4e3a\u5b50\u7c7b\u7684\u4fdd\u62a4\u6210\u5458\nprivate\u7ee7\u627f   \u53d8\u4e3aprivate\u6210\u5458 \u53d8\u4e3aprivate\u6210\u5458 \u4e0d\u53ef\u89c1 \u57fa\u7c7b\u4e2d\u7684\u975e\u79c1\u6709\u6210\u5458\u90fd\u79f0\u4e3a\u5b50\u7c7b\u7684\u79c1\u6709\u6210\u5458\nclass Box\n{\n   protected: // protect \u6210\u5458, \u53ef\u88ab\u5b50\u7c7b\u8bbf\u95ee\u5230\n      double width;\n};\nclass SmallBox:Box, public OtherClass // SmallBox \u662f\u6d3e\u751f\u7c7b\n{\n   public:\n      void setSmallWidth( double wid );\n      double getSmallWidth( void );\n};\n// \u5b50\u7c7b\u7684\u6210\u5458\u51fd\u6570\ndouble SmallBox::getSmallWidth(void)\n{\n    return width ;\n}\nvoid SmallBox::setSmallWidth( double wid )\n{\n    width = wid;\n}\n\n// \u4e00\u4e2a\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u6240\u6709\u7684\u57fa\u7c7b\u65b9\u6cd5\uff0c\u4f46\u4e0b\u5217\u60c5\u51b5\u9664\u5916\uff1a\n//\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\n//\u57fa\u7c7b\u7684\u91cd\u8f7d\u8fd0\u7b97\u7b26\u3002\n//\u57fa\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u3002\n\n\n\n\n// \u591a\u91cd\u7ee7\u627f\n// \u95ee\u9898: \u6b67\u4e49\u95ee\u9898\n#include <iostream>\nusing namespace std;\nclass Dog\n{\npublic:\n    virtual void eat() {cout << "The Dog has eaten." << endl;};\n};\nclass Bird\n{\npublic:\n    virtual void eat() {cout << "The Bird has eaten." << endl;};\n};\nclass DogBird : public Dog, public Bird\n{\n};\nint main()\n{\n    DogBird db;\n    // \u4e3a\u4e86\u6d88\u9664\u6b67\u4e49\uff0c\u8981\u4e48\u5728 DogBird\u7c7b\u91cd\u5199 eat() \u65b9\u6cd5\uff0c\u8981\u4e48\u663e\u793a\u7684\u6307\u660e\u8c03\u7528\u7684\u662f\u54ea\u4e00\u4e2a\u7236\u7c7b\u7684\u7248\u672c\u3002\n    static_cast<Dog>(db).eat(); // Slices, calling Dog::eat()\n    db.Bird::eat();             // Calls Bird::eat()\n    return 0;\n}\n/*\nOutput:\nThe Dog has eaten.\nThe Bird has eaten.\n*/\n\n\n')),(0,i.kt)("h3",{id:"\u591a\u6001-\u865a\u51fd\u6570"},"\u591a\u6001-\u865a\u51fd\u6570"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'\n/**\n\n    \u591a\u6001, \u865a\u51fd\u6570, \u7eaf\u865a\u51fd\u6570(\u63a5\u53e3)\n\n\u591a\u6001:\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4f1a\u6839\u636e\u5bf9\u8c61\u5177\u4f53\u7c7b\u578b\u6765\u6267\u884c\u4e0d\u540c\u7684\u51fd\u6570\n\u865a\u51fd\u6570: \u901a\u8fc7 virtual \u5c06\u7236\u7c7b\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570, \u5b50\u7c7b\u91cd\u5199\u540e, \u53ef\u4ee5\u5b9e\u73b0\u591a\u6001\n\u7eaf\u865a\u51fd\u6570: \u5c31\u662fjava \u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5 (\u5982\u679c\u7c7b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u8fd9\u4e2a\u7c7b\u5c31\u662f\u62bd\u8c61\u7c7b)\n*/\nclass Shape {\n   protected:\n      int width, height;\n   public:\n      Shape( int a=0, int b=0)\n      {\n         width = a;\n         height = b;\n      }\n      virtual int area() // \u591a\u6001\u9700\u8981 \u5173\u952e\u5b57 virtual \u652f\u6301\n      // \u4e5f\u53eb\u505a \u865a\u51fd\u6570, \u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u8981\u9759\u6001\u94fe\u63a5\u5230\u8be5\u51fd\u6570, \u800c\u8981\u52a8\u6001\u94fe\u63a5 (\u540e\u671f\u7ed1\u5b9a) \u5230\u5177\u4f53\u7c7b\u578b\u5bf9\u5e94\u7684\u51fd\u6570\n      {\n         cout << "Parent class area :" <<endl;\n         return 0;\n      }\n      // pure virtual function \u7eaf\u865a\u51fd\u6570\n      // \u7236\u7c7b\u4e2d\u6682\u65f6\u65e0\u6cd5\u7ed9\u51fa\u865a\u51fd\u6570\u5177\u4f53\u5b9e\u73b0, \u5c31\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u7eaf\u865a\u51fd\u6570\n      virtual int area() = 0;\n};\nclass Rectangle: public Shape{\n   public:\n      Rectangle( int a=0, int b=0):Shape(a, b) { }\n      int area ()\n      { \n         cout << "Rectangle class area :" <<endl;\n         return (width * height); \n      }\n};\nclass Triangle: public Shape{\n   public:\n      Triangle( int a=0, int b=0):Shape(a, b) { }\n      int area ()\n      { \n         cout << "Triangle class area :" <<endl;\n         return (width * height / 2); \n      }\n};\n// \u7a0b\u5e8f\u7684\u4e3b\u51fd\u6570\nint main( )\n{\n   Shape *shape;\n   Rectangle rec(10,7);\n   Triangle  tri(10,5);\n \n   // \u5b58\u50a8\u77e9\u5f62\u7684\u5730\u5740\n   shape = &rec;\n   // \u8c03\u7528\u77e9\u5f62\u7684\u6c42\u9762\u79ef\u51fd\u6570 area\n   shape->area();\n \n   // \u5b58\u50a8\u4e09\u89d2\u5f62\u7684\u5730\u5740\n   shape = &tri;\n   // \u8c03\u7528\u4e09\u89d2\u5f62\u7684\u6c42\u9762\u79ef\u51fd\u6570 area\n   shape->area();\n   \n   return 0;\n}\n')),(0,i.kt)("h2",{id:"io-\u8f93\u5165\u8f93\u51fa-cpp"},"io-\u8f93\u5165\u8f93\u51fa-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'//iostream \u6807\u51c6\u8f93\u5165\u8f93\u51fa\n//ofstream  \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u51fa\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u521b\u5efa\u6587\u4ef6\u5e76\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\u3002\n//ifstream  \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u5165\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002\n//fstream   \u8be5\u6570\u636e\u7c7b\u578b\u901a\u5e38\u8868\u793a\u6587\u4ef6\u6d41\uff0c\u4e14\u540c\u65f6\u5177\u6709 ofstream \u548c ifstream \u4e24\u79cd\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u521b\u5efa\u6587\u4ef6\uff0c\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002\n\n\n// \u6253\u5f00\u6587\u4ef6\n//open() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\n// \u6253\u5f00\u6a21\u5f0f:\n// ios::app \u8ffd\u52a0\u6a21\u5f0f\u3002\u6240\u6709\u5199\u5165\u90fd\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\u3002\n// ios::ate \u6587\u4ef6\u6253\u5f00\u540e\u5b9a\u4f4d\u5230\u6587\u4ef6\u672b\u5c3e\u3002\n// ios::in  \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002\n// ios::out \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002\n// ios::trunc   \u5982\u679c\u8be5\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5176\u5185\u5bb9\u5c06\u5728\u6253\u5f00\u6587\u4ef6\u4e4b\u524d\u88ab\u622a\u65ad\uff0c\u5373\u628a\u6587\u4ef6\u957f\u5ea6\u8bbe\u4e3a 0\u3002\nvoid open(const char *filename, ios::openmode mode);\n\n//\u60f3\u8981\u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5e0c\u671b\u622a\u65ad\u6587\u4ef6\uff0c\u4ee5\u9632\u6587\u4ef6\u5df2\u5b58\u5728\nofstream outfile;\noutfile.open("file.dat", ios::out | ios::trunc );\n\n//\u60f3\u8981\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u8bfb\u5199\nifstream  afile;\nafile.open("file.dat", ios::out | ios::in );\n\n// \u5173\u95ed\u6587\u4ef6\n// close() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\u3002\nvoid close();\n\n\n// \u6587\u4ef6\u8bfb\u5199 demo\n#include <fstream>\n#include <iostream>\nusing namespace std;\nint main ()\n{\n   char data[100];\n \n   // \u4ee5\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\n   ofstream outfile;\n   outfile.open("afile.dat");\n \n   cout << "Writing to the file" << endl;\n   cout << "Enter your name: "; \n   cin.getline(data, 100); // \u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u4e00\u884c\n \n   // \u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\n   outfile << data << endl;\n \n   cout << "Enter your age: "; \n   cin >> data;\n   cin.ignore(); // \u5ffd\u7565\u6389\u4e4b\u524d\u8bfb\u8bed\u53e5\u7559\u4e0b\u7684\u591a\u4f59\u5b57\u7b26\n   \n   // \u518d\u6b21\u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\n   outfile << data << endl;\n \n   // \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\n   outfile.close();\n \n   // \u4ee5\u8bfb\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\n   ifstream infile; \n   infile.open("afile.dat"); \n \n   cout << "Reading from the file" << endl; \n   infile >> data; \n \n   // \u5728\u5c4f\u5e55\u4e0a\u5199\u5165\u6570\u636e\n   cout << data << endl;\n   \n   // \u518d\u6b21\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u663e\u793a\u5b83\n   infile >> data; \n   cout << data << endl; \n \n   // \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\n   infile.close();\n \n   return 0;\n}\n\n// \u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\n// \u662f\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u6307\u5b9a\u4e86\u4ece\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u6307\u9488\u6240\u5728\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\n//  istream \u7684 seekg\uff08\u610f\u601d \u4e3a"seek get"\uff09\n//  ostream \u7684 seekp\uff08"seek put"\uff09\u3002\n// seekg \u548c seekp \u7684\u53c2\u6570\u901a\u5e38\u662f\u4e00\u4e2a\u957f\u6574\u578b\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u6307\u5b9a\u67e5\u627e\u65b9\u5411\u3002\u67e5\u627e\u65b9\u5411\u53ef\u4ee5\u662f ios::beg\uff08\u9ed8\u8ba4\u7684\uff0c\u4ece\u6d41\u7684\u5f00\u5934\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::cur\uff08\u4ece\u6d41\u7684\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::end\uff08\u4ece\u6d41\u7684\u672b\u5c3e\u5f00\u59cb\u5b9a\u4f4d\uff09\n\n// \u5b9a\u4f4d\u5230 fileObject \u7684\u7b2c n \u4e2a\u5b57\u8282\uff08\u5047\u8bbe\u662f ios::beg\uff09\nfileObject.seekg( n );\n \n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::cur );\n \n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u672b\u5c3e\u5f80\u56de\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::end );\n \n// \u5b9a\u4f4d\u5230 fileObject \u7684\u672b\u5c3e\nfileObject.seekg( 0, ios::end );\n')),(0,i.kt)("h2",{id:"\u5f02\u5e38\u5904\u7406-cpp"},"\u5f02\u5e38\u5904\u7406-cpp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u629b\u51fa\u5f02\u5e38\ndouble division(int a, int b)\n{\n   if( b == 0 )\n   {\n      throw "Division by zero condition!";\n   }\n   return (a/b);\n}\n// \u6355\u83b7\u5f02\u5e38\nint main ()\n{\n   int x = 50;\n   int y = 0;\n   double z = 0;\n \n   try {\n     z = division(x, y);\n     cout << z << endl;\n   }\n   //\u7531\u4e8e\u629b\u51fa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a const char* \u7684\u5f02\u5e38\uff0c\u56e0\u6b64\uff0c\u5f53\u6355\u83b7\u8be5\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5728 catch \u5757\u4e2d\u4f7f\u7528 const char*\n   // \u60f3\u8ba9 catch \u5757\u80fd\u591f\u5904\u7406\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5219\u5fc5\u987b\u5728\u62ec\u53f7\u5185\u4f7f\u7528\u7701\u7565\u53f7 ... (\u4e09\u4e2a\u70b9)\n   catch (const char* msg) {\n     cerr << msg << endl;\n   }\n \n   return 0;\n}\n\n\n// \u6807\u51c6\u5f02\u5e38\n// C++ \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6807\u51c6\u7684\u5f02\u5e38\uff0c\u5b9a\u4e49\u5728 <exception> \u4e2d, \u5177\u6709\u5c42\u7ea7\u7ed3\u6784:\nstd::exception  \u8be5\u5f02\u5e38\u662f\u6240\u6709\u6807\u51c6 C++ \u5f02\u5e38\u7684\u7236\u7c7b\u3002\n    std::bad_alloc  \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 new \u629b\u51fa\u3002\n    std::bad_cast   \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 dynamic_cast \u629b\u51fa\u3002\n    std::bad_exception  \u8fd9\u5728\u5904\u7406 C++ \u7a0b\u5e8f\u4e2d\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u65f6\u975e\u5e38\u6709\u7528\u3002\n    std::bad_typeid \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 typeid \u629b\u51fa\u3002\n    std::logic_error    \u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002\n        std::domain_error   \u5f53\u4f7f\u7528\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u6570\u5b66\u57df\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n        std::invalid_argument   \u5f53\u4f7f\u7528\u4e86\u65e0\u6548\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n        std::length_error   \u5f53\u521b\u5efa\u4e86\u592a\u957f\u7684 std::string \u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n        std::out_of_range   \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u629b\u51fa\uff0c\u4f8b\u5982 std::vector \u548c std::bitset<>::operator[]()\u3002\n    std::runtime_error  \u7406\u8bba\u4e0a\u4e0d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002\n        std::overflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0a\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n        std::range_error    \u5f53\u5c1d\u8bd5\u5b58\u50a8\u8d85\u51fa\u8303\u56f4\u7684\u503c\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002\n        std::underflow_error    \u5f53\u53d1\u751f\u6570\u5b66\u4e0b\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\n\n// \u81ea\u5b9a\u4e49\u5f02\u5e38\n//\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u548c\u91cd\u8f7d exception \u7c7b\u6765\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38\n#include <iostream>\n#include <exception>\nusing namespace std;\nstruct MyException : public exception\n{\n    // what() \u662f\u5f02\u5e38\u7c7b\u63d0\u4f9b\u7684\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\uff0c\u5b83\u5df2\u88ab\u6240\u6709\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d\n  const char * what () const throw ()\n  {\n    return "C++ Exception";\n  }\n};\n \nint main()\n{\n  try\n  {\n    throw MyException();\n  }\n  catch(MyException& e)\n  {\n    std::cout << "MyException caught" << std::endl;\n    std::cout << e.what() << std::endl;\n  }\n  catch(std::exception& e)\n  {\n    //\u5176\u4ed6\u7684\u9519\u8bef\n  }\n}\n')),(0,i.kt)("h2",{id:"\u4fe1\u53f7\u5904\u7406"},"\u4fe1\u53f7\u5904\u7406"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'// \u4fe1\u53f7\u662f\u7531\u64cd\u4f5c\u7cfb\u7edf\u4f20\u7ed9\u8fdb\u7a0b\u7684\u4e2d\u65ad\uff0c\u4f1a\u63d0\u65e9\u7ec8\u6b62\u4e00\u4e2a\u7a0b\u5e8f\n//\u8fd9\u4e9b\u4fe1\u53f7\u662f\u5b9a\u4e49\u5728 C++ \u5934\u6587\u4ef6 <csignal> \u4e2d\u3002\n// \u6709\u54ea\u4e9b\u4fe1\u53f7:\nSIGABRT \u7a0b\u5e8f\u7684\u5f02\u5e38\u7ec8\u6b62\uff0c\u5982\u8c03\u7528 abort\u3002\nSIGFPE  \u9519\u8bef\u7684\u7b97\u672f\u8fd0\u7b97\uff0c\u6bd4\u5982\u9664\u4ee5\u96f6\u6216\u5bfc\u81f4\u6ea2\u51fa\u7684\u64cd\u4f5c\u3002\nSIGILL  \u68c0\u6d4b\u975e\u6cd5\u6307\u4ee4\u3002\nSIGINT  \u63a5\u6536\u5230\u4ea4\u4e92\u6ce8\u610f\u4fe1\u53f7\u3002\nSIGSEGV \u975e\u6cd5\u8bbf\u95ee\u5185\u5b58\u3002\nSIGTERM \u53d1\u9001\u5230\u7a0b\u5e8f\u7684\u7ec8\u6b62\u8bf7\u6c42\n\n\n// \u6355\u83b7\u4fe1\u53f7\n// \u8fd9\u4e2a\u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u4ee3\u8868\u4e86\u4fe1\u53f7\u7684\u7f16\u53f7\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u4fe1\u53f7\u5904\u7406\u51fd\u6570\u7684\u6307\u9488\u3002\nvoid (*signal (int sig, void (*func)(int)))(int); \n// \u751f\u6210\u4fe1\u53f7\n// SIGINT\u3001SIGABRT\u3001SIGFPE\u3001SIGILL\u3001SIGSEGV\u3001SIGTERM\u3001SIGHUP\nint raise (signal sig);\n\n// \u6355\u83b7\u4fe1\u53f7\n#include <iostream>\n#include <csignal>\n#include <unistd.h>\nusing namespace std;\nvoid signalHandler( int signum )\n{\n    cout << "Interrupt signal (" << signum << ") received.\\n";\n    // \u6e05\u7406\u5e76\u5173\u95ed\n    // \u7ec8\u6b62\u7a0b\u5e8f  \n   exit(signum);  \n}\nint main ()\n{\n    // \u6ce8\u518c\u4fe1\u53f7 SIGINT \u548c\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\n    //  Ctrl+C \u6765\u4e2d\u65ad\u7a0b\u5e8f\n    signal(SIGINT, signalHandler);  \n    while(1){\n       cout << "Going to sleep...." << endl;\n       sleep(1);\n    }\n    return 0;\n}\n\n// \u751f\u6210\u4fe1\u53f7\n#include <iostream>\n#include <csignal>\n#include <unistd.h>\nusing namespace std;\nvoid signalHandler( int signum )\n{\n    cout << "Interrupt signal (" << signum << ") received.\\n";\n    // \u6e05\u7406\u5e76\u5173\u95ed\n    // \u7ec8\u6b62\u7a0b\u5e8f \n   exit(signum);  \n}\nint main ()\n{\n    int i = 0;\n    // \u6ce8\u518c\u4fe1\u53f7 SIGINT \u548c\u4fe1\u53f7\u5904\u7406\u7a0b\u5e8f\n    signal(SIGINT, signalHandler);  \n    while(++i){\n       cout << "Going to sleep...." << endl;\n       if( i == 3 ){\n          raise( SIGINT);\n       }\n       sleep(1);\n    }\n    return 0;\n}\n\n')),(0,i.kt)("h2",{id:"\u591a\u7ebf\u7a0b"},"\u591a\u7ebf\u7a0b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"\n\n")),(0,i.kt)("h2",{id:"web-\u5f00\u53d1"},"web \u5f00\u53d1"),(0,i.kt)("p",null,"\u516c\u5171\u7f51\u5173\u63a5\u53e3\uff08CGI\uff09"),(0,i.kt)("h1",{id:"qt-\u6846\u67b6"},"qt \u6846\u67b6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.bookstack.cn/read/qt-study-road-2/b173882cafb6bb28.md"},"https://www.bookstack.cn/read/qt-study-road-2/b173882cafb6bb28.md")),(0,i.kt)("p",null,"\u4e0d\u518d\u9700\u8981\u7814\u7a76 STL\uff0c\u4e0d\u518d\u9700\u8981 C++ \u7684 ",(0,i.kt)("inlineCode",{parentName:"p"},"<string>"),"\uff0c\u4e0d\u518d\u9700\u8981\u5230\u5904\u53bb\u627e\u89e3\u6790 XML\u3001\u8fde\u63a5\u6570\u636e\u5e93\u3001\u8bbf\u95ee\u7f51\u7edc\u7684\u5404\u79cd\u7b2c\u4e09\u65b9\u5e93\uff0c\u56e0\u4e3a Qt \u81ea\u5df1\u5185\u7f6e\u4e86"),(0,i.kt)("p",null,"\u63d0\u4f9b gui \u5e93"),(0,i.kt)("h1",{id:"\u5f00\u53d1\u5de5\u5177"},"\u5f00\u53d1\u5de5\u5177"),(0,i.kt)("p",null,"Qt Creator, CLion, vscode"),(0,i.kt)("h1",{id:"debug-\u5de5\u5177"},"debug \u5de5\u5177"),(0,i.kt)("p",null,"valgrind, \u7528\u6765\u5206\u6790\u7a0b\u5e8f\u9519\u8bef"),(0,i.kt)("h1",{id:"\u62fe\u9057"},"\u62fe\u9057"),(0,i.kt)("h2",{id:"\u6307\u9488\u7684\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u533a\u522b"},"\u6307\u9488\u7684\u6307\u9488\u548c\u4e8c\u7ef4\u6570\u7ec4\u7684\u533a\u522b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/40973588/answer/91761240"},"https://www.zhihu.com/question/40973588/answer/91761240")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<stdio.h>\n  2 int main (void)\n  3 {\n  4     int a[2][3] = {{1,2,3},{4,5,6}};\n  5     int ** array_ptr = a; // \u9519\u8bef, a \u662f\u4e00\u4e2a\u6307\u5411 a \u8fd9\u4e2a\u6570\u7ec4\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u6307\u9488, \u800c\u7b2c\u4e00\u4e2a\u5143\u7d20\u8fd8\u662f\u4e00\u4e2a\u6570\u7ec4, \u6240\u4ee5 a \u662f\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488; array_ptr \u4ee3\u8868\u4e00\u4e2a\u6307\u9488\u7684\u5730\u5740, \u5373\u6307\u5411\u6307\u9488\u7684\u6307\u9488, \u660e\u663e\u4e0d\u662f\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\n         // \u6539\u6210\u8fd9\u6837\u65e2\u53ef:\n         int (*array_ptr)[3] = a;\n\n         \n  6     printf("%d\\n",a[0][0]);\n  8     printf("%p\\n",a);\n  9     printf("%p\\n",*a);\n 10     printf("%p\\n",array_ptr);\n 11     printf("%p\\n",*array_ptr);\n 12     return 0;\n 13 }\n')))}u.isMDXComponent=!0}}]);