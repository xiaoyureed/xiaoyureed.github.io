"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7223],{3905:function(n,e,t){t.d(e,{Zo:function(){return u},kt:function(){return d}});var a=t(67294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function l(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?l(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)t=l[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var s=a.createContext({}),o=function(n){var e=a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=o(n.components);return a.createElement(s.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,l=n.originalType,s=n.parentName,u=p(n,["components","mdxType","originalType","parentName"]),c=o(t),d=r,h=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return t?a.createElement(h,i(i({ref:e},u),{},{components:t})):a.createElement(h,i({ref:e},u))}));function d(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var l=t.length,i=new Array(l);i[0]=c;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=n,p.mdxType="string"==typeof n?n:r,i[1]=p;for(var o=2;o<l;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},32793:function(n,e,t){t.r(e),t.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return p},metadata:function(){return o},toc:function(){return m}});var a=t(83117),r=t(80102),l=(t(67294),t(3905)),i=["components"],p={title:"Python\ud83c\udf08",date:new Date("2015-02-10T22:19:59.000Z"),tags:["python"],toc_min_heading_level:2,toc_max_heading_level:5},s=void 0,o={unversionedId:"python-note",id:"python-note",title:"Python\ud83c\udf08",description:"https://github.com/vinta/awesome-python",source:"@site/docs/python-note.md",sourceDirName:".",slug:"/python-note",permalink:"/docs/python-note",draft:!1,tags:[{label:"python",permalink:"/docs/tags/python"}],version:"current",frontMatter:{title:"Python\ud83c\udf08",date:"2015-02-10T22:19:59.000Z",tags:["python"],toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"psychology",permalink:"/docs/psychology"},next:{title:"\u91cf\u5316\u4ea4\u6613",permalink:"/docs/quant-money"}},u={},m=[{value:"1.1. python \u7279\u70b9",id:"11-python-\u7279\u70b9",level:2},{value:"1.2. python \u5b89\u88c5",id:"12-python-\u5b89\u88c5",level:2},{value:"1.3. python\u5347\u7ea7",id:"13-python\u5347\u7ea7",level:2},{value:"1.4. vscode \u73af\u5883\u914d\u7f6e",id:"14-vscode-\u73af\u5883\u914d\u7f6e",level:2},{value:"1.5. \u8bbe\u7f6e\u56fd\u5185pip\u6e90",id:"15-\u8bbe\u7f6e\u56fd\u5185pip\u6e90",level:2},{value:"1.6. \u89e3\u91ca\u5668",id:"16-\u89e3\u91ca\u5668",level:2},{value:"1.7. kite \u63d2\u4ef6\u4f7f\u7528",id:"17-kite-\u63d2\u4ef6\u4f7f\u7528",level:2},{value:"2.1. \u8f93\u5165\u8f93\u51fa \u6253\u5370 main\u9b54\u6cd5\u53d8\u91cf",id:"21-\u8f93\u5165\u8f93\u51fa-\u6253\u5370-main\u9b54\u6cd5\u53d8\u91cf",level:2},{value:"2.2. \u57fa\u672c\u6570\u636e\u7c7b\u578b",id:"22-\u57fa\u672c\u6570\u636e\u7c7b\u578b",level:2},{value:"2.2.1. \u5b57\u7b26\u4e32",id:"221-\u5b57\u7b26\u4e32",level:3},{value:"2.2.1.1. \u591a\u884c \u4e0d\u53ef\u53d8 \u6bd4\u8f83",id:"2211-\u591a\u884c-\u4e0d\u53ef\u53d8-\u6bd4\u8f83",level:4},{value:"2.2.1.2. \u7f16\u7801 \u5b57\u7b26\u5904\u7406",id:"2212-\u7f16\u7801-\u5b57\u7b26\u5904\u7406",level:4},{value:"2.2.1.3. \u683c\u5f0f\u5316",id:"2213-\u683c\u5f0f\u5316",level:4},{value:"2.2.1.4. \u5b57\u7b26\u4e32\u65b9\u6cd5",id:"2214-\u5b57\u7b26\u4e32\u65b9\u6cd5",level:4},{value:"2.2.2. \u5b57\u8282 bytes",id:"222-\u5b57\u8282-bytes",level:3},{value:"2.2.3. \u6570\u5b57",id:"223-\u6570\u5b57",level:3},{value:"2.2.4. \u5e03\u5c14\u503c \u7a7a\u503c",id:"224-\u5e03\u5c14\u503c-\u7a7a\u503c",level:3},{value:"2.2.5. \u96c6\u5408",id:"225-\u96c6\u5408",level:3},{value:"2.2.5.1. \u6709\u5e8f\u53ef\u53d8 list",id:"2251-\u6709\u5e8f\u53ef\u53d8-list",level:4},{value:"2.2.5.2. \u5207\u7247 slices",id:"2252-\u5207\u7247-slices",level:4},{value:"2.2.5.3. \u6709\u5e8f\u4e0d\u53ef\u53d8\u5217\u8868 tuple",id:"2253-\u6709\u5e8f\u4e0d\u53ef\u53d8\u5217\u8868-tuple",level:4},{value:"2.2.5.4. \u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d set",id:"2254-\u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d-set",level:4},{value:"2.2.6. \u952e\u503c\u5b58\u50a8 \u5b57\u5178 dict",id:"226-\u952e\u503c\u5b58\u50a8-\u5b57\u5178-dict",level:3},{value:"2.2.7. \u5217\u8868\u63a8\u5bfc\u5f0f",id:"227-\u5217\u8868\u63a8\u5bfc\u5f0f",level:3},{value:"2.2.8. \u751f\u6210\u5668 generator",id:"228-\u751f\u6210\u5668-generator",level:3},{value:"2.2.9. \u8fed\u4ee3\u5668",id:"229-\u8fed\u4ee3\u5668",level:3},{value:"2.3. \u6761\u4ef6\u5faa\u73af",id:"23-\u6761\u4ef6\u5faa\u73af",level:2},{value:"2.4. \u6bd4\u8f83\u5224\u65ad",id:"24-\u6bd4\u8f83\u5224\u65ad",level:2},{value:"2.5. \u51fd\u6570",id:"25-\u51fd\u6570",level:2},{value:"2.5.1. \u53c2\u6570\u68c0\u67e5",id:"251-\u53c2\u6570\u68c0\u67e5",level:3},{value:"2.5.2. \u591a\u79cd\u53c2\u6570",id:"252-\u591a\u79cd\u53c2\u6570",level:3},{value:"2.5.3. \u9012\u5f52",id:"253-\u9012\u5f52",level:3},{value:"2.5.4. \u9ad8\u9636\u51fd\u6570",id:"254-\u9ad8\u9636\u51fd\u6570",level:3},{value:"2.6. \u6587\u4ef6\u5904\u7406",id:"26-\u6587\u4ef6\u5904\u7406",level:2},{value:"2.6.1. \u521b\u5efa\u6587\u4ef6",id:"261-\u521b\u5efa\u6587\u4ef6",level:3},{value:"2.6.2. \u8bfb\u5199\u6587\u4ef6\u6570\u636e",id:"262-\u8bfb\u5199\u6587\u4ef6\u6570\u636e",level:3},{value:"2.7. \u88c5\u9970\u5668",id:"27-\u88c5\u9970\u5668",level:2},{value:"2.8. \u6a21\u5757 \u4f5c\u7528\u57df",id:"28-\u6a21\u5757-\u4f5c\u7528\u57df",level:2},{value:"2.9. \u9762\u5411\u5bf9\u8c61",id:"29-\u9762\u5411\u5bf9\u8c61",level:2},{value:"2.9.1. \u7c7b",id:"291-\u7c7b",level:3},{value:"2.9.2. \u7ee7\u627f \u9e2d\u5b50\u7c7b\u578b",id:"292-\u7ee7\u627f-\u9e2d\u5b50\u7c7b\u578b",level:3},{value:"2.9.3. \u5224\u65ad\u7c7b\u578b\u4fe1\u606f",id:"293-\u5224\u65ad\u7c7b\u578b\u4fe1\u606f",level:3},{value:"2.9.4. \u52a8\u6001\u64cd\u4f5c",id:"294-\u52a8\u6001\u64cd\u4f5c",level:3},{value:"2.9.5. \u9b54\u672f\u65b9\u6cd5",id:"295-\u9b54\u672f\u65b9\u6cd5",level:3},{value:"2.9.6. \u679a\u4e3e",id:"296-\u679a\u4e3e",level:3},{value:"2.9.7. \u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5",id:"297-\u5b9e\u4f8b\u65b9\u6cd5-\u7c7b\u65b9\u6cd5-\u9759\u6001\u65b9\u6cd5",level:3},{value:"2.10. \u9519\u8bef\u5f02\u5e38\u5904\u7406",id:"210-\u9519\u8bef\u5f02\u5e38\u5904\u7406",level:2},{value:"cookiecutter \u9879\u76ee\u6a21\u677f",id:"cookiecutter-\u9879\u76ee\u6a21\u677f",level:2},{value:"3.1. \u5305\u7ba1\u7406",id:"31-\u5305\u7ba1\u7406",level:2},{value:"poetry",id:"poetry",level:3},{value:"\u683c\u5f0f\u5316",id:"\u683c\u5f0f\u5316",level:2},{value:"\u4ee3\u7801\u68c0\u6d4b",id:"\u4ee3\u7801\u68c0\u6d4b",level:2},{value:"3.2. \u65e5\u5fd7",id:"32-\u65e5\u5fd7",level:2},{value:"\u751f\u6210\u6587\u6863",id:"\u751f\u6210\u6587\u6863",level:2},{value:"\u4efb\u52a1\u81ea\u52a8\u5316",id:"\u4efb\u52a1\u81ea\u52a8\u5316",level:2},{value:"3.3. \u5355\u5143\u6d4b\u8bd5",id:"33-\u5355\u5143\u6d4b\u8bd5",level:2},{value:"6.1. \u65e5\u671f\u5904\u7406",id:"61-\u65e5\u671f\u5904\u7406",level:2},{value:"6.2. \u96c6\u5408",id:"62-\u96c6\u5408",level:2},{value:"7.1. \u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168",id:"71-\u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168",level:2},{value:"9.1. \u65ad\u8a00",id:"91-\u65ad\u8a00",level:2},{value:"9.2. \u8bbe\u7f6e\u65ad\u70b9 pdb",id:"92-\u8bbe\u7f6e\u65ad\u70b9-pdb",level:2},{value:"11.1. \u6587\u4ef6\u8def\u5f84 and \u7ec8\u7aef\u8def\u5f84",id:"111-\u6587\u4ef6\u8def\u5f84-and-\u7ec8\u7aef\u8def\u5f84",level:2},{value:"11.2. \u83b7\u53d6\u811a\u672c\u4f4d\u7f6e",id:"112-\u83b7\u53d6\u811a\u672c\u4f4d\u7f6e",level:2},{value:"14.1. fastapi",id:"141-fastapi",level:2},{value:"14.2. Django",id:"142-django",level:2},{value:"14.3. flask",id:"143-flask",level:2},{value:"14.3.1. flask\u89e3\u51b3\u8de8\u57df\u95ee\u9898",id:"1431-flask\u89e3\u51b3\u8de8\u57df\u95ee\u9898",level:3},{value:"14.3.2. \u4fdd\u62a4 flask api",id:"1432-\u4fdd\u62a4-flask-api",level:3},{value:"14.3.3. \u547d\u4ee4\u884cor idea \u542f\u52a8",id:"1433-\u547d\u4ee4\u884cor-idea-\u542f\u52a8",level:3},{value:"14.3.4. rest api",id:"1434-rest-api",level:3},{value:"14.3.5. \u6570\u636e\u5e93\u4ea4\u4e92",id:"1435-\u6570\u636e\u5e93\u4ea4\u4e92",level:3},{value:"14.3.6. flask \u4e2d\u7684\u65e5\u5fd7",id:"1436-flask-\u4e2d\u7684\u65e5\u5fd7",level:3},{value:"14.3.7. blueprint\u84dd\u56fe \u6a21\u5757\u5316\u5f00\u53d1",id:"1437-blueprint\u84dd\u56fe-\u6a21\u5757\u5316\u5f00\u53d1",level:3},{value:"14.3.8. \u4e0a\u4e0b\u6587\u5bf9\u8c61",id:"1438-\u4e0a\u4e0b\u6587\u5bf9\u8c61",level:3},{value:"14.4. fastapi",id:"144-fastapi",level:2},{value:"16.1. \u5b9e\u7528\u811a\u672c",id:"161-\u5b9e\u7528\u811a\u672c",level:2},{value:"16.1.1. \u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790",id:"1611-\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790",level:3},{value:"16.1.2. \u8def\u5f84",id:"1612-\u8def\u5f84",level:3},{value:"16.1.3. \u6587\u4ef6\u64cd\u4f5c",id:"1613-\u6587\u4ef6\u64cd\u4f5c",level:3},{value:"16.1.4. sh \u547d\u4ee4\u6267\u884c",id:"1614-sh-\u547d\u4ee4\u6267\u884c",level:3},{value:"16.2. \u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570",id:"162-\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570",level:2},{value:"16.3. shell \u8c03\u7528 Python",id:"163-shell-\u8c03\u7528-python",level:2},{value:"16.3.1. shel \u8bfb\u53d6 Python \u51fd\u6570\u8fd4\u56de\u503c",id:"1631-shel-\u8bfb\u53d6-python-\u51fd\u6570\u8fd4\u56de\u503c",level:3},{value:"16.3.2. \u7edf\u8ba1\u51fa\u73b0\u6b21\u6570",id:"1632-\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570",level:3},{value:"16.3.3. \u8bfb\u53d6 csv \u6587\u4ef6",id:"1633-\u8bfb\u53d6-csv-\u6587\u4ef6",level:3},{value:"16.4. Python \u8c03\u7528 shell",id:"164-python-\u8c03\u7528-shell",level:2},{value:"16.4.1. subprocess",id:"1641-subprocess",level:3},{value:"16.4.2. os.system",id:"1642-ossystem",level:3},{value:"16.4.3. os.popen",id:"1643-ospopen",level:3},{value:"16.4.4. system",id:"1644-system",level:3},{value:"16.4.5. sh",id:"1645-sh",level:3},{value:"16.4.6. paramiko",id:"1646-paramiko",level:3},{value:"16.5. \u90e8\u7f72 springboot",id:"165-\u90e8\u7f72-springboot",level:2},{value:"17.1. \u53d8\u58f0 \u8bed\u97f3\u5408\u6210",id:"171-\u53d8\u58f0-\u8bed\u97f3\u5408\u6210",level:2},{value:"17.2. \u7cfb\u7edf\u8fd0\u7ef4",id:"172-\u7cfb\u7edf\u8fd0\u7ef4",level:2},{value:"17.3. \u58f0\u97f3",id:"173-\u58f0\u97f3",level:2},{value:"17.4. \u56fe\u50cf",id:"174-\u56fe\u50cf",level:2},{value:"17.5. \u6570\u636e\u6a21\u578b\u5b9a\u4e49",id:"175-\u6570\u636e\u6a21\u578b\u5b9a\u4e49",level:2},{value:"17.6. \u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316",id:"176-\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316",level:2},{value:"17.7. web \u6846\u67b6",id:"177-web-\u6846\u67b6",level:2},{value:"21.1. \u751f\u6210\u4f9d\u8d56\u6e05\u5355",id:"211-\u751f\u6210\u4f9d\u8d56\u6e05\u5355",level:2},{value:"21.2. gunicorn",id:"212-gunicorn",level:2},{value:"21.3. supervisord \u7ba1\u7406 daemon",id:"213-supervisord-\u7ba1\u7406-daemon",level:2}],c={toc:m};function d(n){var e=n.components,t=(0,r.Z)(n,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/vinta/awesome-python"},"https://github.com/vinta/awesome-python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.pythonweekly.com/"},"https://www.pythonweekly.com/")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://python-patterns.guide/"},"https://python-patterns.guide/")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/faif/python-patterns?utm_source=bestxtools.com"},"https://github.com/faif/python-patterns?utm_source=bestxtools.com")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/qiandao-today/qiandao"},"https://github.com/qiandao-today/qiandao")," \u7b7e\u5230\u6846\u67b6"),(0,l.kt)("p",null,"\u6280\u672f\u6808 Flask \u3001peewee \u3001Celery \u3001MySQL \u3001Redis"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/xuanhun/PythonHackingBook1"},"https://github.com/xuanhun/PythonHackingBook1")," \u9ed1\u5ba2"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.osgeo.cn/python-guide/scenarios/web.html#heroku"},"https://www.osgeo.cn/python-guide/scenarios/web.html#heroku"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://learnku.com/docs/python-guide/2018/structure/3260#f294d6"},"https://learnku.com/docs/python-guide/2018/structure/3260#f294d6")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://learnku.com/articles/23010/teach-you-to-read-the-python-open-source-project-code"},"https://learnku.com/articles/23010/teach-you-to-read-the-python-open-source-project-code")," \u4ee3\u7801\u9605\u8bfb"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wistbean/learn_python3_spider"},"https://github.com/wistbean/learn_python3_spider")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/dataabc/weiboSpider"},"https://github.com/dataabc/weiboSpider")," \u5fae\u535a\u722c\u866b"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/andyzys/jd_seckill"},"https://github.com/andyzys/jd_seckill")," \u4eac\u4e1c \u79d2\u6740"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/Jack-Cherish/python-spider"},"https://github.com/Jack-Cherish/python-spider")," \u722c\u866b\u6559\u7a0b  \u8fc7\u671f\u4e86\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/librauee/Reptile"},"https://github.com/librauee/Reptile")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wkunzhi/Python3-Spider"},"https://github.com/wkunzhi/Python3-Spider")," \u722c\u866b\u5b9e\u6218"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/shidenggui/pit"},"https://github.com/shidenggui/pit")," python\u7ec3\u4e60\u5c0f\u9879\u76ee"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/beancount/beancount"},"https://github.com/beancount/beancount")," \u7eaf\u6587\u672c\u8bb0\u8d26\u7cfb\u7edf"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jackzhenguo/python-small-examples"},"https://github.com/jackzhenguo/python-small-examples")," \u5c0f\u4f8b\u5b50"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jackfrued/Python-100-Days"},"https://github.com/jackfrued/Python-100-Days")," "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/521xueweihan"},"https://github.com/521xueweihan")," Python"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jackfrued"},"https://github.com/jackfrued")," Python \u5927\u725b"),(0,l.kt)("p",null,"python \u5b66\u4e60\u7b14\u8bb0;\nreferences: ",(0,l.kt)("a",{parentName:"p",href:"https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000"},"1"),", ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yidao620c/python3-cookbook"},"2"),"\n\u7b97\u6cd5\u5b9e\u73b0: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yidao620c/core-algorithm%EF%BC%8C"},"https://github.com/yidao620c/core-algorithm\uff0c")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/billryan/algorithm-exercise"},"https://github.com/billryan/algorithm-exercise"),"\nscrapy \u722c\u866b: ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/yidao620c/core-scrapy"},"https://github.com/yidao620c/core-scrapy")),(0,l.kt)("p",null,'"\u6d41\u7545\u7684 Python" fluent python\n\u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801:\u6539\u5584 Python \u7a0b\u5e8f\u7684 91 \u4e2a\u5efa\u8bae\neffective Python: \u7f16\u5199\u9ad8\u8d28\u91cf\u4ee3\u7801\u768459 \u4e2a\u4ee3\u7801'),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/HT524/500LineorLess_CN"},"https://github.com/HT524/500LineorLess_CN")," \u5b9e\u73b0\u7b80\u5355\u7cfb\u7edf"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/iswbm/pycharm-guide"},"https://github.com/iswbm/pycharm-guide"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/iswbm"},"https://github.com/iswbm")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/24132781"},"https://zhuanlan.zhihu.com/p/24132781")," \u7ecf\u9a8c\u7b80\u5386"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lalor"},"https://github.com/lalor")," \u8fd0\u7ef4\u5927\u725b"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/jobbole/awesome-python-cn"},"https://github.com/jobbole/awesome-python-cn"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/vinta/awesome-python"},"https://github.com/vinta/awesome-python")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://python-web-guide.readthedocs.io/zh/latest/index.html"},"https://python-web-guide.readthedocs.io/zh/latest/index.html")," \u5de5\u7a0b\u5b9e\u8df5 \u7ecf\u9a8c\u5206\u4eab"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://learnku.com/docs/python-guide/2018"},"https://learnku.com/docs/python-guide/2018")," \u6280\u672f\u6808"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://bramblexu.com/posts/b1c0cc4f/#toc-heading-5"},"https://bramblexu.com/posts/b1c0cc4f/#toc-heading-5")," vscode \u914d\u7f6e "),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/19827960"},"https://www.zhihu.com/question/19827960")," \u6307\u7684\u5173\u6ce8\u7684\u793e\u533a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1-%E4%BB%8B%E7%BB%8D"},"1. \u4ecb\u7ecd"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#11-python-%E7%89%B9%E7%82%B9"},"1.1. python \u7279\u70b9")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#12-python-%E5%AE%89%E8%A3%85"},"1.2. python \u5b89\u88c5")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#13-python%E5%8D%87%E7%BA%A7"},"1.3. python\u5347\u7ea7")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#14-vscode-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE"},"1.4. vscode \u73af\u5883\u914d\u7f6e")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#15-%E8%AE%BE%E7%BD%AE%E5%9B%BD%E5%86%85pip%E6%BA%90"},"1.5. \u8bbe\u7f6e\u56fd\u5185pip\u6e90")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#16-%E8%A7%A3%E9%87%8A%E5%99%A8"},"1.6. \u89e3\u91ca\u5668")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#17-kite-%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8"},"1.7. kite \u63d2\u4ef6\u4f7f\u7528")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2-%E8%AF%AD%E6%B3%95"},"2. \u8bed\u6cd5"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#21-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA-%E6%89%93%E5%8D%B0-main%E9%AD%94%E6%B3%95%E5%8F%98%E9%87%8F"},"2.1. \u8f93\u5165\u8f93\u51fa \u6253\u5370 main\u9b54\u6cd5\u53d8\u91cf")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#22-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"},"2.2. \u57fa\u672c\u6570\u636e\u7c7b\u578b"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#221-%E5%AD%97%E7%AC%A6%E4%B8%B2"},"2.2.1. \u5b57\u7b26\u4e32"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2211-%E5%A4%9A%E8%A1%8C-%E4%B8%8D%E5%8F%AF%E5%8F%98-%E6%AF%94%E8%BE%83"},"2.2.1.1. \u591a\u884c \u4e0d\u53ef\u53d8 \u6bd4\u8f83")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2212-%E7%BC%96%E7%A0%81-%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86"},"2.2.1.2. \u7f16\u7801 \u5b57\u7b26\u5904\u7406")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2213-%E6%A0%BC%E5%BC%8F%E5%8C%96"},"2.2.1.3. \u683c\u5f0f\u5316")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2214-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%96%B9%E6%B3%95"},"2.2.1.4. \u5b57\u7b26\u4e32\u65b9\u6cd5")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#222-%E5%AD%97%E8%8A%82-bytes"},"2.2.2. \u5b57\u8282 bytes")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#223-%E6%95%B0%E5%AD%97"},"2.2.3. \u6570\u5b57")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#224-%E5%B8%83%E5%B0%94%E5%80%BC-%E7%A9%BA%E5%80%BC"},"2.2.4. \u5e03\u5c14\u503c \u7a7a\u503c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#225-%E9%9B%86%E5%90%88"},"2.2.5. \u96c6\u5408"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2251-%E6%9C%89%E5%BA%8F%E5%8F%AF%E5%8F%98-list"},"2.2.5.1. \u6709\u5e8f\u53ef\u53d8 list")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2252-%E5%88%87%E7%89%87-slices"},"2.2.5.2. \u5207\u7247 slices")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2253-%E6%9C%89%E5%BA%8F%E4%B8%8D%E5%8F%AF%E5%8F%98%E5%88%97%E8%A1%A8-tuple"},"2.2.5.3. \u6709\u5e8f\u4e0d\u53ef\u53d8\u5217\u8868 tuple")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#2254-%E6%97%A0%E5%BA%8F%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D-set"},"2.2.5.4. \u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d set")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#226-%E9%94%AE%E5%80%BC%E5%AD%98%E5%82%A8-%E5%AD%97%E5%85%B8-dict"},"2.2.6. \u952e\u503c\u5b58\u50a8 \u5b57\u5178 dict")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#227-%E5%88%97%E8%A1%A8%E6%8E%A8%E5%AF%BC%E5%BC%8F"},"2.2.7. \u5217\u8868\u63a8\u5bfc\u5f0f")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#228-%E7%94%9F%E6%88%90%E5%99%A8-generator"},"2.2.8. \u751f\u6210\u5668 generator")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#229-%E8%BF%AD%E4%BB%A3%E5%99%A8"},"2.2.9. \u8fed\u4ee3\u5668")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#23-%E6%9D%A1%E4%BB%B6%E5%BE%AA%E7%8E%AF"},"2.3. \u6761\u4ef6\u5faa\u73af")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#24-%E6%AF%94%E8%BE%83%E5%88%A4%E6%96%AD"},"2.4. \u6bd4\u8f83\u5224\u65ad")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#25-%E5%87%BD%E6%95%B0"},"2.5. \u51fd\u6570"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#251-%E5%8F%82%E6%95%B0%E6%A3%80%E6%9F%A5"},"2.5.1. \u53c2\u6570\u68c0\u67e5")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#252-%E5%A4%9A%E7%A7%8D%E5%8F%82%E6%95%B0"},"2.5.2. \u591a\u79cd\u53c2\u6570")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#253-%E9%80%92%E5%BD%92"},"2.5.3. \u9012\u5f52")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#254-%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0"},"2.5.4. \u9ad8\u9636\u51fd\u6570")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#26-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86"},"2.6. \u6587\u4ef6\u5904\u7406"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#261-%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6"},"2.6.1. \u521b\u5efa\u6587\u4ef6")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#262-%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE"},"2.6.2. \u8bfb\u5199\u6587\u4ef6\u6570\u636e")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#27-%E8%A3%85%E9%A5%B0%E5%99%A8"},"2.7. \u88c5\u9970\u5668")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#28-%E6%A8%A1%E5%9D%97-%E4%BD%9C%E7%94%A8%E5%9F%9F"},"2.8. \u6a21\u5757 \u4f5c\u7528\u57df")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#29-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1"},"2.9. \u9762\u5411\u5bf9\u8c61"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#291-%E7%B1%BB"},"2.9.1. \u7c7b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#292-%E7%BB%A7%E6%89%BF-%E9%B8%AD%E5%AD%90%E7%B1%BB%E5%9E%8B"},"2.9.2. \u7ee7\u627f \u9e2d\u5b50\u7c7b\u578b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#293-%E5%88%A4%E6%96%AD%E7%B1%BB%E5%9E%8B%E4%BF%A1%E6%81%AF"},"2.9.3. \u5224\u65ad\u7c7b\u578b\u4fe1\u606f")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#294-%E5%8A%A8%E6%80%81%E6%93%8D%E4%BD%9C"},"2.9.4. \u52a8\u6001\u64cd\u4f5c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#295-%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95"},"2.9.5. \u9b54\u672f\u65b9\u6cd5")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#296-%E6%9E%9A%E4%B8%BE"},"2.9.6. \u679a\u4e3e")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#297-%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95-%E7%B1%BB%E6%96%B9%E6%B3%95-%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95"},"2.9.7. \u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#210-%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86"},"2.10. \u9519\u8bef\u5f02\u5e38\u5904\u7406")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#3-%E5%B7%A5%E7%A8%8B%E5%8C%96"},"3. \u5de5\u7a0b\u5316"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#cookiecutter-%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF"},"cookiecutter \u9879\u76ee\u6a21\u677f")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#31-%E5%8C%85%E7%AE%A1%E7%90%86"},"3.1. \u5305\u7ba1\u7406"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#poetry"},"poetry")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#%E6%A0%BC%E5%BC%8F%E5%8C%96"},"\u683c\u5f0f\u5316")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#%E4%BB%A3%E7%A0%81%E6%A3%80%E6%B5%8B"},"\u4ee3\u7801\u68c0\u6d4b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#32-%E6%97%A5%E5%BF%97"},"3.2. \u65e5\u5fd7")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#%E7%94%9F%E6%88%90%E6%96%87%E6%A1%A3"},"\u751f\u6210\u6587\u6863")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#%E4%BB%BB%E5%8A%A1%E8%87%AA%E5%8A%A8%E5%8C%96"},"\u4efb\u52a1\u81ea\u52a8\u5316")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#33-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95"},"3.3. \u5355\u5143\u6d4b\u8bd5")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#4-%E5%A4%9A%E8%BF%9B%E7%A8%8B"},"4. \u591a\u8fdb\u7a0b")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#5-%E5%BC%82%E6%AD%A5"},"5. \u5f02\u6b65")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#6-%E5%86%85%E5%BB%BA%E6%A8%A1%E5%9D%97"},"6. \u5185\u5efa\u6a21\u5757"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#61-%E6%97%A5%E6%9C%9F%E5%A4%84%E7%90%86"},"6.1. \u65e5\u671f\u5904\u7406")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#62-%E9%9B%86%E5%90%88"},"6.2. \u96c6\u5408")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#7-%E7%BC%96%E5%86%99%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%A8%8B%E5%BA%8F"},"7. \u7f16\u5199\u547d\u4ee4\u884c\u7a0b\u5e8f"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#71-%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8"},"7.1. \u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#8-%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F-type-hint"},"8. \u7c7b\u578b\u7cfb\u7edf type-hint")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#9-%E8%B0%83%E8%AF%95"},"9. \u8c03\u8bd5"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#91-%E6%96%AD%E8%A8%80"},"9.1. \u65ad\u8a00")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#92-%E8%AE%BE%E7%BD%AE%E6%96%AD%E7%82%B9-pdb"},"9.2. \u8bbe\u7f6e\u65ad\u70b9 pdb")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#10-jinja2-%E6%A8%A1%E6%9D%BF"},"10. jinja2 \u6a21\u677f")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#11-%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98"},"11. \u8def\u5f84\u95ee\u9898"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#111-%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84-and-%E7%BB%88%E7%AB%AF%E8%B7%AF%E5%BE%84"},"11.1. \u6587\u4ef6\u8def\u5f84 and \u7ec8\u7aef\u8def\u5f84")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#112-%E8%8E%B7%E5%8F%96%E8%84%9A%E6%9C%AC%E4%BD%8D%E7%BD%AE"},"11.2. \u83b7\u53d6\u811a\u672c\u4f4d\u7f6e")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#12-shutil-%E4%BD%BF%E7%94%A8"},"12. shutil \u4f7f\u7528")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#13-venv-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83"},"13. venv \u865a\u62df\u73af\u5883")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#14-web-%E5%BC%80%E5%8F%91"},"14. web \u5f00\u53d1"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#141-fastapi"},"14.1. fastapi")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#142-django"},"14.2. Django")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#143-flask"},"14.3. flask"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1431-flask%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98"},"14.3.1. flask\u89e3\u51b3\u8de8\u57df\u95ee\u9898")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1432-%E4%BF%9D%E6%8A%A4-flask-api"},"14.3.2. \u4fdd\u62a4 flask api")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1433-%E5%91%BD%E4%BB%A4%E8%A1%8Cor-idea-%E5%90%AF%E5%8A%A8"},"14.3.3. \u547d\u4ee4\u884cor idea \u542f\u52a8")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1434-rest-api"},"14.3.4. rest api")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1435-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%A4%E4%BA%92"},"14.3.5. \u6570\u636e\u5e93\u4ea4\u4e92")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1436-flask-%E4%B8%AD%E7%9A%84%E6%97%A5%E5%BF%97"},"14.3.6. flask \u4e2d\u7684\u65e5\u5fd7")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1437-blueprint%E8%93%9D%E5%9B%BE-%E6%A8%A1%E5%9D%97%E5%8C%96%E5%BC%80%E5%8F%91"},"14.3.7. blueprint\u84dd\u56fe \u6a21\u5757\u5316\u5f00\u53d1")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1438-%E4%B8%8A%E4%B8%8B%E6%96%87%E5%AF%B9%E8%B1%A1"},"14.3.8. \u4e0a\u4e0b\u6587\u5bf9\u8c61")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#144-fastapi"},"14.4. fastapi")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#15-db-%E9%A9%B1%E5%8A%A8-%E9%97%AE%E9%A2%98"},"15. db \u9a71\u52a8 \u95ee\u9898")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#16-%E4%BB%A3%E6%9B%BF-shell-%E8%BF%90%E7%BB%B4"},"16. \u4ee3\u66ff shell \u8fd0\u7ef4"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#161-%E5%AE%9E%E7%94%A8%E8%84%9A%E6%9C%AC"},"16.1. \u5b9e\u7528\u811a\u672c"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1611-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E8%A7%A3%E6%9E%90"},"16.1.1. \u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1612-%E8%B7%AF%E5%BE%84"},"16.1.2. \u8def\u5f84")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1613-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C"},"16.1.3. \u6587\u4ef6\u64cd\u4f5c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1614-sh-%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C"},"16.1.4. sh \u547d\u4ee4\u6267\u884c")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#162-%E4%BC%A0%E9%80%92%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0"},"16.2. \u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#163-shell-%E8%B0%83%E7%94%A8-python"},"16.3. shell \u8c03\u7528 Python"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1631-shel-%E8%AF%BB%E5%8F%96-python-%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC"},"16.3.1. shel \u8bfb\u53d6 Python \u51fd\u6570\u8fd4\u56de\u503c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1632-%E7%BB%9F%E8%AE%A1%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0"},"16.3.2. \u7edf\u8ba1\u51fa\u73b0\u6b21\u6570")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1633-%E8%AF%BB%E5%8F%96-csv-%E6%96%87%E4%BB%B6"},"16.3.3. \u8bfb\u53d6 csv \u6587\u4ef6")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#164-python-%E8%B0%83%E7%94%A8-shell"},"16.4. Python \u8c03\u7528 shell"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1641-subprocess"},"16.4.1. subprocess")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1642-ossystem"},"16.4.2. os.system")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1643-ospopen"},"16.4.3. os.popen")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1644-system"},"16.4.4. system")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1645-sh"},"16.4.5. sh")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#1646-paramiko"},"16.4.6. paramiko")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#165-%E9%83%A8%E7%BD%B2-springboot"},"16.5. \u90e8\u7f72 springboot")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#17-%E5%BC%80%E6%BA%90%E5%BA%93"},"17. \u5f00\u6e90\u5e93"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#171-%E5%8F%98%E5%A3%B0-%E8%AF%AD%E9%9F%B3%E5%90%88%E6%88%90"},"17.1. \u53d8\u58f0 \u8bed\u97f3\u5408\u6210")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#172-%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4"},"17.2. \u7cfb\u7edf\u8fd0\u7ef4")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#173-%E5%A3%B0%E9%9F%B3"},"17.3. \u58f0\u97f3")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#174-%E5%9B%BE%E5%83%8F"},"17.4. \u56fe\u50cf")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#175-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B%E5%AE%9A%E4%B9%89"},"17.5. \u6570\u636e\u6a21\u578b\u5b9a\u4e49")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#176-%E5%BA%8F%E5%88%97%E5%8C%96%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96"},"17.6. \u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#177-web-%E6%A1%86%E6%9E%B6"},"17.7. web \u6846\u67b6")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#18-jython"},"18. jython")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#19-%E8%B0%83%E7%94%A8-rust"},"19. \u8c03\u7528 rust")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#20-cffi-%E7%BB%91%E5%AE%9A"},"20. cffi \u7ed1\u5b9a")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#21-web%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2"},"21. web\u5e94\u7528\u90e8\u7f72"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#211-%E7%94%9F%E6%88%90%E4%BE%9D%E8%B5%96%E6%B8%85%E5%8D%95"},"21.1. \u751f\u6210\u4f9d\u8d56\u6e05\u5355")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#212-gunicorn"},"21.2. gunicorn")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#213-supervisord-%E7%AE%A1%E7%90%86-daemon"},"21.3. supervisord \u7ba1\u7406 daemon")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#22-setuppy"},"22. setup.py")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#23-wheel"},"23. wheel")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#24-%E8%87%AA%E5%8A%A8%E6%8A%A2%E8%B4%AD%E8%84%9A%E6%9C%AC"},"24. \u81ea\u52a8\u62a2\u8d2d\u811a\u672c")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#25-%E8%BF%90%E7%BB%B4%E5%B7%A5%E5%85%B7"},"25. \u8fd0\u7ef4\u5de5\u5177")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#26-%E6%89%93%E5%8C%85%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6"},"26. \u6253\u5305\u53ef\u6267\u884c\u6587\u4ef6"))),(0,l.kt)("h1",{id:"1-\u4ecb\u7ecd"},"1. \u4ecb\u7ecd"),(0,l.kt)("h2",{id:"11-python-\u7279\u70b9"},"1.1. python \u7279\u70b9"),(0,l.kt)("p",null,"python \u4f5c\u4e3a\u811a\u672c\u8bed\u8a00, \u65b9\u6cd5\u5b9a\u4e49\u8c03\u7528\u6709\u524d\u540e\u987a\u5e8f"),(0,l.kt)("p",null,"\u5e93\u591a"),(0,l.kt)("p",null,"\u80f6\u6c34\u8bed\u8a00, cpp \u4ea4\u4e92\u65b9\u4fbf"),(0,l.kt)("p",null,"\u9762\u5411\u5bf9\u8c61, \u7c7b\u4f3c ruby, \u4f46\u662f\u6ca1\u6709 ruby \u9762\u5411\u5bf9\u8c61\u7eaf\u7cb9"),(0,l.kt)("h2",{id:"12-python-\u5b89\u88c5"},"1.2. python \u5b89\u88c5"),(0,l.kt)("p",null,"wls \u9ed8\u8ba4\u88c5\u7684\u662f python2"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u66f4\u65b0\u6e90\napt-get update\n# \u5b89\u88c5 (\u6211\u7684wls \u662f Ubuntu)\napt-get install python3\n# \u9a8c\u8bc1\npython3 --version\n\n")),(0,l.kt)("h2",{id:"13-python\u5347\u7ea7"},"1.3. python\u5347\u7ea7"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/dotnetcrazy/p/9360831.html"},"https://www.cnblogs.com/dotnetcrazy/p/9360831.html")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://npm.taobao.org/mirrors"},"http://npm.taobao.org/mirrors")," Python \u538b\u7f29\u5305\u955c\u50cf\u4e0b\u8f7d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"wget http://npm.taobao.org/mirrors/python/3.9.4/Python-3.9.4.tgz\ntar -xzvf Python-3.9.4.tgz\n# \u8bbe\u7f6e\u4e00\u4e0b\u914d\u7f6e\u6587\u4ef6\ncd Pythonxxx\n./configure prefix=/usr/local/python3.7\n# centos\n# \uff08yum\u5b89\u88c5\u6ca1\u6709apt\u5b89\u88c5\u65b9\u4fbf\uff09\nmake && make install\n# \u8bbe\u7f6e\u8f6f\u94fe\u63a5\uff1a\nln -s /usr/local/python3/bin/python3 /usr/bin/python3\n\n\n\n")),(0,l.kt)("h2",{id:"14-vscode-\u73af\u5883\u914d\u7f6e"},"1.4. vscode \u73af\u5883\u914d\u7f6e"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/remote/wsl#_getting-started"},"wsl \u4e2d\u4f7f\u7528 vscode")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/u014775723/article/details/85213793"},"wsl install python3.7, \u4fee\u6539\u5feb\u6377\u65b9\u5f0f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# install python\nsudo apt-get install python3.7\n# check py version\npython3 --version\n# install pip3\napt-get install python3-pip\n# check pip version\npip3 --version\n\n")),(0,l.kt)("p",null,"vscode \u5b89\u88c5\u5b8c python \u63d2\u4ef6\u540e, \u4f1a\u6709 pylint (\u540c\u7c7b flake8) \u63d2\u4ef6\u5b89\u88c5\u63d0\u793a, \u4e5f\u53ef\u80fd\u6ca1\u6709 pylint \u5b89\u88c5\u63d0\u793a, \u90a3\u4e48\u9700\u8981\u624b\u52a8\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"p"},".vscode/settings.json"),":"),(0,l.kt)("p",null,"(pylint \u6bd4 flake8 \u66f4\u4e25\u683c\uff0c\u95ee\u9898\u63cf\u8ff0\u4e5f\u66f4\u7cbe\u51c6\uff0c\u901f\u5ea6\u8f83\u540e\u8005\u6162\u4e00\u4e9b\u3002pylint \u7684\u4e25\u683c\u4e0d\u5982\u8bf4\u6709\u4e9b\u4e25\u82db\u4e86\uff0c\u7ecf\u5e38\u5570\u91cc\u5570\u55e6\u62a5\u51fa\u4e00\u5927\u4e32\u95ee\u9898\uff0c\u6839\u636e\u573a\u666f\u4e0d\u540c\uff0c\u53ef\u80fd\u9700\u8981\u914d\u7f6e\u8bb8\u591a\u5ffd\u7565\u9879)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'"python.pythonPath": "/usr/bin/python",\n  "python.linting.pylintEnabled": true,\n  "python.linting.enabled": true\n')),(0,l.kt)("p",null,"autopep8 \u683c\u5f0f\u5316\u4ee3\u7801\u5e93, vscode \u4f1a\u81ea\u52a8\u63d0\u793a (\u540c\u7c7b\u662f black, yapf)"),(0,l.kt)("p",null,"Coverage \u6709\u591a\u79cd\u5411\u4f60\u62a5\u544a\u6d4b\u8bd5\u8986\u76d6\u7387\u7684\u65b9\u5f0f\uff0c\u5305\u62ec\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u6216 HTML \u9875\u9762\uff0c\u5e76\u63d0\u793a\u54ea\u4e9b\u884c\u53f7\u6ca1\u6709\u8986\u76d6\u5230\u3002\u4f60\u53ef\u4ee5\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\u4ee5\u81ea\u5b9a\u4e49 Coverage \u68c0\u67e5\u7684\u5185\u5bb9\u5e76\u4f7f\u5176\u66f4\u4fbf\u4e8e\u8fd0\u884c"),(0,l.kt)("h2",{id:"15-\u8bbe\u7f6e\u56fd\u5185pip\u6e90"},"1.5. \u8bbe\u7f6e\u56fd\u5185pip\u6e90"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"sudo vim ~/.pip/pip.conf  \n\n[global] \nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n[install]\ntrusted-host = https://pypi.tuna.tsinghua.edu.cn  # trusted-host \u6b64\u53c2\u6570\u662f\u4e3a\u4e86\u907f\u514d\u9ebb\u70e6\uff0c\u5426\u5219\u4f7f\u7528\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u63d0\u793a\u4e0d\u53d7\u4fe1\u4efb\n\n")),(0,l.kt)("p",null,"or"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/"},"https://mirrors.tuna.tsinghua.edu.cn/help/pypi/")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u963f\u91cc\u4e91 http://mirrors.aliyun.com/pypi/simple/\n\n\u4e2d\u56fd\u79d1\u6280\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/\n\n\u8c46\u74e3(douban) http://pypi.douban.com/simple/ \u6e05\u534e\u5927\u5b66\n\nhttps://pypi.tuna.tsinghua.edu.cn/simple/ \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\n\nhttp://pypi.mirrors.ustc.edu.cn/simple/\n\n")),(0,l.kt)("h2",{id:"16-\u89e3\u91ca\u5668"},"1.6. \u89e3\u91ca\u5668"),(0,l.kt)("p",null,"CPython (\u9ed8\u8ba4)"),(0,l.kt)("p",null,"PyPy, \u91c7\u7528 JIT \u6280\u672f\uff0c\u5bf9 Python \u4ee3\u7801\u8fdb\u884c\u52a8\u6001\u7f16\u8bd1, PyPy \u548c CPython \u6709\u4e00\u4e9b\u662f\u4e0d\u540c\u7684\uff0c\u8fd9\u5c31\u5bfc\u81f4\u76f8\u540c\u7684 Python \u4ee3\u7801\u5728\u4e24\u79cd\u89e3\u91ca\u5668\u4e0b\u6267\u884c\u53ef\u80fd\u4f1a\u6709\u4e0d\u540c\u7684\u7ed3\u679c"),(0,l.kt)("p",null,"Jython, \u76f4\u63a5\u628a Python \u4ee3\u7801\u7f16\u8bd1\u6210 Java \u5b57\u8282\u7801\u6267\u884c"),(0,l.kt)("p",null,"IronPython, \u628a Python \u4ee3\u7801\u7f16\u8bd1\u6210.Net \u7684\u5b57\u8282\u7801\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u8981\u548c Java \u6216.Net \u5e73\u53f0\u4ea4\u4e92\uff0c\u6700\u597d\u7684\u529e\u6cd5\u4e0d\u662f\u7528 Jython \u6216 IronPython\uff0c\u800c\u662f\u901a\u8fc7\u7f51\u7edc\u8c03\u7528\u6765\u4ea4\u4e92\uff0c\u786e\u4fdd\u5404\u7a0b\u5e8f\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002"),(0,l.kt)("h2",{id:"17-kite-\u63d2\u4ef6\u4f7f\u7528"},"1.7. kite \u63d2\u4ef6\u4f7f\u7528"),(0,l.kt)("h1",{id:"2-\u8bed\u6cd5"},"2. \u8bed\u6cd5"),(0,l.kt)("h2",{id:"21-\u8f93\u5165\u8f93\u51fa-\u6253\u5370-main\u9b54\u6cd5\u53d8\u91cf"},"2.1. \u8f93\u5165\u8f93\u51fa \u6253\u5370 main\u9b54\u6cd5\u53d8\u91cf"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n# \u4ee5\u4e0a\u4e24\u884c\u8868\u793apython \u89e3\u91ca\u5668\u7248\u672c\uff1b\u4ee5utf-8\u7f16\u7801\n\n# \u6a21\u5757\u7684\u6587\u6863\u6ce8\u91ca\n' a test module '\n\n__author__ = 'xiaoyu'\n\n\ndef hello_print():\n    '''\u65b9\u6cd5\u6ce8\u91ca\n    \u53ef\u4ee5\u901a\u8fc7 hello_print.__doc__ \u83b7\u53d6, \u6216\u8005 help(hello_print) \u83b7\u53d6\u6587\u6863\u5b57\u7b26\u4e32\n    '''\n    print(\"Hello world!\")\n    print(\"aa\", \"bb\", \"ccc\")  # \u7c7b\u4f3c\n\n    # \u95f4\u9694\n    print(1, 2, 3, sep=\"   \")  # 1   2   3\n    # \u4e0d\u6362\u884c\n    print('hello', end='')\n    print('\u6ca1\u6362\u884c')  # hello\u6ca1\u6362\u884c\n\n    # \u547d\u4ee4\u884c\u8f93\u5165\n    # name = input('please enter your name: ')\n    # print(name)\n\n\n# \n# \u547d\u4ee4\u884cimport\u65b9\u5f0f\u8c03 \u672c\u6587\u4ef6\u4e2d\u7684\u65b9\u6cd5, \u5c06\u4e0d\u8fdb\u5165if\u5224\u65ad\uff0c\u6b64\u65f6\u901a\u8fc7 main.xxx() \u8c03\u7528\n# \u5982\u679c\u76f4\u63a5 python main.py, \u5219\u8fdb\u5165 if\nif __name__ == \"__main__\":\n    hello_print()\n\n")),(0,l.kt)("h2",{id:"22-\u57fa\u672c\u6570\u636e\u7c7b\u578b"},"2.2. \u57fa\u672c\u6570\u636e\u7c7b\u578b"),(0,l.kt)("h3",{id:"221-\u5b57\u7b26\u4e32"},"2.2.1. \u5b57\u7b26\u4e32"),(0,l.kt)("h4",{id:"2211-\u591a\u884c-\u4e0d\u53ef\u53d8-\u6bd4\u8f83"},"2.2.1.1. \u591a\u884c \u4e0d\u53ef\u53d8 \u6bd4\u8f83"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u5b57\u7b26\u4e32\n    a='a'\n    b=\"b\"\n    c=\"I'm xy.\"\n    d='I\\'m \\\"OK\\\"!'\n    # r'' \u5f62\u5f0f\u7684\u9ed8\u8ba4\u4e0d\u8f6c\u4e49\n    e=r'\\\\\\t\\\\'\n    f='''\u591a\u884c\u5185\u5bb9'''\n\n\n# str \u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61\n    # \u4e0d\u53ef\u53d8\u5bf9\u8c61\u4e0d\u53ef\u4fee\u6539\uff0c\u4e00\u65e6\u4fee\u6539\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61, \u4e5f\u5c31\u662f id(a) \u7684\u5730\u5740\u4e0d\u540c\u4e86\n    # >>> a = 'abc'\n    # >>> a.replace('a', 'A')\n    # 'Abc'\n    # >>> a\n    # 'abc'\n\n\n# \u6bd4\u8f83\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c \u4f7f\u7528 ==, \u8fd9\u70b9\u548c java \u4e0d\u540c\n# \u4e0d\u8981\u4f7f\u7528 is, is \u6bd4\u8f83\u7684\u662f \u5f15\u7528\u5730\u5740\u662f\u5426\u76f8\u540c, == \u6bd4\u8f83\u7684\u624d\u662f\u662f\u5185\u5bb9\n# is, is not \u5bf9\u6bd4\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u7684\u5185\u5b58\u5730\u5740\n# ==,!= \u5bf9\u6bd4\u7684\u662f\u4e24\u4e2a\u53d8\u91cf\u7684\u503c\nif 'ab' == 'ab':\n    print('ab == ab')\n")),(0,l.kt)("h4",{id:"2212-\u7f16\u7801-\u5b57\u7b26\u5904\u7406"},"2.2.1.2. \u7f16\u7801 \u5b57\u7b26\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"}," ### \u7f16\u7801\u5904\u7406 \u5b57\u7b26\u5904\u7406\n    #\n    # \u5b57\u7b26\n    # \u5b57\u7b26\u7f16\u7801\n    # ord:\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3aASCII    bin:\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\n    # oct:\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u516b\u8fdb\u5236    hex:\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u621016\u8fdb\u5236\n    #>>> ord('A')\n    #65\n    #>>> ord('\u4e2d')\n    #20013\n    #>>> chr(66)\n    #'B'\n    #>>> chr(25991)\n    #'\u6587'\n    #>>> 'u4e2du6587'\n    #'\u4e2d\u6587'\n\n    # s1=u\u2019\u54c8\u2019\n    # type(u\u2019\u54c8\u2019)\uff0c\u5219\u4f1a\u5f97\u5230<type \u2018unicode\u2019>\uff0c\u4e5f\u5c31\u662f\u5728\u5b57\u7b26\u524d\u9762\u52a0u\u5c31\u8868\u660e\u8fd9\u662f\u4e00\u4e2aunicode\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5b57\u4f1a\u4ee5unicode\u683c\u5f0f\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\n    # \u5982\u679c\u4e0d\u52a0u\uff0c\u8868\u660e\u8fd9\u4ec5\u4ec5\u662f\u4e00\u4e2a\u4f7f\u7528\u67d0\u79cd\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u7f16\u7801\u683c\u5f0f\u53d6\u51b3\u4e8epython\u5bf9\u6e90\u7801\u6587\u4ef6\u7f16\u7801\u7684\u8bc6\u522b\uff0c\u5982 # -*- coding: utf-8 -*-\n    # https://www.cnblogs.com/yyxayz/p/4044528.html\n\n\n    # \u5b57\u8282\n    # \u5982\u679c\u8981\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\uff0c\u6216\u8005\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\uff0c\u5c31\u9700\u8981\u628astr\u53d8\u4e3a\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684bytes\u3002\n    # Python\u5bf9bytes\u7c7b\u578b\u7684\u6570\u636e\u7528\u5e26b\u524d\u7f00\u7684\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u8868\u793a\uff1a\n    # x = b'ABC'\n    # # print(\"hello...\")\n    # >>> 'ABC'.encode('ascii')\n    # b'ABC'\n    # >>> '\u4e2d\u6587'.encode('utf-8')\n    # b'xe4xb8xadxe6x96x87'\n    # >>> b'ABC'.decode('ascii')\n    # 'ABC'\n    # >>>b'xe4xb8xadxe6x96x87'.decode('utf-8')\n    # '\u4e2d\u6587'\n    # >>> len('ABC')\n    # 3\n    # >>> len('\u4e2d\u6587')\n    # 2\n")),(0,l.kt)("h4",{id:"2213-\u683c\u5f0f\u5316"},"2.2.1.3. \u683c\u5f0f\u5316"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# \u683c\u5f0f\u5316 \u5360\u4f4d\u7b26\n    #\n    # %s\u8868\u793a\u7528\u5b57\u7b26\u4e32\u66ff\u6362\uff0c%d\u8868\u793a\u7528\u6574\u6570\u66ff\u6362\uff0c\u6709\u51e0\u4e2a%?\u5360\u4f4d\u7b26\uff0c\u540e\u9762\u5c31\u8ddf\u51e0\u4e2a\u53d8\u91cf\u6216\u8005\u503c\uff0c\u987a\u5e8f\u8981\u5bf9\u5e94\u597d\u3002\u5982\u679c\u53ea\u6709\u4e00\u4e2a%?\uff0c\u62ec\u53f7\u53ef\u4ee5\u7701\u7565\n    # \u5982\u679c\u4f60\u4e0d\u592a\u786e\u5b9a\u5e94\u8be5\u7528\u4ec0\u4e48\uff0c%s\u6c38\u8fdc\u8d77\u4f5c\u7528\uff0c\u5b83\u4f1a\u628a\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\n    print(\'Hi, %s, you have $%d.\' % (\'Michael\', 1000000))\n    # \'Hi, Michael, you have $1000000.\'\n    #\n    print("{} {}".format("hello", "world"))   # \u4e0d\u8bbe\u7f6e\u6307\u5b9a\u4f4d\u7f6e\uff0c\u6309\u9ed8\u8ba4\u987a\u5e8f\n    print("{0} {1}".format("hello", "world"))  # \u8bbe\u7f6e\u6307\u5b9a\u4f4d\u7f6e\n    print(\'hello {name}\'.format(name=\'xiaoyu\'))\n    # \u901a\u8fc7\u5b57\u5178\u8bbe\u7f6e\u53c2\u6570\n    site = {"name": "xi", "url": "xiaoyureed.github.io"}\n    print("\u7f51\u7ad9\u540d\uff1a{name}, \u5730\u5740 {url}".format(**site))\n    # \u901a\u8fc7\u5217\u8868\u7d22\u5f15\u8bbe\u7f6e\u53c2\u6570\n    my_list = [\'hello\', \'world\']\n    print("\u7f51\u7ad9\u540d\uff1a{0[0]}, \u5730\u5740 {0[1]}".format(my_list))  # "0" \u662f\u5fc5\u987b\u7684\n    # \u4f20\u5165\u4e00\u4e2a\u5bf9\u8c61 \n    # my_value = {"value": "hello"}\n    # print(\'value \u4e3a: {0.value}\'.format(my_value))  # "0" \u662f\u53ef\u9009\u7684, my_value \u5bf9\u8c61\u9700\u8981\u6709 value \u5c5e\u6027\n\n    # \u683c\u5f0f\u5316\u6570\u5b57\n    print("{:.2f}".format(3.1415926))  # 3.14\n')),(0,l.kt)("h4",{id:"2214-\u5b57\u7b26\u4e32\u65b9\u6cd5"},"2.2.1.4. \u5b57\u7b26\u4e32\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n #\n    # \u5b57\u7b26\u4e32\u5904\u7406\u65b9\u6cd5\n    #\n    #\n    len(b'ABC')  # 3\n    len(b'xe4xb8xadxe6x96x87')  # 6\n    len('\u4e2d\u6587'.encode('utf-8'))\n    # 6\n\n    # count(xxx) \u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u6b21\u6570\n    # \u8ba1\u7b97\u884c\u6570\n    myString = '''line1\nsf\nsdfsf\nsdfs\n    '''\n    print(myString)\n    c = myString.count(\"\\n\")+(not myString.endswith(\"\\n\"))\n    print(c)  # 5\n    # or\n    c1 = myString.count(\"\\n\")+[1, 0][myString.endswith(\"\\n\")]\n    print(c1)  # 5\n\n    # \u67e5\u627e\n    find = myString.find(\"sf\")\n    print(\"find = \", find)  # 6, \u4ece 0 \u5f00\u59cb, \u7b2c 6 \u4e2a\u5b57\u7b26\n    find1 = myString.find(\"220\")\n    print(\"find1 =  \", find1)  # -1\n    \n    if 'world' in string:\n        xxx\n\n    # \u5207\u5272\u4e3a list\n    string = \"hello\\nworld xxx yyy zzz\"\n    print(string.split(\"\\n\"))  # ['hello', 'world xxx yyy zzz']\n    # \u4ee5 sep \u4e3a\u5206\u9694\u7b26\u5207\u7247 string\uff0c\u5982\u679c maxsplit \u6709\u6307\u5b9a\u503c\uff0c\u5219\u6700\u591a\u5207\u5272\u591a\u5c11\u6b21 (\u5fc5\u987b\u5e26\u4e0a maxsplit)\n    print(string.split(sep='o', maxsplit=1))  # ['hell', '\\nworld xxx yyy zzz']\n    #\u6309\u7167\u884c('\\r', '\\r\\n', \\n')\u5206\u9694\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5404\u884c\u4f5c\u4e3a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5982\n    # \u679c\u53c2\u6570 keepends \u4e3a False\uff0c\u4e0d\u5305\u542b\u6362\u884c\u7b26\uff0c\u5982\u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u6362\u884c\u7b26\u3002\u9ed8\u8ba4 false\n    print(string.splitlines(True)) # ['hello\\n', 'world xxx yyy zzz']\n    print(string.splitlines(False)) # ['hello', 'world xxx yyy zzz']\n    print(string.splitlines()) # ['hello', 'world xxx yyy zzz']\n\n\n    # \u5207\u5272\u6210 tuple\n    #\n    #\u6709\u70b9\u50cf find()\u548c split()\u7684\u7ed3\u5408\u4f53,\u4ece str \u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u8d77,\u628a \u5b57 \u7b26 \u4e32 string \u5206\n    #\u6210 \u4e00 \u4e2a 3 \u5143 \u7d20 \u7684 \u5143 \u7ec4 (string_pre_str,str,string_post_str),\u5982\n    # \u679c string \u4e2d\u4e0d\u5305\u542bstr \u5219 string_pre_str == string.\n    print(string.partition('w') ) # ('hello\\n', 'w', 'orld xxx yyy zzz')\n\n    # string.rpartition(str) #\u7c7b\u4f3c\u4e8e partition()\u51fd\u6570,\u4e0d\u8fc7\u662f\u4ece\u53f3\u8fb9\u5f00\u59cb\u67e5\u627e\n\n\n    # # \u62fc\u63a5\n    print('\\n'.join(['aaa', 'bbb', 'ccc']))\n\n    # # \u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a \u5b57\u7b26\u5217\u8868\n    print(list(\"12345\")) # ['1', '2', '3', '4', '5']\n\n    # # \n    #\n    #  \u5e38\u7528\u5185\u5efa\u51fd\u6570\n    #\n    #\n    # # strip() \n    # \u7528\u4e8e\u79fb\u9664\u5b57\u7b26\u4e32\u5934\u5c3e\u6307\u5b9a\u7684\u5b57\u7b26\uff08\u9ed8\u8ba4\u4e3a\u7a7a\u683c\u6216\u6362\u884c\u7b26\uff09\u6216\u5b57\u7b26\u5e8f\u5217\n    str = \"00000003210Runoob01230000000\"\n    # \u79fb\u9664\u6307\u5b9a\u5b57\u7b26\n    print(str.strip( '0' ))  # 3210Runoob0123\n    str2 = \"   Runoob      \"   # Runoob\n    # \u9ed8\u8ba4\u662f\u79fb\u9664\u7a7a\u683c\n    print(str2.strip())\n    str = \"123abcrunoob321\"\n    # \u6307\u5b9a\u7684\u5b57\u7b26\u6ca1\u6709\u987a\u5e8f\u4e4b\u5206\n    print (str.strip( '12' ))  # 3abcrunoob3\n\n    string = \"   hello    \"\n    string = string.lstrip()#\u622a\u6389 string \u5de6\u8fb9\u7684\u7a7a\u683c\n    string = string.rstrip()#\u5220\u9664 string \u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c.\n    print(\"string = \" + string)\n\n\n    print(string.capitalize()) # \u628a\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5927\u5199\n    # string.lower()#\u8f6c\u6362 string \u4e2d\u6240\u6709\u5927\u5199\u5b57\u7b26\u4e3a\u5c0f\u5199.\n    # string.upper()#\u8f6c\u6362 string \u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u4e3a\u5927\u5199\n    # string.swapcase()#\u7ffb\u8f6c string \u4e2d\u7684\u5927\u5c0f\u5199\n    # string.title()#\u8fd4\u56de\"\u6807\u9898\u5316\"\u7684 string,\u5c31\u662f\u8bf4\u6240\u6709\u5355\u8bcd\u90fd\u662f\u4ee5\u5927\u5199\u5f00\u59cb\uff0c\u5176\u4f59\u5b57\u6bcd\u5747\u4e3a\u5c0f\u5199(\u89c1 istitle())\n\n    # string.center(width) #\u8fd4\u56de\u4e00\u4e2a\u539f\u5b57\u7b26\u4e32\u5c45\u4e2d,\u5e76\u4f7f\u7528\u7a7a\u683c\u586b\u5145\u81f3\u957f\u5ea6 width \u7684\u65b0\u5b57\u7b26\u4e32\n    # string.ljust(width)#\u8fd4\u56de\u4e00\u4e2a\u539f\u5b57\u7b26\u4e32\u5de6\u5bf9\u9f50,\u5e76\u4f7f\u7528\u7a7a\u683c\u586b\u5145\u81f3\u957f\u5ea6 width \u7684\u65b0\u5b57\u7b26\u4e32\n    # string.rjust(width)#\u8fd4\u56de\u4e00\u4e2a\u539f\u5b57\u7b26\u4e32\u53f3\u5bf9\u9f50,\u5e76\u4f7f\u7528\u7a7a\u683c\u586b\u5145\u81f3\u957f\u5ea6 width \u7684\u65b0\u5b57\u7b26\u4e32\n    # string.zfill(width)#\u8fd4\u56de\u957f\u5ea6\u4e3a width \u7684\u5b57\u7b26\u4e32\uff0c\u539f\u5b57\u7b26\u4e32 string \u53f3\u5bf9\u9f50\uff0c\u524d\u9762\u586b\u51450\n\n    # \u8fd4\u56de str \u5728 string \u91cc\u9762\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u5982\u679c beg \u6216\u8005 end \u6307\u5b9a\u5219\u8fd4\u56de\u6307\u5b9a\u8303\u56f4\u5185 str \u51fa\u73b0\u7684\u6b21\u6570\n    string = \"xsdf aa sfefaafsef\"\n    print(string.count(\"aa\")) # 2\n    print(string.count(\"aa\", 7, len(string))) # 1\n\n    #\u4ee5 encoding \u6307\u5b9a\u7684\u7f16\u7801\u683c\u5f0f\u89e3\u7801 string\uff0c\u5982\u679c\u51fa\u9519\u9ed8\u8ba4\u62a5\u4e00\u4e2a ValueError \u7684 \u5f02 \u5e38 \uff0c \n    # \u9664\u975e errors \u6307 \u5b9a \u7684 \u662f 'ignore' \u6216 \u8005'replace'\n    # string.decode(encoding='UTF-8', errors='strict') \n    # string.encode(encoding='UTF-8', errors='strict')\n\n\n    # string.endswith(obj, beg=0, end=len(string))#\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5 obj \u7ed3\u675f\uff0c\u5982\u679cbeg \u6216\u8005 end \u6307\u5b9a\u5219\u68c0\u67e5\u6307\u5b9a\u7684\u8303\u56f4\u5185\u662f\u5426\u4ee5 obj \u7ed3\u675f\uff0c\u5982\u679c\u662f\uff0c\u8fd4\u56de True,\u5426\u5219\u8fd4\u56de False.\n    # string.startswith(obj, beg=0,end=len(string))#\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u662f\u4ee5 obj \u5f00\u5934\uff0c\u662f\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002\u5982\u679cbeg \u548c end \u6307\u5b9a\u503c\uff0c\u5219\u5728\u6307\u5b9a\u8303\u56f4\u5185\u68c0\u67e5.\n\n    # string.expandtabs(tabsize=8) #\u628a\u5b57\u7b26\u4e32 string \u4e2d\u7684 tab \u7b26\u53f7\u8f6c\u4e3a\u7a7a\u683c\uff0ctab \u7b26\u53f7\u9ed8\u8ba4\u7684\u7a7a\u683c\u6570\u662f 8\u3002\n\n    # string.find(str, beg=0, end=len(string)) #\u68c0\u6d4b str \u662f\u5426\u5305\u542b\u5728 string \u4e2d\uff0c\u5982\u679c beg \u548c end \u6307\u5b9a\u8303\u56f4\uff0c\u5219\u68c0\u67e5\u662f\u5426\u5305\u542b\u5728\u6307\u5b9a\u8303\u56f4\u5185\uff0c\u5982\u679c\u662f\u8fd4\u56de\u5f00\u59cb\u7684\u7d22\u5f15\u503c\uff0c\u5426\u5219\u8fd4\u56de-1\n    # string.rfind(str, beg=0,end=len(string) )#\u7c7b\u4f3c\u4e8e find()\u51fd\u6570\uff0c\u4e0d\u8fc7\u662f\u4ece\u53f3\u8fb9\u5f00\u59cb\u67e5\u627e.\n\n    # string.index(str, beg=0, end=len(string)) #\u8ddffind()\u65b9\u6cd5\u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5982\u679cstr\u4e0d\u5728 string\u4e2d\u4f1a\u62a5\u4e00\u4e2a\u5f02\u5e38.\n    # string.rindex( str, beg=0,end=len(string))#\u7c7b\u4f3c\u4e8e index()\uff0c\u4e0d\u8fc7\u662f\u4ece\u53f3\u8fb9\u5f00\u59cb.\n\n    # string.isalnum()#\u5982\u679c string \u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u5e76\u4e14\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u6216\u6570\u5b57\u5219\u8fd4\u56de True,\u5426\u5219\u8fd4\u56de False\n    # string.isalpha() #\u5982\u679c string \u81f3\u5c11\u6709\u4e00\u4e2a\u5b57\u7b26\u5e76\u4e14\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u5219\u8fd4\u56de True,\u5426\u5219\u8fd4\u56de False\n\n    # string.isdecimal()#\u5982\u679c string \u53ea\u5305\u542b\u5341\u8fdb\u5236\u6570\u5b57\u5219\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False.\n    # string.isdigit()# \u5982\u679c string \u53ea\u5305\u542b\u6570\u5b57\u5219\u8fd4\u56de True \u5426\u5219\u8fd4\u56de False.\n    # string.isnumeric()#\u5982\u679c string \u4e2d\u53ea\u5305\u542b\u6570\u5b57\u5b57\u7b26\uff0c\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\n\n    # string.islower()#\u5982\u679c string \u4e2d\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u533a\u5206\u5927\u5c0f\u5199\u7684\u5b57\u7b26\uff0c\u5e76\u4e14\u6240\u6709\u8fd9\u4e9b(\u533a\u5206\u5927\u5c0f\u5199\u7684)\u5b57\u7b26\u90fd\u662f\u5c0f\u5199\uff0c\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\n    # string.isupper()#\u5982\u679c string \u4e2d\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u533a\u5206\u5927\u5c0f\u5199\u7684\u5b57\u7b26\uff0c\u5e76\u4e14\u6240\u6709\u8fd9\u4e9b(\u533a\u5206\u5927\u5c0f\u5199\u7684)\u5b57\u7b26\u90fd\u662f\u5927\u5199\uff0c\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\n\n    # string.isspace()#\u5982\u679c string \u4e2d\u53ea\u5305\u542b\u7a7a\u683c\uff0c\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False.\n\n    # string.istitle() #\u5982\u679c string \u662f\u6807\u9898\u5316\u7684(\u89c1 title())\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\n\n\n    # string.join(seq)#\u4ee5 string \u4f5c\u4e3a\u5206\u9694\u7b26\uff0c\u5c06 seq \u4e2d\u6240\u6709\u7684\u5143\u7d20(\u7684\u5b57\u7b26\u4e32\u8868\u793a)\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\n\n\n    # string.maketrans(intab, outtab]) #maketrans() \u65b9\u6cd5\u7528\u4e8e\u521b\u5efa\u5b57\u7b26\u6620\u5c04\u7684\u8f6c\u6362\u8868\uff0c\u5bf9\u4e8e\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\u7684\u6700\u7b80\u5355\u7684\u8c03\u7528\u65b9\u5f0f\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u9700\u8981\u8f6c\u6362\u7684\u5b57\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e5f\u662f\u5b57\u7b26\u4e32\u8868\u793a\u8f6c\u6362\u7684\u76ee\u6807\u3002\n\n    # max(str)#\u8fd4\u56de\u5b57\u7b26\u4e32 str \u4e2d\u6700\u5927\u7684\u5b57\u6bcd\u3002\n    # min(str)#\u8fd4\u56de\u5b57\u7b26\u4e32 str \u4e2d\u6700\u5c0f\u7684\u5b57\u6bcd\u3002\n\n    # string.replace(str1, str2,  num=string.count(str1)) #\u628a string \u4e2d\u7684 str1 \u66ff\u6362\u6210 str2,\u5982\u679c num \u6307\u5b9a\uff0c\u5219\u66ff\u6362\u4e0d\u8d85\u8fc7 num \u6b21.\n\n\n    # string.translate(str, del=\"\")#\u6839\u636e str \u7ed9\u51fa\u7684\u8868(\u5305\u542b 256 \u4e2a\u5b57\u7b26)\u8f6c\u6362 string \u7684\u5b57\u7b26, \u8981\u8fc7\u6ee4\u6389\u7684\u5b57\u7b26\u653e\u5230 del \u53c2\u6570\u4e2d\n")),(0,l.kt)("h3",{id:"222-\u5b57\u8282-bytes"},"2.2.2. \u5b57\u8282 bytes"),(0,l.kt)("p",null,"\u4e0d\u53ef\u53d8\u7684"),(0,l.kt)("h3",{id:"223-\u6570\u5b57"},"2.2.3. \u6570\u5b57"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# \u6574\u6570\n    c=2\n    a=0xff00  # 16\u8fdb\u5236\n\n    # \u6d6e\u70b9\u6570\n    #\n    # \u9664\u6cd5\u8ba1\u7b97\u7ed3\u679c\u662f\u6d6e\u70b9\u6570\uff0c\u5373\u4f7f\u662f\u4e24\u4e2a\u6574\u6570\u6070\u597d\u6574\u9664\uff0c\u7ed3\u679c\u4e5f\u662f\u6d6e\u70b9\u6570\n    a=1.24\n    b=3.33\n    c=1.23e9  # 1.23x10\u76849\u6b21\u65b9\n    d=1.2e-5  # 0.000012\n\n    \n    # \u7279\u6709\u7684\u8fd0\u7b97\u7b26\n    # 2**3 == 8 \u6b21\u5e42\n    # 9 // 2 == 4 \u9664\u6cd5\u53d6\u6574, \u79f0\u4e3a\u5730\u677f\u9664\uff0c\u4e24\u4e2a\u6574\u6570\u7684\u9664\u6cd5\u4ecd\u7136\u662f\u6574\u6570, \u53ea\u53d6\u7ed3\u679c\u7684\u6574\u6570\u90e8\u5206\n\n    # \u8f6c\u6362\n    age_str="11"\n    age_num=int(age_str)\n    print(age_num)\n\n    # \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6574\u578b\n    a="1,2,3"\n    print(a.isdecimal())  # False\n    print(a.isdigit())  # False\n    print("\u4e5d".isnumeric())  # True\n\n')),(0,l.kt)("h3",{id:"224-\u5e03\u5c14\u503c-\u7a7a\u503c"},"2.2.4. \u5e03\u5c14\u503c \u7a7a\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u5e03\u5c14\u503c\n    # \u53ea\u6709True\u3001False\u4e24\u79cd\u503c\n    # \u53ef\u4ee5\u7528and or not\u8fd0\u7b97\n\n    # \u7a7a\u503c\n    # \u7528None\u8868\u793a\u3002None\u4e0d\u80fd\u7406\u89e3\u4e3a0\n\n")),(0,l.kt)("h3",{id:"225-\u96c6\u5408"},"2.2.5. \u96c6\u5408"),(0,l.kt)("h4",{id:"2251-\u6709\u5e8f\u53ef\u53d8-list"},"2.2.5.1. \u6709\u5e8f\u53ef\u53d8 list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"}," #\n    #\n    ##### List \u53ef\u53d8\u6709\u5e8f\u5217\u8868\n    #\n    #\n    #\n    classmates = ['Michael', 'Bob', 'Tracy']\n    print(\"classmates = \", classmates) # ['Michael', 'Bob', 'Tracy']\n    print (len(classmates))\n\n    # \u83b7\u53d6\n    # # \u83b7\u53d6\u7b2c\u4e00\u4e2a\n    # >>> classmates[0]\n    # 'Michael'\n    # # \u6700\u540e\u4e00\u4e2a\u5143\u7d20\n    # >>> classmates[-1] \n    # or classmates[len(classmates) - 1]\n    # 'Tracy'\n    # # \u4ee5\u6b64\u7c7b\u63a8\uff0c\u53ef\u4ee5\u83b7\u53d6\u5012\u6570\u7b2c2\u4e2a\u3001\u5012\u6570\u7b2c3\u4e2a\uff1a\n    # >>> classmates[-2]\n    # 'Bob'\n\n    # \u67e5\u627e\n    # index() \u51fd\u6570\u7528\u4e8e\u4ece\u5217\u8868\u4e2d\u627e\u51fa\u67d0\u4e2a\u503c\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u7d22\u5f15\u4f4d\u7f6e\n        \n    # # \u6dfb\u52a0\u5230\u672b\u5c3e\n    # >>> classmates.append('Adam')\n    # >>> classmates ['Michael', 'Bob', 'Tracy', 'Adam']\n    # # \u6dfb\u52a0\u5230\u6307\u5b9a\u4f4d\u7f6e\n    # >>> classmates.insert(1, 'Jack')\n    # >>> classmates\n    # ['Michael', 'Jack', 'Bob', 'Tracy', 'Adam']\n    # # \u5220\u9664\u672b\u5c3e\u5143\u7d20\n    # >>> classmates.pop()\n    # 'Adam'\n    # # \u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n    # >>> classmates.pop(1)\n    # 'Jack'\n\n\n    #\n    # \u5e26\u4e0b\u6807\u904d\u5386\n    # enumerate()\u53ef\u4ee5\u5c06list\u53d8\u4e3a\u7d22\u5f15-\u5143\u7d20\u5bf9\n    # for i, value in enumerate([1,2,'3', '4']):\n    #     print(i, value)\n    #\n    # \u5224\u65ad\u5bf9\u8c61\u662f\u5426\u80fd\u8fed\u4ee3\n    # from collections import Iterable\n    # if (isinstance(\"acb\", Iterable)):\n    #     print('ok!')\n\n\n    \n\n    #\n    # \u5217\u8868\u751f\u6210\u5f0f\n    #\n    l = list(range(1,11))\n    print(l)\n    l1 = [x*x for x in l]\n    print(l1)\n    l2 = [x*x for x in l if x%2 ==0]\n    print(l2)\n\n    m = [x+y for x in 'abc' for y in 'ABC']\n    print(m)\n    import os\n    d = [d for d in os.listdir('.')]\n    print(d)\n")),(0,l.kt)("h4",{id:"2252-\u5207\u7247-slices"},"2.2.5.2. \u5207\u7247 slices"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# slices\n    #\n    #\n    l = list(range(10))\n    print(l)\n    print(l[0:3])\n    print(l[:3])\n    print(l[-1])\n    print(l[-1:])\n    print(l[-2:-1])\n    print(l[-2:])\n")),(0,l.kt)("h4",{id:"2253-\u6709\u5e8f\u4e0d\u53ef\u53d8\u5217\u8868-tuple"},"2.2.5.3. \u6709\u5e8f\u4e0d\u53ef\u53d8\u5217\u8868 tuple"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"}," # Tuple \u4e0d\u53ef\u53d8\u6709\u5e8f\u5217\u8868\n    #\n    # \u56e0\u4e3atuple\u4e0d\u53ef\u53d8\uff0c\u6240\u4ee5\u4ee3\u7801\u66f4\u5b89\u5168\u3002\u5982\u679c\u53ef\u80fd\uff0c\u80fd\u7528tuple\u4ee3\u66fflist\u5c31\u5c3d\u91cf\u7528tuple\n    # \n    # \u521b\u5efa\n    # >>> classmates = ('Michael', 'Bob', 'Tracy')\n    # # \u5b9a\u4e49\u7a7a\n    # >>> t = ()\n    # # \u5b9a\u4e49\u4e00\u4e2a\u5143\u7d20\u7684tuple\n    # \u4e3a\u4ec0\u4e48\u8fd9\u6837\u89c4\u5b9a?\n    # \u8fd9\u662f\u56e0\u4e3a\u62ec\u53f7()\u65e2\u53ef\u4ee5\u8868\u793atuple\uff0c\u53c8\u53ef\u4ee5\u8868\u793a\u6570\u5b66\u516c\u5f0f\u4e2d\u7684\u5c0f\u62ec\u53f7\uff0c\u8fd9\u5c31\u4ea7\u751f\u4e86\u6b67\u4e49.\u6240\u4ee5\uff0c\u53ea\u67091\u4e2a\u5143\u7d20\u7684tuple\u5b9a\u4e49\u65f6\u5fc5\u987b\u52a0\u4e00\u4e2a\u9017\u53f7,\uff0c\u6765\u6d88\u9664\u6b67\u4e49\n    # >>> t = (1,)\n    # >>> t\n    # (1,)\n    # # \u53ef\u53d8\u7684tuple\n    # >>> t = ('a', 'b', ['A', 'B'])\n    # >>> t[2][0] = 'X'\n    # >>> t[2][1] = 'Y'\n    # >>> t\n    # ('a', 'b', ['X', 'Y'])\n\n\n\n\n# \u547d\u540d\u7684 tuple\n# -*- coding: utf-8 -*-\n# author: xiaoyu 775000738@qq.com 2021/6/11\n\nfrom collections import namedtuple\nfrom random import choice\n\n\ndef named_tuple_intro():\n    # \u6bd4\u666e\u901a tuple \u66f4\u597d\u7684\u53ef\u8bfb\u6027, \u6613\u4e8e\u7ef4\u62a4\n    # \u6bd4\u5b57\u5178\u66f4\u52a0\u8f7b\u91cf\u9ad8\u6548\n\n    # \u6784\u9020\u4e00\u4e2a\u7c7b, \u7c7b\u540d People, \u5c5e\u6027 name, age, like\n    People = namedtuple('People', 'name, age, like')\n\n    # \u53ea\u8bfb, \u5c5e\u6027\u4e0d\u53ef\u4fee\u6539\n    person_a = People(name='zhang san', age=11, like=['apple', 'banana'])\n\n    print(person_a.name)\n    print(person_a[0])\n\n    # error\n    # person_a.name = 'bb'\n\n\ndef french_deck():\n    \"\"\"\n    \u6251\u514b\u6e38\u620f\n    \"\"\"\n    Card = namedtuple('Card', ['rank', 'suit'])\n\n    class FrenchDeck:\n        # \u70b9\u6570\n        ranks = [str(n) for n in range(2, 11) ] + list('JQKA')\n        # \u82b1\u8272\n        suits = '\u9ed1\u6843 \u65b9\u7247 \u6885\u82b1 \u7ea2\u6843'.split()\n\n        def __init__(self):\n            self._card = [Card(rank, suit) for suit in self.suits\n                          for rank in self.ranks]\n\n        def __len__(self):\n            return len(self._card)\n\n        # after this method defined, FrenchDeck will become a iterable obj\n        def __getitem__(self, item_index):\n            return self._card[item_index]\n\n    deck = FrenchDeck()\n    print(len(deck))\n    # \u7b2c\u4e00\u5f20\u724c\n    print(deck[0])\n    # \u6700\u540e\u4e00\u5f20\u724c\n    print(deck[-1])\n    cards = []\n    for card in deck:\n        cards.append(card)\n    print(cards)\n    reversed_cards = []\n    for card in reversed(deck):\n        reversed_cards.append(card)\n    print(reversed_cards)\n\n    # \u4ece iterable obj \u4e2d\u968f\u673a\u9009\u53d6\n    random_card = choice(deck)\n    print(random_card)\n\n    # \u5224\u65ad\u662f\u5426\u5b58\u5728\u4e8e\u96c6\u5408\u4e2d\n    print(Card('Q', '\u65b9\u7247') in deck)\n    print(Card('Q', 'block') in deck)\n\n    suit_values = dict(\u9ed1\u6843=3, \u65b9\u7247=2, \u6885\u82b1=1, \u7ea2\u6843=0)\n    print(suit_values)\n\n\nif __name__ == '__main__':\n    french_deck()\n\n")),(0,l.kt)("h4",{id:"2254-\u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d-set"},"2.2.5.4. \u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d set"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"  # Set \u65e0\u5e8f\u4e0d\u53ef\u91cd\u590d\n    #\n    #\u4e00\u7ec4 key \u7684\u96c6\u5408\uff0c\u4f46\u4e0d\u5b58\u50a8 value\uff0c\u6ca1\u6709\u91cd\u590d\u7684 key\uff0c\u65e0\u5e8f\n    #set \u548c dict \u7684\u552f\u4e00\u533a\u522b\u4ec5\u5728\u4e8e\u6ca1\u6709\u5b58\u50a8\u5bf9\u5e94\u7684 value\n    #\n    # \u8981\u521b\u5efa\u4e00\u4e2aset\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2alist\u4f5c\u4e3a\u8f93\u5165\u96c6\u5408\uff1a\n    # >>> s = set([1, 2, 3])\n    # >>> s\n    # {1, 2, 3}\n    # # \u6216\u8005\u76f4\u63a5 s = {1,2,3}\u521b\u5efa\n    # # \u91cd\u590d\u5143\u7d20\u5728set\u4e2d\u81ea\u52a8\u88ab\u8fc7\u6ee4\n    # >>> s = set([1, 1, 2, 2, 3, 3])\n    # >>> s\n    # {1, 2, 3}\n    # # \u6dfb\u52a0\u5143\u7d20\uff0c\u91cd\u590d\u6dfb\u52a0\u65e0\u6548\n    # >>> s.add(4)\n    # >>> s\n    # {1, 2, 3, 4}\n    # >>> s.add(4)\n    # >>> s\n    # {1, 2, 3, 4}\n    # # \u5220\u9664\n    # >>> s.remove(4)\n    # >>> s\n    # {1, 2, 3}\n    # # \u5e76\u96c6\u4ea4\u96c6\n    # >>> s1 = set([1, 2, 3])\n    # >>> s2 = set([2, 3, 4])\n    # >>> s1 & s2\n    # {2, 3}\n    # >>> s1 | s2\n    # {1, 2, 3, 4}\n\n")),(0,l.kt)("h3",{id:"226-\u952e\u503c\u5b58\u50a8-\u5b57\u5178-dict"},"2.2.6. \u952e\u503c\u5b58\u50a8 \u5b57\u5178 dict"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# Dict \u952e\u503c\u5b58\u50a8\n    #\n    # \u548c list \u6bd4\u8f83\uff0cdict \u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\uff1a\n    #\n    # 1.  \u67e5\u627e\u548c\u63d2\u5165\u7684\u901f\u5ea6\u6781\u5feb\uff0c\u4e0d\u4f1a\u968f\u7740 key \u7684\u589e\u52a0\u800c\u53d8\u6162\uff1b\n    # 2.  \u9700\u8981\u5360\u7528\u5927\u91cf\u7684\u5185\u5b58\uff0c\u5185\u5b58\u6d6a\u8d39\u591a\u3002\n    # 3.  Key \u662f\u4e0d\u53ef\u53d8\u5bf9\u8c61 \n    #     \u9700\u8981\u6211\u4eec\u81ea\u5df1\u5728\u4ee3\u7801\u4e2d\u4fdd\u8bc1 , \u56e0\u4e3adict\u6839\u636ekey\u6765\u8ba1\u7b97value\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u5982\u679c\u6bcf\u6b21\u8ba1\u7b97\u76f8\u540c\u7684key\u5f97\u51fa\u7684\u7ed3\u679c\u4e0d\u540c\uff0c\u90a3dict\u5185\u90e8\u5c31\u5b8c\u5168\u6df7\u4e71\u4e86\n    #     \u5728Python\u4e2d\uff0c\u5b57\u7b26\u4e32\u3001\u6574\u6570\u7b49\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u653e\u5fc3\u5730\u4f5c\u4e3akey\u3002\u800clist\u662f\u53ef\u53d8\u7684\uff0c\u5c31\u4e0d\u80fd\u4f5c\u4e3akey\n    #\n    # \u800c list \u76f8\u53cd\uff1a\n    # 1.  \u67e5\u627e\u548c\u63d2\u5165\u7684\u65f6\u95f4\u968f\u7740\u5143\u7d20\u7684\u589e\u52a0\u800c\u589e\u52a0\uff1b\n    # 2.  \u5360\u7528\u7a7a\u95f4\u5c0f\uff0c\u6d6a\u8d39\u5185\u5b58\u5f88\u5c11\u3002\n    # \u6240\u4ee5\uff0cdict \u662f\u7528\u7a7a\u95f4\u6765\u6362\u53d6\u65f6\u95f4\u7684\u4e00\u79cd\u65b9\u6cd5\u3002\n    #\n    # \u521b\u5efa\n    # >>> d = {'Michael': 95, 'Bob': 75, 'Tracy': 85}\n    # # \u83b7\u53d6\u503c\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u4f1a\u62a5\u9519\n    # >>> d['Michael']\n    # 95\n    # # \u6dfb\u52a0\u952e\u503c\u5bf9\n    # >>> d['Adam'] = 67\n    # >>> d['Adam']\n    # 67\n    # # \u6dfb\u52a0\u76f8\u540c\u7684\u952e\uff0c\u4f1a\u51b2\u6389\u5df2\u5b58\u5728\u7684\n    # >>> d['Jack'] = 90\n    # >>> d['Jack']\n    # 90\n    # >>> d['Jack'] = 88\n    # >>> d['Jack']\n    # 88 # \u4e3a\u4e86\u9632\u6b62\u62a5\u9519\uff0c\u5148\u5224\u65ad\u662f\u5426\u6709\u8be5\u952e\n    # >>> 'Thomas' in d\n    # False\n    # # \u6216\u8005\u901a\u8fc7get\u65b9\u6cd5\uff0c\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u6ca1\u6709\u8fd4\u56de\n    # >>> d.get('Thomas')\n    # >>> d.get('Thomas', -1)\n    # -1\n    # # \u5220\u9664\n    # >>> d.pop('Bob')\n    # 75\n    # >>> d\n    # {'Michael': 95, 'Tracy': 85}\n    #\n    # \u8fed\u4ee3 \u904d\u5386 dict\n    #\n    d = {'a': 1, 'b': 2, 'c': 3}\n    for key in d:\n        print(key)\n    for value in d.values():\n        print(value)\n    # \u540c\u65f6\u8fed\u4ee3key\u548cvalue\uff0c\u8fd9\u79cd\u592a\u9ebb\u70e6\uff0c\u4e0d\u63a8\u8350\n    for key in d:\n        print(key + ': ' + str(d.get(key)))\n\n    for key,value in d.items():\n        print(key, str(value))\n    \n")),(0,l.kt)("h3",{id:"227-\u5217\u8868\u63a8\u5bfc\u5f0f"},"2.2.7. \u5217\u8868\u63a8\u5bfc\u5f0f"),(0,l.kt)("h3",{id:"228-\u751f\u6210\u5668-generator"},"2.2.8. \u751f\u6210\u5668 generator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u751f\u6210\u5668\n    # \u8fd9\u79cd\u4e00\u8fb9\u5faa\u73af\u4e00\u8fb9\u8ba1\u7b97\u7684\u673a\u5236\uff0c\u79f0\u4e3a\u751f\u6210\u5668\uff1agenerator\u3002\n    #\n    # \u628a\u4e00\u4e2a\u5217\u8868\u751f\u6210\u5f0f\u7684[]\u6539\u6210()\uff0c\u5c31\u521b\u5efa\u4e86\u4e00\u4e2agenerator\n    #\n    #\u6216\u8005 -> \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u5b9a\u4e49\u4e2d\u5305\u542byield\u5173\u952e\u5b57\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4e0d\u518d\u662f\u4e00\u4e2a\u666e\u901a\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2agenerator\n    #\n    # \u51fd\u6570\u533a\u522b:generator\u548c\u51fd\u6570\u7684\u6267\u884c\u6d41\u7a0b\u4e0d\u4e00\u6837\u3002\u51fd\u6570\u662f\u987a\u5e8f\u6267\u884c\uff0c\n    # \u9047\u5230return\u8bed\u53e5\u6216\u8005\u6700\u540e\u4e00\u884c\u51fd\u6570\u8bed\u53e5\u5c31\u8fd4\u56de\u3002\u800c\u53d8\u6210\n    # generator\u7684\u51fd\u6570\uff0c\u5728\u6bcf\u6b21\u8c03\u7528next()\u7684\u65f6\u5019\u6267\u884c(\u5982 next(g))\uff0c\u9047\n    # \u5230yield\u8bed\u53e5\u8fd4\u56de\uff0c\u518d\u6b21\u6267\u884c\u65f6\u4ece\u4e0a\u6b21\u8fd4\u56de\u7684yield\u8bed\u53e5\u5904\u7ee7\u7eed\u6267\u884c\n    #\n    l = list(range(1,11))\n    g = (x*x for x in l)\n    for n in g:\n        print(n)\n\n    # \u6590\u6ce2\u62c9\u5951\u6570\u5217\n    def fib(max):\n        n, a, b = 0, 0, 1\n        while n < max:\n            yield b\n            a, b = b, a + b\n            n = n + 1\n        return 'done' # \u7528for\u5faa\u73af\u8c03\u7528generator\u65f6\uff0c\u53d1\u73b0\u62ff\u4e0d\u5230generator\u7684return\u8bed\u53e5\u7684\u8fd4\u56de\u503c\u3002\u5982\u679c\u60f3\u8981\u62ff\u5230\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u6355\u83b7StopIteration\u9519\u8bef\uff0c\u8fd4\u56de\u503c\u5305\u542b\u5728StopIteration\u7684value\u4e2d\n    for n in fib(6):\n        print(n)\n\n")),(0,l.kt)("h3",{id:"229-\u8fed\u4ee3\u5668"},"2.2.9. \u8fed\u4ee3\u5668"),(0,l.kt)("p",null,"\u5b9e\u73b0\u4e86\u9b54\u672f\u65b9\u6cd5 ",(0,l.kt)("inlineCode",{parentName:"p"},"__iter__, __next__"),", \u5373\u4e3a \u8fed\u4ee3\u5668, \u82e5\u4ec5\u4ec5\u5b9e\u73b0\u4e86 iter (iter \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61, \u8be5\u5bf9\u8c61\u5b9e\u73b0\u4e86 __next), \u53ea\u80fd\u89c6\u4e3a \u53ef\u8fed\u4ee3\u5bf9\u8c61. \u82e5\u4e3a iterator, \u4e00\u5b9a\u4e3a iterable, \u53cd\u4e4b\u4e0d\u4e00\u5b9a"),(0,l.kt)("p",null,"\u5b9e\u73b0\u4e86\u9b54\u672f\u65b9\u6cd5 ",(0,l.kt)("inlineCode",{parentName:"p"},"__getitem__"),", \u5373\u4e3a \u53ef\u8fed\u4ee3\u5bf9\u8c61"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"\u5728\u7528 for..in.. \u8fed\u4ee3\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u5bf9\u8c61\u6ca1\u6709\u5b9e\u73b0 __iter__ __next__ \u8fed\u4ee3\u5668\u534f\u8bae\uff0cPython\u7684\u89e3\u91ca\u5668\u5c31\u4f1a\u53bb\u5bfb\u627e__getitem__ \u6765\u8fed\u4ee3\u5bf9\u8c61\uff0c\n\n\u5982\u679c\u8fde__getitem__ \u90fd\u6ca1\u6709\u5b9a\u4e49\uff0c\u8fd9\u89e3\u91ca\u5668\u5c31\u4f1a\u62a5\u5bf9\u8c61\u4e0d\u662f\u8fed\u4ee3\u5668\u7684\u9519\u8bef\n")),(0,l.kt)("p",null,"\u533a\u522b:  \u5f53\u4e3a\u7d22\u5f15\u884c\u6570\u636e\u7c7b\u578b\uff08\u5982\uff1alist, tuple,str)\u65f6\uff0c\u53ef\u4ee5\u66ff\u6362\uff0c\u5f53\u5b57\u6bb5\u4e3ahash\u578b\u7c7b\u578b\uff08\u5982dict,set)\u65f6\uff0c\u4e0d\u80fd\u66ff\u6362"),(0,l.kt)("h2",{id:"23-\u6761\u4ef6\u5faa\u73af"},"2.3. \u6761\u4ef6\u5faa\u73af"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def condition_loop():\n    \"\"\"\n    \u6761\u4ef6 \u5faa\u73af\n    \"\"\"\n    names = ['Michael', 'Bob', 'Tracy']\n    for name in names:\n        print(name)\n\n    fruits = ['banana', 'apple',  'mango']\n    for index in range(len(fruits)):\n        print('\u5f53\u524d\u6c34\u679c :', fruits[index])\n\n    count = 0\n    while (count < 9):\n        print ('The count is:', count)\n        count = count + 1\n")),(0,l.kt)("h2",{id:"24-\u6bd4\u8f83\u5224\u65ad"},"2.4. \u6bd4\u8f83\u5224\u65ad"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# \u5728python\u4e2d None, False, \u7a7a\u5b57\u7b26\u4e32"", 0, \u7a7a\u5217\u8868[], \u7a7a\u5b57\u5178{}, \u7a7a\u5143\u7ec4()\u90fd\u76f8\u5f53\u4e8eFalse\n# (ob1 is ob2) \u7b49\u4ef7\u4e8e (id(ob1) == id(ob2))\n\n# \u5224\u7a7a\nif x is None\nif x is not None\n\n\n')),(0,l.kt)("h2",{id:"25-\u51fd\u6570"},"2.5. \u51fd\u6570"),(0,l.kt)("h3",{id:"251-\u53c2\u6570\u68c0\u67e5"},"2.5.1. \u53c2\u6570\u68c0\u67e5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def function_demo():\n    # \u53c2\u6570\u68c0\u67e5\u7c7b\u578b\n    def my_abs(x):\n        if not isinstance(x, (int, float)):\n            raise TypeError('bad operand type')\n        if x >= 0:\n            return x\n        else:\n            return -x\n\n    # * \u68c0\u67e5\u53c2\u6570\u6709\u6548\u6027\n    def person(name, age, **kw):\n        if 'city' in kw:\n            # \u6709city\u53c2\u6570\n            pass\n        if 'job' in kw:\n            # \u6709job\u53c2\u6570\n            pass\n        print('name:', name, 'age:', age, 'other:', kw)\n\n")),(0,l.kt)("h3",{id:"252-\u591a\u79cd\u53c2\u6570"},"2.5.2. \u591a\u79cd\u53c2\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n    # \u53c2\u6570\u987a\u5e8f\n    #\n    #\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570\u3001\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\n    #\n    # \u5b9a\u4e49\n    # c \u4e3a\u9ed8\u8ba4\u53c2\u6570\n    # *args \u4e3a \u53ef\u53d8\u53c2\u6570, \u4e2a\u6570\u53ef\u53d8, \u51fd\u6570\u5185\u90e8\u81ea\u52a8\u7ec4\u88c5\u4e3a tuple\n    # **kw  \u5173\u952e\u5b57\u53c2\u6570, \u5185\u90e8\u81ea\u52a8\u7ec4\u88c5\u4e3a\u4e00\u4e2a dict\n    #\n    # \u6240\u4ee5\uff0c\u5bf9\u4e8e\u4efb\u610f\u51fd\u6570\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3cfunc(*args, **kw)\u7684\u5f62\u5f0f\u8c03\u7528\u5b83\uff0c\u65e0\u8bba\u5b83\u7684\u53c2\u6570\u662f\u5982\u4f55\u5b9a\u4e49\u7684\u3002\n    #\n    def f1(a, b, c=0, *args, **kw):\n        print('a =', a, 'b =', b, 'c =', c, 'args =', args, 'kw =', kw)\n\n    def f2(a, b, c=0, *, d, **kw):\n        print('a =', a, 'b =', b, 'c =', c, 'd =', d, 'kw =', kw)\n    # \u8c03\u7528\n    # >>> f1(1, 2)\n    # a = 1 b = 2 c = 0 args = () kw = {}\n    # >>> f1(1, 2, c=3)\n    # a = 1 b = 2 c = 3 args = () kw = {}\n    # >>> f1(1, 2, 3, 'a', 'b')\n    # a = 1 b = 2 c = 3 args = ('a', 'b') kw = {}\n    # >>> f1(1, 2, 3, 'a', 'b', x=99)\n    # a = 1 b = 2 c = 3 args = ('a', 'b') kw = {'x': 99}\n    # >>> f2(1, 2, d=99, ext=None)\n    # a = 1 b = 2 c = 0 d = 99 kw = {'ext': None}\n\n    # \u901a\u8fc7\u4e00\u4e2atuple\u548cdict\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8c03\u7528\u4e0a\u8ff0\u51fd\u6570\uff1a\n    # >>> args = (1, 2, 3, 4)\n    # >>> kw = {'d': 99, 'x': '#'}\n    # >>> f1(*args, **kw)\n    # a = 1 b = 2 c = 3 args = (4,) kw = {'d': 99, 'x': '#'}\n    # >>> args = (1, 2, 3)\n    # >>> kw = {'d': 88, 'x': '#'}\n    # >>> f2(*args, **kw)\n    # a = 1 b = 2 c = 3 d = 88 kw = {'x': '#'}\n\n    #\n    # \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\n    #\u53ef\u4ee5\u9650\u5236\u4f20\u5165\u7684\u53c2\u6570\u7684\u952e\n    #\u4f8b\u5982\uff0c\u53ea\u63a5\u6536 city \u548c job \u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\u51fd\u6570\u5982\u4e0b\uff1a\n    #\n    def person1(name, age, *, city, job):# * \u4f5c\u4e3a\u5206\u9694\u7b26\n        print(name, age, city, job)\n\n    # # \u8c03\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a\n    # # \u5fc5\u9700\u8981\u6709\u53c2\u6570\u540d\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u4f1a\u89c6\u4e3a\u6709\u56db\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u800c\u8fd9\u4e2a\u51fd\u6570\u53ea\u6709\u4e24\u4e2a\u4f4d\u7f6e\u53c2\u6570\uff0c\u62a5\u9519\n    # >>> person1('Jack', 24, city='Beijing', job='Engineer')\n    # Jack 24 Beijing Engineer\n    #\n    # \u5982\u679c\u51fd\u6570\u5b9a\u4e49\u4e2d\u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u53ef\u53d8\u53c2\u6570\uff0c\u540e\u9762\u8ddf\u7740\u7684\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u5c31\u4e0d\u518d\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u5206\u9694\u7b26*\u4e86\uff1a\n    #\n    def person2(name, age, *args, city, job):\n        print(name, age, args, city, job)\n\n")),(0,l.kt)("h3",{id:"253-\u9012\u5f52"},"2.5.3. \u9012\u5f52"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n    ###\n    ##\n    ## \u9012\u5f52\n    # \u5c3e\u9012\u5f52\u4f18\u5316: \u4f7f\u5f97 \u8fd4\u56de\u503c\u4e0d\u542b\u6709\u8868\u8fbe\u5f0f\n    #\n    # \u9636\u4e58\n    def recu(n):\n        if n == 1:\n            return 1\n        return n*recu(n-1) # \u8fd4\u56de\u503c\u5e26\u6709\u8868\u8fbe\u5f0f, \u4e0d\u597d\n    # \u4f18\u5316\u540e\n    def fact(n):\n        return fact_iter(n, 1)\n\n    def fact_iter(num, product):\n        if num == 1:\n            return product\n        return fact_iter(num - 1, num * product)\n\n")),(0,l.kt)("h3",{id:"254-\u9ad8\u9636\u51fd\u6570"},"2.5.4. \u9ad8\u9636\u51fd\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def map_reduce_closure_lambda():\n    l = list(range(1,11))\n    def f(x):\n        return x*x\n    r = map(f, l) # <map object at 0x10298b2d0>\n    print(\"r = \", list(r))# r =  [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n    r1 = map(str, l)\n    print(list(r1)) # ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n\n    from functools import reduce\n    l = [1, 2, 3]\n    def add(x, y):\n        return x+y\n    r2 = reduce(add, l)\n    print(\"r2 = \", r2) # 6\n\n\n    n = sorted([36, 5, -12, 9, -21])\n    print(n) # [-21, -12, 5, 9, 36]\n    n1 = sorted(['bob', 'about', 'Zoo', 'Credit'],reverse=True, key=str.lower)\n    print(n1) # ['Zoo', 'Credit', 'bob', 'about']\n\n    def lazy_sum(*args):\n        def sum():\n            ax = 0\n            for n in args:\n                ax = ax + n\n            return ax\n        return sum\n    f = lazy_sum(1, 3, 5, 7, 9)\n    print(\"f() = \", f()) # 25\n\n    lambda x: x*x\n\n\n")),(0,l.kt)("h2",{id:"26-\u6587\u4ef6\u5904\u7406"},"2.6. \u6587\u4ef6\u5904\u7406"),(0,l.kt)("h3",{id:"261-\u521b\u5efa\u6587\u4ef6"},"2.6.1. \u521b\u5efa\u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def file_dir_demo():\n    import os\n    import sys\n    print(os.name) # \u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b, \u5982\u679c\u662fposix\uff0c\u8bf4\u660e\u7cfb\u7edf\u662fLinux\u3001Unix\u6216Mac OS X\uff0c\u5982\u679c\u662fnt\uff0c\u5c31\u662fWindows\u7cfb\u7edf\n    print(os.environ.get('PATH', ['default Value'])) # \u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\n    # \u67e5\u770b\u5f53\u524d\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84:\n    print(os.path.abspath('.')) # /Users/xiaoyu/repo/code/back_end/python-demos\n\n    # \u8def\u5f84\u62fc\u63a5\n    #\n    # \u628a\u4e24\u4e2a\u8def\u5f84\u5408\u6210\u4e00\u4e2a\u65f6\uff0c\u4e0d\u8981\u76f4\u63a5\u62fc\u5b57\u7b26\u4e32\uff0c\u800c\u8981\u901a\u8fc7os.path.join()\u51fd\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u6b63\u786e\u5904\u7406\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u8def\u5f84\u5206\u9694\u7b26\n    #os.path.join('/Users/michael', 'testdir')\n    #'/Users/michael/testdir'\n    #\n    # \u62c6\u5206\n    #\n    # \u8981\u62c6\u5206\u8def\u5f84\u65f6\uff0c\u4e5f\u4e0d\u8981\u76f4\u63a5\u53bb\u62c6\u5b57\u7b26\u4e32\uff0c\u800c\u8981\u901a\u8fc7os.path.split()\u51fd\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u628a\u4e00\u4e2a\u8def\u5f84\u62c6\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u540e\u4e00\u90e8\u5206\u603b\u662f\u6700\u540e\u7ea7\u522b\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u540d\n    #>>> os.path.split('/Users/michael/testdir/file.txt')\n    #('/Users/michael/testdir', 'file.txt')\n\n    # \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55:\n    #>>> os.mkdir('/Users/michael/testdir')\n    # \u5220\u6389\u4e00\u4e2a\u76ee\u5f55:\n    #>>> os.rmdir('/Users/michael/testdir')\n\n    # \u6587\u4ef6\u62d3\u5c55\u540d\n    #\n    # os.path.splitext()\u53ef\u4ee5\u76f4\u63a5\u8ba9\u4f60\u5f97\u5230\u6587\u4ef6\u6269\u5c55\u540d\n    # >>> os.path.splitext('/path/to/file.txt')\n    # ('/path/to/file', '.txt')\n\n    #  \u5bf9\u6587\u4ef6\u91cd\u547d\u540d:\n    # >>> os.rename('test.txt', 'test.py')\n    # \u5220\u6389\u6587\u4ef6:\n    # >>> os.remove('test.py')\n\n    # \u590d\u5236\u6587\u4ef6\n    #\n    # shutil\u6a21\u5757\u63d0\u4f9b\u4e86copyfile()\u7684\u51fd\u6570\uff0c\u4f60\u8fd8\u53ef\u4ee5\u5728shutil\u6a21\u5757\u4e2d\u627e\u5230\u5f88\u591a\u5b9e\u7528\u51fd\u6570\uff0c\u5b83\u4eec\u53ef\u4ee5\u770b\u505a\u662fos\u6a21\u5757\u7684\u8865\u5145\n\n    # \u5217\u51fa\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u76ee\u5f55\n    # os.listdir('.')\n    #\n    # >>> [x for x in os.listdir('.') if os.path.isdir(x)]\n    # ['.lein', '.local', '.m2', '.npm', '.ssh', '.Trash', '.vim', 'Applications', 'Desktop', ...]\n\n    # \u5217\u51fa\u6240\u6709\u7684.py\u6587\u4ef6\n    # >>> [x for x in os.listdir('.') if os.path.isfile(x) and os.path.splitext(x)[1]=='.py']\n    # ['apis.py', 'config.py', 'models.py', 'pymonitor.py', 'test_db.py', 'urls.py', 'wsgiapp.py']\n\n    # path \u8def\u5f84 \u5bf9\u6bd4    \n    #\n    print(__file__)  # D:/repo/repo_github/shared_already/python-demos/module_test.py\n    print(os.path.dirname(__file__))  # D:/repo/repo_github/shared_already/python-demos\n    curPath = os.path.abspath(os.path.dirname(__file__))\n    print(curPath)  # D:\\repo\\repo_github\\shared_already\\python-demos\n    rootPath = os.path.split(curPath)[0]\n    print(rootPath)  # D:\\repo\\repo_github\\shared_already\n    # sys.path.append(curPath)\n    sys.path.append(rootPath)\n    print(sys.path)\n\n\n")),(0,l.kt)("h3",{id:"262-\u8bfb\u5199\u6587\u4ef6\u6570\u636e"},"2.6.2. \u8bfb\u5199\u6587\u4ef6\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def read_write_file():\n    \"\"\"\n    open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None)\n        file: \u5fc5\u9700\uff0c\u6587\u4ef6\u8def\u5f84\uff08\u76f8\u5bf9\u6216\u8005\u7edd\u5bf9\u8def\u5f84\uff09\u3002\n        mode: \u53ef\u9009\uff0c\u6587\u4ef6\u6253\u5f00\u6a21\u5f0f\n            r \u4ee5\u53ea\u8bfb\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u6587\u4ef6\u7684\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u5f00\u5934\u3002\u8fd9\u662f\u9ed8\u8ba4\u6a21\u5f0f\u3002\n            x \u5199\u6a21\u5f0f\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u4f1a\u62a5\u9519\u3002\n            b \u4e8c\u8fdb\u5236\u6a21\u5f0f\u3002\n            w \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u53ea\u7528\u4e8e\u5199\u5165\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u4ece\u5f00\u5934\u5f00\u59cb\u7f16\u8f91\uff0c\u5373\u539f\u6709\u5185\u5bb9\u4f1a\u88ab\u5220\u9664\u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u3002\n            a \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u8ffd\u52a0\u3002\u5982\u679c\u8be5\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u6587\u4ef6\u6307\u9488\u5c06\u4f1a\u653e\u5728\u6587\u4ef6\u7684\u7ed3\u5c3e\u3002\u5982\u679c\u8be5\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u3002\n            t \u6587\u672c\u6a21\u5f0f(\u9ed8\u8ba4)\n            + \u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u66f4\u65b0(\u53ef\u8bfb\u53ef\u5199)\u3002\n        buffering: \u8bbe\u7f6e\u7f13\u51b2\n            \u901a\u8fc70\u4ee5\u5173\u95ed\u7f13\u51b2\uff08\u4ec5\u5728\u4e8c\u8fdb\u5236\u6a21\u5f0f\u4e0b\u5141\u8bb8\uff09\n            1 \u9009\u62e9\u884c\u7f13\u51b2\uff08\u4ec5\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u53ef\u7528\uff09\n            \u5f53\u672a\u7ed9\u51fabuffers\u53c2\u6570\u65f6\uff0c\u9ed8\u8ba4\u7f13\u51b2\u7b56\u7565\u5de5\u4f5c\u5982\u4e0b:\n                \n        encoding: \u4e00\u822c\u4f7f\u7528utf8\n            \u5982\u679c\u672a\u6307\u5b9aencoding\uff0c\u5219\u4f7f\u7528\u7684\u7f16\u7801\u53d6\u51b3\u4e8e\u5e73\u53f0: locale.getpreferredencoding\uff08False\uff09\n        errors: \u62a5\u9519\u7ea7\u522b, \u5e38\u7528 'ignore'\n        newline: \u533a\u5206\u6362\u884c\u7b26\n            \u53ef\u4ee5\u662fNone\u3001''\u3001'\\n'\u3001'\\r'\u3001'\\r\\n'\n            \u8bfb\u53d6\u6570\u636e\u65f6, \n                \u5982\u679cnewline\u53c2\u6570\u4e3aNone, \u6587\u4ef6\u4e2d\u7684'\\n'\uff0c'\\r\\n'\uff0c'\\r'\uff0c\u5728\u8fd4\u8fd8\u7ed9\u8c03\u7528\u8005\u7684\u65f6\u5019\u90fd\u4f1a\u88ab\u8f6c\u5316\u4e3a'\\n'\n                \u5982\u679cnewline = '', \u4f46\u662f\u884c\u7684\u7ed3\u5c3e\u7b26\u53f7\u5e76\u4e0d\u4f1a\u88ab\u8f6c\u5316\n                \u5982\u679c\u5b83\u5177\u6709\u4efb\u4f55\u5176\u5b83\u5408\u6cd5\u503c\uff0c\u5219\u8f93\u5165\u884c\u4ec5\u7531\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7ec8\u6b62\uff0c\n            \u5199\u5165\u65f6\n                \u5982\u679c\u4e0d\u8bbe\u7f6enewline\u53c2\u6570, \u5373\u4e3a None \u65f6, \u4efb\u4f55'\\n'\u90fd\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5f53\u524d\u7cfb\u7edf\u7684line separator\uff08\u4e5f\u5c31\u662fos.linesep)\n                \u5982\u679c\u53c2\u6570\u4e3a''\u6216\u8005'\\n'\uff0c\u4e0d\u4f1a\u6709\u4efb\u4f55\u7ffb\u8bd1\u3002\n        closefd: \u4f20\u5165\u7684file\u53c2\u6570\u7c7b\u578b\n        opener:\n    \"\"\"\n    f=None\n    try:\n        # read()\u4f1a\u4e00\u6b21\u6027\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\uff0c\u5982\u679c\u6587\u4ef6\u670910G\uff0c\u5185\u5b58\u5c31\u7206\u4e86\uff0c\n        #\u6240\u4ee5\uff0c\u8981\u4fdd\u9669\u8d77\u89c1\uff0c\u53ef\u4ee5\u53cd\u590d\u8c03\u7528read(size)\u65b9\u6cd5\uff0c\u6bcf\u6b21\u6700\u591a\u8bfb\u53d6size\u4e2a\u5b57\u8282\u7684\u5185\u5bb9\u3002\n        # r \u8868\u793a \u6a21\u5f0f\u4e3a \u53ea\u8bfb, \u8fd8\u6709 w \u5199, rw \u8bfb\u5199, rb/wb \u4e8c\u8fdb\u5236\n        f = open('./readme.md', 'r')\n        print(f.read())\n    finally:\n        if f:\n            f.close()\n\n    # \u5982\u679c\u6587\u4ef6\u5f88\u5c0f\uff0cread()\u4e00\u6b21\u6027\u8bfb\u53d6\u6700\u65b9\u4fbf\uff1b\u5982\u679c\u4e0d\u80fd\u786e\u5b9a\u6587\u4ef6\u5927\u5c0f\uff0c\u53cd\u590d\u8c03\u7528read(size)\u6bd4\u8f83\u4fdd\u9669\uff1b\u5982\u679c\u662f\u914d\u7f6e\u6587\u4ef6\uff0c\u8c03\u7528readlines()\u6700\u65b9\u4fbf\uff1a\n    # \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\n    for line in f.readlines():\n        print(line.strip()) # \u628a\u672b\u5c3e\u7684'\\n'\u5220\u6389\n\n    # \u66f4\u597d\u7684\u65b9\u6cd5 ---- \u81ea\u52a8\u5173\u95ed f\n    #\n    # \u4f46\u662f\u6bcf\u6b21\u90fd\u8fd9\u4e48\u5199\u5b9e\u5728\u592a\u7e41\u7410\uff0c\u6240\u4ee5\uff0cPython\u5f15\u5165\u4e86with\u8bed\u53e5\u6765\u81ea\u52a8\u5e2e\u6211\u4eec\u8c03\u7528close()\n    with open('./readme.md', 'r') as f:\n        print(f.read())\n\n\n    #\u8981\u8bfb\u53d6\u975eUTF-8\u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\uff0c\u9700\u8981\u7ed9open()\u51fd\u6570\u4f20\u5165encoding\u53c2\u6570\n    # >>> f = open('/Users/michael/gbk.txt', 'r', encoding='gbk')\n    # >>> f.read()\n    # '\u6d4b\u8bd5'\n\n    # \u9519\u8bef\u5904\u7406\n    #\u76f4\u63a5\u5ffd\u7565\n    f = open('/Users/michael/gbk.txt', 'r', encoding='gbk', errors='ignore')\n\n    # \u8bfb\u4e8c\u8fdb\u5236\u6587\u4ef6\n    f = open('/Users/michael/test.jpg', 'rb')\n    f.read()\n    # b'\\xff\\xd8\\xff\\xe1\\x00\\x18Exif\\x00\\x00...' # \u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u5b57\u8282\n\n    # \u5199\u4e8c\u8fdb\u5236\n    # \u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u4f1a\u76f4\u63a5\u8986\u76d6, \u53ef\u4ee5\u4f20\u5165'a'\u4ee5\u8ffd\u52a0\uff08append\uff09\u6a21\u5f0f\u5199\u5165\n    f = open('/Users/michael/test.txt', 'w')\n    # \u53ef\u4ee5\u53cd\u590d\u8c03\u7528write()\u6765\u5199\u5165\u6587\u4ef6\n    f.write('Hello, world!')\n    # \u5199\u6587\u4ef6\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5f80\u5f80\u4e0d\u4f1a\u7acb\u523b\u628a\u6570\u636e\u5199\u5165\u78c1\u76d8\uff0c\u800c\u662f\u653e\u5230\u5185\u5b58\u7f13\u5b58\u8d77\u6765\uff0c\u7a7a\u95f2\u7684\u65f6\u5019\u518d\u6162\u6162\u5199\u5165\u3002\n    #\u53ea\u6709\u8c03\u7528close()\u65b9\u6cd5\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u624d\u4fdd\u8bc1\u628a\u6ca1\u6709\u5199\u5165\u7684\u6570\u636e\u5168\u90e8\u5199\u5165\u78c1\u76d8\n    f.close()\n    # \u6240\u4ee5\uff0c\u8fd8\u662f\u7528with\u8bed\u53e5\u65b9\u4fbf\n\n    #\n    # \u5728\u5185\u5b58\u8bfb\u5199 stringIO\n    # \u8981\u628astr\u5199\u5165StringIO\uff0c\u6211\u4eec\u9700\u8981\u5148\u521b\u5efa\u4e00\u4e2aStringIO\uff0c\u7136\u540e\uff0c\u50cf\u6587\u4ef6\u4e00\u6837\u5199\u5165\n    # >>> from io import StringIO\n    # >>> f = StringIO() # \u53ef\u4ee5\u5728\u8fd9\u91cc\u76f4\u63a5\u521d\u59cb\u5316, \u7c7b\u6bd4 StringBuffer\n    # >>> f.write('hello')\n    # 5\n    # >>> f.write(' ')\n    # 1\n    # >>> f.write('world!')\n    # 6\n    # >>> print(f.getvalue())\n    # hello world!\n\n\n    # # \u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5c31\u9700\u8981\u4f7f\u7528BytesIO\n    # >>> from io import BytesIO\n    # >>> f = BytesIO()\n    # >>> f.write('\u4e2d\u6587'.encode('utf-8'))\n    # 6\n    # >>> print(f.getvalue())\n    # b'\\xe4\\xb8\\xad\\xe6\\x96\\x87'\n\n    # \u5e8f\u5217\u5316\n    #\n    # dumps()\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2astr\uff0c\u5185\u5bb9\u5c31\u662f\u6807\u51c6\u7684JSON\u3002\u7c7b\u4f3c\u7684\uff0cdump()\u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u628aJSON\u5199\u5165\u4e00\u4e2afile-like Object\u3002\n    # >>> import json\n    # >>> d = dict(name='Bob', age=20, score=88)\n    # >>> json.dumps(d)\n    # '{\"age\": 20, \"score\": 88, \"name\": \"Bob\"}'\n\n\n")),(0,l.kt)("h2",{id:"27-\u88c5\u9970\u5668"},"2.7. \u88c5\u9970\u5668"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\ndef wrapper_decorator():\n    \"\"\"\n    \u88c5\u9970\u5668\n    \"\"\"\n    def now():\n        print('2015-1-1')\n    now()\n    print(now.__name__)\n    f = now\n    f()\n    print(f.__name__)\n\n    print('---------------')\n\n    import functools\n    # \u672c\u8d28\u4e0a, decorator\u5c31\u662f\u4e00\u4e2a\u8fd4\u56de\u51fd\u6570\u7684\u9ad8\u9636\u51fd\u6570, \u63a5\u53d7\u4e00\u4e2a\u51fd\u6570, \u8fd4\u56de\u5305\u88c5\u540e\u7684\u51fd\u6570\n    def log(func):\n        @functools.wraps(func) # \u4f5c\u7528\u662f\u4fee\u6539\u88c5\u9970\u540e\u7684\u51fd\u6570 __name__ \u5c5e\u6027\u503c, \u5982\u679c\u4e0d\u52a0, \u88c5\u9970\u5668\u8fd8\u662f\u5de5\u4f5c\u7684, \u4f46\u662f __name__ \u4f1a\u53d8\u4e3a \"wrapper\", \u663e\u7136\u4e0d\u884c\n        def wrapper(*args, **kw):\n            print('call %s(): ' % func.__name__)\n            return func(*args, **kw)\n        return wrapper\n    # \u628a@log\u653e\u5230new()\u51fd\u6570\u7684\u5b9a\u4e49\u5904\uff0c\u76f8\u5f53\u4e8e\u6267\u884c\u4e86 new = log(new)\n    @log\n    def new():\n        print('111-111-111')\n    new() # \u6267\u884c\u7684\u662f\u5305\u88c5\u540e\u7684\u51fd\u6570\n\n    # \u5982\u679cdecorator\u672c\u8eab\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u90a3\u5c31\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u8fd4\u56dedecorator\u7684\u9ad8\u9636\u51fd\u6570\n    def log1(text):\n        def decorator(func):\n            @functools.wraps(func)\n            def wrapper(*args, **kw):\n                print('%s %s():' % (text, func.__name__))\n                return func(*args, **kw)\n            return wrapper\n        return decorator\n    @log1('\u81ea\u5b9a\u4e49execute') # \u76f8\u5f53\u4e8e yyy =  log1('execute')(yyy)\n    def yyy():\n        print('zzz')\n    yyy()\n\n\n\n\n\ndef cost_count(func):\n    @wraps(func)\n    def wraper(*args, **kwargs):\n        start = time.time()\n        t = func(*args, **kwargs)\n        logging.info(\"%s tooks time: %f\", func.__name__, time.time()-start)\n        return t\n    return wraper\n")),(0,l.kt)("h2",{id:"28-\u6a21\u5757-\u4f5c\u7528\u57df"},"2.8. \u6a21\u5757 \u4f5c\u7528\u57df"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'\nhehe=6\n\ndef var_demo():\n    # \u4f5c\u7528\u57df\u540d\n    # \u51fd\u6570\u5b9a\u4e49\u4e86\u672c\u5730\u4f5c\u7528\u57df\uff0c\u800c\u6a21\u5757\u5b9a\u4e49\u7684\u662f\u5168\u5c40\u4f5c\u7528\u57df, \u5982\u679c\u60f3\u8981\u5728\u51fd\u6570\u5185\u5b9a\u4e49/\u4fee\u6539\u5168\u5c40\u4f5c\u7528\u57df\uff0c\u9700\u8981\u52a0\u4e0aglobal\u4fee\u9970\u7b26\n    global hehe\n    print(hehe) # 6\n    hehe=3 # \u4fee\u6539\n    pass\n\n\n\n\ndef module_demo():\n    """\n    -   \u5e93 \u5c31\u662f\u4e00\u4e2a\u9879\u76ee, \u5206\u4e3a\u6807\u51c6\u5e93, \u7b2c\u4e09\u65b9\u5e93(https://pypi.org/)\n    -   \u5305 \u5c31\u662f\u5305\u542b `__init__.py` \u7684\u76ee\u5f55, \u53ef\u80fd\u6709\u591a\u4e2a\u5b50\u5305, \u4e5f\u5fc5\u987b\u5305\u542b init \u6587\u4ef6\n    -   \u6bcf\u4e2a `*py` \u5c31\u662f\u4e00\u4e2a \u6a21\u5757\n    python \u6709\u81ea\u5df1\u7684\u6a21\u5757\u641c\u7d22\u8def\u5f84, \u4f46\u662f\u600e\u4e48\u5f15\u5165\u81ea\u5b9a\u4e49\u7684\u6a21\u5757\u641c\u7d22\u8def\u5f84\u5462?\n    # \u67e5\u770b\u9ed8\u8ba4\u8def\u5f84\n    # \u67e5\u627e\u987a\u5e8f\u4e3a:\n    # 1. \u7a0b\u5e8f\u6240\u5728\u76ee\u5f55\n    # 2. python \u5b89\u88c5\u6807\u51c6\u5e93\u76ee\u5f55(lib)\n    # 3. \u7b2c\u4e09\u65b9\u5e93\u76ee\u5f55 (site-package)\n    import sys\n    print(sys.path)\n    # \u4e00\u6b21\u6027\u81ea\u5b9a\u4e49\n    sys.path.append(\'/Users/michael/my_py_scripts\')\n    # \u6c38\u4e45\n    \u8bbe\u7f6e\u73af\u5883\u53d8\u91cfPYTHONPATH\uff0cPython\u81ea\u8eab\u641c\u7d22\u8def\u5f84\u4e0d\u53d7\u5f71\u54cd\n    """\n    # \u65b9\u5f0f 1:\n    # from xx.yy import hello\n    # hello()\n\n    # \u65b9\u5f0f 2:\n    import xx.yy as yy\n    yy.hello()\n\n')),(0,l.kt)("h2",{id:"29-\u9762\u5411\u5bf9\u8c61"},"2.9. \u9762\u5411\u5bf9\u8c61"),(0,l.kt)("h3",{id:"291-\u7c7b"},"2.9.1. \u7c7b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def oop():\n    class Student(object):\n\n        name__xx = \"Student\" # \u7c7b\u5c5e\u6027, \u5b9e\u4f8b\u5c5e\u6027 \u7c7b\u5c5e\u6027\u5343\u4e07\u4e0d\u8981\u540c\u540d, \u56e0\u4e3a\u67e5\u627e\u5b9e\u4f8b\u5c5e\u6027\u82e5\u6ca1\u627e\u5230, \u4f1a\u8fd4\u56de\u7c7b\u5c5e\u6027\n\n        __slots__ = ('name', '__score', '_age') # \u7528tuple\u5b9a\u4e49\u5141\u8bb8\u7ed1\u5b9a\u7684\u5c5e\u6027\u540d\u79f0\n        # `__slots__`\u5b9a\u4e49\u7684\u5c5e\u6027\u4ec5\u5bf9\u5f53\u524d\u7c7b\u5b9e\u4f8b\u8d77\u4f5c\u7528\uff0c\u5bf9\u7ee7\u627f\u7684\u5b50\u7c7b\u662f\u65e0\u9650\u5236\u7684 \n        #\u9664\u975e\u5728\u5b50\u7c7b\u4e2d\u4e5f\u5b9a\u4e49**slots**\uff0c\u8fd9\u6837\uff0c\u5b50\u7c7b\u5b9e\u4f8b\u5141\u8bb8\u5b9a\u4e49\u7684\u5c5e\u6027\u5c31\u662f\u81ea\u8eab\u7684**slots**\u52a0\u4e0a\u7236\u7c7b\u7684**slots**\n\n        # \u6784\u9020\u65b9\u6cd5\n        # > **init**\u6709\u4e24\u4e2a\u4e0b\u5212\u7ebf\n        # > \u5b9a\u4e49\u5bf9\u8c61\u65b9\u6cd5\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f self\uff0c\u8c03\u7528\u65f6\u4e0d\u7528\u4f20\u5165 self\n        #\n        # `__len__()`:len(obj)\u5b9e\u9645\u8c03\u7528 obj \u7684`__len__()` \n        #\n        # `__iter__() & __next__()`:\u5982\u679c\u4e00\u4e2a\u7c7b\u60f3\u88ab\u7528\u4e8e for ... in \u5faa\u73af,\u5219\u5fc5\u987b\u5b9e\u73b0`__iter__()`\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5bf9\u8c61,`__next__()`\u65b9\u6cd5\u62ff\u5230\u5faa\u73af\u7684\u4e0b\u4e00\u4e2a\u503c\n        #\n        # `__getitem__ & __setitem__() & __delitem__()`:\u5b9e\u73b0 list \u6309\u4e0b\u6807\u53d6\u5143\u7d20\u7684\u529f\u80fd\uff0c\u5219\u5fc5\u987b\u5b9e\u73b0  \n        #\n        # `__getattr__\uff08\uff09`:\u52a8\u6001\u8fd4\u56de\u5c5e\u6027\n        #\n        def __init__(self, name, score):\n            self.name = name\n            self.__score = score\n\n        def display(self):\n            print('%s: %s' % (self.name, self.__score))\n\n        # \u589e\u52a0getter\u548csetter\n        def get_score(self):\n            return self.__score\n\n        def set_score(self, score):\n            self.__score = score\n\n        @property # \u8d1f\u8d23\u628a\u4e00\u4e2a\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u8c03\u7528\n        def age(self):\n            return self._age\n        @age.setter # @property\u672c\u8eab\u53c8\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u88c5\u9970\u5668@score.setter,\u628a\u4e00\u4e2asetter\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u8d4b\u503c\n        def age(self, v):\n            if not isinstance(v, int):\n                raise ValueError('score must be an integer!')\n            if v < 0 or v > 100:\n                raise ValueError('score must between 0 ~ 100!')\n            self._age = v\n\n        def __str__(self): # `__str__()`:print(obj)\u5b9e\u9645\u8c03\u7528 obj \u7684`__str__()`  \n            return 'Student object (name=%s)' % self.name\n        __repr__ = __str__# `__repr__()`:\u76f4\u63a5 obj \u8c03\u7528 obj \u7684`__repr__()`,\u901a\u5e38\u548c `__str__()`\u4e00\u6837\n\n    s1 = Student('s1', 10)\n    s1.display()\n    print(s1)\n    \n    # \u52a0\u4e86 `__slot__`, \u4e0d\u5141\u8bb8\u5728\u5916\u90e8\u7ed1\u5b9a\u4efb\u4f55\u53d8\u91cf\n    # s1.sex = 'male'\n    # print(s1.sex)\n\n     # \u65e0\u6cd5\u8bbf\u95ee\u79c1\u6709\u7684\n    # \u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee__name\u662f\u56e0\u4e3aPython\u89e3\u91ca\u5668\u5bf9\u5916\u628a__name\u53d8\u91cf\u6539\u6210\u4e86_Student__name\uff0c\u6240\u4ee5\uff0c\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7_Student__name\u6765\u8bbf\u95ee__name\u53d8\u91cf\n    #print(s1.__score)\n    print(s1.get_score())\n    s1.set_score(11) # ok\n    # s1.__score =11 # error\n\n    s1.age = 10\n    print(\"age = \", s1.age)\n\n")),(0,l.kt)("h3",{id:"292-\u7ee7\u627f-\u9e2d\u5b50\u7c7b\u578b"},"2.9.2. \u7ee7\u627f \u9e2d\u5b50\u7c7b\u578b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'\n # \n    # \u7ee7\u627f\n    #\n    class People(object):\n        def say(self):\n            print("hello people")\n        def run(self):\n            print("run people")\n\n    class Student(People):  # \u7ee7\u627f\n        def run(self): # \u91cd\u5199\n            print("run students")\n\n    stu = Student()\n    stu.say() # hello people\n    stu.run() # run students\n\n    print(isinstance(stu, People)) # true\n    print(isinstance(stu, Student))# true\n\n    #\n    # \u9e2d\u5b50\u7c7b\u578b\n    #\n    class Animal(object):\n        def eat(self):\n            print("animal eat")\n        def run(self):\n            print("run animal")\n    class Bird(object):\n        def eat(self):\n            print("eat bird")\n    print(isinstance(Bird(), Animal))# false\n    def demo(p):\n        p.run()\n    demo(stu)\n    demo(People())\n    demo(Animal()) # animal \u6ca1\u6709\u7ee7\u627f People, \u4e5f\u53ef\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 demo(), \u9e2d\u5b50\u7c7b\u578b\n\n\n')),(0,l.kt)("h3",{id:"293-\u5224\u65ad\u7c7b\u578b\u4fe1\u606f"},"2.9.3. \u5224\u65ad\u7c7b\u578b\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"#\n    # \u7c7b\u578b\u4fe1\u606f\n    #\n    #>>> type(123)==type(456)\n    # True\n    # >>> type(123)==int\n    # True\n    # >>> type('abc')==type('123')\n    # True\n    # >>> type('abc')==str\n    # True\n    # >>> type('abc')==type(123)\n    # False\n\n    # # \u5176\u4ed6\u7c7b\u578b\n    # >>> import types\n    # >>> def fn():\n    # ...     pass\n    # ...\n    # >>> type(fn)==types.FunctionType\n    # True\n    # >>> type(abs)==types.BuiltinFunctionType\n    # True\n    # >>> type(lambda x: x)==types.LambdaType\n    # True\n    # >>> type((x for x in range(10)))==types.GeneratorType\n    # True\n\n    # # isinstance()\n    # # \u57fa\u672c\u7c7b\u578b\n    # >>> isinstance('a', str)\n    # True\n    # >>> isinstance(123, int)\n    # True\n    # >>> isinstance(b'a', bytes)\n    # True\n    # # \u7ee7\u627f\u4f53\u7cfb\n    # >>> isinstance(h, Dog)\n    # True\n    # >>> isinstance(h, Animal)\n    # True\n    # >>> isinstance(d, Dog) and isinstance(d, Animal)\n    # True\n    # # \u5224\u65ad\u662f\u51e0\u79cd\u4e2d\u4e4b\u4e00\u79cd\n    # >>> isinstance([1, 2, 3], (list, tuple))\n    # True\n    # >>> isinstance((1, 2, 3), (list, tuple))\n    # True\n\n")),(0,l.kt)("h3",{id:"294-\u52a8\u6001\u64cd\u4f5c"},"2.9.4. \u52a8\u6001\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \n    # \u52a8\u6001\u64cd\u4f5c object \u5c5e\u6027\n    #\n    # dir(obj)---------\u83b7\u53d6 obj \u7684\u6240\u6709\u5bf9\u8c61\u3001\u5c5e\u6027\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b57\u7b26\u4e32 list  \n    # \u914d\u5408 getattr()\u3001setattr()\u4ee5\u53ca hasattr()\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\n    #\n    # >>> class MyObject(object):\n    # ...     def __init__(self):\n    # ...         self.x = 9\n    # ...     def power(self):\n    # ...         return self.x * self.x\n    # ...\n    # >>> obj = MyObject()\n    # >>> hasattr(obj, 'x') # \u6709\u5c5e\u6027'x'\u5417\uff1f\n    # True\n    # >>> obj.x\n    # 9\n    # >>> hasattr(obj, 'y') # \u6709\u5c5e\u6027'y'\u5417\uff1f\n    # False\n    # >>> setattr(obj, 'y', 19) # \u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027'y'\n    # >>> hasattr(obj, 'y') # \u6709\u5c5e\u6027'y'\u5417\uff1f\n    # True\n    # >>> getattr(obj, 'y', 404) # \u83b7\u53d6\u5c5e\u6027'y',\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c404\n    # 19\n    # >>> obj.y # \u83b7\u53d6\u5c5e\u6027'y'\n    # 19\n    # # \u83b7\u53d6\u5bf9\u8c61\n    # >>> hasattr(obj, 'power') # \u6709\u5c5e\u6027'power'\u5417\uff1f\n    # True\n    # >>> getattr(obj, 'power') # \u83b7\u53d6\u5c5e\u6027'power'\n    # <bound method MyObject.power of <__main__.MyObject object at 0x10077a6a0>>\n    # >>> fn = getattr(obj, 'power') # \u83b7\u53d6\u5c5e\u6027'power'\u5e76\u8d4b\u503c\u5230\u53d8\u91cffn\n    # >>> fn # fn\u6307\u5411obj.power\n    # <bound method MyObject.power of <__main__.MyObject object at 0x10077a6a0>>\n    # >>> fn() # \u8c03\u7528fn()\u4e0e\u8c03\u7528obj.power()\u662f\u4e00\u6837\u7684\n    # 81\n\n\n\n #\n    # \u52a8\u6001\u521b\u5efa\u7c7b, \u5143\u7c7b, metaClass\n    #\n    # \u521b\u5efaclass\n    class Hello(object):\n        def hello(self, name='world'):\n            print('Hello, %s.' % name)\n\n    h = Hello()\n    print(type(h))# <class '__main__.Hello'> h\u7684\u7c7b\u578b\u662fHello\n    print(type(Hello))# <class 'type'> Hello\u7684\u7c7b\u578b\u662ftype\n\n    # \u52a8\u6001\u521b\u5efaclass\n    def fn(self, name='world'):\n        print('Hello, %s.' % name)\n    Hello1 = type('Hello1', (object,), dict(hello=fn))\n    h1 = Hello1()\n    print(h1) # <__main__.Hello1 object at 0x7faef9cd5c90>\n    h1.hello() # Hello, world.\n\n")),(0,l.kt)("h3",{id:"295-\u9b54\u672f\u65b9\u6cd5"},"2.9.5. \u9b54\u672f\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n__repr__ \u548c __str__: \u7528\u4e8e print(xx) \u88ab\u8c03\u7528, \u82e5 __str__\u5b58\u5728, \u5219\u4f18\u5148\u4f7f\u7528 __str__, \u4e00\u822c\u4f1a\u4ee4 __repr__ = __str__\n\n\n\n\n    import math\n\n    class Vector:\n\n        def __init__(self, x=0, y=0):\n            self.x = x\n            self.y = y\n\n        # \u4e3a\u4e86\u4f7f\u7528 str(xxx)\n        def __repr__(self):\n            return f'Vector({self.x!r}, {self.y!r})'\n\n        # \u7b49\u6548 sqart(a**2 + b**2)\n        def __abs__(self):\n            return math.hypot(self.x, self.y)\n\n        # \u4e3a\u4e86\u4f7f\u7528 bool()\n        def __bool__(self):\n            return bool(abs(self))\n        # \u4e3a\u4e86\u4f7f\u7528 +\n        def __add__(self, other):\n            x = self.x + other.x\n            y = self.y + other.y\n            return Vector(x, y)\n        # for \u4e58\u6cd5\n        def __mul__(self, scalar):\n            return Vector(self.x * scalar, self.y * scalar)\n\n\n\n\n#\n    #\n    # \u5e94\u7528\uff1aREST API\u7684\u94fe\u5f0f\u8c03\u7528\n    class Chain(object):\n\n        def __init__(self, path=''):\n            self._path = path\n\n        def __getattr__(self, path):\n            return Chain('%s/%s' % (self._path, path))\n\n        def __str__(self):\n            return self._path\n\n        __repr__ = __str__\n\n    # >>> Chain().status.user.timeline.list\n    # '/status/user/timeline/list'\n\n    # `__call__\uff08\uff09`:\u901a\u8fc7\u5b9e\u4f8b\u672c\u8eab\u8c03\u7528\u7684\u65b9\u6cd5-------------\u628a\u5bf9\u8c61\u770b\u6210\u51fd\u6570  \n    # \u5e26\u6709`__call__\uff08\uff09`\u7684\u5bf9\u8c61\u662f`Callable`\u5bf9\u8c61\uff0c\u5982\u4f55\u5224\u65ad\uff1f  \n    # \u901a\u8fc7 callable(obj)\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u4e00\u4e2a obj \u662f\u5426\u662f\u201c\u53ef\u8c03\u7528\u201d\u5bf9\u8c61\n    #\n    class Student(object):\n        def __init__(self, name):\n            self.name = name\n\n        def __call__(self):\n            print('My name is %s.' % self.name)\n    # >>> s = Student('Michael')\n    # >>> s() # self\u53c2\u6570\u4e0d\u8981\u4f20\u5165\n    # My name is Michael.\n\n\n\n")),(0,l.kt)("h3",{id:"296-\u679a\u4e3e"},"2.9.6. \u679a\u4e3e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n\n #\n    # \u679a\u4e3e\u7c7b\n    #\n    #    \n    # \u679a\u4e3e\u6210\u5458\u53ef\u8fdb\u884c\u540c\u4e00\u6027\u6bd4\u8f83  \n    # Color.red is Color.red  \n    # \u3000\u3000\u8f93\u51fa\u7ed3\u679c\u662f\uff1aTrue  \n    # Color.red is not Color.blue  \n    # \u3000\u3000\u8f93\u51fa\u7ed3\u679c\u662f\uff1aTrue  \n    # \u679a\u4e3e\u6210\u5458\u53ef\u8fdb\u7b49\u503c\u6bd4\u8f83  \n    # Color.blue == Color.red  \n    # \u3000\u3000\u8f93\u51fa\u7ed3\u679c\u662f\uff1aFalse  \n    # Color.blue != Color.red  \n    # \u3000\u3000\u8f93\u51fa\u7ed3\u679c\u662f\uff1aTrue\n    from enum import Enum, unique\n    # simple way to define, \u9ed8\u8ba4\u8d4b\u503c1\uff0c2\uff0c3\uff0c4...\n    Month = Enum('Month', ('Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'))\n    print(Month.Jan.value) # 1\n    print(Month.Jan.name) #Jan\n    print(Month.Jan)#Month.Jan\n    print(Month['Jan'])# \u901a\u8fc7\u540d\u79f0\u83b7\u53d6\u6210\u5458,  # Month.Jan\n    print(Month(1))# \u901a\u8fc7\u503c\u83b7\u53d6\u6210\u5458 # Month.Jan\n    print('----------------')\n    for month in Month:\n        print(month)\n    print('----------------')\n    for month in Month.__members__.items():\n        print(month[0], month[1])\n    print('----------------')\n    for name, value in Month.__members__.items():\n        print(name, value)\n\nprint(\"------------------------------\")\n    # customize class,\u53ef\u81ea\u5df1\u8d4b\u503c\n    @unique\n    class Weekday(Enum):\n        Sun = 0\n        Mon = 1\n        Tue = 2\n        Wed = 3\n        Thu = 4\n        Fri = 5\n        Sat = 6\n    for name, value in Weekday.__members__.items():\n        print(name, value)\n\n")),(0,l.kt)("h3",{id:"297-\u5b9e\u4f8b\u65b9\u6cd5-\u7c7b\u65b9\u6cd5-\u9759\u6001\u65b9\u6cd5"},"2.9.7. \u5b9e\u4f8b\u65b9\u6cd5 \u7c7b\u65b9\u6cd5 \u9759\u6001\u65b9\u6cd5"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/21101992"},"https://zhuanlan.zhihu.com/p/21101992")),(0,l.kt)("h2",{id:"210-\u9519\u8bef\u5f02\u5e38\u5904\u7406"},"2.10. \u9519\u8bef\u5f02\u5e38\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def error_handling():\n    \"\"\"\n    BaseException\n    +-- SystemExit\n    +-- KeyboardInterrupt\n    +-- GeneratorExit\n    +-- Exception\n        +-- StopIteration\n        +-- StopAsyncIteration\n        +-- ArithmeticError\n        |    +-- FloatingPointError\n        |    +-- OverflowError\n        |    +-- ZeroDivisionError\n        +-- AssertionError\n        +-- AttributeError\n        +-- BufferError\n        +-- EOFError\n        +-- ImportError\n            +-- ModuleNotFoundError\n        +-- LookupError\n        |    +-- IndexError\n        |    +-- KeyError\n        +-- MemoryError\n        +-- NameError\n        |    +-- UnboundLocalError\n        +-- OSError\n        |    +-- BlockingIOError\n        |    +-- ChildProcessError\n        |    +-- ConnectionError\n        |    |    +-- BrokenPipeError\n        |    |    +-- ConnectionAbortedError\n        |    |    +-- ConnectionRefusedError\n        |    |    +-- ConnectionResetError\n        |    +-- FileExistsError\n        |    +-- FileNotFoundError\n        |    +-- InterruptedError\n        |    +-- IsADirectoryError\n        |    +-- NotADirectoryError\n        |    +-- PermissionError\n        |    +-- ProcessLookupError\n        |    +-- TimeoutError\n        +-- ReferenceError\n        +-- RuntimeError\n        |    +-- NotImplementedError\n        |    +-- RecursionError\n        +-- SyntaxError\n        |    +-- IndentationError\n        |         +-- TabError\n        +-- SystemError\n        +-- TypeError\n        +-- ValueError # int() \u53ef\u80fd\u53d1\u751f\n        |    +-- UnicodeError\n        |         +-- UnicodeDecodeError\n        |         +-- UnicodeEncodeError\n        |         +-- UnicodeTranslateError\n        +-- Warning\n            +-- DeprecationWarning\n            +-- PendingDeprecationWarning\n            +-- RuntimeWarning\n            +-- SyntaxWarning\n            +-- UserWarning\n            +-- FutureWarning\n            +-- ImportWarning\n            +-- UnicodeWarning\n            +-- BytesWarning\n            +-- ResourceWarning\n    \"\"\"\n    # \u901a\u8fc7\u914d\u7f6e\uff0clogging\u8fd8\u53ef\u4ee5\u628a\u9519\u8bef\u8bb0\u5f55\u5230\u65e5\u5fd7\u6587\u4ef6\u91cc\uff0c\u65b9\u4fbf\u4e8b\u540e\u6392\u67e5\n    import logging\n\n    try:\n        print('try...')\n        r = 10 / int('2')\n        print('result:', r)\n    except ValueError as e:\n        print('ValueError:', e)\n        logging.exception(e)\n    except ZeroDivisionError as e:\n        print('ZeroDivisionError:', e)\n    # \u6ca1\u6709\u9519\u8bef\u53d1\u751f\u5c31\u6267\u884c\n    else:\n        print('no error!')\n    finally:\n        print('finally...')\n    print('END')\n\n\n    # \u6355\u83b7\u7136\u540e\u539f\u6837\u629b\u51fa\n    # raise\u8bed\u53e5\u5982\u679c\u4e0d\u5e26\u53c2\u6570\uff0c\u5c31\u4f1a\u628a\u5f53\u524d\u9519\u8bef\u539f\u6837\u629b\u51fa\n    def foo(s):\n        n = int(s)\n        if n==0:\n            print(\"can not be 0\")\n            raise ValueError('invalid value: %s' % s)\n        return 10 / n\n\n    def bar():\n        try:\n            foo('0')\n        except ValueError as e:\n            print('ValueError!--------------------')\n            raise\n\n    try:\n        bar()\n    except Exception as e:\n        print(\"handling<<<<<<<<<<<<<\")\n\n    # \u81ea\u5b9a\u4e49\u9519\u8bef\n    #\n    # \n    class FooError(ValueError):\n        pass\n\n    def foo(s):\n        n = int(s)\n        if n==0:\n            raise FooError('invalid value: %s' % s)\n        return 10 / n\n\n    # foo('0')\n\n")),(0,l.kt)("h1",{id:"3-\u5de5\u7a0b\u5316"},"3. \u5de5\u7a0b\u5316"),(0,l.kt)("h2",{id:"cookiecutter-\u9879\u76ee\u6a21\u677f"},"cookiecutter \u9879\u76ee\u6a21\u677f"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/cookiecutter/cookiecutter"},"https://github.com/cookiecutter/cookiecutter")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"\npip3 install -U cookiecutter\n\ncookiecutter https://github.com/pyloong/cookiecutter-pythonic-project\n\n")),(0,l.kt)("h2",{id:"31-\u5305\u7ba1\u7406"},"3.1. \u5305\u7ba1\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"\nhttps://github.com/python-poetry/poetry \u7c7b\u4f3c Pipevn, \u57fa\u4e8e\u865a\u62df\u73af\u5883, \u4e3b\u8981\u662f\u4e3a\u4e86\u9694\u79bb\u9879\u76ee\u5f00\u53d1\u73af\u5883\uff0c\u4f46\u5982\u679c\u6d89\u53ca\u5230\u865a\u62df \u73af\u5883\u5d4c\u5957\u865a\u62df\u73af\u5883\uff0c\u95ee\u9898\u5c31\u96be\u641e\u4e86\uff0c\u7ecf\u5e38\u4f1a\u51fa\u73b0\u95ee\u9898\n\nhttps://github.com/pdm-project/pdm \u4e0d\u9700\u8981\u865a\u62df\u73af\u5883 , \u50cf pnpm \u4e00\u6837\u7684\u4e2d\u5fc3\u5316\u5b89\u88c5\u7f13\u5b58\uff0c\u8282\u7701\u78c1\u76d8\u7a7a\u95f4\n    https://zhuanlan.zhihu.com/p/468445226\n    \u56fd\u4eba\u4f5c\u8005https://github.com/frostming - https://frostming.com/2020/02-28/pdm-introduction/\n\nhttps://github.com/mitsuhiko/rye\n\n")),(0,l.kt)("h3",{id:"poetry"},"poetry"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u5b89\u88c5\u6700\u65b0\u7248 pip\n# -m pip: \u4f7f\u7528Python\u6a21\u5757\u7684\u65b9\u5f0f\u6765\u8c03\u7528pip\uff0c\u5373\u901a\u8fc7pip\u6a21\u5757\u6765\u6267\u884c\u64cd\u4f5c\u3002\n# -U: \u9009\u9879\u8868\u793a\u8981\u66f4\u65b0\u5df2\u5b89\u88c5\u7684\u5305\u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86pip\uff0c\u4f7f\u7528-U\u9009\u9879\u53ef\u4ee5\u5c06\u5176\u5347\u7ea7\u5230\u6700\u65b0\u7248\u672c\u3002\npython3 -m pip install -U pip\npip install -U poetry\n\n")),(0,l.kt)("h2",{id:"\u683c\u5f0f\u5316"},"\u683c\u5f0f\u5316"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://pycqa.github.io/isort/"},"https://pycqa.github.io/isort/")),(0,l.kt)("h2",{id:"\u4ee3\u7801\u68c0\u6d4b"},"\u4ee3\u7801\u68c0\u6d4b"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.pylint.org/"},"https://www.pylint.org/")),(0,l.kt)("h2",{id:"32-\u65e5\u5fd7"},"3.2. \u65e5\u5fd7"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def log_handling():\n    import logging\n    # \u6709debug\uff0cinfo\uff0cwarning\uff0cerror\u7b49\u51e0\u4e2a\u7ea7\u522b\uff0c\u7b49\u7ea7\u7531\u4f4e\u5230\u9ad8\n    # \u8bbe\u5b9a\u4e3a\u67d0\u4e2a\u7ea7\u522b, \u4f4e\u4e8e\u8fd9\u4e2a\u7ea7\u522b\u7684\u4e0d\u4f1a\u8f93\u51fa\n    logging.basicConfig(level=logging.INFO)\n    s = '0'\n    n = int(s)\n    logging.info('n = %d' % n)\n    # print(10 / n)\n\n")),(0,l.kt)("h2",{id:"\u751f\u6210\u6587\u6863"},"\u751f\u6210\u6587\u6863"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.mkdocs.org/"},"https://www.mkdocs.org/")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://squidfunk.github.io/mkdocs-material/"},"https://squidfunk.github.io/mkdocs-material/")," \u4e3b\u9898"),(0,l.kt)("h2",{id:"\u4efb\u52a1\u81ea\u52a8\u5316"},"\u4efb\u52a1\u81ea\u52a8\u5316"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://tox.wiki/en/latest/"},"https://tox.wiki/en/latest/")),(0,l.kt)("h2",{id:"33-\u5355\u5143\u6d4b\u8bd5"},"3.3. \u5355\u5143\u6d4b\u8bd5"),(0,l.kt)("p",null,"pytest \u66f4\u7075\u6d3b\u65b9\u4fbf (prefered):"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pytest-dev/pytest-cov"},"https://github.com/pytest-dev/pytest-cov")," \u8986\u76d6\u7387"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"https://www.cnblogs.com/wxcx/p/13709570.html\nhttps://www.osgeo.cn/pytest/contents.html\n")),(0,l.kt)("p",null,"unittest"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\ndef unit_test():\n    # \u7f16\u5199\u4e00\u4e2aDict\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u7684\u884c\u4e3a\u548cdict\u4e00\u81f4\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u6765\u8bbf\u95ee\n    class Dict(dict):\n\n        def __init__(self, **kw):\n            super().__init__(**kw)\n\n        def __getattr__(self, key):\n            try:\n                return self[key]\n            except KeyError:\n                raise AttributeError(r\"'Dict' object has no attribute '%s'\" % key)\n\n        def __setattr__(self, key, value):\n            self[key] = value\n            \n    import unittest\n\n    class TestDict(unittest.TestCase): # \u4eceunittest.TestCase\u7ee7\u627f\n\n        # \u4e24\u4e2a\u7279\u6b8a\u7684setUp()\u548ctearDown()\u65b9\u6cd5\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5206\u522b\u5728\u6bcf\u8c03\u7528\u4e00\u4e2a\u6d4b\u8bd5\u65b9\u6cd5\u7684\u524d\u540e\u5206\u522b\u88ab\u6267\u884c\n        def setUp(self):\n            print('setUp...')\n\n        def tearDown(self):\n            print('tearDown...')\n\n        # \u4ee5test\u5f00\u5934\u7684\u65b9\u6cd5\u5c31\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u4e0d\u4ee5test\u5f00\u5934\u7684\u65b9\u6cd5\u4e0d\u88ab\u8ba4\u4e3a\u662f\u6d4b\u8bd5\u65b9\u6cd5\uff0c\u6d4b\u8bd5\u7684\u65f6\u5019\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\n        def test_init(self):\n            d = Dict(a=1, b='test')\n            self.assertEqual(d.a, 1)\n            self.assertEqual(d.b, 'test')\n            self.assertTrue(isinstance(d, dict))\n\n        def test_key(self):\n            d = Dict()\n            d['key'] = 'value'\n            self.assertEqual(d.key, 'value')\n\n        def test_attr(self):\n            d = Dict()\n            d.key = 'value'\n            self.assertTrue('key' in d)\n            self.assertEqual(d['key'], 'value')\n\n        def test_keyerror(self):\n            d = Dict()\n            # \u671f\u5f85\u629b\u51fa\u6307\u5b9a\u7c7b\u578b\u7684Error\uff0c\n            with self.assertRaises(KeyError):\n                value = d['empty']\n\n        def test_attrerror(self):\n            d = Dict()\n            with self.assertRaises(AttributeError):\n                value = d.empty\n    # \u8fd0\u884c\u6d4b\u8bd5, \u6216\u8005 \u547d\u4ee4\u884c python -m unittest mydict_test\n    unittest.main()\n\n\ndef doc_test():\n    \"\"\"\n    \u6587\u6863\u6d4b\u8bd5 doctest\n    \"\"\"\n    class Dict(dict):\n        '''\n        Simple dict but also support access as x.y style.\n        >>> d1 = Dict()\n        >>> d1['x'] = 100\n        >>> d1.x\n        100\n        >>> d1.y = 200\n        >>> d1['y']\n        200\n        >>> d2 = Dict(a=1, b=2, c='3')\n        >>> d2.c\n        '3'\n        >>> d2['empty']\n        Traceback (most recent call last):\n            ...\n        KeyError: 'empty'\n        >>> d2.empty\n        Traceback (most recent call last):\n            ...\n        AttributeError: 'Dict' object has no attribute 'empty'\n        '''\n        def __init__(self, **kw):\n            super(Dict, self).__init__(**kw)\n\n        def __getattr__(self, key):\n            try:\n                return self[key]\n            except KeyError:\n                raise AttributeError(r\"'Dict' object has no attribute '%s'\" % key)\n\n        def __setattr__(self, key, value):\n            self[key] = value\n\n    import doctest\n    doctest.testmod()\n\n\n\n")),(0,l.kt)("h1",{id:"4-\u591a\u8fdb\u7a0b"},"4. \u591a\u8fdb\u7a0b"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://jeremyxu2010.github.io/2020/09/python%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%AE%9E%E6%88%98/"},"https://jeremyxu2010.github.io/2020/09/python%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%AE%9E%E6%88%98/")," \u81ea\u5e26\u65b9\u5f0f"),(0,l.kt)("p",null,"gevent"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/42680357/increment-counter-for-every-access-to-a-flask-view"},"https://stackoverflow.com/questions/42680357/increment-counter-for-every-access-to-a-flask-view")," \u901a\u8fc7\u5168\u5c40\u53d8\u91cf\u52a0\u9501, \u7edf\u8ba1 api \u8c03\u7528\u6b21\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def multi_processing():\n    \"\"\"\n    \u5728Unix/Linux\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528fork()\u8c03\u7528\u5b9e\u73b0\u591a\u8fdb\u7a0b\u3002\n    \u8981\u5b9e\u73b0\u8de8\u5e73\u53f0\u7684\u591a\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528multiprocessing\u6a21\u5757\u3002\n    \u8fdb\u7a0b\u95f4\u901a\u4fe1\u662f\u901a\u8fc7Queue\u3001Pipes\u7b49\u5b9e\u73b0\u7684\u3002\n    subprocess\u6a21\u5757\u53ef\u4ee5\u8ba9\u6211\u4eec\u975e\u5e38\u65b9\u4fbf\u5730\u542f\u52a8\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u63a7\u5236\u5176\u8f93\u5165\u548c\u8f93\u51fa\u3002\u901a\u8fc7communicate()\u65b9\u6cd5\u8f93\u5165\n    \n    \"\"\"\n\n    import os\n    print(\"\u4e3b\u8fdb\u7a0b pid = \", os.getpid())\n    # fork()\u8c03\u7528\u4e00\u6b21\uff0c\u8fd4\u56de\u4e24\u6b21\uff0c\u56e0\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u628a\u5f53\u524d\n    # \u8fdb\u7a0b\uff08\u79f0\u4e3a\u7236\u8fdb\u7a0b\uff09\u590d\u5236\u4e86\u4e00\u4efd\uff08\u79f0\u4e3a\u5b50\u8fdb\u7a0b\uff09\uff0c\u7136\u540e\uff0c\u5206\u522b\u5728\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u5185\u8fd4\u56de process id\n    # \u5b50\u8fdb\u7a0b\u6c38\u8fdc\u8fd4\u56de0\uff0c\u800c\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684ID\n    pid = os.fork()\n    if pid ==0:\n        print(\"\u5b50\u8fdb\u7a0b, id = {}, ppid = {}\".format(os.getpid(), os.getppid()))\n    else:\n        print(\"\u7236\u8fdb\u7a0b, id = {}, son pid = {}\".format(os.getpid(), pid))\n\n\ndef multi_processing_windows():\n    \"\"\"\u8de8\u5e73\u53f0\u7684\u591a\u8fdb\u7a0b\"\"\"\n    from multiprocessing import Process\n    import os\n\n    # \u5b50\u8fdb\u7a0b\u8981\u6267\u884c\u7684\u4ee3\u7801\n    def run_proc(name):\n        print('Run child process %s (%s)...' % (name, os.getpid()))\n\n    print('Parent process %s.' % os.getpid())\n    p = Process(target=run_proc, args=('test',))\n    p.start()\n\n    p.join() # main process \n    print('Child process end.')\n\n    # \u8fdb\u7a0b\u6c60\n    #\n    from multiprocessing import Pool\n    import os, time, random\n\n    def long_time_task(name):\n        print('Run task %s (%s)...' % (name, os.getpid()))\n        start = time.time()\n        time.sleep(random.random() * 3)\n        end = time.time()\n        print('Task %s runs %0.2f seconds.' % (name, (end - start)))\n\n    if __name__=='__main__':\n        print('Parent process %s.' % os.getpid())\n        p = Pool(4) # Pool\u7684\u9ed8\u8ba4\u5927\u5c0f\u662fCPU\u7684\u6838\u6570\n        for i in range(5):\n            p.apply_async(long_time_task, args=(i,))\n        print('Waiting for all subprocesses done...')\n        p.close()\n        p.join()\n        print('All subprocesses done.')\n\n\ndef process_comunicate():\n    \"\"\"\u8fdb\u7a0b\u901a\u4fe1\"\"\"\n    from multiprocessing import Process, Queue\n    import os, time, random\n\n    # \u5199\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\n    def write(q):\n        print('Process to write: %s' % os.getpid())\n        for value in ['A', 'B', 'C']:\n            print('Put %s to queue...' % value)\n            q.put(value)\n            time.sleep(random.random())\n\n    # \u8bfb\u6570\u636e\u8fdb\u7a0b\u6267\u884c\u7684\u4ee3\u7801:\n    def read(q):\n        print('Process to read: %s' % os.getpid())\n        while True:\n            value = q.get(True)\n            print('Get %s from queue.' % value)\n\n    # \u7236\u8fdb\u7a0b\u521b\u5efaQueue\uff0c\u5e76\u4f20\u7ed9\u5404\u4e2a\u5b50\u8fdb\u7a0b\uff1a\n    q = Queue()\n    pw = Process(target=write, args=(q,))\n    pr = Process(target=read, args=(q,))\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpw\uff0c\u5199\u5165:\n    pw.start()\n    # \u542f\u52a8\u5b50\u8fdb\u7a0bpr\uff0c\u8bfb\u53d6:\n    pr.start()\n    # \u7b49\u5f85pw\u7ed3\u675f:\n    pw.join()\n    # pr\u8fdb\u7a0b\u91cc\u662f\u6b7b\u5faa\u73af\uff0c\u65e0\u6cd5\u7b49\u5f85\u5176\u7ed3\u675f\uff0c\u53ea\u80fd\u5f3a\u884c\u7ec8\u6b62:\n    pr.terminate()\n\n\ndef muti_thread():\n    \"\"\"\n    lock = threading.Lock() \u521b\u5efa\u9501\n    lock.acquire() \u83b7\u53d6\u9501\n    lock.release() \u91ca\u653e\u9501, \u4e00\u822c\u5728 finally\u4e2d\n    \u591a\u6838\u4efb\u52a1\u53ea\u80fd\u7528\u8fdb\u7a0b, \n    \u56e0\u4e3a:Python\u7684\u7ebf\u7a0b\u867d\u7136\u662f\u771f\u6b63\u7684\u7ebf\u7a0b\uff0c\u4f46\u89e3\u91ca\u5668\u6267\u884c\u4ee3\u7801\u65f6\uff0c\u6709\u4e00\u4e2aGIL\u9501\uff1aGlobal Interpreter Lock\uff0c\n    \u4efb\u4f55Python\u7ebf\u7a0b\u6267\u884c\u524d\uff0c\u5fc5\u987b\u5148\u83b7\u5f97GIL\u9501\uff0c\u7136\u540e\uff0c\u6bcf\u6267\u884c100\u6761\u5b57\u8282\u7801\uff0c\u89e3\u91ca\u5668\u5c31\u81ea\u52a8\u91ca\u653eGIL\u9501\uff0c\u8ba9\n    \u522b\u7684\u7ebf\u7a0b\u6709\u673a\u4f1a\u6267\u884c\u3002\u8fd9\u4e2aGIL\u5168\u5c40\u9501\u5b9e\u9645\u4e0a\u628a\u6240\u6709\u7ebf\u7a0b\u7684\u6267\u884c\u4ee3\u7801\u90fd\u7ed9\u4e0a\u4e86\u9501\uff0c\u6240\u4ee5\uff0c\u591a\u7ebf\u7a0b\u5728Python\n    \u4e2d\u53ea\u80fd\u4ea4\u66ff\u6267\u884c\uff0c\u5373\u4f7f100\u4e2a\u7ebf\u7a0b\u8dd1\u5728100\u6838CPU\u4e0a\uff0c\u4e5f\u53ea\u80fd\u7528\u52301\u4e2a\u6838\n    \"\"\"\n\n    import time, threading\n\n    def loop():\n        print('thread %s is running...' % threading.current_thread().name)\n        n = 0\n        while n < 5:\n            n = n + 1\n            print('thread %s >>> %s' % (threading.current_thread().name, n))\n            time.sleep(1)\n        print('thread %s ended.' % threading.current_thread().name)\n\n    print('thread %s is running...' % threading.current_thread().name)\n    # \u4e3b\u7ebf\u7a0b\u5b9e\u4f8b\u7684\u540d\u5b57\u53ebMainThread\uff0c\u5b50\u7ebf\u7a0b\u7684\u540d\u5b57\u5728\u521b\u5efa\u65f6\u6307\u5b9a\uff0c\u6211\u4eec\u7528LoopThread\u547d\u540d\u5b50\u7ebf\u7a0b\n    t = threading.Thread(target=loop, name='LoopThread')\n    t.start()\n    t.join()\n    print('thread %s ended.' % threading.current_thread().name)\n\n\n\n")),(0,l.kt)("h1",{id:"5-\u5f02\u6b65"},"5. \u5f02\u6b65"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\ndef async_io():\n    \"\"\"\n    \u534f\u7a0b\u539f\u7406:\n    \u5728\u4e00\u4e2a\u6b7b\u5faa\u73af\u4e2d, \u4e3b\u7ebf\u7a0b\u4e0d\u65ad\u8f6e\u8be2\u5904\u7406\u961f\u5217\u4e2d\u7684\u4e8b\u4ef6, \n    \u5f53\u9047\u5230IO\u64cd\u4f5c\u65f6\uff0c\u4ee3\u7801\u53ea\u8d1f\u8d23\u53d1\u51faIO\u8bf7\u6c42\uff0c\u4e0d\u7b49\u5f85IO\u7ed3\u679c\uff0c\u7136\u540e\u76f4\u63a5\u7ed3\u675f\u672c\u8f6e\u6d88\u606f\u5904\u7406\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u6d88\u606f\u5904\u7406\u8fc7\u7a0b\n    \u5f53io \u5b8c\u6210, \u4f1a\u4ea7\u751f\u901a\u77e5\u8fdb\u5165\u961f\u5217, \u522b\u7ebf\u7a0b\u5904\u7406\n    \u6700\u5927\u7684\u4f18\u52bf\u5c31\u662f\u534f\u7a0b\u6781\u9ad8\u7684\u6267\u884c\u6548\u7387\u3002\u56e0\u4e3a\u5b50\u7a0b\u5e8f\u5207\u6362\u4e0d\u662f\u7ebf\u7a0b\u5207\u6362\n    \u7b2c\u4e8c\u5927\u4f18\u52bf\u5c31\u662f\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86\n    \u56e0\u4e3a\u534f\u7a0b\u662f\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u90a3\u600e\u4e48\u5229\u7528\u591a\u6838CPU\u5462\uff1f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u591a\u8fdb\u7a0b+\u534f\u7a0b\uff0c\u65e2\u5145\u5206\u5229\u7528\u591a\u6838\uff0c\u53c8\u5145\u5206\u53d1\u6325\u534f\u7a0b\u7684\u9ad8\u6548\u7387\n    \"\"\"\n    def consumer():\n        r = ''\n        while True:\n            n = yield r # consumer\u901a\u8fc7yield\u62ff\u5230\u6d88\u606f\uff0c\u5904\u7406\uff0c\u53c8\u901a\u8fc7yield\u628a\u7ed3\u679c\u4f20\u56de\n            if not n:\n                return\n            print('[CONSUMER] Consuming %s...' % n)\n            r = '200 OK'\n\n    def produce(c):\n        c.send(None) # \u542f\u52a8\u751f\u6210\u5668\n        n = 0\n        while n < 5:\n            n = n + 1\n            print('[PRODUCER] Producing %s...' % n)\n            # \u4e00\u65e6\u751f\u4ea7\u4e86\u4e1c\u897f\uff0c\u901a\u8fc7c.send(n)\u5207\u6362\u5230consumer\u6267\u884c\n            r = c.send(n)\n            print('[PRODUCER] Consumer return: %s' % r)\n        # \u901a\u8fc7c.close()\u5173\u95edconsumer\uff0c\u6574\u4e2a\u8fc7\u7a0b\u7ed3\u675f\n        c.close()\n\n    c = consumer()\n    produce(c)\n\n\n    # \n    #\n    # \u5f02\u6b65\u64cd\u4f5c\u9700\u8981\u5728coroutine\u4e2d\u901a\u8fc7yield from\u5b8c\u6210\uff1b\n    # \n    # \u591a\u4e2acoroutine\u53ef\u4ee5\u5c01\u88c5\u6210\u4e00\u7ec4Task\u7136\u540e\u5e76\u53d1\u6267\u884c\u3002\n    #\n    import asyncio # asyncio\u662fPython 3.4\u7248\u672c\u5f15\u5165\u7684\u6807\u51c6\u5e93\uff0c\u76f4\u63a5\u5185\u7f6e\u4e86\u5bf9\u5f02\u6b65IO\u7684\u652f\u6301\u3002\n    # https://github.com/dabeaz/curio \u66ff\u4ee3\u8005\n\n    @asyncio.coroutine # \u628a\u4e00\u4e2agenerator\u6807\u8bb0\u4e3acoroutine\u7c7b\u578b\n                        # \u7136\u540e\u5728coroutine\u5185\u90e8\u7528yield from\u8c03\u7528\u53e6\u4e00\u4e2acoroutine\u5b9e\u73b0\u5f02\u6b65\u64cd\u4f5c\n    def hello():\n        print(\"Hello world!\")\n        # \u5f02\u6b65\u8c03\u7528asyncio.sleep(1), \u867d\u7136\u7761\u77201s, \u4f46\u662f\u4e3b\u7ebf\u7a0b\u5e76\u672a\u7b49\u5f85\uff0c\u800c\u662f\u53bb\u6267\u884cEventLoop\u4e2d\u5176\u4ed6\u53ef\u4ee5\u6267\u884c\u7684coroutine\u4e86\n        # asyncio.sleep()\u4e5f\u662f\u4e00\u4e2acoroutine\n        r = yield from asyncio.sleep(1)\n        print(\"Hello again!\")\n\n    # \u83b7\u53d6EventLoop:\n    loop = asyncio.get_event_loop()\n    # \u6267\u884ccoroutine\n    loop.run_until_complete(hello())\n\n    # \u5c01\u88c5\u4e24\u4e2acoroutine\n    # \u4e24\u4e2acoroutine\u662f\u7531\u540c\u4e00\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u6267\u884c\u7684\n    tasks = [hello(), hello()]\n    loop.run_until_complete(asyncio.wait(tasks))\n\n    loop.close()\n\n    #async\u548cawait\u662f\u9488\u5bf9coroutine\u7684\u65b0\u8bed\u6cd5\n    #\n    #\u628a@asyncio.coroutine\u66ff\u6362\u4e3aasync\uff1b\n    #\u628ayield from\u66ff\u6362\u4e3aawait\u3002\n    #\n    async def hello1():\n        print(\"Hello world!\")\n        r = await asyncio.sleep(1)\n        print(\"Hello again!\")\n\n    # asyncio\u53ef\u4ee5\u5b9e\u73b0\u5355\u7ebf\u7a0b\u5e76\u53d1IO\u64cd\u4f5c\u3002\u5982\u679c\u4ec5\u7528\u5728\u5ba2\u6237\u7aef\uff0c\u53d1\u6325\u7684\u5a01\u529b\u4e0d\u5927\u3002\n    # \u5982\u679c\u628aasyncio\u7528\u5728\u670d\u52a1\u5668\u7aef\uff0c\u4f8b\u5982Web\u670d\u52a1\u5668\uff0c\u7531\u4e8eHTTP\u8fde\u63a5\u5c31\u662fIO\u64cd\u4f5c\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u5355\u7ebf\u7a0b+coroutine\u5b9e\u73b0\u591a\u7528\u6237\u7684\u9ad8\u5e76\u53d1\u652f\u6301\n    # aiohttp\u5219\u662f\u57fa\u4e8easyncio\u5b9e\u73b0\u7684HTTP\u6846\u67b6\n    #\n    # \u7f16\u5199\u4e00\u4e2aHTTP\u670d\u52a1\u5668:\n    #\n    # import asyncio\n\n    # from aiohttp import web\n\n    # async def index(request):\n    #     await asyncio.sleep(0.5)\n    #     return web.Response(body=b'<h1>Index</h1>')\n\n    # async def hello(request):\n    #     await asyncio.sleep(0.5)\n    #     text = '<h1>hello, %s!</h1>' % request.match_info['name']\n    #     return web.Response(body=text.encode('utf-8'))\n\n    # async def init(loop):\n    #     app = web.Application(loop=loop)\n    #     app.router.add_route('GET', '/', index)\n    #     app.router.add_route('GET', '/hello/{name}', hello)\n    #     srv = await loop.create_server(app.make_handler(), '127.0.0.1', 8000)\n    #     print('Server started at http://127.0.0.1:8000...')\n    #     return srv\n\n    # loop = asyncio.get_event_loop()\n    # loop.run_until_complete(init(loop))\n    # loop.run_forever()\n\n")),(0,l.kt)("h1",{id:"6-\u5185\u5efa\u6a21\u5757"},"6. \u5185\u5efa\u6a21\u5757"),(0,l.kt)("h2",{id:"61-\u65e5\u671f\u5904\u7406"},"6.1. \u65e5\u671f\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def builtin_module():\n    from datetime import datetime, timedelta\n\n    now = datetime.now()\n    print(now) # 2019-06-05 23:06:46.171270\n\n    time = datetime(2019, 4, 19, 1, 30)\n    print(time) # 2019-04-19 01:30:00\n\n    timestamp = time.timestamp()\n    print(timestamp)  # 1555608600.0\n    print(datetime.fromtimestamp(timestamp))  # 2019-04-19 01:30:00\n\n    cday = datetime.strptime('2015-6-1 18:19:59', '%Y-%m-%d %H:%M:%S')\n    print(cday)  # 2015-06-01 18:19:59\n\n    strftime = now.strftime('%Y-%m-%d %H:%M:%S')\n    print(strftime)  # 2019-06-05 23:06:46\n\n    result = now + timedelta(days=1, hours=1)\n    print(result)  # 2019-06-07 00:11:36.912231\n\n")),(0,l.kt)("h2",{id:"62-\u96c6\u5408"},"6.2. \u96c6\u5408"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u547d\u540d\u7684 tuple \nfrom collections import namedtuple\n    # namedtuple\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684tuple\u5bf9\u8c61\uff0c\u5e76\u4e14\u89c4\u5b9a\u4e86tuple\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u5e76\u53ef\u4ee5\u7528\u5c5e\u6027\u800c\u4e0d\u662f\u7d22\u5f15\u6765\u5f15\u7528tuple\u7684\u67d0\u4e2a\u5143\u7d20\n    Point = namedtuple('Point', ['x', 'y'])  # \u76f8\u5f53\u4e8etype(), \u6784\u9020\u4e86\u4e00\u4e2a\u7c7b\n    p = Point(1, 2)\n    print(p.x) # 1\n    print(p.y) # 2\n\n\n\n\nfrom collections import  deque\n\n    # deque\u662f\u4e3a\u4e86\u9ad8\u6548\u5b9e\u73b0\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u53cc\u5411\u5217\u8868\n    #  \u662f\u4e3a\u4e86\u5f25\u8865 list  \u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u5f88\u4f4e \u7684\u7f3a\u70b9\n    q = deque(['a', 'b', 'c'])\n    q.append('d')\n    q.appendleft('e')\n    print(q)  # deque(['e', 'a', 'b', 'c', 'd'])\n\n\n\n\n\nfrom collections import defaultdict\n    # \u4f7f\u7528dict\u65f6\uff0c\u5982\u679c\u5f15\u7528\u7684Key\u4e0d\u5b58\u5728\uff0c\u5c31\u4f1a\u629b\u51faKeyError\u3002\u5982\u679c\u5e0c\u671bkey\u4e0d\u5b58\u5728\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff0c\u5c31\u53ef\u4ee5\u7528defaultdict\n    # \u5982\u679c\u8981\u4fdd\u6301Key\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u7528OrderedDict\n    # ChainMap\u53ef\u4ee5\u628a\u4e00\u7ec4dict\u4e32\u8d77\u6765\u5e76\u7ec4\u6210\u4e00\u4e2a\u903b\u8f91\u4e0a\u7684dict\n\n    ################\n\n    from  collections import  Counter\n\n    # Counter\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u5668\n    c = Counter()\n    for ch in 'programming':\n        c[ch] = c[ch] + 1\n\n    print(c)  # Counter({'r': 2, 'g': 2, 'm': 2, 'p': 1, 'o': 1, 'a': 1, 'i': 1, 'n': 1})\n\n")),(0,l.kt)("h1",{id:"7-\u7f16\u5199\u547d\u4ee4\u884c\u7a0b\u5e8f"},"7. \u7f16\u5199\u547d\u4ee4\u884c\u7a0b\u5e8f"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/005ecf9cf8aa"},"https://www.jianshu.com/p/005ecf9cf8aa")," TODO"),(0,l.kt)("h2",{id:"71-\u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168"},"7.1. \u547d\u4ee4\u884c\u81ea\u52a8\u8865\u5168"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/lgh344902118/p/8521437.html"},"https://www.cnblogs.com/lgh344902118/p/8521437.html")),(0,l.kt)("p",null," TODO"),(0,l.kt)("h1",{id:"8-\u7c7b\u578b\u7cfb\u7edf-type-hint"},"8. \u7c7b\u578b\u7cfb\u7edf type-hint"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/265003581/answer/461562594"},"https://www.zhihu.com/question/265003581/answer/461562594"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/56863684"},"https://zhuanlan.zhihu.com/p/56863684")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/python/mypy"},"https://github.com/python/mypy")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/google/pytype"},"https://github.com/google/pytype")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://docs.python.org/zh-cn/3/library/typing.html"},"https://docs.python.org/zh-cn/3/library/typing.html")),(0,l.kt)("p",null,"\u5fae\u8f6f\u4e8e7\u67081\u65e5\u53d1\u5e03\u4e00\u6b3e\u65b0\u7684VS Code\u63d2\u4ef6\uff0c\u540d\u4e3a Pylance"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# \u81eapython3.5\u5f00\u59cb\uff0cPEP484\u4e3apython\u5f15\u5165\u4e86\u7c7b\u578b\u6ce8\u89e3(type hints)\n    # typing\u6a21\u5757\n    #\n    # https://www.cnblogs.com/linkenpark/p/11676297.html\n    # int,long,float: \u6574\u578b,\u957f\u6574\u5f62,\u6d6e\u70b9\u578b\n    # bool,str: \u5e03\u5c14\u578b\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\n    # List, Tuple, Dict, Set:\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178, \u96c6\u5408\n    # Iterable,Iterator:\u53ef\u8fed\u4ee3\u7c7b\u578b\uff0c\u8fed\u4ee3\u5668\u7c7b\u578b\n    # Generator\uff1a\u751f\u6210\u5668\u7c7b\u578b\n    #\n    # ":" \u540e\u9762\u662f\u53c2\u6570\u7c7b\u578b\n    # "->" \u662f\u8fd4\u56de\u503c\u7684\u6ce8\u91ca\uff0c-> str \u610f\u601d\u5373\u662f\u63d0\u9192\u51fd\u6570\u4f7f\u7528\u8005\u8fd4\u56de\u503c\u4f1a\u662f\u4e00\u4e2astr\u578b\n    def f(ham: "\u4f20\u4e00\u4e2a\u5b57\u7b26\u4e32", eggs: str = \'eggs\') -> str :\n        print("Annotations:", f.__annotations__)\n        print("Arguments:", ham, eggs)\n        return ham + \' and \' + eggs\n\n    print(f("est", 123))\n')),(0,l.kt)("h1",{id:"9-\u8c03\u8bd5"},"9. \u8c03\u8bd5"),(0,l.kt)("h2",{id:"91-\u65ad\u8a00"},"9.1. \u65ad\u8a00"),(0,l.kt)("p",null,"\u7c7b\u4f3c print, "),(0,l.kt)("p",null,"\u7a0b\u5e8f\u4e2d\u5982\u679c\u5230\u5904\u5145\u65a5\u7740assert\uff0c\u548cprint()\u76f8\u6bd4\u4e5f\u597d\u4e0d\u5230\u54ea\u53bb\u3002\u4e0d\u8fc7\uff0c\u542f\u52a8Python\u89e3\u91ca\u5668\u65f6\u53ef\u4ee5\u7528-O\u53c2\u6570\u6765\u5173\u95edassert: ",(0,l.kt)("inlineCode",{parentName:"p"},"python -O err.py"),", \u5173\u95ed\u540e\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684assert\u8bed\u53e5\u5f53\u6210pass\u6765\u770b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def foo(s):\n    n = int(s)\n    # \u53ea\u80fd\u65ad\u8a00 true or false\n    # \u5982\u679c\u65ad\u8a00\u5931\u8d25\uff0cassert\u8bed\u53e5\u672c\u8eab\u5c31\u4f1a\u629b\u51faAssertionError\n    assert n != 0, 'n is zero!'\n    return 10 / n\n\ndef main():\n    foo('0')\n\n# \u8fd0\u884c\u65f6\uff0c\u5173\u95edassert\n$ python3 -O err.py\nTraceback (most recent call last):\n  ...\nZeroDivisionError: division by zero\n")),(0,l.kt)("h2",{id:"92-\u8bbe\u7f6e\u65ad\u70b9-pdb"},"9.2. \u8bbe\u7f6e\u65ad\u70b9 pdb"),(0,l.kt)("p",null,"\u542f\u52a8Python\u7684\u8c03\u8bd5\u5668pdb ",(0,l.kt)("inlineCode",{parentName:"p"},"python -m pdb err.py"),", \u8f93\u5165\u547d\u4ee4l\u6765\u67e5\u770b\u4ee3\u7801, \u8f93\u5165\u547d\u4ee4n\u53ef\u4ee5\u5355\u6b65\u6267\u884c\u4ee3\u7801, \u4f55\u65f6\u5019\u90fd\u53ef\u4ee5\u8f93\u5165\u547d\u4ee4p \u53d8\u91cf\u540d\u6765\u67e5\u770b\u53d8\u91cf, \u8f93\u5165\u547d\u4ee4q\u7ed3\u675f\u8c03\u8bd5\uff0c\u9000\u51fa\u7a0b\u5e8f"),(0,l.kt)("p",null,"pdb.set_trace() \u8bbe\u7f6e\u65ad\u70b9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# err.py\nimport pdb\n\ns = '0'\nn = int(s)\npdb.set_trace() # \u8fd0\u884c\u5230\u8fd9\u91cc\u4f1a\u81ea\u52a8\u6682\u505c\nprint(10 / n)\n\n$ python3 err.py\n> /Users/michael/Github/learn-python3/samples/debug/err.py(7)<module>()\n-> print(10 / n)# \u6b64\u65f6\u8fdb\u5165\u8c03\u8bd5\u6a21\u5f0f\n(Pdb) p n # p\u67e5\u770b\u53d8\u91cf\n0\n(Pdb) c # c \u7ee7\u7eed\u8fd0\u884c\nTraceback (most recent call last):\n  File \"err.py\", line 7, in <module>\n    print(10 / n)\nZeroDivisionError: division by zero\n\n")),(0,l.kt)("h1",{id:"10-jinja2-\u6a21\u677f"},"10. jinja2 \u6a21\u677f"),(0,l.kt)("p",null,"\u6e32\u67d3\u4f7f\u7528\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# FileSystemLoader\uff1a\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7d\u5668\n# \u4e0d\u9700\u8981\u6a21\u677f\u6587\u4ef6\u5b58\u5728\u67d0\u4e2aPython\u5305\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\n\n# PackageLoader\uff1a\u5305\u52a0\u8f7d\u5668\nfrom jinja2 import PackageLoader,Environment\n# \u4e24\u4e2a\u53c2\u6570\u4e3a\uff1apython\u5305\u7684\u540d\u79f0\uff0c\u4ee5\u53ca\u6a21\u677f\u76ee\u5f55\u540d\u79f0\nenv = Environment(loader=PackageLoader('python_project','templates'))    # \u521b\u5efa\u4e00\u4e2a\u5305\u52a0\u8f7d\u5668\u5bf9\u8c61\ntemplate = env.get_template('bast.html')    # \u83b7\u53d6\u4e00\u4e2a\u6a21\u677f\u6587\u4ef6\ntemplate.render(name='daxin',age=18)   # \u6e32\u67d3\n\n\n")),(0,l.kt)("p",null,"\u6a21\u677f\u8bed\u6cd5\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u4e09\u79cd\u8bed\u6cd5\n# \u63a7\u5236\u7ed3\u6784 {% %}\n# \u53d8\u91cf\u53d6\u503c{{}}\n# \u6ce8\u91ca {# #}\n\n# \u5faa\u73af\n# \u8fed\u4ee3\u5217\u8868\n<ul>\n{% for user in users %}\n<li>{{ user.username|title }}</li>\n{% endfor %}\n</ul>\n# \u8fed\u4ee3\u5b57\u5178\n<dl>\n{% for key, value in my_dict.iteritems() %}\n<dt>{{ key }}</dt>\n<dd>{{ value}}</dd>\n{% endfor %}\n</dl>\n\n# \u8fc7\u6ee4\u5668 \u5c31\u662f\u5185\u7f6e\u51fd\u6570\n# safe: \u6e32\u67d3\u65f6\u503c\u4e0d\u8f6c\u4e49\n# capitialize: \u628a\u503c\u7684\u9996\u5b57\u6bcd\u8f6c\u6362\u6210\u5927\u5199\uff0c\u5176\u4ed6\u5b50\u6bcd\u8f6c\u6362\u4e3a\u5c0f\u5199\n# lower: \u628a\u503c\u8f6c\u6362\u6210\u5c0f\u5199\u5f62\u5f0f\n# upper: \u628a\u503c\u8f6c\u6362\u6210\u5927\u5199\u5f62\u5f0f\n# title: \u628a\u503c\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7684\u9996\u5b57\u6bcd\u90fd\u8f6c\u6362\u6210\u5927\u5199\n# trim: \u628a\u503c\u7684\u9996\u5c3e\u7a7a\u683c\u53bb\u6389\n# striptags: \u6e32\u67d3\u4e4b\u524d\u628a\u503c\u4e2d\u6240\u6709\u7684HTML\u6807\u7b7e\u90fd\u5220\u6389\n# join: \u62fc\u63a5\u591a\u4e2a\u503c\u4e3a\u5b57\u7b26\u4e32\n# replace: \u66ff\u6362\u5b57\u7b26\u4e32\u7684\u503c\n# round: \u9ed8\u8ba4\u5bf9\u6570\u5b57\u8fdb\u884c\u56db\u820d\u4e94\u5165\uff0c\u4e5f\u53ef\u4ee5\u7528\u53c2\u6570\u8fdb\u884c\u63a7\u5236\n# int: \u628a\u503c\u8f6c\u6362\u6210\u6574\u578b\n\n{{ 'abc' | captialize  }}\n# Abc\n\n{{ 'abc' | upper  }}\n# ABC\n\n{{ 'hello world' | title  }}\n# Hello World\n\n{{ \"hello world\" | replace('world','daxin') | upper }}\n# HELLO DAXIN\n\n{{ 18.18 | round | int }}\n# 18\n\n\n# \u5b8f\u7c7b\u4f3c\u4e8ePython\u4e2d\u7684\u51fd\u6570\uff0c\u6211\u4eec\u5728\u5b8f\u4e2d\u5b9a\u4e49\u884c\u4e3a\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u884c\u4f20\u9012\u53c2\u6570\uff0c\u5c31\u50cfPython\u4e2d\u7684\u51fd\u6570\n# \u5b9a\u4e49\n{% macro input(name,age=18) %}   # \u53c2\u6570age\u7684\u9ed8\u8ba4\u503c\u4e3a18\n <input type='text' name=\"{{ name }}\" value=\"{{ age }}\" >\n{% endmacro %}\n# \u8c03\u7528\n<p>{{ input('daxin') }} </p>\n<p>{{ input('daxin',age=20) }} </p>\n\n# \u7ee7\u627f\u548csuper\u51fd\u6570\n# \u6a21\u677f\u7ee7\u627f\u3002\u6a21\u677f\u7ee7\u627f\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u57fa\u672c(\u9aa8\u67b6)\u6587\u4ef6\uff0c\u5176\u4ed6\u6587\u4ef6\u4ece\u8be5\u9aa8\u67b6\u6587\u4ef6\u7ee7\u627f\uff0c\u7136\u540e\u9488\u5bf9\u81ea\u5df1\u9700\u8981\u7684\u5730\u65b9\u8fdb\u884c\u4fee\u6539\n\n# \u9aa8\u67b6\n# \u5b9a\u4e49\u4e86\u56db\u5904 block\uff0c\u5373\uff1ahead\uff0ctitle\uff0ccontent\uff0cfooter\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    {% block head %}\n    <link rel=\"stylesheet\" href=\"style.css\"/>\n    <title>{% block title %}{% endblock %} - My Webpage</title>\n    {% endblock %}\n</head>\n<body>\n<div id=\"content\">{% block content %}{% endblock %}</div>\n<div id=\"footer\">\n    {% block  footer %}\n    <script>This is javascript code <\/script>\n    {% endblock %}\n</div>\n</body>\n</html>\n\n# \u65b0\u5efa\u6587\u4ef6\u7ee7\u627f\n{% extend \"base.html\" %}       # \u7ee7\u627fbase.html\u6587\u4ef6\n\n{% block title %} Dachenzi {% endblock %}   # \u5b9a\u5236title\u90e8\u5206\u7684\u5185\u5bb9\n\n{% block head %}\n    {{  super()  }}        # \u7528\u4e8e\u83b7\u53d6\u539f\u6709\u7684\u4fe1\u606f\n    <style type='text/css'>\n    .important { color: #FFFFFF }\n    </style>\n{% endblock %}\n\n# \u5176\u4ed6\u4e0d\u4fee\u6539\u7684\u539f\u5c01\u4e0d\u52a8\u7684\u7ee7\u627f\n\n")),(0,l.kt)("h1",{id:"11-\u8def\u5f84\u95ee\u9898"},"11. \u8def\u5f84\u95ee\u9898"),(0,l.kt)("h2",{id:"111-\u6587\u4ef6\u8def\u5f84-and-\u7ec8\u7aef\u8def\u5f84"},"11.1. \u6587\u4ef6\u8def\u5f84 and \u7ec8\u7aef\u8def\u5f84"),(0,l.kt)("p",null,"\u9700\u8981\u7528\u547d\u4ee4\u884c\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4e5f\u5c31\u6709\u53c2\u6570 argv\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u6c42\u7ec8\u7aef\u8def\u5f84\u548cPython\u6587\u4ef6\u8def\u5f84\u4e00\u81f4\u3002\u547d\u4ee4\u884c\u8fd0\u884c\u7a0b\u5e8f\u7684\u683c\u5f0f\u662f\uff1apython+Python\u6587\u4ef6\u540d+\u53c2\u6570"),(0,l.kt)("h2",{id:"112-\u83b7\u53d6\u811a\u672c\u4f4d\u7f6e"},"11.2. \u83b7\u53d6\u811a\u672c\u4f4d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"if __name__ == '__main__':\n    import sys\n    import os\n\n    # \u4e0d\u9002\u7528\u4e8e \u547d\u4ee4\u884c\u7a0b\u5e8f,\n    print(sys.argv)    # ['D:/repo/repo_github/shared_already/rest-api-generator/test_jinja.py']\n    # \u83b7\u5f97\u7684\u662f\u5f53\u524d\u6267\u884c\u811a\u672c\u7684\u4f4d\u7f6e\n    # \u82e5\u5728\u547d\u4ee4\u884c, \u6253\u5370\u7684\u662f 'py xxx'\u547d\u4ee4\u4e2d\u7684 xxx\n    print(sys.argv[0])    # D:/repo/repo_github/shared_already/rest-api-generator/test_jinja.py\n\n    # python \u67e5\u627e\u5e93\u7684\u8def\u5f84, \u7b2c\u4e00\u4e2a\u662f\u5f53\u524d\u9879\u76ee\u8def\u5f84\n    print(sys.path)\n    print(sys.path[0])  # D:\\repo\\repo_github\\shared_already\\rest-api-generator\n\n    # \u5224\u65ad\u4e3a\u811a\u672c\u6587\u4ef6\u8fd8\u662fpy2exe\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\uff0c\u5982\u679c\u662f\u811a\u672c\u6587\u4ef6\uff0c\n    # \u5219\u8fd4\u56de\u7684\u662f\u811a\u672c\u7684\u76ee\u5f55\uff0c\u5982\u679c\u662fpy2exe\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\uff0c\u5219\u8fd4\u56de\u7684\u662f\u7f16\u8bd1\u540e\u7684\u6587\u4ef6\u8def\u5f84\n    cur_path = sys.path[0]\n    if os.path.isdir(cur_path):\n        print('current project dir: [{}]'.format(cur_path))\n    elif os.path.isfile(cur_path):\n        dirname = os.path.dirname(cur_path)\n        print('current project dir: [{}]'.format(dirname))\n\n    # \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n    # \u82e5\u8981\u6539\u53d8\u5f53\u524d\u5de5\u4f5c\u8def\u5f84\uff0c\u53ef\u4ee5\u7528\uff1aos.chdir(path)\n    print(os.getcwd())\n    print(os.path.abspath(os.curdir))\n    print(os.curdir)  # \u76f8\u5bf9\u8def\u5f84\n    print(os.path.abspath('.'))\n    # \u7236\u76ee\u5f55\n    print(os.path.abspath('..'))\n\n\n")),(0,l.kt)("h1",{id:"12-shutil-\u4f7f\u7528"},"12. shutil \u4f7f\u7528"),(0,l.kt)("p",null,"TODO"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u9012\u5f52\u5220\u9664\u76ee\u5f55\n\nimport shutil  \nshutil.rmtree('\u8981\u6e05\u7a7a\u7684\u6587\u4ef6\u5939\u540d')  # \u5148\u5220\u9664\nos.mkdir('\u8981\u6e05\u7a7a\u7684\u6587\u4ef6\u5939\u540d')  # \u518d\u91cd\u5efa\n\nimport os\nfor root, dirs, files in os.walk(top, topdown=False):\n    for name in files:\n        os.remove(os.path.join(root, name))\n    for name in dirs:\n        os.rmdir(os.path.join(root, name))\n\n# \u79fb\u52a8\u6587\u4ef6\u5939\nshutil.move('\u539f\u6587\u4ef6\u5939/\u539f\u6587\u4ef6\u540d','\u76ee\u6807\u6587\u4ef6\u5939/\u76ee\u6807\u6587\u4ef6\u540d') \n\n")),(0,l.kt)("h1",{id:"13-venv-\u865a\u62df\u73af\u5883"},"13. venv \u865a\u62df\u73af\u5883"),(0,l.kt)("p",null,"\u63a8\u8350 venv (virtualenv \u8fc7\u65f6\u4e86):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"python -m venv venv_dir  # \u521b\u5efa\u865a\u62df\u73af\u5883venv_dir\uff0c \u4f1a\u81ea\u52a8\u751f\u6210venv_dir\u6587\u4ef6\u5939\n\n# \u6fc0\u6d3b\n# \u6fc0\u6d3b\u73af\u5883\u540e\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u5728\u8be5\u865a\u62df\u73af\u5883\u4e2d\u8fdb\u884c\uff0c\u4e0d\u4f1a\u5230\u5168\u5c40\u7684python\u73af\u5883\u548c\u5176\u5b83python\u865a\u62df\u73af\u5883\n$ cd venv_dir/\n$ source ./bin/activate\n\n# \u9a8c\u8bc1\u662f\u5426\u6fc0\u6d3b\necho $VIRTUAL_ENV\n\n# \u9000\u51fa\u865a\u62df\u73af\u5883\ndeactivate\n\n# \u5220\u9664\u73af\u5883\nrm -rf venv_dir\n\n\n# \u4f7f\u7528anaconda\u7684conda\n$ conda create -n env_name python=version package_names(\u9ed8\u8ba4\u5728\u6b64\u73af\u5883\u4e2d\u5b89\u88c5\u7684python\u5305)\n# \u4f8b\n$ conda create --name django_venv python=3.8 django\n\n$ conda env list # \u67e5\u770b\u6240\u6709conda\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\n\n$ conda activate env_name\n# \u4f8b\n$ conda activate django_venv\n\n$ conda deactivate  # \u76f4\u63a5\u6267\u884cconda deactivate\u5373\u53ef\u9000\u51fa\u5f53\u524d\u865a\u62df\u73af\u5883\n\n$ conda remove -n ven_name --all\n\n")),(0,l.kt)("p",null,"\u4f7f\u7528 pycharm: ",(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/pfm685757/article/details/108590680"},"https://blog.csdn.net/pfm685757/article/details/108590680")),(0,l.kt)("p",null,"inherit global site-packages:\u52fe\u9009\u4e0a\u7684\u8bdd\u4ee3\u8868\u521b\u5efa\u7684\u65b0\u9879\u76ee\u9700\u8981copy\u4e00\u4efd\u5168\u5c40\u5305\u5230\u865a\u62df\u73af\u5883\u3002"),(0,l.kt)("p",null,"Make available to all projects:\u52fe\u9009\u4e0a\uff0c\u8868\u793a\uff0c\u5f53\u5728\u865a\u62df\u73af\u5883\u4e0b\u5b89\u88c5\u5305\u7684\u65f6\u5019\uff0ccopy\u4e00\u4efd\u5230\u5168\u5c40\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"}," pip3 install virtualenv\n# \u865a\u62df\u73af\u5883\n# --no-site-packages\uff0c\u5df2\u7ecf\u5b89\u88c5\u5230\u7cfb\u7edfPython\u73af\u5883\u4e2d\u7684\u6240\u6709\u7b2c\u4e09\u65b9\u5305\u90fd\u4e0d\u4f1a\u590d\u5236\u8fc7\u6765\uff0c\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u4e00\u4e2a\u4e0d\u5e26\u4efb\u4f55\u7b2c\u4e09\u65b9\u5305\u7684\u201c\u5e72\u51c0\u201d\u7684Python\u8fd0\u884c\u73af\u5883\u3002\n#               \u66f4\u65b0 , \u7248\u672c >=20 \u540e, \u9ed8\u8ba4\u5c31\u52a0\u4e0a\u4e86\u8fd9\u4e2a\u9009\u9879, \u4e0d\u5fc5\u624b\u52a8\u6307\u5b9a\n# -p \u6307\u5b9a\u89e3\u91ca\u5668\nvirtualenv -p python3.6 venv  \n# \u4f7f\u7528\u9ed8\u8ba4\u89e3\u91ca\u5668\nvirtualenv  venv\n# \u6709\u4e86venv\u8fd9\u4e2aPython\u73af\u5883\uff0c\u53ef\u4ee5\u7528source\u8fdb\u5165\u8be5\u73af\u5883\nsource ./venv/bin/activate\n# \u9000\u51fa venv\ndeactivate\n\n#\u5bf9\u5f53\u524d\u5df2\u7ecf\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u66f4\u6539\u4e3a\u53ef\u8fc1\u79fb, \u751f\u6210\u538b\u7f29\u5305\u89e3\u538b\u540e\u76f4\u63a5\u4f7f\u7528\nvirtualenv --relocatable ./\n\n# \u5b89\u88c5\u5e93\u4f9d\u8d56 \u5230 venv\npip install -r requirements.txt\n# \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\npip freeze > requirements.txt \n# \u5f53\u524d\u5b89\u88c5\u7248\u672c\npip freeze\n\n\n\n\n\n# virtualenvwrapper,\u662f\u5bf9 virtualenv \u7684\u4e00\u4e2a\u5c01\u88c5\uff0c\u76ee\u7684\u662f\u4f7f\u540e\u8005\u66f4\u597d\u7528\u3002\n\n\n# venv , Python \u4ece3.3 \u7248\u672c\u5f00\u59cb\uff0c\u81ea\u5e26\u4e86\u4e00\u4e2a\u865a\u62df\u73af\u5883 venv\n# \u4ec5\u4ec5\u652f\u6301 python 3.3 \u548c\u4ee5\u540e\u7248\u672c\u3002\u6240\u4ee5\uff0c\u8981\u5728 python2 \u4e0a\u4f7f\u7528\u865a\u62df\u73af\u5883\uff0c\u4f9d\u7136\u8981\u5229\u7528 virtualenv \npython3 -m venv <venv_name> # \u4e00\u822c\u547d\u540d\u4e3a .venv\n\n.venv\\Scripts\\activate.bat\n# or\nsource .venv/bin/activate\n\n\n\n")),(0,l.kt)("p",null,"\u4f7f\u7528 pycharm \u7684 venv"),(0,l.kt)("p",null,"\u8bbe\u7f6e interpretor, \u63a8\u8350 venv \u865a\u62df\u73af\u5883"),(0,l.kt)("p",null,'"inherit global site packages" \u52fe\u9009\u8868\u793a project \u5185\u627e\u4e0d\u5230\u9700\u8981\u7684\u5e93, \u5c31\u6269\u5927\u8303\u56f4, \u5230\u5168\u5c40 base interpretor \u7684\u5e93\u53bb\u627e, \u4f46\u662f\u5b89\u88c5\u7684\u5e93\u4f1a\u4f7f\u7528 \u5168\u5c40 pip \u5b89\u88c5, \u4f1a\u5b89\u88c5\u5230 base interpretor \u4e2d, \u6c61\u67d3\u5168\u5c40. \u5efa\u8bae\u4e0d\u8981\u52fe\u9009'),(0,l.kt)("p",null,"\u6b64\u65f6\u4f1a\u5728 project root \u4e0b\u751f\u6210 venv"),(0,l.kt)("h1",{id:"14-web-\u5f00\u53d1"},"14. web \u5f00\u53d1"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/20706333/answer/24927602"},"https://www.zhihu.com/question/20706333/answer/24927602")," \u6709\u54ea\u4e9b\u6846\u67b6\n",(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/41564604/answer/660256963"},"https://www.zhihu.com/question/41564604/answer/660256963")," \u5bf9\u6bd4"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Flask: \u5c0f\u800c\u7f8e, \u9002\u5408\u5c0f\u7ad9\u70b9, \u5f00\u53d1web\u670d\u52a1\u7684API, \u548c nosql\u914d\u5408\u826f\u597d")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Django: \u5927\u800c\u5168, \u81ea\u5e26 template, orm, \u9002\u5408\u5f00\u53d1\u4f01\u4e1a\u7ea7\u7f51\u7ad9, \u9002\u5408 sql, \u65e0\u6cd5\u914d\u5408nosql\u6570\u636e\u5e93")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Torando: \u539f\u751f\u5f02\u6b65\u975e\u963b\u585e\uff0c\u5728IO\u5bc6\u96c6\u578b\u5e94\u7528\u548c\u591a\u4efb\u52a1\u5904\u7406\u4e0a\u5360\u636e\u7edd\u5bf9\u6027\u7684\u4f18\u52bf\uff0c\u5c5e\u4e8e\u4e13\u6ce8\u578b\u6846\u67b6"),(0,l.kt)("p",{parentName:"li"},"  websockets \u957f\u8fde\u63a5;"),(0,l.kt)("p",{parentName:"li"},"  \u5185\u5d4c\u4e86HTTP\u670d\u52a1\u5668"))),(0,l.kt)("h2",{id:"141-fastapi"},"14.1. fastapi"),(0,l.kt)("p",null,"\u5f00\u53d1 rest api \u975e\u5e38\u65b9\u4fbf ",(0,l.kt)("a",{parentName:"p",href:"https://juejin.cn/post/6844904051327369224"},"https://juejin.cn/post/6844904051327369224")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/nsidnev/fastapi-realworld-example-app"},"https://github.com/nsidnev/fastapi-realworld-example-app")),(0,l.kt)("h2",{id:"142-django"},"14.2. Django"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u5347\u7ea7 pip \u5230 v21\npython -m pip install --upgrade pip\n\npip install Django\n\n# \u521b\u5efa\u6a21\u677f\u4ee3\u7801\n# \u672b\u5c3e . \u8868\u793a\u5f53\u524d\u76ee\u5f55, \u53ef\u9009\n# django_demo \u4e3a\u9879\u76ee\u540d, \u4e00\u822c\u548c\u5f53\u524d\u6587\u4ef6\u5939\u540d\u4fdd\u6301\u4e00\u81f4\ndjango-admin startproject django_demo .\n\n# \u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\npython manage.py runserver [[0:]8080]\n\n# \u521b\u5efa demo app: polls \u7684\u6a21\u677f\u4ee3\u7801\npython manage.py startapp polls\n\n# \u68c0\u67e5 INSTALLED_APPS \u8bbe\u7f6e\uff0c\u4e3a\u5176\u4e2d\u7684\u6bcf\u4e2a\u5e94\u7528\u521b\u5efa\u9700\u8981\u7684\u6570\u636e\u8868/\u66f4\u65b0\u8868\u7ed3\u6784\npython manage.py migrate\n\n# \u4e3a\u6307\u5b9a app \u521b\u5efa \u8fc1\u79fb\u6587\u4ef6(\u6a21\u578b\u6570\u636e, \u7528\u4e8e\u751f\u6210 SQL), polls \u662f\u81ea\u5b9a\u4e49 app name\npython manage.py makemigrations polls\n\n#  \u67e5\u770b SQL\npython manage.py sqlmigrate polls 0001\n\n\n# \u901a\u8fc7\u6a21\u578b api \u64cd\u4f5c\u6570\u636e\u5e93\npython manage.py shell\n")),(0,l.kt)("h2",{id:"143-flask"},"14.3. flask"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/humiaozuzu/awesome-flask"},"https://github.com/humiaozuzu/awesome-flask")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/yangyuexiong/Flask_BestPractices"},"https://github.com/yangyuexiong/Flask_BestPractices")," \u4e2d\u6587"),(0,l.kt)("h3",{id:"1431-flask\u89e3\u51b3\u8de8\u57df\u95ee\u9898"},"14.3.1. flask\u89e3\u51b3\u8de8\u57df\u95ee\u9898"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/h18208975507/article/details/102551339"},"https://blog.csdn.net/h18208975507/article/details/102551339")),(0,l.kt)("h3",{id:"1432-\u4fdd\u62a4-flask-api"},"14.3.2. \u4fdd\u62a4 flask api"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.miguelgrinberg.com/post/restful-authentication-with-flask"},"https://blog.miguelgrinberg.com/post/restful-authentication-with-flask"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://geekflare.com/securing-flask-api-with-jwt/"},"https://geekflare.com/securing-flask-api-with-jwt/")),(0,l.kt)("h3",{id:"1433-\u547d\u4ee4\u884cor-idea-\u542f\u52a8"},"14.3.3. \u547d\u4ee4\u884cor idea \u542f\u52a8"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"export FLASK_APP=hello.py\n\n# optional, enable debug mode\nexport FLASK_ENV=development\n\n# default port -> 5000\nflask run [--host=0.0.0.0]\n\n\n")),(0,l.kt)("p",null,"\u901a\u8fc7  idea \u542f\u52a8, \u9ed8\u8ba4\u662f\u57fa\u4e8e flask \u6846\u67b6\u542f\u52a8 (\u5373\u53f3\u952e\u8fd0\u884c\u9ed8\u8ba4\u662fFlask\u6267\u884c\u9879\u76ee), \u4e0d\u4f1a\u8d70 main \u65b9\u6cd5"),(0,l.kt)("p",null,"\u82e5\u5e0c\u671b\u8d70 main \u65b9\u6cd5, \u9700\u8981\u624b\u52a8\u914d\u7f6e \u542f\u52a8 configuration"),(0,l.kt)("h3",{id:"1434-rest-api"},"14.3.4. rest api"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/a25357f2d930"},"https://www.jianshu.com/p/a25357f2d930")," jsonify \u76f8\u6bd4\u76f4\u63a5\u8fd4\u56de dict/json.dump({}) \u7684\u597d\u5904"),(0,l.kt)("p",null,"\u89e3\u6790\u8bf7\u6c42\u53c2\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def request_parse(req_data):\n    '''\u89e3\u6790\u8bf7\u6c42\u6570\u636e\u5e76\u4ee5json\u5f62\u5f0f\u8fd4\u56de'''\n    if req_data.method == 'POST':\n        data = req_data.json\n    elif req_data.method == 'GET':\n        data = req_data.args\n    return data\n   \n@app.route('/', methods = [\"GET\",\"POST\"])   # GET \u548c POST \u90fd\u53ef\u4ee5\ndef get_data():\n    data = request_parse(request)\n    # \u5047\u8bbe\u6709\u5982\u4e0b URL\n    # http://10.8.54.48:5000/index?name=john&age=20\n    name = data.get(\"name\")\n    age = data.get(\"age\")\n\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/pineapple_C/article/details/113339718"},"https://blog.csdn.net/pineapple_C/article/details/113339718")," \u62e6\u622a\u5668"),(0,l.kt)("h3",{id:"1435-\u6570\u636e\u5e93\u4ea4\u4e92"},"14.3.5. \u6570\u636e\u5e93\u4ea4\u4e92"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/f7ba338016b8"},"https://www.jianshu.com/p/f7ba338016b8")," orm \u6846\u67b6 SQLAlchemy"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://xieyugui.wordpress.com/2015/04/17/sqlalchemy-%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81model%E5%92%8C%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E8%A1%A8/"},"https://xieyugui.wordpress.com/2015/04/17/sqlalchemy-%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81model%E5%92%8C%E5%8A%A8%E6%80%81%E5%88%9B%E5%BB%BA%E8%A1%A8/")," \u4f7f\u7528\u52a8\u6001model\u548c\u52a8\u6001\u521b\u5efa\u8868"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u539f\u751fsql\u8bed\u53e5\u64cd\u4f5c\nsql = 'select * from user'\nresult = db.session.execute(sql)\n\n# \u67e5\u8be2\u5168\u90e8\nUser.query.all()\n# \u4e3b\u952e\u67e5\u8be2\nUser.query.get(1)\n\n# \u6761\u4ef6\u67e5\u8be2\nUser.query.filter_by(username='name').all() # or first()\n#                                 ><\uff08\u5927\u4e8e\u548c\u5c0f\u4e8e\uff09\u67e5\u8be2    and_\u548cor_\u67e5\u8be2, in_\n# filter_by()   \u76f4\u63a5\u7528\u5c5e\u6027\u540d\uff0c\u6bd4\u8f83\u7528= \u4e0d\u652f\u6301 \u4e0d\u652f\u6301\n# filter()  \u7528\u7c7b\u540d.\u5c5e\u6027\u540d\uff0c\u6bd4\u8f83\u7528==       \u652f\u6301  \u652f\u6301\n\n# \u591a\u6761\u4ef6\u67e5\u8be2\nfrom sqlalchemy import and_\nUser.query.filter_by(and_(User.username =='name',User.password=='passwd'))\n# \u6bd4\u8f83\u67e5\u8be2\nUser.query.filter(User.id.__lt__(5)) # \u5c0f\u4e8e5\nUser.query.filter(User.id.__le__(5)) # \u5c0f\u4e8e\u7b49\u4e8e5\nUser.query.filter(User.id.__gt__(5)) # \u5927\u4e8e5\nUser.query.filter(User.id.__ge__(5)) # \u5927\u4e8e\u7b49\u4e8e5\n# in\u67e5\u8be2\nUser.query.filter(User.username.in_('A','B','C','D'))\n# \u6392\u5e8f\nUser.query.order_by('age') # \u6309\u5e74\u9f84\u6392\u5e8f\uff0c\u9ed8\u8ba4\u5347\u5e8f\uff0c\u5728\u524d\u9762\u52a0-\u53f7\u4e3a\u964d\u5e8f'-age'\n# \u9650\u5236\u67e5\u8be2\nUser.query.filter(age=18).offset(2).limit(3)  # \u8df3\u8fc7\u4e8c\u6761\u5f00\u59cb\u67e5\u8be2\uff0c\u9650\u5236\u8f93\u51fa3\u6761\n\nhttps://blog.csdn.net/qq_41856814/article/details/101226416 \u5206\u9875\u67e5\u8be2\n\n# \u589e\u52a0\nuse = User(id,username,password)\ndb.session.add(use)\ndb.session.commit() \n\n# \u5220\u9664\nUser.query.filter_by(User.username='name').delete()\n\n# \u4fee\u6539\nUser.query.filter_by(User.username='name').update({'password':'newdata'})\n\n\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/miguelgrinberg/Flask-Migrate"},"https://github.com/miguelgrinberg/Flask-Migrate")," Flask-Migrate \u6570\u636e\u8fc1\u79fb, \u6839\u636e model \u521b\u5efa table\n",(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/feit2417/article/details/86592319"},"https://blog.csdn.net/feit2417/article/details/86592319")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# db \u662f\u4ee3\u7801\u4e2d\u7684 migration command name\n\n# \u751f\u6210 migrations \u6587\u4ef6\u5939\npython3 manage.py db init\n\npython3 manage.py db migrate\npython3 manage.py db upgrade\n# \u540e\u7eed\u5bf9\u811a\u672c\u6709\u4efb\u4f55\u7684\u4fee\u6539\uff0c\u53ea\u8981\u91cd\u590d\u6267\u884c\u540e\u4e24\u53e5\u5c31\u53ef\u4ee5\u4e86\n\n# \u5176\u4ed6\u6307\u4ee4\nmanage.py db: error: invalid choice: 'migration' (choose from 'init', 'revision', 'migrate', 'edit', 'merge', 'upgrade', 'downgrade', 'show', 'history', 'heads', 'branches', 'current', 'stamp')\n\n\n")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/a681f6490c3c"},"https://www.jianshu.com/p/a681f6490c3c")," Flask-script\n",(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/269820011"},"https://zhuanlan.zhihu.com/p/269820011")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/17972020/how-to-execute-raw-sql-in-flask-sqlalchemy-app?rq=1"},"https://stackoverflow.com/questions/17972020/how-to-execute-raw-sql-in-flask-sqlalchemy-app?rq=1")," \u6267\u884c\u539f\u751f SQL"),(0,l.kt)("h3",{id:"1436-flask-\u4e2d\u7684\u65e5\u5fd7"},"14.3.6. flask \u4e2d\u7684\u65e5\u5fd7"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/daf5c9e57c65"},"https://www.jianshu.com/p/daf5c9e57c65")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"app.logger.info('')\n# \u6253\u5370\u5806\u6808\napp.logger.exception('')\napp.logger.debug('A value for debugging')\napp.logger.warning('A warning occurred (%d apples)', 42)\napp.logger.error('An error occurred')\n\n")),(0,l.kt)("p",null,"\u65e5\u5fd7\u5207\u5206:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6309\u7167\u5927\u5c0f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'from logging.handlers import RotatingFileHandler \n# backupCount \u5c31\u662f\u4fdd\u7559\u7684\u65e5\u5fd7\u4e2a\u6570\u3002 \u6bd4\u5982flask.log \u5199\u6ee1\u4e86\uff0c \u5c31\u4f1a\u88ab\u91cd\u547d\u540d\u6210flask.log.1, \u7a0b\u5e8f\u7ee7\u7eed\u5411flask.log\u5199\u5165\u3002\nhandler = RotatingFileHandler("flask.log", maxBytes=1024000, backupCount=10)\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6309\u7167\u65e5\u671f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'from logging.handlers import TimedRotatingFileHandler\nhandler = TimedRotatingFileHandler(\n        "flask.log", when="D", # when=D\uff1a \u8868\u793a\u6309\u5929\u8fdb\u884c\u5207\u5206\n        interval=1,  # \u6bcf\u5929\u90fd\u5207\u5206\u3002 \u6bd4\u5982interval=2\u5c31\u8868\u793a\u4e24\u5929\u5207\u5206\u4e00\u4e0b\n         backupCount=15 , # \u4fdd\u755915\u5929\u7684\u65e5\u5fd7\n        encoding="UTF-8", # \u4f7f\u7528UTC+0\u7684\u65f6\u95f4\u6765\u8bb0\u5f55 \uff08\u4e00\u822cdocker\u955c\u50cf\u9ed8\u8ba4\u4e5f\u662fUTC+0)\n        delay=False, utc=True)\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"# [%(asctime)s][%(filename)s:%(lineno)d][%(levelname)s][%(thread)d] - %(message)s")," \u683c\u5f0f\u914d\u7f6e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\nif __name__ == '__main__':\n    formatter = logging.Formatter(\n        \"[%(asctime)s][%(filename)s:%(lineno)d][%(levelname)s][%(thread)d] - %(message)s\")\n        # (%(hostname)s)[%(asctime)s][%(filename)s:%(lineno)d][%(levelname)s][%(thread)d] - %(message)s \u589e\u52a0\u4e86 hostname\n    handler = TimedRotatingFileHandler(\n        \"flask.log\", when=\"D\", interval=1, backupCount=15,\n        encoding=\"UTF-8\", delay=False, utc=True)\n    handler.setFormatter(formatter)\n    app.logger.addHandler(handler)\n    app.run(host='0.0.0.0', port=5001, debug=True)\n\n\n\n# \u4e5f\u53ef\u901a\u8fc7 \u81ea\u5b9a\u4e49 log filter \u5b9a\u5236 \u65e5\u5fd7\n# \u9996\u5148\u81ea\u5b9a\u4e49\u4e00\u4e2aLogFilter\nclass ContextFilter(logging.Filter):\n    '''Enhances log messages with contextual information'''\n    def filter(self, record):\n        record.hostname = \"my-windows-10\"\n        return True\n\n# \u5728main\u51fd\u6570\u4e4b\u4e2d\uff0c \u589e\u52a0\u52a0\u8f7d\u8fd9\u4e2afilter\u5373\u53ef\nhandler.addFilter(ContextFilter())\n\n")),(0,l.kt)("p",null,"SMTPHandler\u8ddfHTTPHandler \u53d1\u9001\u90ae\u4ef6 \u6216\u8005 http"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\nif __name__ == '__main__':\n    app.debug = True\n\n    # File and Console handler &amp; formtter\n    formatter = logging.Formatter(\n        \"[%(asctime)s][%(module)s:%(lineno)d][%(levelname)s][%(thread)d] - %(message)s\")\n    handler = TimedRotatingFileHandler(\n        \"flask.log\", when=\"D\", interval=1, backupCount=15,\n        encoding=\"UTF-8\", delay=False, utc=True)\n    app.logger.addHandler(handler)\n    handler.setFormatter(formatter)\n\n    # Email Handler\n    mail_handler = SMTPHandler(\n        mailhost='10.64.1.85',\n        fromaddr='flask-admin@trendmicro.com',\n        toaddrs=['wenjun_yang@trendmicro.com'],\n        subject='Flask Application Error'\n    )\n    mail_handler.setLevel(logging.ERROR)\n    mail_handler.setFormatter(logging.Formatter(\n        \"[%(asctime)s][%(module)s:%(lineno)d][%(levelname)s][%(thread)d] - %(message)s\"\n    ))\n    app.logger.addHandler(mail_handler)\n\n    app.run()\n")),(0,l.kt)("h3",{id:"1437-blueprint\u84dd\u56fe-\u6a21\u5757\u5316\u5f00\u53d1"},"14.3.7. blueprint\u84dd\u56fe \u6a21\u5757\u5316\u5f00\u53d1"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://realpython.com/flask-blueprint/"},"https://realpython.com/flask-blueprint/")),(0,l.kt)("h3",{id:"1438-\u4e0a\u4e0b\u6587\u5bf9\u8c61"},"14.3.8. \u4e0a\u4e0b\u6587\u5bf9\u8c61"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://sentry.io/answers/working-outside-of-application-context/"},"https://sentry.io/answers/working-outside-of-application-context/")," current_app \u4f7f\u7528 (",(0,l.kt)("inlineCode",{parentName:"p"},"RuntimeError: working outside of application context"),"\u62a5\u9519)"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tiangolo/fastapi/issues/81"},"https://github.com/tiangolo/fastapi/issues/81")," \u4f7f\u7528 app \u4e0a\u4e0b\u6587\u5b58\u50a8\u6570\u636e"),(0,l.kt)("p",null,"g \u6bcf\u6b21 \u8bf7\u6c42\u90fd\u662f\u65b0\u7684(\u857e\u897f java \u7684 threadlocal), app \u662f\u771f\u4e2a\u5e94\u7528\u5168\u5c40\u751f\u547d\u5468\u671f\u7684"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/26097310"},"https://zhuanlan.zhihu.com/p/26097310"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/33970027"},"https://www.zhihu.com/question/33970027")),(0,l.kt)("h2",{id:"144-fastapi"},"14.4. fastapi"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/tiangolo/fastapi"},"https://github.com/tiangolo/fastapi")),(0,l.kt)("h1",{id:"15-db-\u9a71\u52a8-\u95ee\u9898"},"15. db \u9a71\u52a8 \u95ee\u9898"),(0,l.kt)("p",null,"mac \u65e0\u6cd5\u5b89\u88c5 postgres \u9a71\u52a8"),(0,l.kt)("p",null,"\u9a71\u52a8\u5728\u8fd9: ",(0,l.kt)("a",{parentName:"p",href:"https://pypi.org/project/psycopg2/"},"https://pypi.org/project/psycopg2/"),", \u9700\u8981\u9996\u5148\u5b89\u88c5 postgres  ",(0,l.kt)("inlineCode",{parentName:"p"},"brew install postgres"),", \u8bbe\u7f6e path, \u7136\u540e\u5b89\u88c5 (",(0,l.kt)("a",{parentName:"p",href:"https://www.psycopg.org/docs/install.html#install-from-source"},"\u53c2\u8003"),")"),(0,l.kt)("p",null,"\u5982\u679c\u8fd8\u662f\u4e0d\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"pip install psycopg2-binary==2.8.3")," (",(0,l.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/34304833/failed-building-wheel-for-psycopg2-macosx-using-virtualenv-and-pip"},"\u53c2\u8003"),")"),(0,l.kt)("h1",{id:"16-\u4ee3\u66ff-shell-\u8fd0\u7ef4"},"16. \u4ee3\u66ff shell \u8fd0\u7ef4"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.oschina.net/translate/python-scripts-replacement-bash-utility-scripts"},"https://www.oschina.net/translate/python-scripts-replacement-bash-utility-scripts"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://blog.51cto.com/dashui/2334754"},"https://blog.51cto.com/dashui/2334754"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/jacktian-it/articles/10222930.html"},"https://www.cnblogs.com/jacktian-it/articles/10222930.html")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/lalor/python_for_linux_system_administration"},"https://github.com/lalor/python_for_linux_system_administration")," \u4e66\u7c4d"),(0,l.kt)("h2",{id:"161-\u5b9e\u7528\u811a\u672c"},"16.1. \u5b9e\u7528\u811a\u672c"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/85728888"},"https://zhuanlan.zhihu.com/p/85728888"),"\nTODO"),(0,l.kt)("h3",{id:"1611-\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790"},"16.1.1. \u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# $# \u53d6\u53c2\u6570\u6570\u91cf\nlen(sys.argv)\n\n# $0 \u53d6\u7b2c0\u4e2a\u53c2\u6570\nsys.argv[0]\n\n\n\n")),(0,l.kt)("h3",{id:"1612-\u8def\u5f84"},"16.1.2. \u8def\u5f84"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u83b7\u53d6\u811a\u672c\u6240\u5728\u8def\u5f84\nimport os\nscript_dir = os.path.split(os.path.realpath(__file__))[0]\nos.chdir(script_dir)\n\n# \u5c55\u5f00\u7528\u6237\u8def\u5f84\uff0c\u65b9\u4fbf\u8de8\u5e73\u53f0\nprint(os.path.expanduser('~/.config'))\n\n\n# \u5339\u914d\u6587\u4ef6\u540d\nimport glob\nfor name in glob.glob('dir/*'):\n    print (name)\n")),(0,l.kt)("h3",{id:"1613-\u6587\u4ef6\u64cd\u4f5c"},"16.1.3. \u6587\u4ef6\u64cd\u4f5c"),(0,l.kt)("p",null,"\u63a8\u8350 shutil \u6a21\u5757, \u4ee3\u66ff\u5f88\u591ashell\u7684\u6587\u4ef6\u64cd\u4f5c\u547d\u4ee4\uff0c\u53ef\u4ee5\u907f\u514d\u7279\u6b8a\u60c5\u51b5\u5b57\u7b26\u8f6c\u4e49\u5e26\u6765\u7684\u56f0\u6270"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\nos.path.exists(file)\n\n# rm -rf\nos.system(\"rm -rf foo/\")\nshutil.rmtree(\"foo\", ignore_errors=True)\n\n# \u6253\u5f00\u6587\u4ef6\u8bfb\u51fa\u6bcf\u884c\u5185\u5bb9\nwith open(\"./xxx.log\") as file_obj:\n    xxx_list = file_obj.read().splitlines()\n\n# \u5217\u51fa\u76ee\u5f55\u4e0b\u6587\u4ef6\nos.listdir()\n['pkgsync', 'hosts', 'pkglist-aur.json', 'apply-pkgsync.sh', 'pkglist.json', 'rootfs', 'private', '.vscode', '.git', 'home', 'stow_all.sh', '.gitignore', 'local_rootfs', 'rime', 'i3', '.gitmodules', 'README.md']\n\n# \u81ea\u9876\u5411\u4e0b\uff0c\u904d\u5386\u6587\u4ef6\u5939\uff0cpath\u662f\u8def\u5f84\uff0cdir_list\u662f\u76ee\u5f55\u5217\u8868\uff0cfile_list\u662f\u6587\u4ef6\u5217\u8868\ng = os.walk(script_dir)\nfor path,dir_list,file_list in g:\n    for dir in dir_list:\n        print(os.path.join(path, file_name))        \n")),(0,l.kt)("h3",{id:"1614-sh-\u547d\u4ee4\u6267\u884c"},"16.1.4. sh \u547d\u4ee4\u6267\u884c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# system\u547d\u4ee4\u540c\u6b65\u6267\u884c\u547d\u4ee4\uff0c\u8fd4\u56de\u503c\u4e3a\u7a0b\u5e8f\u9000\u51fa\u7801\nif os.system("echo abc") != 0:\n    print("error: execute")\n    exit(1)\n\n# subprocess\u6267\u884c\u547d\u4ee4\nimport subprocess\nres = subprocess.Popen(\'uptime\', shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, close_fds=True)\nresult = res.stdout.readlines()\n\n# check_call()\u4f8b\u5b50\uff0c\u7f16\u8bd1\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5f53shell\u6765\u7528\uff0ccheck_call()\u4f1a\u5728\u6267\u884c\u8fd4\u56de\u9519\u8bef\u65f6\u629b\u51fa\u9519\u8bef\nfor test in tests:\n    os.chdir(os.path.join(script_dir, test))\n    output = subprocess.check_call(f"make", shell=True)\n    output = subprocess.check_call(f"./test_case", shell=True)\n\n# \u9700\u8981\u83b7\u53d6\u6253\u5370\u51fa\u7684\u6570\u636e\u65f6\uff0c\u8fd8\u53ef\u4ee5\u7528check_output()\uff0c\u6bd4\u5982\u8fd9\u91cc\u83b7\u53d6\u6587\u4ef6\u5217\u8868\nres = subprocess.check_output(\'find . -maxdepth 2 -name rootfs\', shell=True).decode()\nrootfs_dirs = res.strip().split(\'\\n\')\n\n# todo: \u4f7f\u7528\u7b2c\u4e09\u65b9sh\u6a21\u5757 http://amoffat.github.io/sh/\n')),(0,l.kt)("h2",{id:"162-\u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570"},"16.2. \u4f20\u9012\u547d\u4ee4\u884c\u53c2\u6570"),(0,l.kt)("p",null,"\u901a\u8fc7 sys.stdin, sys.stdout"),(0,l.kt)("p",null,"\u53c2\u6570\u5904\u7406\u5e93: optparse.OptionParser, argparse, click"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'if __name__ == "__main__":\n    # \u521d\u59cb\u5316\u4e00\u4e2anames\u7684\u5b57\u5178\uff0c\u5185\u5bb9\u4e3a\u7a7a\n    # \u5b57\u5178\u4e2d\u4e3aname\u548c\u51fa\u73b0\u6570\u91cf\u7684\u952e\u503c\u5bf9\n    names = {}\n    # sys.stdin\u662f\u4e00\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002 \u6240\u6709\u5f15\u7528\u4e8efile\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0c\n    # \u90fd\u53ef\u4ee5\u5e94\u7528\u4e8esys.stdin.\n    for name in sys.stdin.readlines():\n            # \u6bcf\u4e00\u884c\u90fd\u6709\u4e00\u4e2anewline\u5b57\u7b26\u505a\u7ed3\u5c3e\n            # \u6211\u4eec\u9700\u8981\u5220\u9664\u5b83\n            name = name.strip()\n            if name in names:\n                    names[name] += 1\n            else:\n                    names[name] = 1\n\n    # \u8fed\u4ee3\u5b57\u5178,\n    # \u8f93\u51fa\u540d\u5b57\uff0c\u7a7a\u683c\uff0c\u63a5\u7740\u662f\u8be5\u540d\u5b57\u51fa\u73b0\u7684\u6570\u91cf\n    for name, count in names.iteritems():\n            sys.stdout.write("%d\\t%s\\n" % (count, name))\n\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cat names.log | python namescount.py | sort -rn")),(0,l.kt)("h2",{id:"163-shell-\u8c03\u7528-python"},"16.3. shell \u8c03\u7528 Python"),(0,l.kt)("h3",{id:"1631-shel-\u8bfb\u53d6-python-\u51fd\u6570\u8fd4\u56de\u503c"},"16.3.1. shel \u8bfb\u53d6 Python \u51fd\u6570\u8fd4\u56de\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"\n\n")),(0,l.kt)("h3",{id:"1632-\u7edf\u8ba1\u51fa\u73b0\u6b21\u6570"},"16.3.2. \u7edf\u8ba1\u51fa\u73b0\u6b21\u6570"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'#!/usr/bin/env python\nimport sys\n\nif __name__ == "__main__":\n    # \u521d\u59cb\u5316\u4e00\u4e2anames\u7684\u5b57\u5178\uff0c\u5185\u5bb9\u4e3a\u7a7a\n    # \u5b57\u5178\u4e2d\u4e3aname\u548c\u51fa\u73b0\u6570\u91cf\u7684\u952e\u503c\u5bf9\n    names = {}\n    for name in sys.stdin.readlines():\n            # \u6bcf\u4e00\u884c\u90fd\u6709\u4e00\u4e2anewline\u5b57\u7b26\u505a\u7ed3\u5c3e\n            # \u6211\u4eec\u9700\u8981\u5220\u9664\u5b83\n            name = name.strip()\n            if name in names:\n                    names[name] += 1\n            else:\n                    names[name] = 1\n\n    # \u8fed\u4ee3\u5b57\u5178,\n    # \u8f93\u51fa\u540d\u5b57\uff0c\u7a7a\u683c\uff0c\u63a5\u7740\u662f\u8be5\u540d\u5b57\u51fa\u73b0\u7684\u6570\u91cf\n    for name, count in names.iteritems():\n            sys.stdout.write("%d\\t%s\\n" % (count, name))\n')),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cat names.log | ./xxx.py")),(0,l.kt)("h3",{id:"1633-\u8bfb\u53d6-csv-\u6587\u4ef6"},"16.3.3. \u8bfb\u53d6 csv \u6587\u4ef6"),(0,l.kt)("p",null,"\u83b7\u53d6\u6307\u5b9a\u5217"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"cat xxx.csv | ./xxx.py 2")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'#!/usr/bin/env python\n# CSV module that comes with the Python standard library\nimport csv\nimport sys\n\n\nif __name__ == "__main__":\n    # CSV\u6a21\u5757\u4f7f\u7528\u4e00\u4e2areader\u5bf9\u8c61\u4f5c\u4e3a\u8f93\u5165\n    # \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5c31\u662f sys.stdin.\n    csvfile = csv.reader(sys.stdin)\n\n    # \u8fd9\u4e2a\u811a\u672c\u5fc5\u987b\u63a5\u6536\u4e00\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u5217\u7684\u5e8f\u53f7\n    # \u4f7f\u7528sys.argv\u83b7\u53d6\u53c2\u6570.\n    column_number = 0\n    if len(sys.argv) > 1:\n            column_number = int(sys.argv[1])\n\n    # CSV\u6587\u4ef6\u7684\u6bcf\u4e00\u884c\u90fd\u662f\u7528\u9017\u53f7\u4f5c\u4e3a\u5b57\u6bb5\u7684\u5206\u9694\u7b26\n    for row in csvfile:\n            print row[column_number]\n\n')),(0,l.kt)("h2",{id:"164-python-\u8c03\u7528-shell"},"16.4. Python \u8c03\u7528 shell"),(0,l.kt)("h3",{id:"1641-subprocess"},"16.4.1. subprocess"),(0,l.kt)("p",null,"\u63a8\u8350"),(0,l.kt)("p",null,"python 3.0 \u4e4b\u540e\u4f7f\u7528 subprocess\u4ee3\u66ff commands (commands \u4ec5\u4ec5\u9002\u7528\u4e8e Linux, python 3.0 \u4e4b\u540e\u79fb\u9664\u6b64\u547d\u4ee4\uff0c\u4f7f\u7528 subprocess \u4ee3\u66ff)"),(0,l.kt)("p",null,"python 3.x \u4f7f\u7528 subprocess \u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b, \u5141\u8bb8\u521b\u5efa\u5f88\u591a\u5b50\u8fdb\u7a0b\uff0c\u521b\u5efa\u7684\u65f6\u5019\u80fd\u6307\u5b9a\u5b50\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u7684\u8f93\u5165\u3001\u8f93\u51fa\u3001\u9519\u8bef\u8f93\u51fa\u7ba1\u9053\uff0c\u6267\u884c\u540e\u80fd\u83b7\u53d6\u8f93\u51fa\u7ed3\u679c\u548c\u6267\u884c\u72b6\u6001\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'#!/usr/bin/python3\n\n\nsubprocess.run()    Python 3.5\u4e2d\u65b0\u589e\u7684\u51fd\u6570\u3002\u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u7b49\u5f85\u547d\u4ee4\u6267\u884c\u5b8c\u6210\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6267\u884c\u7ed3\u679c\u7684CompletedProcess\u7c7b\u7684\u5b9e\u4f8b\u3002\nsubprocess.call()   \u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u8fd4\u56de\u547d\u4ee4\u6267\u884c\u72b6\u6001\uff0c\u5176\u529f\u80fd\u7c7b\u4f3c\u4e8eos.system(cmd)\u3002\nsubprocess.check_call() Python 2.5\u4e2d\u65b0\u589e\u7684\u51fd\u6570\u3002 \u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u5982\u679c\u6267\u884c\u6210\u529f\u5219\u8fd4\u56de\u72b6\u6001\u7801\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002\u5176\u529f\u80fd\u7b49\u4ef7\u4e8esubprocess.run(..., check=True)\u3002\nsubprocess.check_output()   Python 2.7\u4e2d\u65b0\u589e\u7684\u7684\u51fd\u6570\u3002\u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u5982\u679c\u6267\u884c\u72b6\u6001\u7801\u4e3a0\u5219\u8fd4\u56de\u547d\u4ee4\u6267\u884c\u7ed3\u679c\uff0c\u5426\u5219\u629b\u51fa\u5f02\u5e38\u3002\nsubprocess.getoutput(cmd)   \u63a5\u6536\u5b57\u7b26\u4e32\u683c\u5f0f\u7684\u547d\u4ee4\uff0c\u6267\u884c\u547d\u4ee4\u5e76\u8fd4\u56de\u6267\u884c\u7ed3\u679c\uff0c\u5176\u529f\u80fd\u7c7b\u4f3c\u4e8eos.popen(cmd).read()\u548ccommands.getoutput(cmd)\u3002\nsubprocess.getstatusoutput(cmd) \u6267\u884ccmd\u547d\u4ee4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4(\u547d\u4ee4\u6267\u884c\u72b6\u6001, \u547d\u4ee4\u6267\u884c\u7ed3\u679c\u8f93\u51fa)\uff0c\u5176\u529f\u80fd\u7c7b\u4f3c\u4e8ecommands.getstatusoutput()\u3002\n\n\n\n\nimport subprocess as sp\n\n\n# subprocess.run()\uff1apython3.5\u4e2d\u65b0\u589e\u7684\u51fd\u6570\uff0c \u6267\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c \u7b49\u5f85\u547d\u4ee4\u6267\u884c\u5b8c\u6210\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6267\u884c\u7ed3\u679c\u7684CompletedProcess\u7c7b\u7684\u5b9e\u4f8b\n# Popen \u7684\u7b80\u5316\u7248\u672c\n#\u6267\u884cls -l /dev/null \u547d\u4ee4\n>>> subprocess.run(["ls", "-l", "/dev/null"])\n# crw-rw-rw-  1 root  wheel    3,   2  5  4 13:34 /dev/null\n# CompletedProcess(args=[\'ls\', \'-l\', \'/dev/null\'], returncode=0)\n\n\n# \u6267\u884c shell \u547d\u4ee4, \u6253\u5370\u8f93\u51fa\u5230 stdout, \u7c7b\u4f3c os.system\n# shell=True\u610f\u601d\u662fshell\u4e0b\u6267\u884ccommand, \u5982\u679ccommand\u4e0d\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff0cshell=True\u662f\u4e0d\u53ef\u7701\u7565\u7684\u3002\ncode = sp.call("ls -al", shell=True)\n# <=> sp.call(["ls", "-al"])\nprint(code) # 0\n\n# \u5f02\u6b65\u6267\u884c, \u6253\u5370\u5230 stdout\n# 0\uff0c1\uff0c2\u3002\u5176\u4e2d0\u4ee3\u8868\u6b63\u786e\u6267\u884c\uff0c1\u548c2\u90fd\u662f\u9519\u8bef\u6267\u884c\uff0c2\u901a\u5e38\u662f\u6ca1\u6709\u8bfb\u53d6\u5230\u6587\u4ef6\nresult = sp.Popen("ls -al", shell=True) # \u5f02\u6b65\u6267\u884c\nprint(result.returncode) # None \u8fd9\u6b65\u4e0d\u4f1a\u963b\u585e\nprint(result.wait()) # 0 \u963b\u585e\n\n# \u83b7\u53d6\u8f93\u51fa\n# \u8bbe\u7f6e\u8f93\u51fa\u5230\u7ba1\u9053\nproc = sp.Popen("ls -al", stdout=sp.PIPE, shell=True)\nprint(proc.stdout.readline())\n\nproc1 = sp.Popen("ls -al", stdout=sp.PIPE, shell=True)\n(stdout, stderr) = proc1.communicate("..")\nprint(stdout)\n\n\n# ##############\n\n\n\n\n')),(0,l.kt)("h3",{id:"1642-ossystem"},"16.4.2. os.system"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'\n# \u8fd9\u4e2a\u8c03\u7528\u76f8\u5f53\u76f4\u63a5\uff0c\u4e14\u662f\u540c\u6b65\u8fdb\u884c\u7684\uff0c\u7a0b\u5e8f\u9700\u8981\u963b\u585e\u5e76\u7b49\u5f85\u8fd4\u56de ( os.system() \u8fd9\u4e2a\u65b9\u6cd5\u662f\u963b\u585e\u5f53\u524d\u4e3b\u8fdb\u7a0b\u6267\u884c\u7684\uff0c\u53ea\u6709\u8be5\u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\uff0c\u4e3b\u8fdb\u7a0b\u624d\u4f1a\u7ee7\u7eed\u6267\u884c)\n\n\n#!/usr/bin/python3\n\nimport os\n\n# output to stdout\n# 0\u8868\u793ashell\u6307\u4ee4\u6210\u529f\u6267\u884c\uff0c256\u8868\u793a\u672a\u627e\u5230\uff0c\u8be5\u65b9\u6cd5\u9002\u7528\u4e8eshell\u547d\u4ee4\u4e0d\u9700\u8981\u8f93\u51fa\u5185\u5bb9\u7684\u573a\u666f\u3002\n#       \u6ca1\u6709\u627e\u5230\u65f6\uff0csh \u547d\u4ee4\u8fd4\u56de\u7684\u72b6\u6001\u7801\u662f1\uff0c\u800cpython\u8c03\u7528\uff0c\u8fd4\u56de\u7684\u662f\uff1a256 , \u8fd9\u662f\u4e00\u70b9\u533a\u522b\nstatus = os.system("ls -al")\nprint(status) # 0 \n\nos.system(\'ping -c 2 www.baidu.com &>/dev/null\')\nprint("block until ping finished")\n\nret = os.system(\'cat hello.sh | grep "ooo"\')\nprint(ret) # 256, \nret1 = os.system(\'cat hello.sh | grep "c 1"\')\nprint(ret1) # 0\n\n\n\n# \u6267\u884c shell \u811a\u672c\nos.system("./hello.sh")\n\n# \u6539\u53d8\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u5230\u6307\u5b9a\u7684\u8def\u5f84\n# <=> cd ..\naccess = os.chdir("..") # \u5982\u679c\u5141\u8bb8\u8bbf\u95ee\u8fd4\u56de True , \u5426\u5219\u8fd4\u56deFalse\n\n# \u67e5\u770b\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\nretval = os.getcwd()\n\n# \u6743\u9650\n# \u4e0d\u5982\u76f4\u63a5 os.system("chmod ...")\n# import stat\n# os.chmod("./hello.sh", stat.S_IRWXU)\n\n# \u66f4\u6539\u6240\u5c5e\u7528\u6237, \u9700\u8981 root \u6743\u9650\u6267\u884c\n# os.chown()\n\n# \u66f4\u6539\u5f53\u524d\u8fdb\u7a0b\u7684\u6839\u76ee\u5f55\u4e3a\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\n# os.chroot()\n\n')),(0,l.kt)("h3",{id:"1643-ospopen"},"16.4.3. os.popen"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'# \u5f02\u6b65\u6267\u884c\u547d\u4ee4, \n# \u62ff\u5230\u547d\u4ee4\u6267\u884c\u8f93\u51fa\n#  os.popen() \u8fd4\u56de\u7684\u662f file read \u7684\u5bf9\u8c61\uff0c\u5bf9\u5176\u8fdb\u884c\u8bfb\u53d6 read() \u7684\u64cd\u4f5c\u53ef\u4ee5\u770b\u5230\u6267\u884c\u7684\u8f93\u51fa\u3002\u8fd9\u4e2a\u65b9\u6cd5\u662f\u540e\u53f0\u6267\u884c\uff0c\u4e0d\u5f71\u54cd\u540e\u7eed\u811a\u672c\u8fd0\u884c\noutput = os.popen("ping -c1 www.baidu.com &>/dev/null")\nprint("popen -- nonblock")\n# readlines() \u4e5f\u53ef\nprint(output.read()) # \u83b7\u53d6\u7ec8\u7aef\u8f93\u51fa\nprint("popen -- block until output.read() end")\n\n# popen\u9700\u8981\u5173\u95edclose().\u5f53\u6267\u884c\u6210\u529f\u65f6\uff0cclose()\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5931\u8d25\u65f6\uff0cclose()\u8fd4\u56de\u7cfb\u7edf\u8fd4\u56de\u503c\noutput.close()\n\n')),(0,l.kt)("h3",{id:"1644-system"},"16.4.4. system"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def cd(dir): system.command('cd {}'.format(dir))\n\n")),(0,l.kt)("h3",{id:"1645-sh"},"16.4.5. sh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# \u4f7f\u7528 sh \u5305\n")),(0,l.kt)("h3",{id:"1646-paramiko"},"16.4.6. paramiko"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/paramiko/paramiko"},"https://github.com/paramiko/paramiko"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/xiao-apple36/p/9144092.html"},"https://www.cnblogs.com/xiao-apple36/p/9144092.html")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.yisu.com/zixun/12641.html"},"https://www.yisu.com/zixun/12641.html"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/liangyy09/p/13921693.html"},"https://www.cnblogs.com/liangyy09/p/13921693.html")),(0,l.kt)("p",null,"pip3 install paramiko"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# paramiko\u5305\u542b\u4e24\u4e2a\u6838\u5fc3\u7ec4\u4ef6\uff1aSSHClient\u548cSFTPClient\u3002\n\n\u5e38\u7528\u53c2\u6570\nhostname \u8fde\u63a5\u7684\u76ee\u6807\u4e3b\u673a\nport=SSH_PORT \u6307\u5b9a\u7aef\u53e3\nusername=None \u9a8c\u8bc1\u7684\u7528\u6237\u540d\npassword=None \u9a8c\u8bc1\u7684\u7528\u6237\u5bc6\u7801\npkey=None \u79c1\u94a5\u65b9\u5f0f\u7528\u4e8e\u8eab\u4efd\u9a8c\u8bc1\nkey_filename=None \u4e00\u4e2a\u6587\u4ef6\u540d\u6216\u6587\u4ef6\u5217\u8868\uff0c\u6307\u5b9a\u79c1\u94a5\u6587\u4ef6\ntimeout=None \u53ef\u9009\u7684tcp\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\nallow_agent=True, \u662f\u5426\u5141\u8bb8\u8fde\u63a5\u5230ssh\u4ee3\u7406\uff0c\u9ed8\u8ba4\u4e3aTrue \u5141\u8bb8\nlook_for_keys=True \u662f\u5426\u5728~/.ssh\u4e2d\u641c\u7d22\u79c1\u94a5\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e3aTrue \u5141\u8bb8\ncompress=False, \u662f\u5426\u6253\u5f00\u538b\u7f29\n\n\nset_missing_host_key_policy()\uff1a\u8bbe\u7f6e\u8fdc\u7a0b\u670d\u52a1\u5668\u6ca1\u6709\u5728know_hosts\u6587\u4ef6\u4e2d\u8bb0\u5f55\u65f6 (\u8fde\u63a5\u7684\u8fdc\u7a0b\u4e3b\u673a\u6ca1\u6709\u672c\u5730\u4e3b\u673a\u5bc6\u94a5\u6216HostKeys\u5bf9\u8c61) \u7684\u5e94\u5bf9\u7b56\u7565\u3002\u76ee\u524d\u652f\u6301\u4e09\u79cd\u7b56\u7565\uff1a\n\n    AutoAddPolicy \u81ea\u52a8\u6dfb\u52a0\u4e3b\u673a\u540d\u53ca\u4e3b\u673a\u5bc6\u94a5\u5230\u672c\u5730HostKeys\u5bf9\u8c61\uff0c\u4e0d\u4f9d\u8d56load_system_host_key\u7684\u914d\u7f6e\u3002\u5373\u65b0\u5efa\u7acbssh\u8fde\u63a5\u65f6\u4e0d\u9700\u8981\u518d\u8f93\u5165yes\u6216no\u8fdb\u884c\u786e\u8ba4\n    WarningPolicy \u7528\u4e8e\u8bb0\u5f55\u4e00\u4e2a\u672a\u77e5\u7684\u4e3b\u673a\u5bc6\u94a5\u7684python\u8b66\u544a\u3002\u5e76\u63a5\u53d7\uff0c\u529f\u80fd\u4e0a\u548cAutoAddPolicy\u7c7b\u4f3c\uff0c\u4f46\u662f\u4f1a\u63d0\u793a\u662f\u65b0\u8fde\u63a5\n    RejectPolicy \u81ea\u52a8\u62d2\u7edd\u672a\u77e5\u7684\u4e3b\u673a\u540d\u548c\u5bc6\u94a5\uff0c\u4f9d\u8d56load_system_host_key\u7684\u914d\u7f6e\u3002\u6b64\u4e3a\u9ed8\u8ba4\u9009\u9879\n\nexec_command()\uff1a\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u6267\u884cLinux\u547d\u4ee4\u7684\u65b9\u6cd5\u3002\n\n# \n# \n# \n# \n# \n\n\n# \u5229\u7528SSHClient\u5bf9\u8c61\u7684open_sftp()\u65b9\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e00\u4e2a\u57fa\u4e8e\u5f53\u524d\u8fde\u63a5\u7684sftp\u5bf9\u8c61\uff0c\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u4e0a\u4f20\u7b49\u64cd\u4f5c\nopen_sftp()\uff1a\u5728\u5f53\u524dssh\u4f1a\u8bdd\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2asftp\u4f1a\u8bdd\u3002\u8be5\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2aSFTPClient\u5bf9\u8c61\u3002\nsftp = client.open_sftp()\nsftp.put('test.txt','text.txt')\n\nfrom_transport(cls,t) \u521b\u5efa\u4e00\u4e2a\u5df2\u8fde\u901a\u7684SFTP\u5ba2\u6237\u7aef\u901a\u9053\nput(localpath, remotepath, callback=None, confirm=True) \u5c06\u672c\u5730\u6587\u4ef6\u4e0a\u4f20\u5230\u670d\u52a1\u5668 \u53c2\u6570confirm\uff1a\u662f\u5426\u8c03\u7528stat()\u65b9\u6cd5\u68c0\u67e5\u6587\u4ef6\u72b6\u6001\uff0c\u8fd4\u56dels -l\u7684\u7ed3\u679c\nget(remotepath, localpath, callback=None) \u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u6587\u4ef6\u5230\u672c\u5730\nmkdir() \u5728\u670d\u52a1\u5668\u4e0a\u521b\u5efa\u76ee\u5f55\nremove() \u5728\u670d\u52a1\u5668\u4e0a\u5220\u9664\u76ee\u5f55\nrename() \u5728\u670d\u52a1\u5668\u4e0a\u91cd\u547d\u540d\u76ee\u5f55\nstat() \u67e5\u770b\u670d\u52a1\u5668\u6587\u4ef6\u72b6\u6001\nlistdir() \u5217\u51fa\u670d\u52a1\u5668\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\n\n# \n# \n# \n# \n\nimport paramiko\n \n   # \u5b9e\u4f8b\u5316SSHClient\n   client = paramiko.SSHClient()\n \n   # \u81ea\u52a8\u6dfb\u52a0\u7b56\u7565\uff0c\u4fdd\u5b58\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u548c\u5bc6\u94a5\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u90a3\u4e48\u4e0d\u518d\u672c\u5730know_hosts\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u4e3b\u673a\u5c06\u65e0\u6cd5\u8fde\u63a5\n   client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n \n   # \u8fde\u63a5SSH\u670d\u52a1\u7aef\uff0c\u4ee5\u7528\u6237\u540d\u548c\u5bc6\u7801\u8fdb\u884c\u8ba4\u8bc1\n   client.connect(hostname='192.168.1.105', port=22, username='root', password='123456')\n \n   # \u6253\u5f00\u4e00\u4e2aChannel\u5e76\u6267\u884c\u547d\u4ee4\n   stdin, stdout, stderr = client.exec_command('df -h ')  # stdout \u4e3a\u6b63\u786e\u8f93\u51fa\uff0cstderr\u4e3a\u9519\u8bef\u8f93\u51fa\uff0c\u540c\u65f6\u662f\u67091\u4e2a\u53d8\u91cf\u6709\u503c\n \n   # \u6253\u5370\u6267\u884c\u7ed3\u679c\n   print(stdout.read().decode('utf-8'))\n \n   # \u5173\u95edSSHClient\n   client.close()\n\n\n# ###########################\n\n\n# \u914d\u7f6e\u79c1\u4eba\u5bc6\u94a5\u6587\u4ef6\u4f4d\u7f6e\nprivate = paramiko.RSAKey.from_private_key_file('/Users/ch/.ssh/id_rsa')\n \n#\u5b9e\u4f8b\u5316SSHClient\nclient = paramiko.SSHClient()\n \n#\u81ea\u52a8\u6dfb\u52a0\u7b56\u7565\uff0c\u4fdd\u5b58\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u548c\u5bc6\u94a5\u4fe1\u606f\uff0c\u5982\u679c\u4e0d\u6dfb\u52a0\uff0c\u90a3\u4e48\u4e0d\u518d\u672c\u5730know_hosts\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u4e3b\u673a\u5c06\u65e0\u6cd5\u8fde\u63a5\nclient.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n \n#\u8fde\u63a5SSH\u670d\u52a1\u7aef\uff0c\u4ee5\u7528\u6237\u540d\u548c\u5bc6\u7801\u8fdb\u884c\u8ba4\u8bc1\nclient.connect(hostname='10.0.0.1',port=22,username='root',pkey=private)\n\n\n#############################\n\n# SSHClient \u5c01\u88c5 Transport\n# \u521b\u5efa\u4e00\u4e2a\u901a\u9053\n   transport = paramiko.Transport(('hostname', 22))\n   transport.connect(username='root', password='123')\n \n   ssh = paramiko.SSHClient()\n   ssh._transport = transport\n \n   stdin, stdout, stderr = ssh.exec_command('df -h')\n   print(stdout.read().decode('utf-8'))\n \n   transport.close()\n\n################################################################\n\n# \u83b7\u53d6Transport\u5b9e\u4f8b\ntran = paramiko.Transport(('10.0.0.3', 22))\n \n# \u8fde\u63a5SSH\u670d\u52a1\u7aef\uff0c\u4f7f\u7528password\ntran.connect(username=\"root\", password='123456')\n# \u6216\u4f7f\u7528\n# \u914d\u7f6e\u79c1\u4eba\u5bc6\u94a5\u6587\u4ef6\u4f4d\u7f6e\nprivate = paramiko.RSAKey.from_private_key_file('/Users/root/.ssh/id_rsa')\n# \u8fde\u63a5SSH\u670d\u52a1\u7aef\uff0c\u4f7f\u7528pkey\u6307\u5b9a\u79c1\u94a5\ntran.connect(username=\"root\", pkey=private)\n \n# \u83b7\u53d6SFTP\u5b9e\u4f8b\nsftp = paramiko.SFTPClient.from_transport(tran)\n \n# \u8bbe\u7f6e\u4e0a\u4f20\u7684\u672c\u5730/\u8fdc\u7a0b\u6587\u4ef6\u8def\u5f84\nlocalpath = \"/Users/root/Downloads/1.txt\"\nremotepath = \"/tmp/1.txt\"\n \n# \u6267\u884c\u4e0a\u4f20\u52a8\u4f5c\nsftp.put(localpath, remotepath)\n# \u6267\u884c\u4e0b\u8f7d\u52a8\u4f5c\nsftp.get(remotepath, localpath)\n \ntran.close()\n")),(0,l.kt)("h2",{id:"165-\u90e8\u7f72-springboot"},"16.5. \u90e8\u7f72 springboot"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"#!/usr/bin/python\n# -*- coding:utf-8 -*-\nimport os,sys,time,commands\nfrom sys import argv\n \ntimes = time.strftime('%Y\u5e74%m\u6708%d\u65e5%H:%M:%S')\n_jdkpath_ = '\u586b\u5199\u4f60\u7684JDK\u8def\u5f84'\n_processpath_ = 'jar\u5305\u540d\u5b57'\n_fileDir_ = 'jar\u5305\u6240\u5728\u8def\u5f84'\n_jarpath_ = _fileDir_ + _processpath_\n_logpath_ = _fileDir_ + '\u65e5\u5fd7\u8def\u5f84'\n_gclog_   = _fileDir_ + 'gc\u65e5\u5fd7\u8def\u5f84'\n_jarvar_ = '-Xms256m -Xmx640m -Xss256K -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m -XX:+UseAdaptiveSizePolicy'\n \ndef getpid():\n    pid = commands.getoutput(\"ps aux | grep %s | grep -v grep | awk '{print $2}'\" % _processpath_)\n    return pid\n \ndef _status_():\n    j_pid = getpid()\n    if j_pid == '':\n        print(\"%s\u6ca1\u6709\u8fd0\u884c\" % _processpath_)\n    else :\n        print(\"%s\u8fdb\u7a0bpid\u503c:\" % _processpath_ + getpid())\n \ndef _start_():\n    j_pid = getpid()\n    if j_pid != '':\n        print(\"%s\u5df2\u7ecf\u5728\u8fd0\u884c...\" % _processpath_)\n    else :\n        print(\"\u542f\u52a8%s......\" % _processpath_)\n        time.sleep(4)\n        if os.system('%s -jar -XX:+PrintGCDetails -Xloggc:%s %s %s > %s 2>&1 &' % (_jdkpath_,_gclog_,_jarvar_,_jarpath_,_logpath_)) == 0:\n            print(\"\u542f\u52a8%s\u6210\u529f,\u8fdb\u7a0bpid\u503c:\" % _processpath_ + getpid())\n \ndef _stop_():\n    s_pid = getpid()\n    if s_pid == '':\n        print(\"%s\u6ca1\u6709\u8fd0\u884c\" % _processpath_)\n    else :\n        print(\"\u5173\u95ed%s......\" % _processpath_)\n        os.system('kill -9 ' + s_pid)\n    os.system('echo \"\">%s && echo \"\">%s' % (_gclog_,_logpath_))\n        time.sleep(2)\n        if s_pid != '0':\n            print(\"\u5173\u95ed%s\u6210\u529f\" % _processpath_)\n        else :\n            print(\"\u5173\u95ed%s\u5931\u8d25\" % _processpath_)\n \ndef _restart_():\n    _stop_()\n    time.sleep(2)\n    _start_()\n \nif argv == \"-h\" or argv == \"--help\" or len(argv)==1:\n    print \"\u263b\u263b\u263b\u8bf7\u522b\u5bb3\u6015,\u8fd9\u53ea\u662f\u4e2a\u7b80\u5355\u7684\u811a\u672c,\u5bf9\u5e94\u7528\u548c\u7cfb\u7edf\u90fd\u662f\u65e0\u635f\u7684\u263b\u263b\u263b\\n%s,\u6e29\u99a8\u63d0\u793a\u7528\u6cd5:%s {start|stop|restart|status}\" % (times,argv[0])\n \nelif argv[1] == 'start':\n    _start_()\nelif argv[1] == 'stop':\n    _stop_()\nelif argv[1] == 'restart':\n    _restart_()\nelif argv[1] == 'status':\n    _status_()\nelse: \n    print \"\u263b\u263b\u263b\u8bf7\u522b\u5bb3\u6015,\u8fd9\u53ea\u662f\u4e2a\u7b80\u5355\u7684\u811a\u672c,\u5bf9\u5e94\u7528\u548c\u7cfb\u7edf\u90fd\u662f\u65e0\u635f\u7684\u263b\u263b\u263b\\n%s,\u6e29\u99a8\u63d0\u793a\u7528\u6cd5:%s {start|stop|restart|status}\" % (times,argv[0])\n")),(0,l.kt)("h1",{id:"17-\u5f00\u6e90\u5e93"},"17. \u5f00\u6e90\u5e93"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/24590883"},"https://www.zhihu.com/question/24590883"),"\nTODO"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://pypi.org/"},"https://pypi.org/")),(0,l.kt)("h2",{id:"171-\u53d8\u58f0-\u8bed\u97f3\u5408\u6210"},"17.1. \u53d8\u58f0 \u8bed\u97f3\u5408\u6210"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI"},"https://github.com/RVC-Project/Retrieval-based-Voice-Conversion-WebUI")),(0,l.kt)("h2",{id:"172-\u7cfb\u7edf\u8fd0\u7ef4"},"17.2. \u7cfb\u7edf\u8fd0\u7ef4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"https://github.com/giampaolo/psutil \u83b7\u53d6\u7cfb\u7edf\u4fe1\u606f, \u786c\u76d8, \u5185\u5b58 ...\n")),(0,l.kt)("h2",{id:"173-\u58f0\u97f3"},"17.3. \u58f0\u97f3"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/CorentinJ/Real-Time-Voice-Cloning"},"https://github.com/CorentinJ/Real-Time-Voice-Cloning")," \u514b\u9686\u58f0\u97f3"),(0,l.kt)("h2",{id:"174-\u56fe\u50cf"},"17.4. \u56fe\u50cf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Matplotlib \u53ef\u89c6\u5316\u5e93\uff0c\u53ef\u4ee5\u7528\u6765\u7ed8\u5236\u9ad8\u8d28\u91cf\u7684 2D \u6298\u7ebf\u56fe\u3001\u6563\u70b9\u56fe\u3001\u67f1\u72b6\u56fe\uff0c\u6216\u8005\u7528\u6765\u663e\u793a\u56fe\u50cf"),(0,l.kt)("li",{parentName:"ul"},"pil \u56fe\u50cf\u5904\u7406\u5e93, \u9002\u7528\u4e8e Python2, py3 \u5219\u5b89\u88c5 pillow"),(0,l.kt)("li",{parentName:"ul"},"opencv-python ",(0,l.kt)("inlineCode",{parentName:"li"},"import cv2")),(0,l.kt)("li",{parentName:"ul"},"Removebg \u62a0\u56fe")),(0,l.kt)("h2",{id:"175-\u6570\u636e\u6a21\u578b\u5b9a\u4e49"},"17.5. \u6570\u636e\u6a21\u578b\u5b9a\u4e49"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/samuelcolvin/pydantic/"},"https://github.com/samuelcolvin/pydantic/")," \u4f7f\u5f97\u5b9e\u4f8b\u5316\u6570\u636e model \u5bf9\u8c61\u66f4\u65b9\u4fbf"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/codename_cys/article/details/107675748"},"https://blog.csdn.net/codename_cys/article/details/107675748"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/swinfans/article/details/89629641"},"https://blog.csdn.net/swinfans/article/details/89629641")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"valideer\u5e93\u3001marshmallow\u5e93\u3001trafaret\u5e93\u4ee5\u53cacerberus\u5e93\u7b49\u90fd\u53ef\u4ee5\u5b8c\u6210\u76f8\u4f3c\u7684\u529f\u80fd\uff0c\u4f46\u662f\u76f8\u8f83\u4e4b\u4e0b\uff0cpydantic\u5e93\u7684\u6267\u884c\u6548\u7387\u4f1a\u66f4\u52a0\u4f18\u79c0\u4e00\u4e9b")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.kevin7.net/post_detail/pydantic-with-flask"},"https://www.kevin7.net/post_detail/pydantic-with-flask"),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/bauerji/flask_pydantic"},"https://github.com/bauerji/flask_pydantic")," \u6821\u9a8c\u8bf7\u6c42\u53c2\u6570\n",(0,l.kt)("a",{parentName:"p",href:"https://medium.com/swlh/parsing-rest-api-payload-and-query-parameters-with-flask-better-than-marshmallow-aa79c889e3ca"},"https://medium.com/swlh/parsing-rest-api-payload-and-query-parameters-with-flask-better-than-marshmallow-aa79c889e3ca")),(0,l.kt)("h2",{id:"176-\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316"},"17.6. \u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316"),(0,l.kt)("p",null,"pickle"),(0,l.kt)("h2",{id:"177-web-\u6846\u67b6"},"17.7. web \u6846\u67b6"),(0,l.kt)("p",null,"Django \u5927\u4e00\u7edf\u89e3\u51b3\u65b9\u6848"),(0,l.kt)("p",null,"flask  rest api"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/pynecone-io/pynecone"},"https://github.com/pynecone-io/pynecone")," \u7eaf py \u5b9e\u73b0 web"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://streamlit.io/"},"https://streamlit.io/"),"       \u4e3a\u811a\u672c\u5236\u4f5c ui \u754c\u9762"),(0,l.kt)("h1",{id:"18-jython"},"18. jython"),(0,l.kt)("p",null,"\u76f8\u4e92\u8c03\u7528"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.py4j.org/getting_started.html"},"https://www.py4j.org/getting_started.html")," run java lib in py"),(0,l.kt)("p",null,"run py script in java"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},"<dependency>\n            <groupId>org.python</groupId>\n            <artifactId>jython</artifactId>\n            <version>2.7.2</version>\n        </dependency>\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'public class App {\n\n    /**\n     * \u521d\u59cb\u5316\n     */\n    static void initInterpreter() {\n        Properties props = new Properties();\n        props.put("python.home", pyPath() + "py_lib");\n        props.put("python.console.encoding", "UTF-8");\n        props.put("python.security.respectJavaAccessibility", "false");\n        props.put("python.import.site", "false");\n\n        Properties preprops = System.getProperties();\n        PythonInterpreter.initialize(preprops, props, new String[0]);\n\n    }\n\n    static String pyPath() {\n        return Thread.currentThread().getContextClassLoader().getResource(".").getPath();\n    }\n\n\n\n    public static void main(String[] args) throws FileNotFoundException {\n        initInterpreter();\n        final PythonInterpreter interpreter = new PythonInterpreter();\n\n        interpreter.execfile(new FileInputStream(pyPath() + "test.py"));\n        final PyFunction addFunc = interpreter.get("add", PyFunction.class);\n        int a = 1;\n        int b = 2;\n        final PyObject result = addFunc.__call__(new PyInteger(a), new PyInteger(b));\n        System.out.println(result);\n\n\n//        interpreter.execfile(new FileInputStream(pyPath() + "face_recog.py"));\n//        final PyFunction face_verification = interpreter.get("face_verification", PyFunction.class);\n//        final PyObject pyObject = face_verification.__call__();\n//        System.out.println(pyObject);\n    }\n}\n\n')),(0,l.kt)("h1",{id:"19-\u8c03\u7528-rust"},"19. \u8c03\u7528 rust"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.v2ex.com/t/757216"},"https://www.v2ex.com/t/757216")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/m0_37696990/article/details/96876692"},"https://blog.csdn.net/m0_37696990/article/details/96876692")),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://blog.csdn.net/muzico425/article/details/103331676"},"https://blog.csdn.net/muzico425/article/details/103331676")),(0,l.kt)("h1",{id:"20-cffi-\u7ed1\u5b9a"},"20. cffi \u7ed1\u5b9a"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/yifeikong/curl_cffi"},"https://github.com/yifeikong/curl_cffi")," \u4f8b\u5b50"),(0,l.kt)("h1",{id:"21-web\u5e94\u7528\u90e8\u7f72"},"21. web\u5e94\u7528\u90e8\u7f72"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/21888077"},"https://www.zhihu.com/question/21888077")),(0,l.kt)("h2",{id:"211-\u751f\u6210\u4f9d\u8d56\u6e05\u5355"},"21.1. \u751f\u6210\u4f9d\u8d56\u6e05\u5355"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u751f\u6210\u4f9d\u8d56\u6587\u4ef6\n# https://blog.csdn.net/guolindonggld/article/details/87786032\npip3 freeze > requirements.txt\n\npip install -r requirements.txt\n\n")),(0,l.kt)("h2",{id:"212-gunicorn"},"21.2. gunicorn"),(0,l.kt)("p",null,"gunicorn\u662f\u4e00\u4e2awsgi http server"),(0,l.kt)("p",null,"\u4e0d\u8fc7\u5728production\u73af\u5883\uff0c\u8d77\u505c\u548c\u72b6\u6001\u7684\u76d1\u63a7\u6700\u597d\u7528supervisior\u4e4b\u7c7b\u7684\u76d1\u63a7\u5de5\u5177\uff0c\u7136\u540e\u5728gunicorn\u7684\u524d\u7aef\u653e\u7f6e\u4e00\u4e2ahttp proxy server, \u8b6c\u5982nginx"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/69e75fc3e08e"},"https://www.jianshu.com/p/69e75fc3e08e")),(0,l.kt)("p",null,"flask_app.py"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"from flask import Flask\n\napp = Flask(__name__)\n\n\n@app.route('/demo', methods=['GET'])\ndef demo():\n    return \"gunicorn and flask demo.\"\n")),(0,l.kt)("p",null,"gunicorn.conf.py "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"# coding:utf-8\nimport multiprocessing\n\nbind = \"0.0.0.0:5000\"   #\u7ed1\u5b9a\u7684ip\u4e0e\u7aef\u53e3\nworkers = multiprocessing.cpu_count() * 2 + 1    #\u8fdb\u7a0b\u6570\nerrorlog = './log/gunicorn.error.log' #\u53d1\u751f\u9519\u8bef\u65f6log\u7684\u8def\u5f84\naccesslog = './log/gunicorn.access.log' #\u6b63\u5e38\u65f6\u7684log\u8def\u5f84\nbacklog = 512                #\u76d1\u542c\u961f\u5217\nproc_name = 'gunicorn_pre_project'   #\u8fdb\u7a0b\u540d\ntimeout = 30      # \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4120s\uff0c\u9ed8\u8ba4\u4e3a30s\u3002\u6309\u81ea\u5df1\u7684\u9700\u6c42\u8fdb\u884c\u8bbe\u7f6etimeout = 120\nworker_class = 'gevent' #\u4f7f\u7528gevent\u6a21\u5f0f\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528sync \u6a21\u5f0f\uff0c\u9ed8\u8ba4\u7684\u662fsync\u6a21\u5f0f\n\nthreads = 3  #\u6307\u5b9a\u6bcf\u4e2a\u8fdb\u7a0b\u5f00\u542f\u7684\u7ebf\u7a0b\u6570\nloglevel = 'info' #\u65e5\u5fd7\u7ea7\u522b\uff0c\u8fd9\u4e2a\u65e5\u5fd7\u7ea7\u522b\u6307\u7684\u662f\u9519\u8bef\u65e5\u5fd7\u7684\u7ea7\u522b\uff0c\u800c\u8bbf\u95ee\u65e5\u5fd7\u7684\u7ea7\u522b\u65e0\u6cd5\u8bbe\u7f6e\n\n#\u8bbe\u7f6egunicorn\u8bbf\u95ee\u65e5\u5fd7\u683c\u5f0f\uff0c\u9519\u8bef\u65e5\u5fd7\u65e0\u6cd5\u8bbe\u7f6e\naccess_log_format = '%(t)s %(p)s %(h)s \"%(r)s\" %(s)s %(L)s %(b)s %(f)s\" \"%(a)s\"'\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sh"},"# \u542f\u52a8\u547d\u4ee4\n# \n# flask_app \u6765\u81eaflask_app.py\n# app \u6765\u81ea app = Flask(__name__)\n# -c \u6307\u5b9a \u914d\u7f6e\u6587\u4ef6\ngunicorn flask_app:app -c gunicorn.conf.py \n\n# \u4e0d\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\ngunicorn -w 4 -b 0.0.0.0:5000 -D  flask_app:app\n\n\n# \u627e\u5230 \u7236\u8fdb\u7a0b\u7684 pid (masterpid)\npstree -ap | grep gunicorn \n\n# \u6216\u8005 \u627e\u5230\u6240\u6709\u8fdb\u7a0b pid, \u7136\u540e kill -9 \u6240\u6709\u76f8\u5173\u8fdb\u7a0b\npgrep gunicorn\n\n# \u505c\u6b62\nkill -9 <\u7236\u8fdb\u7a0bpid>\n# \u91cd\u542f\nkill -HUP <parent pid>\n")),(0,l.kt)("h2",{id:"213-supervisord-\u7ba1\u7406-daemon"},"21.3. supervisord \u7ba1\u7406 daemon"),(0,l.kt)("p",null,"supervisord.org"),(0,l.kt)("h1",{id:"22-setuppy"},"22. setup.py"),(0,l.kt)("h1",{id:"23-wheel"},"23. wheel"),(0,l.kt)("p",null,"python \u53ef\u4ee5\u7528 wheel \u6253\u5305\u6210 whl, \u7136\u540e\u4f7f\u7528 ssh \u6267\u884c pip install package.whl, \u7136\u540e\u91cd\u542f\u4e00\u4e0b python \u5c31\u597d\u4e86"),(0,l.kt)("h1",{id:"24-\u81ea\u52a8\u62a2\u8d2d\u811a\u672c"},"24. \u81ea\u52a8\u62a2\u8d2d\u811a\u672c"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u81ea\u52a8\u62a2\u8d2d\u6765\u8bf4\uff0c\n\u5bf9\u4e8e\u7f51\u9875\uff0cselenium \u548c puppeteer \u6bd4\u8f83\u9002\u5408\uff0c\u57fa\u672c\u6d41\u7a0b\u5c31\u662f\u52a0\u8f7d\u4e00\u4e2a webdriver\uff0c\u8bbf\u95ee\u4e00\u4e2a\u94fe\u63a5\uff0c\u7b49\u5f85 javascript \u52a0\u8f7d\u5b8c\uff0c\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\uff0c\u6267\u884c\u64cd\u4f5c\u3002\n\u5bf9\u4e8e app \u6765\u8bf4\uff0cappium \u6bd4\u8f83\u9002\u5408\u3002"),(0,l.kt)("h1",{id:"25-\u8fd0\u7ef4\u5de5\u5177"},"25. \u8fd0\u7ef4\u5de5\u5177"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"1. psutil \u53ef\u4ee5\u83b7\u53d6\u7cfb\u7edf\u8fd0\u884c\u7684\u8fdb\u7a0b\u548c\u7cfb\u7edf\u5229\u7528\u7387\uff08CPU \u5185\u5b58\u2026\uff09\u4fe1\u606f\n\nimport psutil\n\n2. IPy \u662fpython \u7b2c\u4e09\u65b9\u5904\u7406IP\u5730\u5740\u6a21\u5757\n\nfrom IPy import IP\n\n3. dnspython \u662fPython \u5b9e\u73b0\u7684\u4e00\u4e2adns\u5de5\u5177\u5305\uff0c\u652f\u6301\u6240\u6709\u7684\u8bb0\u5f55\u7c7b\u578b\uff0c\u53ef\u7528\u4e8e\u67e5\u8be2\u3001\u4f20\u8f93\u5e76\u52a8\u6001\u66f4\u65b0zone\u4fe1\u606f\uff0c\u53ef\u4ee5\u4ee3\u66ffnslookup dig\u7b49\u5de5\u5177\n\nimport dns.resolver\n\nA\u8bb0\u5f55\u3001MX\u8bb0\u5f55\u3001NS\u8bb0\u5f55\u3001CNAME\u8bb0\u5f55\n\n4. difflib\u6a21\u5757 \u5b9e\u73b0\u6587\u4ef6\u5185\u5bb9\u5dee\u5f02\u5bf9\u6bd4  \u5982nginx \u914d\u7f6e\u6587\u4ef6\u5bf9\u6bd4\n\n5. filecmp\u6a21\u5757 \u5b9e\u73b0\u6587\u4ef6\u3001\u76ee\u5f55\u3001\u904d\u5386\u5b50\u76ee\u5f55\u7684\u5dee\u5f02\u5bf9\u6bd4\u529f\u80fd\n\n6. smtplib\u6a21\u5757 \u5b9e\u73b0\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\n\n7. pycurl\u6a21\u5757\n\n8. scapy \u751f\u6210\u52a8\u6001\u8def\u7531\u8f68\u8ff9\u56fe\n\n\u80fd\u591f\u5bf9\u6570\u636e\u5305\u8fdb\u884c\u4f2a\u9020\u6216\u89e3\u5305\uff0c\u5305\u62ec\u53d1\u9001\u6570\u636e\u5305\u3001\u5305\u55c5\u63a2\u3001\u5e94\u7b54\u548c\u53cd\u9988\u5339\u914d\uff0c\u53ef\u4ee5\u7528\u5728\u5904\u7406\u7f51\u7edc\u626b\u63cf\u3001\u8def\u7531\u8ddf\u8e2a\u3001\u670d\u52a1\u63a2\u6d4b\u3001\u5355\u5143\u6d4b\u8bd5\u3002\u901a\u8fc7traceroute\u751f\u6210\u8def\u7531\u8f68\u8ff9\u56fe\uff0c\u53ef\u4ee5\u770b\u5230\u63a2\u6d4b\u70b9\u5230\u76ee\u6807\u8282\u70b9\u7684\u8def\u7531\u8d70\u5411\uff0c\u8fd0\u8425\u5546\u505a\u8def\u7531\u8282\u70b9\u5206\u6d41\uff0c\u53ef\u4ee5 \u901a\u8fc7\u8fd9\u4e2a\u8be5\u8def\u7531\u7ebf\u8def\u662f\u4e0d\u662f\u6700\u4f18\u7684\n\n9. pyClamad     ClamAV \u662f\u4e00\u6b3e\u514d\u8d39\u7684\u5f00\u6e90\u7684\u9632\u6bd2\u8f6f\u4ef6\uff0c\u4e3b\u8981\u63d0\u4f9bLinux\u3001Unix \u7cfb\u7edf\u63d0\u4f9b\u75c5\u6bd2\u626b\u63cf\u3001\u67e5\u6740\u670d\u52a1\n\n10. \u9ad8\u6548\u7aef\u53e3\u626b\u63cf\u5668 python-nmap\n\n11. pexpect \u53ef\u4ee5\u5b9e\u73b0\u5bf9ssh\u3001ftp\u3001passwd\u3001telnet \u7b49\u547d\u4ee4\u8fdb\u884c\u81ea\u52a8\u4ea4\u4e92\n\n12. paramiko \u662f\u57fa\u4e8epython \u5b9e\u73b0\u7684SSH2\u8fdc\u7a0b\u5b89\u5168\u94fe\u63a5\uff0c\u652f\u6301\u8ba4\u8bc1\u53ca\u5bc6\u94a5\u65b9\u5f0f.\n\n13. Fabric \u57fa\u4e8epython \u5b9e\u73b0\u7684SSH\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7b80\u5316\u4e86SSH\u7684\u5e94\u7528\u7a0b\u5e8f\u90e8\u7f72\u53ca\u7cfb\u7edf\u7ba1\u7406\u4efb\u52a1\uff0c\u53ef\u4ee5\u547d\u4ee4\u6267\u884c\uff0c\u6587\u4ef6\u4e0a\u5e8a\uff0c\u4e0b\u8f7d\u4ee5\u53ca\u5b8c\u6210\u7684\u65e5\u5fd7\u8f93\u51fa\u3002\n\n14. saltstack \u96c6\u7fa4\u5316\u7ba1\u7406\u5de5\u5177  \u6b63\u5728\u5b66\n\n")),(0,l.kt)("h1",{id:"26-\u6253\u5305\u53ef\u6267\u884c\u6587\u4ef6"},"26. \u6253\u5305\u53ef\u6267\u884c\u6587\u4ef6"),(0,l.kt)("p",null,"nuitka , \u66ff\u6362 pyinstall \u7684\u795e\u5668"))}d.isMDXComponent=!0}}]);