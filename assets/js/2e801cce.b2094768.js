"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9450],{16029:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"/cryptocurrency-auto-trading","metadata":{"permalink":"/cryptocurrency-auto-trading","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/cryptocurrency-auto-trading.md","source":"@site/blog/cryptocurrency-auto-trading.md","title":"\u52a0\u5bc6\u8d27\u5e01\u81ea\u52a8\u4ea4\u6613\u673a\u5668\u4eba","description":"Cryptocurrency auto trading bot","date":"2023-09-20T00:00:00.000Z","formattedDate":"2023\u5e749\u670820\u65e5","tags":[{"label":"cryptocurrency","permalink":"/tags/cryptocurrency"}],"readingTime":0.18666666666666668,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u52a0\u5bc6\u8d27\u5e01\u81ea\u52a8\u4ea4\u6613\u673a\u5668\u4eba","date":"2023-9-20","tags":["cryptocurrency"],"authors":"me","keywords":["cryptocurrency"],"draft":false},"nextItem":{"title":"Publish Blogs by Using Docusaurus and Github Pages","permalink":"/2023/04/20/docusaurus-github-pages-blog"}},"content":"Cryptocurrency auto trading bot\\n\\nhttps://academy.binance.com/zh/articles/what-is-triangular-arbitrage-and-how-to-use-it\\nhttps://academy.binance.com/zh/articles/what-is-bittorrent-bttc\\nhttps://academy.binance.com/zh/articles/what-are-decentralized-applications-dapps\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u9009\u578b\\n\\nspring boot + nextjs\\n\\n## project initialization\\n\\n```sh\\n# frontend\\n\\n# pnpm dlx \u7b49\u4ef7 pnpx\\npnpm dlx create-next-app@latest\\n# or\\npnpm create next-app antd-demo\\n\\npp i antd -S\\npnpm install @ant-design/cssinjs --save\\n\\n\\n# backend\\n```\\n\\n## \u8bbe\u8ba1\\n\\n- \u81ea\u52a8\u8f6c\u8d26"},{"id":"/2023/04/20/docusaurus-github-pages-blog","metadata":{"permalink":"/2023/04/20/docusaurus-github-pages-blog","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2023-04-20-docusaurus-github-pages-blog/index.md","source":"@site/blog/2023-04-20-docusaurus-github-pages-blog/index.md","title":"Publish Blogs by Using Docusaurus and Github Pages","description":"This article is dedicated to introduce how to establish a blog website by using docusaurus and github pages, and how to auto publish articles by github actions.","date":"2023-04-20T00:00:00.000Z","formattedDate":"2023\u5e744\u670820\u65e5","tags":[{"label":"docusaurus","permalink":"/tags/docusaurus"},{"label":"github pages","permalink":"/tags/github-pages"}],"readingTime":0.91,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Publish Blogs by Using Docusaurus and Github Pages","authors":"me","tags":["docusaurus","github pages"]},"prevItem":{"title":"\u52a0\u5bc6\u8d27\u5e01\u81ea\u52a8\u4ea4\u6613\u673a\u5668\u4eba","permalink":"/cryptocurrency-auto-trading"},"nextItem":{"title":"Coding Gracefully with Gradle, Java17 and Spring Boot Jpa","permalink":"/coding-gracefully-with-gradle-java17-jpa"}},"content":"This article is dedicated to introduce how to establish a blog website by using docusaurus and github pages, and how to auto publish articles by github actions.\\n\\nOfficial website: https://docusaurus.io/\\n\\n\x3c!-- truncate --\x3e\\n\\nDocusaurus \u662f Facebook \u51fa\u54c1\u7684\u4e00\u4e2a\u6587\u6863\u751f\u6210\u5de5\u5177, \u57fa\u4e8e react, \u5176\u4ed6\u66f4\u591a\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\u67e5\u770b https://jamstack.org/generators/\\n\\n# \u672c\u5730\u521d\u59cb\u5316\\n\\n\u9996\u5148 `npx create-docusaurus@latest my-website classic --typescript`, \u4f1a\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u7684\u521d\u59cb\u5316\u4ed3\u5e93.\\n\\n\u4fee\u6539 \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 projectName, organizationName, baseUrl ...\\n\\n# \u521b\u5efa github \u8fdc\u7a0b\u4ed3\u5e93\\n\\nCreate a github repository called `<username>.github.io`\\n\\n`git remote add origin xxx`\\n\\n`git push -u origin main`\\n\\n# \u6dfb\u52a0 github actions\\n\\nCreate ci.yml within the path `.github/workflows`\\n\\n```yml\\nname: Build and Deploy\\non:\\n  # Allows you to run this workflow manually from the Actions tab\\n  workflow_dispatch:\\n  push:\\n    branches: \\n      - main\\npermissions:\\n  contents: read\\n  pages: write\\n  id-token: write\\n\\n# Allow one concurrent deployment\\nconcurrency:\\n  group: \\"pages\\"\\n  cancel-in-progress: true\\n\\nenv:\\n  # Hosted GitHub runners have 7 GB of memory available, let\'s use 6 GB\\n  NODE_OPTIONS: --max-old-space-size=6144\\n\\njobs:\\n  build-and-deploy:\\n    #concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout \ud83d\udece\ufe0f\\n        uses: actions/checkout@v3\\n\\n      - name: Set up nodejs\\n        uses: actions/setup-node@v3\\n        with:\\n          node-version: 18.x\\n          cache: yarn\\n      \\n      - name: Install dependencies && build\\n        run: |\\n          yarn install --frozen-lockfile --non-interactive\\n          yarn build\\n\\n      - name: Deploy to github pages \ud83d\ude80\\n        uses: JamesIves/github-pages-deploy-action@v4\\n        with:\\n          folder: build # The folder the action should deploy.\\n          token: ${{secrets.access_token}}\\n          clean: true\\n          branch: gh-pages\\n\\n```"},{"id":"/coding-gracefully-with-gradle-java17-jpa","metadata":{"permalink":"/coding-gracefully-with-gradle-java17-jpa","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/coding-gracefully-with-gradle-java17-jpa/index.md","source":"@site/blog/coding-gracefully-with-gradle-java17-jpa/index.md","title":"Coding Gracefully with Gradle, Java17 and Spring Boot Jpa","description":"This Article I\'m gonna demo How to develop a web based scaffold by using Gradle, Java17 and Jpa","date":"2023-03-22T00:00:00.000Z","formattedDate":"2023\u5e743\u670822\u65e5","tags":[{"label":"gradle","permalink":"/tags/gradle"},{"label":"java","permalink":"/tags/java"},{"label":"jpa","permalink":"/tags/jpa"}],"readingTime":1.5433333333333332,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Coding Gracefully with Gradle, Java17 and Spring Boot Jpa","date":"2023-03-22T00:00:00.000Z","tags":["gradle","java","jpa"],"authors":"me","keywords":["gradle","java","jpa"]},"prevItem":{"title":"Publish Blogs by Using Docusaurus and Github Pages","permalink":"/2023/04/20/docusaurus-github-pages-blog"},"nextItem":{"title":"How to Publish Your Maven Package with Github","permalink":"/publish-maven-jar-github"}},"content":"This Article I\'m gonna demo How to develop a web based scaffold by using Gradle, Java17 and Jpa\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n- [establish the project structure](#establish-the-project-structure)\\n- [try the basic smoke test](#try-the-basic-smoke-test)\\n- [git hooks support](#git-hooks-support)\\n- [how to reduce the duration of test execution](#how-to-reduce-the-duration-of-test-execution)\\n\\n\\n## establish the project structure\\n\\n```sh\\njava -version\\n# openjdk17\\ngradle -v\\n# v7.4\\n\\nmkdir graceful-coding\\ncd ...\\n\\n# let\'s try to build an app having the similar functionality to zhihu to conduct the demo\\n\\nmkdir question-service\\ncd ...\\n\\ntouch settings.gradle.kts\\ntouch build.gradle.kts\\n```\\n\\nsettings.gradle.kts includes the following content:\\n\\n```kotlin\\nrootProject.name = \\"question-service\\"\\n\\npluginManagement {\\n    repositories {\\n        mavenLocal()\\n        maven(\\"https://mirrors.cloud.tencent.com/nexus/repository/maven-public/\\")\\n        mavenCentral()\\n        gradlePluginPortal()\\n    }\\n}\\n\\n\\n```\\n\\nbuild.gradle.kts :\\n\\n```kotlin\\nimport org.springframework.boot.gradle.plugin.SpringBootPlugin\\n\\nplugins {\\n    java\\n    id(\\"org.springframework.boot\\") version \\"3.0.6\\"\\n}\\n\\njava {\\n    toolchain {\\n        languageVersion.set(JavaLanguageVersion.of(17))\\n    }\\n}\\n\\nrepositories {\\n    mavenLocal()\\n    maven(\\"https://mirrors.cloud.tencent.com/nexus/repository/maven-public/\\")\\n    mavenCentral()\\n\\n}\\n\\ndependencies {\\n    implementation(platform(SpringBootPlugin.BOM_COORDINATES))\\n    implementation(\\"org.springframework.boot:spring-boot-starter-web\\")\\n    implementation(\\"org.springframework.boot:spring-boot-starter\\")\\n    implementation(\\"org.springframework.boot:spring-boot-starter-actuator\\")\\n    testImplementation(\\"org.springframework.boot:spring-boot-starter-test\\")\\n\\n\\n//\\n//    testImplementation(platform(\\"org.junit:junit-bom:5.9.3\\"))\\n//    testRuntimeOnly(\\"org.junit.jupiter:junit-jupiter-engine\\")\\n//    testImplementation(\\"org.junit.jupiter:junit-jupiter-api\\")\\n\\n\\n}\\n\\ntasks {\\n    test {\\n        useJUnitPlatform()\\n    }\\n}\\n\\n\\n```\\n\\ngenerate gradle wrapper\\n\\n```sh\\ngradle wrapper\\n\\n\\n./gradlew build\\n```\\n\\n## try the basic smoke test\\n\\n\\n```java\\n\\npackage io.github.xiaoyureed.zhihualternative.questionservice;\\n\\nimport org.junit.jupiter.api.Test;\\nimport org.springframework.beans.factory.annotation.Autowired;\\nimport org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\\nimport org.springframework.boot.test.context.SpringBootTest;\\nimport org.springframework.test.web.servlet.MockMvc;\\n\\nimport static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;\\nimport static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\\n\\n/**\\n * smoke test: to verify if this app is running well\\n */\\n@SpringBootTest\\n@AutoConfigureMockMvc\\npublic class SmokeTest {\\n    @Autowired\\n    MockMvc mockMvc;\\n\\n    @Test\\n    void should_return_ok_when_request_endpoint_of_health() throws Exception {\\n        mockMvc.perform(get(\\"/actuator/health\\"))\\n            .andExpect(status().isOk())\\n            .andExpect(jsonPath(\\"$.status\\").value(\\"UP\\"));\\n    }\\n}\\n\\n```\\n\\n\\n## git hooks support\\n\\ncreate `githooks/pre-commit`\\n\\n```sh\\n#!/usr/bin/env sh\\n\\n# -q: quiet, -k: indexed, -u\\ngit stash -qku\\n# exec test\\n./gradlew clean check\\nRESULT=$?\\ngit stash pop -q\\nexit $RESULT\\n\\n\\n```\\n\\nset the hook up : `git config core.hooksPath <githooks dir>`\\n\\n## how to reduce the duration of test execution\\n\\nIf you feel like a shorter duration for test execution, try the following strategy\\n\\n1. \u6d4b\u8bd5\u4ee3\u7801\u4e2d\u662f\u5426\u5b58\u5728 block \u7ebf\u7a0b\u7684\u64cd\u4f5c\uff1f\u8fd9\u7c7b\u64cd\u4f5c\u4f1a\u4e25\u91cd\u62d6\u6162\u6d4b\u8bd5\u8fd0\u884c\u6548\u7387\u3002\\n2. \u5bf9\u4e0d\u540c\u5c42\u7684\u4ee3\u7801\u8bbe\u8ba1\u4e0d\u540c\u7684\u6d4b\u8bd5\u7b56\u7565\uff0c\u8ba9\u6bcf\u4e00\u5c42\u7684\u6d4b\u8bd5\u5c3d\u53ef\u80fd\u7684\u8f7b\u91cf\uff08\u6301\u4e45\u5316\u5c42\u53ea\u6ce8\u5165\u4e8e Data JPA \u76f8\u5173\u7684\u4e0a\u4e0b\u6587\uff1b\u4e1a\u52a1\u5c42\u6d4b\u8bd5\u53ef\u4ee5 mock \u6301\u4e45\u5316\u5c42\u7684 bean\uff0cWeb \u5c42\u7684\u6d4b\u8bd5\u53ef\u4ee5 mock \u4e1a\u52a1\u5c42\uff09\u3002\\n3. \u542f\u7528 gradle \u5e76\u53d1\u8fd0\u884c\u4efb\u52a1\u3002\\n\\n\u5982\u679c\u8fd8\u662f\u89c9\u5f97\u672c\u5730\u6267\u884c\u6d4b\u8bd5\u901f\u5ea6\u65e0\u6cd5\u63a5\u53d7, \u8bd5\u7740\u628a\u5355\u5143\u6d4b\u8bd5\u6267\u884c\u540e\u79fb\u5230 CI \u4e0a\uff0c\u53ea\u5141\u8bb8\u901a\u8fc7\u6d4b\u8bd5\u7684\u4ee3\u7801\u53ef\u4ee5\u88ab\u96c6\u6210\uff08\u4f46\u8fd9\u6837\u4f1a\u5ef6\u957f\u5931\u8d25\u53cd\u9988\u5468\u671f\uff09\u3002"},{"id":"/publish-maven-jar-github","metadata":{"permalink":"/publish-maven-jar-github","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/publish-maven-jar-github/index.md","source":"@site/blog/publish-maven-jar-github/index.md","title":"How to Publish Your Maven Package with Github","description":"there are three ways available to publish your packages","date":"2023-03-22T00:00:00.000Z","formattedDate":"2023\u5e743\u670822\u65e5","tags":[{"label":"maven","permalink":"/tags/maven"},{"label":"github","permalink":"/tags/github"},{"label":"jar","permalink":"/tags/jar"}],"readingTime":1.2766666666666666,"hasTruncateMarker":false,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"How to Publish Your Maven Package with Github","date":"2023-03-22T00:00:00.000Z","tags":["maven","github","jar"],"keywords":["maven","github","jar"],"authors":"me"},"prevItem":{"title":"Coding Gracefully with Gradle, Java17 and Spring Boot Jpa","permalink":"/coding-gracefully-with-gradle-java17-jpa"},"nextItem":{"title":"redmi ax6000 crack","permalink":"/redmi-router-crack"}},"content":"there are three ways available to publish your packages\\n\\n## github package registry\\n\\nGithub provide 500M free space for every account\\n\\nFirst of all, publish your package: Add the following config to your package pom which to be published to github\\n\\n```xml\\n<distributionManagement>\\n        <repository>\\n            <id>github</id>\\n            <name>GitHub OWNER Apache Maven Packages</name>\\n            <url>https://maven.pkg.github.com/{account}/maven-repository</url>\\n        </repository>\\n    </distributionManagement>\\n\\n```\\n\\nthen `mvn deploy`, check https://github.com/{account}/maven-repository/packages/ to find your package\\n\\n\\nSo now, we can try to use the packge\\n\\nadd the token (applied from github) and repo address to our pom file\\n\\n```xml\\n<activeProfiles>\\n    <activeProfile>github</activeProfile>\\n  </activeProfiles>\\n\\n  <profiles>\\n    <profile>\\n      <id>github</id>\\n      <repositories>\\n        <repository>\\n          <id>central</id>\\n          <url>https://repo1.maven.org/maven2</url>\\n        </repository>\\n        <repository>\\n          <id>github</id>\\n          <url>https://maven.pkg.github.com/{account}/maven-repository</url>\\n          <snapshots>\\n            <enabled>true</enabled>\\n          </snapshots>\\n        </repository>\\n      </repositories>\\n    </profile>\\n  </profiles>\\n\\n  <servers>\\n    <server>\\n      <id>github</id>\\n      <username>{xxx}</username>\\n      <password>TOKEN</password>\\n    </server>\\n  </servers>\\n\\n```\\n\\n## github repository\\n\\nApply a token from github and give it `user.email` permission\\n\\nadd the following config to maven config file:\\n\\n```xml\\n<servers>\\n    <server>\\n      <id>github</id>\\n      <username>{xxx}</username>\\n      <password>TOKEN</password>\\n    </server>\\n  </servers>\\n\\n```\\n\\nthen add this configs to pom file of the package to be publish to github\\n\\n```xml\\n<properties>\\n        <github.global.server>github</github.global.server>\\n</properties>\\n\x3c!--1.\u4f5c\u7528\uff1a\u5c06jar deploy(\u53d1\u5e03)\u5230\u672c\u5730\u50a8\u5b58\u5e93\u4f4d\u7f6e(altDeploymentRepository)--\x3e\\n<plugin>\\n    <artifactId>maven-deploy-plugin</artifactId>\\n    <configuration>\\n        <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo\\n        </altDeploymentRepository>\\n    </configuration>\\n</plugin>\\n\x3c!--2.\u4f5c\u7528\uff1a\u5c06\u672c\u5730\u5b58\u50a8\u5e93\u4f4d\u7f6e\u7684jar\u6587\u4ef6\u53d1\u5e03\u5230github\u4e0a--\x3e\\n<plugin>\\n    <groupId>com.github.github</groupId>\\n    <artifactId>site-maven-plugin</artifactId>\\n    <version>0.12</version>\\n    <configuration>\\n        <message>Maven artifacts for ${project.version}</message>\\n        <noJekyll>true</noJekyll>\\n        \x3c!--\u672c\u5730jar\u76f8\u5173\u6587\u4ef6\u5730\u5740\uff0c\u4e0e\u4e0a\u65b9\u914d\u7f6e\u50a8\u5b58\u5e93\u4f4d\u7f6e(altDeploymentRepository)\u4fdd\u6301\u4e00\u81f4--\x3e\\n        <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>\\n        \x3c!--\u914d\u7f6e\u4e0a\u4f20\u5230github\u54ea\u4e2a\u5206\u652f\uff0c\u6b64\u5904\u914d\u7f6e\u683c\u5f0f\u5fc5\u987b\u4ee5refs/heads/+\u5206\u652f\u540d\u79f0--\x3e\\n        <branch>refs/heads/main</branch>\\n        <merge>true</merge>\\n        <includes>\\n            <include>**/*</include>\\n        </includes>\\n        \x3c!--\u5bf9\u5e94github\u4e0a\u521b\u5efa\u7684\u4ed3\u5e93\u540d\u79f0 name--\x3e\\n        <repositoryName>maven-repository</repositoryName>\\n        \x3c!--github \u4ed3\u5e93\u6240\u6709\u8005\u5373\u767b\u5f55\u7528\u6237\u540d--\x3e\\n        <repositoryOwner>xxx</repositoryOwner>\\n    </configuration>\\n    <executions>\\n        <execution>\\n            <goals>\\n                <goal>site</goal>\\n            </goals>\\n            <phase>deploy</phase>\\n        </execution>\\n    </executions>\\n</plugin>\\n\\n```\\n\\nnow just need `mvn clean deploy`\\n\\nand we can use the package in this way:\\n\\n```xml\\n<dependencies>\\n        <dependency>\\n            xxxxx\\n        </dependency>\\n    </dependencies>\\n    <repositories>\\n        <repository>\\n            <id>github</id>\\n            \x3c!-- \u683c\u5f0f\u662f https://raw.githubusercontent.com/[github \u7528\u6237\u540d]/[github \u4ed3\u5e93\u540d]/[\u5206\u652f\u540d]/repository --\x3e\\n            <url>https://raw.githubusercontent.com/trumandu/maven-repository/main/repository</url>\\n            <snapshots>\\n                <enabled>true</enabled>\\n                <updatePolicy>always</updatePolicy>\\n            </snapshots>\\n        </repository>\\n</repositories>\\n\\n```\\n\\n## maven central repo\\n\\n### the normal way\\n\\nhttps://blog.csdn.net/icansoicrazy/article/details/126391095\\nhttps://www.cnblogs.com/strongmore/p/17435714.html\\n\\n### We can use github actions to automate this publish process\\n\\nhttps://juejin.cn/post/7102428103196016671"},{"id":"/redmi-router-crack","metadata":{"permalink":"/redmi-router-crack","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/redmi-router-crack/index.md","source":"@site/blog/redmi-router-crack/index.md","title":"redmi ax6000 crack","description":"This article details how I cracked redmi ax6000 router, including some details steps.","date":"2023-03-22T00:00:00.000Z","formattedDate":"2023\u5e743\u670822\u65e5","tags":[{"label":"crack","permalink":"/tags/crack"}],"readingTime":1.9566666666666668,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"redmi ax6000 crack","date":"2023-03-22T00:00:00.000Z","tags":["crack"],"authors":"me","keywords":["crack"]},"prevItem":{"title":"How to Publish Your Maven Package with Github","permalink":"/publish-maven-jar-github"},"nextItem":{"title":"Establish the Docker Develop Environment for frontend","permalink":"/react-vue-docker"}},"content":"This article details how I cracked redmi ax6000 router, including some details steps.\\n\\n\x3c!-- truncate --\x3e\\n\\n- [enable Telnet](#enable-telnet)\\n- [enable ssh](#enable-ssh)\\n- [vps \u642d\u5efa v2ray](#vps-\u642d\u5efa-v2ray)\\n- [install shellclash](#install-shellclash)\\n- [adg home](#adg-home)\\n- [references](#references)\\n\\n\\n\\n## enable Telnet\\n\\ncheck http://192.168.31.1, login to the ui\\n\\ncopy the token from the url \\n\\nthe following url should be further edited, replacing {token} by the string getting frorm the previous step\\n\\n```sh\\n# enable debug mode, the page showed {code: 0}, which indicates that everything is ok\\nhttp://192.168.31.1/cgi-bin/luci/;stok={token}/api/misystem/set_sys_time?timezone=%20%27%20%3B%20zz%3D%24%28dd%20if%3D%2Fdev%2Fzero%20bs%3D1%20count%3D2%202%3E%2Fdev%2Fnull%29%20%3B%20printf%20%27%A5%5A%25c%25c%27%20%24zz%20%24zz%20%7C%20mtd%20write%20-%20crash%20%3B%20\\n\\n# reboot the router (NB: after reboot the token changed accordingly)\\nhttp://192.168.31.1/cgi-bin/luci/;stok={token}/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20\\n\\n# enable telnet permanently, the page showed {code: 0} prove that we success\\nhttp://192.168.31.1/cgi-bin/luci/;stok={token}/api/misystem/set_sys_time?timezone=%20%27%20%3B%20bdata%20set%20telnet_en%3D1%20%3B%20bdata%20set%20ssh_en%3D1%20%3B%20bdata%20set%20uart_en%3D1%20%3B%20bdata%20commit%20%3B%20\\n\\n# reboot another once\\nhttp://192.168.31.1/cgi-bin/luci/;stok={token}/api/misystem/set_sys_time?timezone=%20%27%20%3b%20reboot%20%3b%20\\n\\n# check if telnet is enabled (no username/passwd needed)\\ntelnet 192.168.31.1 23\\n```\\n\\n## enable ssh\\n\\n```sh\\n# enter and login the telnet\\n\\n\\necho -e \'admin\\\\nadmin\' | passwd root  \\nnvram set ssh_en=1  \\nnvram set telnet_en=1  \\nnvram set uart_en=1  \\nnvram set boot_wait=on  \\nnvram commit  \\nsed -i \'s/channel=.*/channel=\\"debug\\"/g\' /etc/init.d/dropbear  \\n/etc/init.d/dropbear restart  \\nmkdir /data/auto_ssh  \\ncd /data/auto_ssh  \\ncurl -O https://fastly.jsdelivr.net/gh/lemoeo/AX6S@main/auto_ssh.sh  \\nchmod +x auto_ssh.sh  \\nuci set firewall.auto_ssh=include  \\nuci set firewall.auto_ssh.type=\'script\'  \\nuci set firewall.auto_ssh.path=\'/data/auto_ssh/auto_ssh.sh\'  \\nuci set firewall.auto_ssh.enabled=\'1\'  \\nuci commit firewall  \\nuci set system.@system[0].timezone=\'CST-8\'  \\nuci set system.@system[0].webtimezone=\'CST-8\'  \\nuci set system.@system[0].timezoneindex=\'2.84\'  \\nuci commit  \\nmtd erase crash  \\nreboot  \\n\\n# check if ssh enabled (root / admin)\\nssh root@192.168.31.1 \\n# if error occurred\\n# Unable to negotiate with 192.168.31.1 port 22: no matching host key type fou\\nssh -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedKeyTypes=+ssh-rsa root@192.168.31.1\\n```\\n\\n## vps \u642d\u5efa v2ray\\n\\n```sh\\nbash <(wget -qO- -o- https://git.io/v2ray.sh)\\n\\n# \u9ed8\u8ba4\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a VMess-TCP \u914d\u7f6e\\n\\n# \u82e5\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528, \u5c1d\u8bd5\\nv2ray add ss\\n\\n# bbr \u4f18\u5316\\nv2ray bbr\\n\\n# \u8fdb\u5165\u7ba1\u7406\u9762\u677f, \u9000\u51fa:\u76f4\u63a5\u56de\u8f66\\nv2ray\\n\\n# ip\\nv2ray ip\\n\\n# vps ip \u53d1\u751f\u53d8\u5316, \u53ef\u4ee5\u901a\u8fc7\\nv2ray # \u8fdb\u5165\u83dc\u5355, \u9009\u62e9 3-\u67e5\u770b\u914d\u7f6e, \u67e5\u770b\u65b0\u7684 vmess \u94fe\u63a5\\n# \u7136\u540e\u5728 shellclash\\nclash # \u9009\u62e9 6-\u5bfc\u5165\u914d\u7f6e\u6587\u4ef6 ...\\n\\n```\\n\\n\\n## install shellclash\\n\\n```sh\\nsudo -i #\u5207\u6362\u5230root\u7528\u6237\uff0c\u5982\u679c\u9700\u8981\u5bc6\u7801\uff0c\u8bf7\u8f93\u5165\u5bc6\u7801\\nbash #\u5982\u5df2\u5904\u4e8ebash\u73af\u5883\u53ef\u8df3\u8fc7\\n\\n# \u4e00\u952e\u5b89\u88c5\\n#GitHub\u6e90(\u53ef\u80fd\u9700\u8981\u4ee3\u7406)\\nexport url=\'https://raw.githubusercontent.com/juewuy/ShellClash/master\' && sh -c \\"$(curl -kfsSl $url/install.sh)\\" && source /etc/profile &> /dev/null\\n# or\\nexport url=\'https://fastly.jsdelivr.net/gh/juewuy/ShellClash@master\' && sh -c \\"$(curl -kfsSl $url/install.sh)\\" && source /etc/profile &> /dev/null\\n\\n# \u663e\u793a\u5b89\u88c5\u6210\u529f\\nclash # \u8fdb\u5165clash \u5b89\u88c5\u914d\u7f6e\u5411\u5bfc\\n\\n# ui dashboard \u5b89\u88c5\u4e0d\u4e86, \u8df3\u8fc7dashboard, \u76f4\u63a5\u5b89\u88c5 clash\\n# clash \u542f\u52a8\u540e, \u5728\u66f4\u65b0\u5f69\u706f\u4e2d\u5b89\u88c5 ui \u5373\u53ef\\n# http://clash.razord.top/#/proxies\\n# http://192.168.31.1:9999/ui/#/proxies\\n\\n\\n\\n\\n# \u672c\u5730\u5b89\u88c5\\ncd /tmp\\ncurl -O -# -s https://fastly.jsdelivr.net/gh/juewuy/ShellClash@master/bin/ShellClash.tar.gz\\nmkdir -p /tmp/SC_tmp && tar -zxf \'/tmp/ShellClash.tar.gz\' -C /tmp/SC_tmp/ && source /tmp/SC_tmp/init.sh \\n# or\\nmkdir -p /tmp/SC_tmp && tar -zxf \'/tmp/ShellClash.tar.gz\' -C /tmp/SC_tmp/ && bash /tmp/SC_tmp/init.sh && source /etc/profile >/dev/null\\n\\n\\n\\n\\n# \u672c\u5730 ui \u5b89\u88c5\\ncurl -O -# -s https://raw.github.com/xiaoyureed/rain-cloud/main/clashdb.tar.gz\\n# scp -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedKeyTypes=+ssh-rsa dashboard/clashdb.tar.gz root@192.168.31.1:/data/clash/ui\\ntar -zxf\\n```\\n\\n## adg home\\n\\nAdGuard Home  https://sspai.com/post/63088#!\\n\\nhttps://www.right.com.cn/forum/thread-8256739-1-1.html\\n\\nhttps://umi.im/redmi-ax6000-adguard-home-openclash/\\n\\n## references\\n\\n\\n```sh\\n\\nhttps://github.com/miaoermua/unlock-redmi-ax6000\\n\\nhttps://iii80.com/?action=show&id=1080 , https://qust.me/post/ax6000-shellclash/\\n\\nhttps://qust.me/post/ax6000-openwrt/#%E7%AC%AC%E4%BA%8C%E6%AD%A5%E4%BB%8E%E8%BF%87%E6%B8%A1%E5%9B%BA%E4%BB%B6%E5%88%B7%E5%85%A5-openwrt \u5237 openwrt\\nhttps://zhuanlan.zhihu.com/p/103121214 \u63d2\u4ef6\\nhttps://github.com/kenzok8/openwrt-packages \u63d2\u4ef6\\n\\nhttps://github.com/juewuy/ShellClash install scripts\\nhttps://qust.me/post/ax6000-shellclash/#%E5%AE%89%E8%A3%85-shellclash\\nhttps://github.com/kjfx/AX6000/releases/tag/redmi_ax6000_ssh\\n\\nhttps://github.com/loyess/Shell ss shell\u5b89\u88c5\u811a\u672c\\nhttps://github.com/teddysun/shadowsocks_install\\nhttps://github.com/teddysun/shadowsocks_install\\n\\nhttps://github.com/openRunner/clash-freenode clash free node\\nhttps://github.com/WilliamStar007/ClashX-V2Ray-TopFreeProxy\\nhttps://github.com/learnhard-cn/free_proxy_ss\\n\\nhttps://github.com/233boy/v2ray one click scripts\\n\\nhttps://www.youtube.com/watch?v=KH318DzR7lA\\n```"},{"id":"/react-vue-docker","metadata":{"permalink":"/react-vue-docker","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/react-vue-docker.md","source":"@site/blog/react-vue-docker.md","title":"Establish the Docker Develop Environment for frontend","description":"In this article I\'m gonna show you how to build a docker env when develop a frontend app","date":"2023-03-11T00:00:00.000Z","formattedDate":"2023\u5e743\u670811\u65e5","tags":[{"label":"docker","permalink":"/tags/docker"},{"label":"react","permalink":"/tags/react"},{"label":"vue","permalink":"/tags/vue"}],"readingTime":1.7066666666666668,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Establish the Docker Develop Environment for frontend","date":"2023-3-11","tags":["docker","react","vue"],"authors":"me","keywords":["docker","react","vue"]},"prevItem":{"title":"redmi ax6000 crack","permalink":"/redmi-router-crack"},"nextItem":{"title":"Best Practice for Spring Boot Working with Docker","permalink":"/spring-boot-with-docker"}},"content":"In this article I\'m gonna show you how to build a docker env when develop a frontend app\\n\\n\x3c!-- truncate --\x3e\\n\\n## vue\\n\\n`vue create vue-docker` to generate the basic structure\\n\\ncreate dockerfile:\\n\\n```dockerfile\\n#\u8bbe\u7f6e\u6784\u5efa\u7684\u57fa\u7840\u955c\u50cf\\nFROM node\\n#\u521b\u5efa\u4e00\u4e2a\u540d\u4e3avue-docker\u7684\u6587\u4ef6\u5939\\nRUN  mkdir -p  /vue-docker\\n#\u8fdb\u5165\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e2d\uff08\u5f53\u6211\u4eec\u6253\u5f00\u955c\u50cf\u7ec8\u7aef\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u8fdb\u5165\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u53bb\uff09\\nWORKDIR /vue-docker\\n#\u62f7\u8d1d\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709\u4e1c\u897f\u5230vue-docker\u76ee\u5f55\u4e2d\\nCOPY . .\\n#\u8bbe\u7f6enpm\u4e0b\u8f7d\u4f9d\u8d56\u6765\u6e90\u4e3a\u6dd8\u5b9d\u6e90\\nRUN npm config set registry https://registry.npm.taobao.org\\n#\u5b89\u88c5\u9879\u76ee\u4f9d\u8d56\\nRUN npm i\\n#\u5728\u542f\u52a8\u955c\u50cf\u65f6\u6267\u884c\u542f\u52a8\u9879\u76ee\u7684\u547d\u4ee4\\nCMD npm run serve\\n#\u66b4\u9732\u7aef\u53e3\u7528\u4e8e\u5916\u90e8\u8bbf\u95ee\\nEXPOSE 8080\\n\\n\\n\\n\\n```\\n\\n\\nif you want to get it work with nginx: create docker-compose.yml\\n\\n```yml\\nversion: \\"3\\" # \u6307\u5b9a\u7248\u672c(\u4e0d\u540c\u7684\u7248\u672c\u5b58\u5728\u8bed\u6cd5\u5dee\u5f02\uff0c\u8fd9\u8fb9\u4f7f\u7528\u6700\u65b0\u7684\u7248\u672c)\\nservices:\\n  nginx: # \u7528\u6237\u81ea\u5b9a\u4e49\u7684\u670d\u52a1\u540d\u79f0\\n    image: nginx # \u4f7f\u7528\u7684nginx\u6700\u65b0\u7684\u955c\u50cf\\n    volumes:\\n        # \u4f7f\u7528\u672c\u5730\u7684 nginx \u914d\u7f6e default.conf\\n      - /default.conf:/etc/nginx/conf.d/default.conf\\n    # \u58f0\u660e\u66b4\u9732\u7684\u7aef\u53e3\\n    ports:\\n      - \\"80:80\\"\\n  vue: \\n    build: # \u6784\u5efa\u76f8\u5173\u7684\u914d\u7f6e \u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528image:xxx\u53bb\u6784\u5efa\\n      context: .\\n      dockerfile: vue # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 dockerfile \u6587\u4ef6\u540d\\n    working_dir: /vue-docker # \u8fdb\u5165\u5de5\u4f5c\u7684\u76ee\u5f55\u4e2d\\n    command: npm run serve # \u5728\u542f\u52a8\u955c\u50cf\u65f6\u6267\u884c\u542f\u52a8\u9879\u76ee\u7684\u547d\u4ee4\\n    volumes: # \u6307\u5b9a\u6620\u5c04\u7684\u8def\u5f84\uff08\u53ef\u6307\u5b9a\u591a\u4e2a\uff09\\n      - ./x\'x\'x:/xxx\\n      - /src:/vue-docker/src  # \u6620\u5c04\u672c\u5730\u6e90\u7801\u76ee\u5f55\\n    ports: # \u66b4\u9732\u7aef\u53e3\u7528\u4e8e\u5916\u90e8\u8bbf\u95ee\uff08\u53ef\u6307\u5b9a\u591a\u4e2a\uff09\\n      - 8080:8080\\n      - 8081:8081\\n\\n\\n\\n```\\n\\nthen you need create the nginx configuration: default.conf\\n\\n```conf\\nserver {\\n    listen       80;\\n    server_name  localhost;\\n\\n    location / {\\n       proxy_pass http://vue:8080; # \u8fd9\u91cc\u7684vue\u5c31\u662fdocker-compose\u4e2d\u81ea\u5b9a\u4e49\u7684services\u540d\\n    }\\n    error_page   500 502 503 504  /50x.html;\\n    location = /50x.html {\\n        root   /usr/share/nginx/html;\\n    }\\n}\\n\\n\\n```\\n\\nvue.config.js \u4e2d\u6dfb\u52a0 disableHostCheck\uff0c\u4e0d\u53bb\u68c0\u6d4b\u57df\u540d:\\n\\n```js\\nmodule.exports = {\\n  devServer: {\\n    disableHostCheck: true,\\n  },\\n};\\n\\n\\n```\\n\\n`docker-compose -d up` To start the env.\\n\\n`docker build -t vue-docker .` to build the vue app image\\n\\nIf you don\'t want to use nginx, you also can start the container directly:\\n\\n```sh\\ndocker run -d -p 8080:8080 -v /src:/vue-docker/src vue-docker\\n# \u8fdb\u5165\u547d\u4ee4\u884c\\ndocker run -it vue-docker /bin/bash\\n\\n\\n```\\n\\nnow we can try `http://localhost:8080`"},{"id":"/spring-boot-with-docker","metadata":{"permalink":"/spring-boot-with-docker","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/spring-boot-with-docker/index.md","source":"@site/blog/spring-boot-with-docker/index.md","title":"Best Practice for Spring Boot Working with Docker","description":"This article I will talking about How to package spring boot app into a docker image , and how to optimize the size of the image.","date":"2023-01-02T00:00:00.000Z","formattedDate":"2023\u5e741\u67082\u65e5","tags":[{"label":"spring","permalink":"/tags/spring"},{"label":"docker","permalink":"/tags/docker"}],"readingTime":1.3533333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Best Practice for Spring Boot Working with Docker","date":"2023-1-2","tags":["spring","docker"],"authors":"me","keywords":["spring","docker"]},"prevItem":{"title":"Establish the Docker Develop Environment for frontend","permalink":"/react-vue-docker"},"nextItem":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","permalink":"/2023/01/01/food-machine-learning"}},"content":"This article I will talking about How to package spring boot app into a docker image , and how to optimize the size of the image.\\n\\n\x3c!-- truncate --\x3e\\n\\n- [a basic example](#a-basic-example)\\n- [get a better image layer](#get-a-better-image-layer)\\n- [modularize the project](#modularize-the-project)\\n- [multi-stage build](#multi-stage-build)\\n- [try to make the native image](#try-to-make-the-native-image)\\n- [reference materials](#reference-materials)\\n\\n\\n## a basic example\\n\\nFirst of all, let\'s take a look at the simplest dockerfile \\n\\n```dockerfile\\n# \u6700\u597d\u662f\u9009\u62e9jre\u548cslim\u540e\u7f00\u7684\u57fa\u7840\u955c\u50cf\uff0c\u5b83\u540c\u65f6\u5bf9linux\u548cJDK\u505a\u88c1\u526a\uff0c\u80fd\u6700\u5c0f\u5316\u955c\u50cf\u7684\u4f53\u79ef\u800c\u4e0d\u5f71\u54cdjava\u7a0b\u5e8f\u7684\u8fd0\u884c\u6027\u80fd\\n# for java8 we can try openjdk:8-jre-alpine\\nFROM openjdk:11-jre-slim\\n\\nWORKDIR /app\\n\\nARG JAR_FILE=./target/*.jar\\nCOPY ${JAR_FILE} app.jar\\n\\nENTRYPOINT [ \\"java\\", \\"-jar\\", \\"/app/app.jar\\" ]\\n\\n```\\n\\nBut there are several weaknesses:\\n\\n- the container will be started by this user by default: root, there are potential safety risk\\n- the jar file is too fat, which means the image layer is not been handling well, each time we change the code, the image build time may be too long\\n- the basic image is too huge (try to use the jre instead of the jdk)\\n\\n## get a better image layer\\n\\n\\nhttps://github.com/wagoodman/dive\\n\\n```dockerfile\\n\\nFROM eclipse-temurin:17-jre-jammy as builder\\nARG JAR_FILE=target/*.jar\\nWORKDIR application\\nCOPY ${JAR_FILE} application.jar\\nRUN java -Djarmode=layertools -jar application.jar extract\\n\\n################\\n\\nFROM eclipse-temurin:17-jre-jammy\\nMAINTAINER xiaoyureed <rainx000@qq.com>\\nWORKDIR /application\\nCOPY --from=builder application/dependencies/ ./\\nCOPY --from=builder application/spring-boot-loader/ ./\\nCOPY --from=builder application/snapshot-dependencies/ ./\\nCOPY --from=builder application/application/ ./\\n\\nENV JVM_OPTS=\\"-Xmx256m -Xms256m\\" \\\\\\n    HALO_WORK_DIR=\\"/root/.halo2\\" \\\\\\n    SPRING_CONFIG_LOCATION=\\"optional:classpath:/;optional:file:/root/.halo2/\\" \\\\\\n    TZ=Asia/Shanghai\\n\\nRUN ln -sf /usr/share/zoneinfo/$TZ /etc/localtime \\\\\\n    && echo $TZ > /etc/timezone \\n\\nEXPOSE 8080\\nENTRYPOINT [\\"sh\\", \\"-c\\", \\"java ${JVM_OPTS} -Djava.security.egd=file:/dev/./urandom org.springframework.boot.loader.JarLauncher ${0} ${@}\\"]\\n\\n```\\n\\n## modularize the project\\n\\nhttps://sergiomartinrubio.com/articles/build-a-docker-jre-image-with-java-17-and-spring/\\n\\nMaking your project modularized is a great way to reduce the final docker images size\\n\\n> Another way to conduct this action (modularization) is by using [JLink](https://openjdk.org/projects/jigsaw/quick-start#linker)\\n\\n## multi-stage build\\n\\n\\n\\n## try to make the native image\\n\\nThe image size can reduce greatly by using native image, and the other aspects such as the time taken to start, the memory occupied.... Generally speaking, there are so many benefits.\\n\\n## reference materials\\n\\nhttps://github.com/halo-dev/halo  can be taken as a best practice\\n\\nhttps://snyk.io/blog/best-practices-to-build-java-containers-with-docker/\\nhttps://blog.monosoul.dev/2022/04/25/reduce-java-docker-image-size/\\n\\nhttps://mritd.com/2022/11/08/java-containerization-guide/ tips for java docker image\\n\\nhttps://hub.docker.com/_/eclipse-temurin/tags?page=1&name=17 the jdk17 base image.\\n\\nhttps://zhuanlan.zhihu.com/p/245645260 tips, which base image we should choose\\n\\nhttps://github.com/GoogleContainerTools/jib maven plugin produced by google to generate docker image."},{"id":"/2023/01/01/food-machine-learning","metadata":{"permalink":"/2023/01/01/food-machine-learning","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2023-01-01-food-machine-learning/index.md","source":"@site/blog/2023-01-01-food-machine-learning/index.md","title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","description":"https://spd.group/machine-learning/machine-learning-and-ai-in-food-industry/","date":"2023-01-01T00:00:00.000Z","formattedDate":"2023\u5e741\u67081\u65e5","tags":[{"label":"food","permalink":"/tags/food"},{"label":"machine learning","permalink":"/tags/machine-learning"}],"readingTime":0.043333333333333335,"hasTruncateMarker":false,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","tags":["food","machine learning"],"authors":"me"},"prevItem":{"title":"Best Practice for Spring Boot Working with Docker","permalink":"/spring-boot-with-docker"},"nextItem":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","permalink":"/2022/12/12/writing-tech-doc"}},"content":"https://spd.group/machine-learning/machine-learning-and-ai-in-food-industry/\\n\\nGoogle \u641c\u7d22 \\"food machine learning\\"\\n\\n\u98df\u54c1\u6eaf\u6e90\\n\\n\x3c!-- more --\x3e"},{"id":"/2022/12/12/writing-tech-doc","metadata":{"permalink":"/2022/12/12/writing-tech-doc","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-12-12-writing-tech-doc/index.md","source":"@site/blog/2022-12-12-writing-tech-doc/index.md","title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","description":"https://www.jianshu.com/p/13503e2e7195","date":"2022-12-12T00:00:00.000Z","formattedDate":"2022\u5e7412\u670812\u65e5","tags":[{"label":"writing","permalink":"/tags/writing"}],"readingTime":0.023333333333333334,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","tags":["writing"],"authors":["me"]},"prevItem":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","permalink":"/2023/01/01/food-machine-learning"},"nextItem":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","permalink":"/2022/11/10/bt-torrent-download"}},"content":"https://www.jianshu.com/p/13503e2e7195\\n\\n\\n\\nhttps://xie.infoq.cn/article/dda03f839ec34b8b202f4f49e\\n\\nhttps://blog.csdn.net/kid_2412/article/details/106062531\\n\\nhttps://zhuanlan.zhihu.com/p/83661877\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2022/11/10/bt-torrent-download","metadata":{"permalink":"/2022/11/10/bt-torrent-download","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-11-10-bt-torrent-download/index.md","source":"@site/blog/2022-11-10-bt-torrent-download/index.md","title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","description":"https://www.triadprogram.com/bt-download-tool/ bt \u539f\u7406","date":"2022-11-10T00:00:00.000Z","formattedDate":"2022\u5e7411\u670810\u65e5","tags":[{"label":"BT","permalink":"/tags/bt"},{"label":"torrent","permalink":"/tags/torrent"},{"label":"download","permalink":"/tags/download"}],"readingTime":0.02666666666666667,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","tags":["BT","torrent","download"],"authors":["me"]},"prevItem":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","permalink":"/2022/12/12/writing-tech-doc"},"nextItem":{"title":"Package Spring Boot & React App Together","permalink":"/spring-boot-react-package-together"}},"content":"https://www.triadprogram.com/bt-download-tool/ bt \u539f\u7406\\n\\nhttps://www.triadprogram.com/aria2-mac/\\n\\n\x3c!-- truncate --\x3e"},{"id":"/spring-boot-react-package-together","metadata":{"permalink":"/spring-boot-react-package-together","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/spring-boot-react-package-together.md","source":"@site/blog/spring-boot-react-package-together.md","title":"Package Spring Boot & React App Together","description":"This article I will try to package a react app into Spring boot, so that they can share the same port, and make sure that the react static content can be served inside the spring boot app.","date":"2022-07-03T00:00:00.000Z","formattedDate":"2022\u5e747\u67083\u65e5","tags":[{"label":"spring","permalink":"/tags/spring"},{"label":"react","permalink":"/tags/react"}],"readingTime":3.276666666666667,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Package Spring Boot & React App Together","date":"2022-7-3","tags":["spring","react"],"authors":"me","keywords":["spring","react"]},"prevItem":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","permalink":"/2022/11/10/bt-torrent-download"},"nextItem":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","permalink":"/2022/06/11/web-dev-history"}},"content":"This article I will try to package a react app into Spring boot, so that they can share the same port, and make sure that the react static content can be served inside the spring boot app.\\n\\nHere I\'m gonna take a next.js app for example.\\n\\n\x3c!-- truncate --\x3e\\n\\n- [create the basic structure](#create-the-basic-structure)\\n- [perform the integration process manually](#perform-the-integration-process-manually)\\n- [integrate with maven plugins](#integrate-with-maven-plugins)\\n- [How to develop and debug](#how-to-develop-and-debug)\\n- [reference materials](#reference-materials)\\n\\n\\n## create the basic structure\\n\\nFirst of all, we have to create a spring boot app and a react app, As regards of spring boot app, please refer to https://start.spring.io. Then configurations about the static content route need set up:\\n\\n```java\\n\\n@Configuration\\npublic class WebConfig implements WebMvcConfigurer {\\n    /**\\n     * To serve the nextjs static resources directly\\n     */\\n    @Override\\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\\n        registry.addResourceHandler(\\"/**\\").addResourceLocations(\\"classpath:/static/\\");\\n    }\\n\\n/**\\n     * \u4e3a\u9759\u6001\u9875\u9762\u7684\u8def\u7531\u81ea\u52a8\u8865\u5168 .html \u7136\u540e\u91cd\u5b9a\u5411 (nextjs\u5728\u6253\u5305\u8fdb springboot \u540e, \u4f5c\u4e3aspringboot \u91cc\u7684\u9759\u6001\u8d44\u6e90, \u6574\u4e2a\u5e94\u7528\u53ea\u8ba4\u8bc6 xxx.html. \u5f53\u7136\u5982\u679c\u524d\u540e\u5206\u79bb\u5f00\u53d1\u65f6, nextjs \u7684\u670d\u52a1\u5668\u662f\u8ba4\u8bc6 xxx\u7684)\\n     * \\n     * \u5f00\u53d1\u9636\u6bb5\u53ef\u4ee5\u6ca1\u6709, \u4f46\u662f\u6253\u5305\u65f6\u8981\u52a0\u4e0a\\n     */\\n    @Override\\n    public void addInterceptors(InterceptorRegistry registry) {\\n        registry.addInterceptor(new HandlerInterceptor() {\\n            @Override\\n            public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\\n                boolean isApiHandle = handler instanceof HandlerMethod;\\n                String servletPath = request.getServletPath();\\n\\n                if (!isApiHandle && !\\"/\\".contentEquals(servletPath) && FilenameUtils.getExtension(servletPath).isEmpty()) {\\n                    request.getRequestDispatcher(servletPath + \\".html\\").forward(request, response);\\n                    return false;\\n                }\\n\\n                return true;\\n            }\\n        });\\n    }\\n\\n```\\n\\nFor next.js app, check the steps below: (Execute the following command in the root path of the java project)\\n\\n> Usually I name the next.js app with \\"frontend\\"\\n\\n```shell\\nnpx create-next-app@latest --ts\\n# or\\nyarn create next-app --ts\\n# or\\npnpm create next-app --typescript\\n\\n```\\n\\nchange the next.config.js\\n\\n```js\\n/** @type {import(\'next\').NextConfig} */\\nconst nextConfig = {\\n  //https://stackoverflow.com/questions/65058598/nextjs-cors-issue\\n  async rewrites() {\\n    return {\\n      fallback: [\\n        {\\n          source: \'/api/:path*\',\\n          destination: \'http://localhost:8080/api/:path*\'\\n        }\\n      ]\\n    }\\n  },\\n  reactStrictMode: true,\\n  images: {\\n    unoptimized: true\\n  },\\n  swcMinify: true\\n}\\n\\nmodule.exports = nextConfig\\n\\n```\\n\\nchange the package.json (Just insert the following line into \\"scripts\\" section)\\n\\n```json\\n\\"export\\": \\"next build && next export\\"\\n```\\n\\n\\n\\n## perform the integration process manually\\n\\n```\\nStep -1 : Edit package.json -> add \\"export\\":\\"next export\\" in the scripts property\\n\\n    This measure is just form normal react app, if come up with next.js app, please refer to above\\n\\nStep - 2: The above step will build a folder named \\"out\\". Copy the contents of out folder. Paste it in the src -> main -> resources -> static folder.\\n\\nStep -3: Now build the spring boot jar/war, then run it. It will serve the contents inside the static folder.\\n```\\n\\n## integrate with maven plugins\\n\\nBy using plugin `frontend-maven-plugin` and `maven-resources-plugin`\\n\\n```xml\\n\x3c!-- just for using npm --\x3e\\n<plugin>\\n    <groupId>com.github.eirslett</groupId>\\n    <artifactId>frontend-maven-plugin</artifactId>\\n    <version>1.11.3</version>\\n    <executions>\\n      \x3c!-- check if nodejs/npm installed --\x3e\\n        <execution>\\n            <id>install node and npm</id>\\n            <goals>\\n                <goal>install-node-and-npm</goal>\\n            </goals>\\n            \x3c!-- optional, the default value is like this --\x3e\\n            <phase>generate-resources</phase>\\n        </execution>\\n        \x3c!-- clear node_modules and package-lock.json --\x3e\\n        <execution>\\n            <id>npm run clean</id>\\n            <goals>\\n                <goal>npm</goal>\\n            </goals>\\n            <phase>generate-resources</phase>\\n            <configuration>\\n                <arguments>run clean</arguments>\\n            </configuration>\\n        </execution>\\n        \x3c!-- install dependencies --\x3e\\n        <execution>\\n            <id>npm install</id>\\n            <goals>\\n                <goal>npm</goal>\\n            </goals>\\n            <phase>generate-resources</phase>\\n            <configuration>\\n                <arguments>install --registry=https://registry.npm.taobao.org</arguments>\\n            </configuration>\\n        </execution>\\n        <execution>\\n            <id>npm run build and export</id>\\n            <goals>\\n                <goal>npm</goal>\\n            </goals>\\n            <phase>generate-resources</phase>\\n            <configuration>\\n                <arguments>run export</arguments>\\n            </configuration>\\n        </execution>\\n    </executions>\\n    <configuration>\\n        <workingDirectory>${project.baseDir}/frontend</workingDirectory>\\n        <installDirectory>${project.build.directory}</installDirectory>\\n        <nodeVersion>v18.14.0</nodeVersion>\\n        \x3c!-- optional, just for projects in china main land --\x3e\\n        \x3c!-- <downloadRoot>http://npm.taobao.org/mirrors/node/</downloadRoot> --\x3e\\n    </configuration>\\n</plugin>\\n\\n\x3c!-- just for using yarn --\x3e\\n<plugin>\\n                <groupId>com.github.eirslett</groupId>\\n                <artifactId>frontend-maven-plugin</artifactId>\\n                <version>1.11.3</version>\\n                <executions>\\n                    \x3c!-- check if nodejs/npm installed --\x3e\\n                    <execution>\\n                        <id>install-frontend-tools</id>\\n                        <goals>\\n                            <goal>install-node-and-yarn</goal>\\n                        </goals>\\n                        \x3c!-- optional, the default value is like this --\x3e\\n                        <phase>generate-resources</phase>\\n                    </execution>\\n\\n                    \x3c!-- install dependencies --\x3e\\n                    <execution>\\n                        <id>yarn-install</id>\\n                        <goals>\\n                            <goal>yarn</goal>\\n                        </goals>\\n                        <phase>generate-resources</phase>\\n                        <configuration>\\n                            <arguments>install --registry=https://registry.npm.taobao.org</arguments>\\n\x3c!--                            <arguments>install</arguments>--\x3e\\n                        </configuration>\\n                    </execution>\\n                    <execution>\\n                        <id>yarn-build-and-export</id>\\n                        <goals>\\n                            <goal>yarn</goal>\\n                        </goals>\\n                        <phase>generate-resources</phase>\\n                        <configuration>\\n                            <arguments>export</arguments>\\n                        </configuration>\\n                    </execution>\\n                </executions>\\n                <configuration>\\n                    <workingDirectory>${frontend.dir}</workingDirectory>\\n                    <installDirectory>${project.build.directory}</installDirectory>\\n                    <nodeVersion>v18.14.0</nodeVersion>\\n                    <yarnVersion>v1.22.19</yarnVersion>\\n                    \x3c!-- optional, just for projects in China main land --\x3e\\n                    \x3c!-- <downloadRoot>http://npm.taobao.org/mirrors/node/</downloadRoot> --\x3e\\n                </configuration>\\n            </plugin>\\n\\n<plugin>\\n\\t\\t\\t\\t<artifactId>maven-resources-plugin</artifactId>\\n\\t\\t\\t\\t<version>3.2.0</version>\\n\\t\\t\\t\\t<executions>\\n\\t\\t\\t\\t\\t<execution>\\n\\t\\t\\t\\t\\t\\t<id>copy-resources</id>\\n\\t\\t\\t\\t\\t\\t<phase>generate-resources</phase>\\n\\t\\t\\t\\t\\t\\t<goals>\\n\\t\\t\\t\\t\\t\\t\\t<goal>copy-resources</goal>\\n\\t\\t\\t\\t\\t\\t</goals>\\n\\t\\t\\t\\t\\t\\t<configuration>\\n\\t\\t\\t\\t\\t\\t\\t<outputDirectory>${basedir}/target/classes/static</outputDirectory>\\n              \x3c!-- or --\x3e\\n              \x3c!-- <outputDirectory>${project.build.outputDirectory}/static</outputDirectory> --\x3e\\n\\t\\t\\t\\t\\t\\t\\t<resources>\\n\\t\\t\\t\\t\\t\\t\\t\\t<resource>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<directory>${basedir}/frontend/out</directory>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<filtering>false</filtering>\\n\\t\\t\\t\\t\\t\\t\\t\\t</resource>\\n\\t\\t\\t\\t\\t\\t\\t</resources>\\n\\t\\t\\t\\t\\t\\t</configuration>\\n\\t\\t\\t\\t\\t</execution>\\n\\t\\t\\t\\t</executions>\\n\\t\\t\\t</plugin>\\n```\\n\\nThen we can issue command `mvn spring-boot:run` and visit http://localhost:8080 to check the effect\\n\\nUsing `mvn package -D maven.test.skip=true` to package jar file.\\n\\n## How to develop and debug\\n\\nSo far, we can only package the final jar file with the above setup, but how to develop and debug with enjoying the benefits of hot reload?\\n\\nWe should follow the traditional way of separating the backend and frontend to conduct the development.\\n\\nFor example, now we have a backend service:\\n\\n```java\\n\\n@RestController\\n@RequestMapping(\\"/api/students\\")\\npublic class StudentController {\\n    private StudentRepository studentRepository;\\n\\n    public StudentController(StudentRepository studentRepository) {\\n        this.studentRepository = studentRepository;\\n    }\\n\\n    @PostMapping({ \\"\\", \\"/\\" })\\n    public ResponseEntity<BaseResponse<List<Student>>> findAll() throws Exception {\\n        return ResponseEntity.ok(BaseResponse.ok(studentRepository.findAll()));\\n    }\\n}\\n\\n```\\n\\nand a nextjs page:\\n\\n```ts\\nimport {useEffect, useState} from \\"react\\";\\n\\ninterface Student {\\n    id: string;\\n    name: string;\\n    age: number;\\n    gender: number;\\n    createdAt: Date;\\n    updatedAt: Date;\\n}\\n\\nconst Students = () => {\\n\\n    let [students, setStudents] = useState<Student[] | null>(null);\\n    let [loading, setLoading] = useState(false);\\n\\n    useEffect(() => {\\n        setLoading(true)\\n\\n        fetch(\'/api/students\', {\\n            method: \'POST\'\\n        })\\n            .then(resp => resp.json())\\n            .then(resp => {\\n                setStudents(() => resp.data)\\n                setLoading(false)\\n            })\\n    }, [])\\n\\n    return (\\n        <main>\\n            <ul>\\n                {loading ? (<div>loading</div>) : students?.map((student, i) => {\\n                    return (\\n                        <li key={i}>\\n                            {`${student.id} | ${student.name} | ${student.age} | ${student.gender === 1 ? \'\u7537\' : \'\u5973\'} | ${student.createdAt} | ${student.updatedAt}`}\\n                        </li>\\n                    )\\n                })}\\n            </ul>\\n        </main>\\n    )\\n}\\n\\nexport default Students\\n\\n```\\n\\nThen we can start the backend with the debug/start button offered by ide or by using the main method directly, the backend service will start on port 8080, for the frontend app, enter `frontend` folder, issue `yarn dev` to start the frontend app on port 3000, now we can visit localhost:3000 to check the page\\n\\n## reference materials\\n\\nhttps://github.com/xiaoyureed/next-boot\\n\\nhttps://github.com/tisonkun/springboot-nextjs-demo\\n\\nhttps://www.tisonkun.org/2022/10/22/springboot-nextjs/\\n\\nhttps://github.com/nnishad/reactive-springboot-with-reactjs-app package with gradle"},{"id":"/2022/06/11/web-dev-history","metadata":{"permalink":"/2022/06/11/web-dev-history","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-06-11-web-dev-history/index.md","source":"@site/blog/2022-06-11-web-dev-history/index.md","title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","description":"https://www.jianshu.com/p/bec6736dcc3d","date":"2022-06-11T00:00:00.000Z","formattedDate":"2022\u5e746\u670811\u65e5","tags":[{"label":"history","permalink":"/tags/history"},{"label":"web","permalink":"/tags/web"}],"readingTime":0.56,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","tags":["history","web"],"authors":["me"]},"prevItem":{"title":"Package Spring Boot & React App Together","permalink":"/spring-boot-react-package-together"},"nextItem":{"title":"How to establish the infrastructure from scratch in a startup","permalink":"/establish-infrastructure-from-scratch"}},"content":"https://www.jianshu.com/p/bec6736dcc3d\\n\\nhttps://blog.csdn.net/JavaEETeacher/article/details/6478450\\n\\nhttps://www.bilibili.com/video/BV1qc411W78Q \u67b6\u6784\u7684\u6f14\u8fdb\\n\\nIn this blog I am going to talk about the development history of Java Web \\n\\n\x3c!-- truncate --\x3e\\n\\n# \u524d\u540e\u7aef\u5206\u79bb\\n\\nhttps://github.com/calidion/calidion.github.io/issues/17\\nhttps://blog.csdn.net/shaobingj126/article/details/49420145\\nhttps://www.zhihu.com/question/267014376\\nhttps://www.jianshu.com/p/2a14bb3c7505\\n\\n- \u8bbe\u8ba1\\n\\n    \u540e\u7aef: \u6570\u636e\u5e93, \u4e2d\u95f4\u4ef6, \u7f13\u5b58\\n\\n    \u524d\u7aef:\\n\\n    \u4ea4\u4e92: \u901a\u8fc7 http \u63a5\u53e3, \u5b9a\u4e49\u597d\u6570\u636e\u683c\u5f0f (json)\\n\\n- \u5f00\u53d1 and \u6d4b\u8bd5\\n\\n    \u524d\u540e\u7aef\u540c\u65f6\u72ec\u7acb\u5f00\u53d1\\n\\n    \u524d\u7aef\u53ef\u4ee5\u6682\u65f6\u4ece mock server \u62ff\u8bbe\u8ba1\u9636\u6bb5\u89c4\u5212\u597d\u7684\u6570\u636e\u4f7f\u7528.\\n\\n- \u90e8\u7f72\\n\\n    \u524d\u540e\u7aef\u72ec\u7acb\u90e8\u7f72, \u4e24\u8005\u7684\u7248\u672c\u8981\u4e00\u4e00\u5bf9\u5e94.\\n\\n    Jenkins \u6301\u7eed\u53d1\u5e03\\n\\n# DDD\\n\\ndomain driven design \u9886\u57df\u9a71\u52a8\u5f00\u53d1\\n\\n\u9886\u57df\u9a71\u52a8\u67b6\u6784\uff08DDD\uff09\u5efa\u6a21\u4e2d\u7684\u6a21\u578b\u5230\u5e95\u662f\u4ec0\u4e48\uff1f - dz902\u7684\u56de\u7b54 - \u77e5\u4e4e\\nhttps://www.zhihu.com/question/25089273/answer/233316164\\n\\nhttps://www.cnblogs.com/ealenxie/p/9559781.html - \u5fae\u670d\u52a1 + DDD"},{"id":"/establish-infrastructure-from-scratch","metadata":{"permalink":"/establish-infrastructure-from-scratch","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/establish-infrastructure-from-scratch.md","source":"@site/blog/establish-infrastructure-from-scratch.md","title":"How to establish the infrastructure from scratch in a startup","description":"https://github.com/qiangmzsx/Software-Engineering-at-Google \u8c37\u6b4c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u53ef\u53c2\u8003","date":"2022-06-07T00:00:00.000Z","formattedDate":"2022\u5e746\u67087\u65e5","tags":[{"label":"infrastructure","permalink":"/tags/infrastructure"}],"readingTime":12.723333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"How to establish the infrastructure from scratch in a startup","date":"2022-6-7","tags":["infrastructure"],"authors":"me","keywords":["infrastructure"],"draft":false},"prevItem":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","permalink":"/2022/06/11/web-dev-history"},"nextItem":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","permalink":"/2022/05/04/mobile-technology"}},"content":"https://github.com/qiangmzsx/Software-Engineering-at-Google \u8c37\u6b4c\u7684\u8f6f\u4ef6\u5de5\u7a0b\u53ef\u53c2\u8003\\n\\n\x3c!-- truncate --\x3e\\n\\n- [\u4ee3\u7801\u7ba1\u7406](#\u4ee3\u7801\u7ba1\u7406)\\n    - [\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u89c4\u8303](#\u4ee3\u7801\u7248\u672c\u7ba1\u7406\u89c4\u8303)\\n    - [cicd \u914d\u7f6e](#cicd-\u914d\u7f6e)\\n- [\u9700\u6c42/bug\u7ba1\u7406](#\u9700\u6c42bug\u7ba1\u7406)\\n- [\u8bbe\u8ba1](#\u8bbe\u8ba1)\\n- [\u57fa\u7840\u6280\u672f\u6846\u67b6](#\u57fa\u7840\u6280\u672f\u6846\u67b6)\\n- [\u57fa\u7840\u80fd\u529b\u4e2d\u95f4\u4ef6](#\u57fa\u7840\u80fd\u529b\u4e2d\u95f4\u4ef6)\\n- [\u57fa\u7840\u80fd\u529b\u5305\u88c5 sdk](#\u57fa\u7840\u80fd\u529b\u5305\u88c5-sdk)\\n- [\u5b9a\u4e49\u7f16\u7801\u89c4\u8303](#\u5b9a\u4e49\u7f16\u7801\u89c4\u8303)\\n    - [\u524d\u7aef\u89c4\u8303](#\u524d\u7aef\u89c4\u8303)\\n        - [css\u8bed\u6cd5\u89c4\u8303](#css\u8bed\u6cd5\u89c4\u8303)\\n- [\u8fd0\u7ef4](#\u8fd0\u7ef4)\\n- [\u7814\u53d1\u6d41\u7a0b](#\u7814\u53d1\u6d41\u7a0b)\\n    - [\u5173\u952e\u8282\u70b9](#\u5173\u952e\u8282\u70b9)\\n    - [\u5173\u952e\u6587\u6863](#\u5173\u952e\u6587\u6863)\\n    - [\u89d2\u8272\u548c\u5206\u5de5](#\u89d2\u8272\u548c\u5206\u5de5)\\n    - [\u90e8\u95e8\u5206\u5de5](#\u90e8\u95e8\u5206\u5de5)\\n    - [\u57fa\u672c\u5de5\u4f5c\u51c6\u5219](#\u57fa\u672c\u5de5\u4f5c\u51c6\u5219)\\n- [\u7ba1\u7406\u89c4\u8303](#\u7ba1\u7406\u89c4\u8303)\\n- [\u7ecf\u9a8c\u4e4b\u8c08](#\u7ecf\u9a8c\u4e4b\u8c08)\\n\\n\\n## \u4ee3\u7801\u7ba1\u7406\\n\\n```sh\\n\\ngitlab - manage the code, and do things about cicd\\n\\n    \u5c06\u5f00\u53d1\u8005\u8d26\u53f7\u96c6\u4e2d\u7ba1\u7406, \u4f7f\u7528\u65f6\u7533\u8bf7, \u8d4b\u4e88\u6743\u9650, \u79bb\u804c\u6ce8\u9500\\n\\n\\n```\\n\\n### \u4ee3\u7801\u7248\u672c\u7ba1\u7406\u89c4\u8303\\n\\n### cicd \u914d\u7f6e\\n\\n## \u9700\u6c42/bug\u7ba1\u7406\\n\\n```sh\\n\u7985\u9053 - \u56fd\u4ea7\\n\\njira\\n\\n\\n```\\n\\n## \u8bbe\u8ba1\\n\\n```sh\\n\\n\u84dd\u6e56 - \u56fd\u4ea7\\n\\n    \u53ef\u4ee5\u4f7f\u7528svn \u7ba1\u7406\u6743\u9650\\n\\nfigma\\n\\n```\\n\\n## \u57fa\u7840\u6280\u672f\u6846\u67b6\\n\\n```sh\\n\\n\u5982\u679c\u5de5\u4f5c\u5b9a\u6027\u4e3a\u5916\u5305\u516c\u53f8\uff0c\u90a3\u5c31\u642d\u5efa\u811a\u624b\u67b6\u3001\u4ee3\u7801\u751f\u6210\u5e73\u53f0\u3001\u6d4b\u8bd5\u53d1\u5e03\u548c\u8fd0\u7ef4\u5e73\u53f0\u3001\u5b9a\u5236\u5e38\u7528\u7684\u7c7b\u5e93\u548c\u5438\u7eb3\u5f00\u6e90\u7c7b\u5e93\uff0c\u505a\u5230\u5feb\u901f\u5f00\u53d1\u548c\u4ee3\u7801\u590d\u7528\u3002\\n\\n\u5982\u679c\u662f\u67d0\u4e2a\u516c\u53f8\u7684\u6280\u672f\u90e8\u95e8\uff0c\u4e0d\u4ee5\u6280\u672f\u4e3a\u4e3b\u8981\u76c8\u5229\u4eba\u6570\u8f83\u5c11\uff0c\u90a3\u6211\u89c9\u5f97\u4e0d\u8981\u5206\u5e03\u5f0f\u548c\u5fae\u670d\u52a1\uff0c\u5efa\u8bae\u5168\u90e8\u4e0a\u4e91\u51cf\u5c11\u8fd0\u7ef4\u6210\u672c\uff0c\u7528 nignx \u505a\u8f6f\u8d1f\u8f7d\u5747\u8861\u5373\u53ef\u3002\\n\\n\u5982\u679c\u662f\u6280\u672f\u578b\u521d\u521b\u516c\u53f8\uff0c\u5efa\u8bae\u662f\u7528\u624b\u5e95\u4e0b\u6700\u5e38\u7528\u7684\u6280\u672f\u5148\u5feb\u901f\u5b9e\u73b0\u4e1a\u52a1\uff0c\u7136\u540e\u505a\u7684\u5927\u4e00\u4e9b\u65f6\u5728\u7528\u4e5f\u5c31 java \u4f53\u7cfb\u3001GO \u4f53\u7cfb\u6765\u91cd\u5199\u4e1a\u52a1\u6846\u67b6\u3002\\n\\n\\n\u251c\u2500\u2500 kyland-spring-boot-starter-parent              -- starter\u7236\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-base            -- \u57fa\u7840\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-core            -- \u6838\u5fc3\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-ds              -- \u6570\u636e\u6e90\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-file            -- \u6587\u4ef6\u5b58\u50a8\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-log             -- \u65e5\u5fd7\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-low-code        -- \u4f4e\u4ee3\u7801\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-message-queue   -- \u6d88\u606f\u961f\u5217\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-redis           -- redis\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-security        -- \u5b89\u5168\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-swagger         -- \u63a5\u53e3\u6587\u6863\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-system          -- \u7cfb\u7edf\u5185\u7f6e\u529f\u80fd\u6a21\u5757\\n    \u251c\u2500\u2500 kyland-spring-boot-starter-web             -- web\u542f\u52a8\u5668\\n\\n\\n\\n\\n\u524d\u7aef\u90e8\u5206:\\n\\n\u642d\u5efa\u811a\u624b\u67b6\u5de5\u5177\\nyarn create kyland-app\\n\\nqiankun \u5fae\u5e94\u7528\u6846\u67b6\\n```\\n\\n## \u57fa\u7840\u80fd\u529b\u4e2d\u95f4\u4ef6\\n\\n```sh\\n\\nnacos\\n\\nkkfileview \u6587\u4ef6\u9884\u89c8\\n\\nMINIO \u6587\u4ef6\u5b58\u50a8\\n\\nRabbitMQ/ kafka \u6d88\u606f\u961f\u5217\\n\\n```\\n\\n## \u57fa\u7840\u80fd\u529b\u5305\u88c5 sdk\\n\\n```sh\\n\\n\u4efb\u52a1\u8c03\u5ea6\\n\\nSocket\\n\\n\\n\\n```\\n\\n## \u5b9a\u4e49\u7f16\u7801\u89c4\u8303\\n\\n```sh\\n\\n\u5b89\u88c5 alibaba \u98ce\u683c\u63d2\u4ef6, Basically we obey the Alibaba java coding style, \\n\\nor\\n\\n\u5b89\u88c5 checkstyle \u63d2\u4ef6, \u901a\u8fc7checkstyle\u914d\u7f6e\u98ce\u683c\u6821\u9a8c\\n\\n\\n\\n\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u8303\\n\\n\u6ce8\u91ca\u89c4\u8303\\n\\n\u4ee3\u7801\u98ce\u683c\u89c4\u8303\\n\\n\u63a5\u53e3\u53ca\u6587\u6863\u89c4\u8303\\n\\n\u6570\u636e\u5e93\u89c4\u8303\\n```\\n\\n### \u524d\u7aef\u89c4\u8303\\n\\n#### css\u8bed\u6cd5\u89c4\u8303\\n\\n```sh\\n\\n\u58f0\u660e\u987a\u5e8f\u8981\u7ea6\u5b9a\u4e00\u81f4, \u76f8\u5173\u7684\u5c5e\u6027\u58f0\u660e\u5e94\u5f53\u5f52\u4e3a\u4e00\u7ec4\\n\\n\u7531\u4e8e\u5b9a\u4f4d\uff08positioning\uff09\u53ef\u4ee5\u4ece\u6b63\u5e38\u7684\u6587\u6863\u6d41\u4e2d\u79fb\u9664\u5143\u7d20\uff0c\u5e76\u4e14\u8fd8\u80fd\u8986\u76d6\u76d2\u6a21\u578b\uff08box model\uff09\u76f8\u5173\u7684\u6837\u5f0f\uff0c\u56e0\u6b64\u6392\u5728\u9996\u4f4d\u3002\\n\\n\u76d2\u6a21\u578b\u6392\u5728\u7b2c\u4e8c\u4f4d\uff0c\u56e0\u4e3a\u5b83\u51b3\u5b9a\u4e86\u7ec4\u4ef6\u7684\u5c3a\u5bf8\u548c\u4f4d\u7f6e\u3002\\n\\n\u5176\u4ed6\u5c5e\u6027\u53ea\u662f\u5f71\u54cd\u7ec4\u4ef6\u7684 \u5185\u90e8 \u6216\u8005\u662f\u4e0d\u5f71\u54cd\u524d\u4e24\u7ec4\u5c5e\u6027\uff0c\u56e0\u6b64\u6392\u5728\u540e\u9762\u3002\\n\\n.mod-example {\\n  /* \u5b9a\u4f4d */\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  z-index: 100;\\n\\n  /* \u76d2\u6a21\u578b */\\n  display: block;\\n  float: right;\\n  width: 100px;\\n  height: 100px;\\n\\n  /* \u6392\u7248 */\\n  font: normal 13px \\"Helvetica Neue\\", sans-serif;\\n  line-height: 1.5;\\n  color: #333;\\n  text-align: center;\\n\\n  /* \u89c6\u89c9\u6548\u679c */\\n  background-color: #f5f5f5;\\n  border: 1px solid #e5e5e5;\\n  border-radius: 3px;\\n\\n  /* \u5176\u4ed6 */\\n  opacity: 1;\\n}\\n\\n\u907f\u514d\u4f7f\u7528 !important \uff0c\u80fd\u4e0d\u7528\u575a\u51b3\u4e0d\u7528\u3002\\n\\n\u7981\u6b62\u4f7f\u7528\u5c42\u7ea7\u8fc7\u6df1\u7684\u9009\u62e9\u5668\uff0c\u6700\u591a3 \uff5e 5\u7ea7\\n\\n```\\n\\n## \u8fd0\u7ef4\\n\\n```sh\\n\\nk3s \u5b89\u88c5kubernetes\\n\\nkuboard \u7ba1\u7406\u9762\u677f\\n\\n```\\n\\n## \u7814\u53d1\u6d41\u7a0b\\n\\n\u5e38\u89c4\u7814\u53d1\u6d41\u7a0b:\\n\\n<![](/img/dev-normal-process.png)>\\n\\n> \u7d27\u6025\u7814\u53d1\u6d41\u7a0b\u9002\u7528\u4e8e\u7d27\u6025\u9700\u6c42\u3001\u751f\u4ea7\u73af\u5883\u91cd\u5927\u6545\u969c\u6216\u8005\u5176\u4ed6\u7d27\u6025\u60c5\u51b5\uff0c\u8be5\u6d41\u7a0b\u4e3b\u8981\u662f\u4e3a\u4e86\u9488\u5bf9\u7d27\u6025\u60c5\u51b5\u505a\u51fa\u5feb\u901f\u53cd\u5e94\uff0c\u56e0\u51cf\u5c11\u4e86\u5ba1\u73af\u8282\uff0c\u540c\u65f6\u4e5f\u589e\u5927\u4e86\u9879\u76ee\u7684\u98ce\u9669\\n\\n### \u5173\u952e\u8282\u70b9\\n\\n```sh\\n\u9700\u6c42\u8bc4\u5ba1\uff1a\u7531\u4ea7\u54c1\u7ecf\u7406\u4e3b\u6301\uff0cUI\u8bbe\u8ba1\u3001\u7814\u53d1\u3001\u6d4b\u8bd5\u4ee5\u53ca\u5176\u4ed6\u76f8\u5173\u4eba\u5458\u53c2\u4e0e\uff0c\u91c7\u7528\u9010\u4e2a\u9700\u6c42\u4e32\u8bb2\u548c\u73b0\u573a\u7b54\u7591\u7684\u65b9\u5f0f\u8fdb\u884c\u3002\u8bc4\u5ba1\u901a\u8fc7\u540e\uff0c\u7531\u8bbe\u8ba1\u3001\u7814\u53d1\u3001\u6d4b\u8bd5\u8bc4\u4f30\u76f8\u5e94\u7684\u5de5\u65f6\uff0c\u5e76\u6839\u636e\u9700\u6c42\u4f18\u5148\u7ea7\u548c\u8fed\u4ee3\u603b\u5de5\u4f5c\u91cf\u51b3\u5b9a\u662f\u5426\u7eb3\u5165\u8fed\u4ee3\u5185\uff0c\u8bc4\u5ba1\u4e0d\u901a\u8fc7\uff0c\u5219\u7531\u4ea7\u54c1\u7ecf\u7406\u91cd\u65b0\u5bf9\u9700\u6c42\u8fdb\u884c\u5206\u6790\u3002\\n\\n\u4ee3\u7801\u8bc4\u5ba1\uff1a\u5f53\u7814\u53d1\u4eba\u5458\u5b8c\u6210\u76f8\u5e94\u529f\u80fd\u7684\u7f16\u7801\u5de5\u4f5c\u63d0\u4ea4\u5408\u5e76\u4ee3\u7801\u8bf7\u6c42\u4e4b\u540e\uff0c\u6280\u672f\u8d1f\u8d23\u4eba\u5bf9\u63a5\u63d0\u4ea4\u7684\u4ee3\u7801\u8fdb\u884c\u8bc4\u5ba1\uff0c\u8bc4\u5ba1\u4e0d\u901a\u8fc7\uff0c\u5219\u9000\u56de\u76f8\u5e94\u7684\u7814\u53d1\u4eba\u5458\u4fee\u6539\uff0c\u8bc4\u5ba1\u901a\u8fc7\uff0c\u5219\u5408\u5e76\u5230\u76f8\u5e94\u7684\u5206\u652f\u3002\\n\\n\u6d4b\u8bd5\u7528\u4f8b\u8bc4\u5ba1\uff1a\u9700\u6c42\u8bc4\u5ba1\u7ed3\u675f\u540e\uff0c\u5f85\u6d4b\u8bd5\u56e2\u961f\u5b8c\u6210\u8fed\u4ee3\u5185\u6240\u6709\u9700\u6c42\u7684\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\uff0c\u7531\u6d4b\u8bd5\u8d1f\u8d23\u4eba\u4e3b\u6301\uff0c\u76f8\u5e94\u6a21\u5757\u7684\u6d4b\u8bd5\u4eba\u5458\u4e3b\u8bb2\uff0c\u4ea7\u54c1\u7ecf\u7406\u548c\u9879\u76ee\u7ecf\u7406\u53c2\u4e0e\uff0c\u5bf9\u5176\u6d4b\u8bd5\u7528\u4f8b\u8fdb\u884c\u8bc4\u5ba1\uff0c\u8bc4\u5ba1\u4e0d\u901a\u8fc7\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5219\u7531\u76f8\u5e94\u6d4b\u8bd5\u4eba\u8fdb\u884c\u4fee\u6539\uff0c\u8bc4\u5ba1\u901a\u8fc7\uff0c\u5219\u5c06\u5176\u7eb3\u5165\u6d4b\u8bd5\u8ba1\u5212\u4e2d\u3002\\n\\n```\\n\\n### \u5173\u952e\u6587\u6863\\n\\n```sh\\n\\nPRD\u6587\u6863/\u539f\u578b\uff1a\u5c31\u662f\u5c06\u5929\u9a6c\u884c\u7a7a\u7684\u6982\u5ff5\u5177\u8c61\u5316\u4e3a\u5b9e\u9645\u7684\u4e1a\u52a1\u903b\u8f91\u3001UI\u9875\u9762\u3001\u83dc\u5355\u6309\u94ae\u3001\u5b57\u6bb5\u5b9a\u4e49\u3001\u6570\u636e\u7ed3\u679c\uff0c\u6700\u7ec8\u8f85\u5bfc\u5f00\u53d1\u4eba\u5458\u5c06\u7cfb\u7edf\u7814\u53d1\u51fa\u6765\u3002\u901a\u5e38\u5305\u542b\u4ea7\u54c1\u80cc\u666f\u53ca\u5b9a\u4f4d\u3001\u529f\u80fd\u9700\u6c42\u3001\u903b\u8f91\u67b6\u6784\u3001\u539f\u578b\u8bbe\u8ba1\u7b49\u4fe1\u606f\u3002PRD\u6587\u6863\u662f\u4ea7\u54c1\u9879\u76ee\u7531\u201c\u6982\u5ff5\u5316\u201d\u8fdb\u5165\u201c\u56fe\u7eb8\u5316\u201d\u7684\u6700\u4e3b\u8981\u7684\u6587\u6863\uff0c\u7f16\u5199\u4e3b\u8981\u6709\u51e0\u4e2a\u76ee\u7684\uff1a\\n\\n\u6982\u5ff5\u5177\u8c61\u5316\uff1a\u4ea7\u54c1\u4eba\u5458\u641c\u96c6\u4e86\u5404\u65b9\u7684\u9700\u6c42\u8fdb\u884c\u53bb\u4f2a\u5b58\u771f\u7684\u5904\u7406\u4e4b\u540e\uff0c\u9700\u8981\u5bf9\u5355\u4e2a\u7684\u9700\u6c42\u70b9\u6574\u5408 \u2013> \u62bd\u8c61 \u2013> \u5177\u8c61\uff0c\u8f93\u51fa\u4e3a\u9ed1\u5b57\u767d\u7eb8\u7684\u843d\u5730\u6587\u6863\uff1b\u5e76\u4e14\u7684\u6587\u6863\u7684\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4ece\u5168\u5c40\u7684\u89d2\u5ea6\u548c\u7ec6\u8282\u4e2d\u53bb\u9a8c\u8bc1\u903b\u8f91\u662f\u5426\u6b63\u786e\uff1b\\n\u534f\u52a9\u9879\u76ee\u5f00\u53d1\uff1a\u4ece\u9879\u76ee\u7acb\u9879\u5f00\u59cb\u3001\u5230\u9879\u76ee\u8bc4\u5ba1\u3001\u9879\u76ee\u5f00\u53d1\u3001\u9879\u76ee\u9a8c\u6536\uff0cPRD\u6587\u6863\u8d2f\u7a7f\u4e86\u6574\u4e2a\u4ea7\u54c1\u7684\u8bde\u751f\u8fc7\u7a0b\uff0c\u91cd\u8981\u6027\u53ef\u60f3\u800c\u77e5\uff1b\u4ea7\u54c1\u5b9a\u7248\u8bc1\u636e\uff1a\u4ea7\u54c1\u6587\u6863\u7f16\u5199\u5b8c\u6bd5\u4e4b\u540e\u5c31\u8981\u8fdb\u884c\u5c01\u7248\u5904\u7406\uff0c\u4e0d\u80fd\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u9891\u7e41\u53d8\u52a8\u9700\u6c42\uff0c\u5426\u5219\u4ea4\u4ed8\u4f1a\u65e0\u9650\u5ef6\u671f\uff1b\\n\u8bb0\u5f55\u4ea7\u54c1\u6f14\u8fdb\u84dd\u56fe\uff1a\u82e5\u7814\u53d1\u8fc7\u7a0b\u4e2d\u9700\u6c42\u6709\u53d8\u52a8\u4f1a\u9996\u5148\u6392\u67e5\u6587\u6863\u7684\u5b9a\u7248\u5185\u5bb9\uff0c\u5bf9\u53d8\u52a8\u9700\u6c42\u5355\u72ec\u8fdb\u884c\u5904\u7406\uff1b\u82e5\u4e3a\u7248\u672c\u8fed\u4ee3\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u4ee5\u524d\u7684\u7248\u672c\u8bb0\u5f55\u8fdb\u884c\u8ffd\u8e2a\u67e5\u6e90\uff1b\\n\u9884\u9632\u4eba\u5458\u53d8\u52a8\uff1a\u82e5\u516c\u53f8\u7684\u4eba\u5458\u6d41\u52a8\u6027\u6bd4\u8f83\u5f3a\uff0c\u6587\u6863\u4fdd\u5b58\u4e0d\u5f53\uff0c\u4f1a\u5bfc\u81f4\u4ea7\u54c1\u7684\u6301\u7eed\u6027\u7814\u53d1\u8fed\u4ee3\u53d8\u5f97\u5f02\u5e38\u56f0\u96be\u3002\\n\u4ea7\u54c1\u8ba1\u5212\uff1a\u6839\u636e\u9879\u76ee\u7684\u91cd\u8981\u4ea4\u4ed8\u8282\u70b9\u5c06\u6574\u4e2a\u4ea7\u54c1\u5468\u671f\u5212\u5206\u4e3a\u591a\u4e2a\u91cc\u7a0b\u7891\u8ba1\u5212\uff0c\u660e\u786e\u6bcf\u4e2a\u91cc\u7a0b\u7891\u8ba1\u5212\u4ea4\u4ed8\u7269\uff08\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e\u7cfb\u7edf\u3001\u6587\u6863\u7b49\u9879\u76ee\u76f8\u5173\u4e8b\u9879\uff09\u4ee5\u53ca\u4ea4\u4ed8\u65f6\u95f4\uff0c\u4ea7\u54c1\u7ecf\u7406\u6839\u636e\u6bcf\u4e2a\u91cc\u7a0b\u7891\u8ba1\u5212\u6309\u65f6\u8f93\u51faPRD\u6587\u6863/\u539f\u578b\uff0c\u5e76\u53ca\u65f6\u8ddf\u7814\u53d1\u3001\u6d4b\u8bd5\u3001\u8bbe\u8ba1\u7b49\u76f8\u5173\u56e2\u961f\u8bc4\u5ba1\u5e76\u7eb3\u5165\u76f8\u5e94\u7684\u8fed\u4ee3\u8ba1\u5212\u5185\u3002\\n\\n\u8fed\u4ee3\u8ba1\u5212\uff1a \u6839\u636e\u9879\u76ee\u7684\u5177\u4f53\u60c5\u51b5\u5c06\u6574\u4e2a\u5f00\u53d1\u8fc7\u7a0b\u5212\u5206\u4e3a\u591a\u4e2a\u8fed\u4ee3\u5468\u671f\uff0c\u6bcf\u4e2a\u8fed\u4ee3\u5468\u671f\u65f6\u95f4\u7684\u957f\u77ed\u53d6\u51b3\u4e8e\u5f53\u524d\u9879\u76ee\u7684\u8fdb\u5ea6\u548c\u5b9e\u9645\u6267\u884c\u60c5\u51b5\u3002\u800c\u8fed\u4ee3\u5f00\u53d1\u8ba1\u5212\u5219\u53d1\u751f\u5728\u6bcf\u4e00\u8fed\u4ee3\u4e4b\u524d\uff0c\u5728\u786e\u5b9a\u8fed\u4ee3\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u65f6\u95f4\u4e4b\u540e\uff0c\u6839\u636e\u9700\u6c42\u7684\u4f18\u5148\u7ea7\u3001\u5de5\u4f5c\u91cf\u4ee5\u53ca\u4eba\u529b\u8d44\u6e90\uff0c\u5c06\u5df2\u8bc4\u5ba1\u901a\u8fc7\u7684\u9700\u6c42\u7eb3\u5165\u76f8\u5e94\u7684\u8fed\u4ee3\u5185\uff0c\u9879\u76ee\u7ecf\u7406\uff08\u7814\u53d1\uff09\u5c06\u9700\u6c42\u62c6\u89e3\u6309\u529f\u80fd\u6a21\u5757\u62c6\u5206\u6210\u5177\u4f53\u7684\u5f00\u53d1\u4efb\u52a1\uff0c\u5e76\u5206\u914d\u5230\u6307\u5b9a\u7684\u7814\u53d1\u4eba\u5458\u3002\\n\\n\u6d4b\u8bd5\u8ba1\u5212\uff1a\u6839\u636e\u8fed\u4ee3\u5f00\u53d1\u8ba1\u5212\u3001\u6d4b\u8bd5\u4efb\u52a1\u7684\u5de5\u4f5c\u91cf\u4ee5\u53ca\u4eba\u529b\u8d44\u6e90\u60c5\u51b5\uff0c\u5c06\u5df2\u8bc4\u5ba1\u901a\u8fc7\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u7eb3\u5165\u5230\u8fed\u4ee3\u6d4b\u8bd5\u8ba1\u5212\u4e2d\uff0c\u5e76\u8bc4\u4f30\u6d4b\u5b9a\u8303\u56f4\u3001\u5de5\u65f6\u3001\u6d4b\u8bd5\u8d44\u6e90\u3001\u6d4b\u8bd5\u8fdb\u5c55\u548c\u98ce\u9669\u9884\u8b66\u3002\\n\\n\u6d4b\u8bd5\u62a5\u544a\uff1a\u6bcf\u4e2a\u8fed\u4ee3\u96c6\u6210\u6d4b\u8bd5\u901a\u8fc7\u540e\uff0c\u6839\u636e\u5b9e\u9645\u6d4b\u8bd5\u60c5\u51b5\u7f16\u5199\u6d4b\u8bd5\u62a5\u544a\uff0c\u5e76\u63cf\u8ff0\u8f6f\u4ef6\u7684\u6d4b\u8bd5\u8fc7\u7a0b\u3001 \u6d4b\u8bd5\u73af\u5883\u3001\u6d4b\u8bd5\u8303\u56f4\u3001\u6d4b\u8bd5\u7ed3\u679c\u7684\u6587\u6863\u4ee5\u53ca\u5206\u6790\u603b\u7ed3\u7cfb\u7edf\u5b58\u5728\u7684\u98ce\u9669\u4ee5\u53ca\u6d4b\u8bd5\u7ed3\u8bba\u3002\\n\\n```\\n\\n### \u89d2\u8272\u548c\u5206\u5de5\\n\\n```sh\\n\\n\\n\u4ea7\u54c1\u7ecf\u7406\uff1a\u5728\u9700\u6c42\u524d\u671f\u8d1f\u8d23\u9700\u6c42\u8c03\u7814\u3001\u6536\u96c6\u3001\u5206\u6790\u548c\u8bc4\u5ba1\u3001\u9700\u6c42\u8bf4\u660e\u6587\u6863\uff08RRD\uff09\u7684\u7f16\u5199\u548c\u4ea7\u54c1\u539f\u578b\u7684\u8bbe\u8ba1\u3002\u9700\u6c42\u8bc4\u5ba1\u901a\u8fc7\u540e\uff0c\u7f16\u5199\u9700\u6c42\u8bf4\u660e\u6587\u6863\uff08RRD\uff09\uff0c\u7136\u540e\u8ddf\u7814\u53d1\u3001\u6d4b\u8bd5\u7b49\u76f8\u5173\u4eba\u5458\u505a\u9700\u6c42\u6f84\u6e05\u3002\u5728\u9700\u6c42\u540e\u671f\u8d1f\u8d23\u4ea7\u54c1\u9700\u6c42\u7684\u8ddf\u8e2a\u3001\u9a8c\u6536\u548c\u5176\u4ed6\u76f8\u5173\u7684\u5de5\u4f5c\u3002\\n\\n\u9879\u76ee\u7ecf\u7406\uff08\u7814\u53d1\uff09\uff1a\u53c2\u4e0e\u9700\u6c42\u6f84\u6e05\u4ee5\u53ca\u8d1f\u8d23\u8fed\u4ee3\u5f00\u53d1\u8ba1\u5212\u7684\u5236\u5b9a\uff0c\u4ee5\u53ca\u9700\u6c42\u7684\u529f\u80fd\u6a21\u5757\u62c6\u5206\u548c\u5f00\u53d1\u4efb\u52a1\u7684\u62c6\u89e3\uff0c\u534f\u8c03\u4ea7\u54c1\u3001\u7814\u53d1\u548c\u6d4b\u8bd5\uff0c\u786e\u4fdd\u9879\u76ee\u7814\u53d1\u8fdb\u5ea6\u7684\u6b63\u5e38\u63a8\u8fdb\uff0c\u5e76\u8d1f\u8d23\u6d4b\u8bd5\u3001\u4eff\u771f\u548c\u6b63\u5f0f\u5404\u73af\u5883\u7684\u9879\u76ee\u4e0a\u7ebf\u5de5\u4f5c\u3002\\n\\n\u6280\u672f\u8d1f\u8d23\u4eba\uff1a\u8d1f\u8d23\u9879\u76ee\u524d\u7aef/\u540e\u7aef\u6846\u67b6\u7684\u9009\u578b\u548c\u642d\u5efa\u3001\u6280\u672f\u96be\u70b9\u7684\u653b\u5173\uff0c\u53c2\u4e0e\u9700\u6c42\u8bc4\u5ba1\u4ee5\u53ca\u8d1f\u8d23\u6838\u5fc3\u4e1a\u52a1\u529f\u80fd\u7684\u8bbe\u8ba1\uff0c\u8d1f\u8d23\u524d\u7aef/\u540e\u7aef\u4ee3\u7801\u7684\u8bc4\u5ba1\u5de5\u4f5c\u4ee5\u53ca\u786e\u4fdd\u4ea4\u4ed8\u9879\u76ee\u524d\u7aef/\u540e\u7aef\u7684\u4ee3\u7801\u8d28\u91cf\u3002\\n\\nUI\u8bbe\u8ba1\u5e08\uff1a\u8d1f\u8d23\u9879\u76ee\u6574\u4f53UE/UI/VI\u8bbe\u8ba1\u98ce\u683c\uff0c\u5e76\u6839\u636e\u5df2\u8bc4\u5ba1\u7684\u9700\u6c42\u5b8c\u6210\u76f8\u5e94\u7684UE/UI/VI\u8bbe\u8ba1\uff0c\u5e76\u5728\u7814\u53d1\u8fc7\u7a0b\u4e2d\u786e\u4fdd\u524d\u7aef\u5f00\u53d1\u7684\u754c\u9762\u662f\u4e25\u683c\u53c2\u7167\u8bbe\u8ba1\u6765\u5b9e\u73b0\u7684\u3002\\n\\n\u7814\u53d1\u5de5\u7a0b\u5e08\uff1a\u8d1f\u8d23\u524d\u540e\u7aef\u9700\u6c42\u7684\u7f16\u7801\u5de5\u4f5c\u4ee5\u53ca\u5bf9\u81ea\u5df1\u7f16\u7801\u7684\u90e8\u5206\u5b8c\u6210\u5355\u5143\u6d4b\u8bd5\uff0c\u5e76\u53ca\u65f6\u5b8c\u6210\u76f8\u5173bug\u4fee\u590d\u5de5\u4f5c\uff0c\u5bf9\u4e8e\u8bc4\u5ba1\u4e0d\u5408\u683c\u7684\u4ee3\u7801\u53ca\u65f6\u6309\u8981\u6c42\u4fee\u6539\u3002\\n\\n\u6d4b\u8bd5\u5de5\u7a0b\u5e08\uff1a\u8d1f\u8d23\u7cfb\u7edf\u7684\u6d4b\u8bd5\u7528\u4f8b\u7684\u7f16\u5199\uff0c\u4f9d\u636e\u7ecf\u8fc7\u8bc4\u5ba1\u901a\u8fc7\u540e\u7684\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u6210\u96c6\u6210\u6d4b\u8bd5\u3001\u56de\u5f52\u6d4b\u8bd5\u548c\u5192\u70df\u6d4b\u8bd5\u5404\u4e2a\u9636\u6bb5\u7684\u76f8\u5173\u5de5\u4f5c\uff0c\u5e76\u53ca\u65f6\u53cd\u9988\u7ed9\u76f8\u5e94\u7684\u7814\u53d1\u4eba\u5458\u548c\u5b9e\u65f6\u8ddf\u8e2abug\u7684\u4fee\u590d\u60c5\u51b5\uff0c\u5728\u96c6\u6210\u6d4b\u8bd5\u901a\u8fc7\u540e\uff0c\u63d0\u4f9b\u76f8\u5e94\u7684\u6d4b\u8bd5\u8d28\u91cf\u62a5\u544a\uff0c\u5728\u5192\u70df\u6d4b\u8bd5\u901a\u8fc7\u540e\u60f3\u76f8\u5173\u4eba\u5458\u540c\u6b65\u4e0a\u7ebf\u7ed3\u679c\u3002\\n\\n```\\n\\n### \u90e8\u95e8\u5206\u5de5\\n\\n```sh\\n\\n\u4ea7\u54c1\u90e8\uff1a\u8d1f\u8d23\u9700\u6c42\u8c03\u7814\u3001\u6536\u96c6\u3001\u5206\u6790\u548c\u786e\u8ba4\uff0c\u4ee5\u53ca\u9700\u6c42\u7684\u8fdb\u5ea6\u8ddf\u8e2a\u548c\u9a8c\u6536\u5de5\u4f5c\uff0c\u662f\u7814\u53d1\u9700\u6c42\u7684\u552f\u4e00\u8f93\u5165\u65b9\u3002\\n\\n\u7814\u53d1\u90e8\uff1a\u8d1f\u8d23\u4ea7\u54c1\u9700\u6c42\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5e76\u786e\u4fdd\u9879\u76ee\u7684\u9ad8\u8d28\u91cf\u9ad8\u6548\u7387\u9ad8\u6c34\u5e73\u4ea4\u4ed8\u3002\\n\\n\u6d4b\u8bd5\u90e8\uff1a\u8d1f\u8d23\u9879\u76ee\u4ea4\u4ed8\u7684\u8d28\u91cf\u4fdd\u8bc1\uff0c\u786e\u4fdd\u4ea4\u4ed8\u7269\u7684\u53ef\u7528\u6027\u548c\u53ef\u9760\u6027\uff0c\u662f\u7cfb\u7edf\u7f3a\u9677\u7684\u552f\u4e00\u8f93\u5165\u65b9\\n\\n```\\n\\n### \u57fa\u672c\u5de5\u4f5c\u51c6\u5219\\n\\n```sh\\n\\n1\u3001\u6bcf\u9879\u9700\u6c42\u548c\u4efb\u52a1\u90fd\u9700\u8981\u786e\u5b9a\u8d1f\u8d23\u4eba\u548c\u8bc4\u4f30\u5b8c\u6210\u6240\u9700\u7684\u5de5\u65f6\\n\\n2\u3001\u5173\u952e\u5de5\u4f5c\u5b8c\u6210\u4ee5\u540e\uff0c\u9700\u8981\u8fdb\u884c\u8bc4\u5ba1\uff0c\u4e14\u8bc4\u5ba1\u901a\u8fc7\u540e\u624d\u53ef\u4ee5\u8fdb\u884c\u4e0b\u4e00\u9879\u5de5\u4f5c\uff0c\u6bd4\u5982PRD\u6587\u6863\u548c\u539f\u578b\u9700\u8981\u9700\u6c42\u8bc4\u5ba1\u901a\u8fc7\u540e\u624d\u53ef\u4ee5\u8fdb\u5165\u8fed\u4ee3\u5f00\u53d1\uff0c\u63d0\u4ea4\u5408\u5e76\u7684\u4ee3\u7801\u5fc5\u987b\u4ee3\u7801\u8bc4\u5ba1\u901a\u8fc7\u540e\u624d\u53ef\u4ee5\u5408\u5e76\u5230\u5f00\u53d1\u5206\u652f\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5b8c\u6210\u8bc4\u5ba1\u540e\u624d\u5f00\u59cb\u6d4b\u8bd5\u8ba1\u5212\u7684\u7f16\u5199\u3002\\n\\n3\u3001\u4e0d\u80fd\u6309\u8ba1\u5212\u5b8c\u6210\u7684\u5de5\u4f5c\uff0c\u5728\u6bcf\u65e5\u4f8b\u4f1a\u4e2d\u9700\u53ca\u65f6\u6c9f\u901a\uff0c\u5e76\u7ed9\u51fa\u539f\u56e0\uff0c\u6709\u98ce\u9669\u53ca\u65f6\u66b4\u9732\u51fa\u6765\u3002\\n\\n4\u3001\u6240\u6709\u9700\u6c42\u4fee\u6539\u548c\u53d8\u66f4\u5fc5\u987b\u7ecf\u8fc7\u76f8\u5e94\u7684\u4ea7\u54c1\u7ecf\u7406\u548c\u9879\u76ee\u7ecf\u7406\u8bc4\u5ba1\u540e\u63d0\u4ea4\u7ed9\u7814\u53d1\uff0c\u6240\u6709\u7f3a\u9677\u6216\u8005bug\u5fc5\u987b\u7ecf\u8fc7\u6d4b\u8bd5\u4eba\u5458\u548c\u9879\u76ee\u7ecf\u7406\u786e\u8ba4\u540e\u63d0\u4ea4\u7ed9\u7814\u53d1\u3002\\n\\n5\u3001\u8fed\u4ee3\u7ed3\u675f\u4e4b\u524d\u5b8c\u6210\u4e0a\u7ebf\u5de5\u4f5c\uff0c\u5982\u679c\u56e0\u5176\u4ed6\u56e0\u7d20\u5bfc\u81f4\u4e0d\u80fd\u5728\u8fed\u4ee3\u7ed3\u675f\u524d\u5b8c\u6210\u4e0a\u7ebf\uff0c\u9700\u7ed9\u51fa\u60c5\u51b5\u8bf4\u660e\u3002\\n\\n```\\n\\n## \u7ba1\u7406\u89c4\u8303\\n\\n\\n## \u7ecf\u9a8c\u4e4b\u8c08\\n\\n\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790\uff0c\u4e0d\u770b\u516c\u53f8\u89c4\u6a21\u548c\u4e1a\u52a1\u6765\u5c31\u662f\u800d\u6d41\u6c13\u3002\\n\u9996\u5148\u8981\u770b\u516c\u53f8\u76ee\u7684\u662f\u4ec0\u4e48\uff1f\\n\\n\u81f3\u4e8e\u4f7f\u7528\u5206\u5e03\u5f0f\u4f53\u7cfb\uff0c\u4ee5 java \u4e3a\u4f8b\uff0c\u6211\u89c9\u5f97\u4e00\u822c\u516c\u53f8\u53ef\u4ee5\u8003\u8651\u4e0b\u9762\u7684\u6b65\u9aa4\uff1a\\n(1)\u6240\u6709\u670d\u52a1\u91c7\u7528\u7edf\u4e00\u7684\u6280\u672f\u4f53\u7cfb\uff0c\u63a8\u8350 Springboot\\n(2)\u642d\u5efa\u7edf\u4e00\u7684\u811a\u624b\u67b6\uff0c\u53ef\u4ee5\u53c2\u8003\u5f00\u6e90\u7684\u4e00\u4e9b\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\u5206\u5e03\u5f0f\u6846\u67b6\u9009\u578b(Dubbo\u3001SpringCloud)\uff0c\u5206\u5e03\u5f0f\u7f13\u5b58\u9009\u578b(Redis)\u3001\u65e5\u5fd7\u5904\u7406\u548c\u683c\u5f0f(\u91c7\u96c6\u5efa\u8bae ELK)\u3001\u6d88\u606f\u4e2d\u95f4\u4ef6\u9009\u578b(Kafak\u3001RokatMq)\u3001\u5206\u5e03\u5f0f\u5b9a\u65f6\u4efb\u52a1\u9009\u578b(ElasticJob)\u3001\u7edf\u4e00\u7684\u5de5\u5177\u7c7b\u5e93(cooms\u3001guvua\u3001fastjson \u7b49)\u3001Mybatis\u3001\u4ee3\u7801\u751f\u6210\u5668\u3001Mybatis-plus\u3001\u5206\u9875\u63d2\u4ef6\u3001\u7edf\u4e00\u5f02\u5e38\u5b9a\u4e49\u548c\u5904\u7406\u3001\u7edf\u4e00\u7684\u8bf7\u6c42\u62e6\u622a\u5668\u7b49\u3002\\n(3)\u7f16\u7801\u89c4\u8303\u5b9a\u4e49\uff0c\u53ef\u4ee5\u53c2\u8003\u963f\u91cc\u89c4\u8303\uff0c\u4f46\u8981\u8003\u8651\u5b9e\u7528\u6027\uff0c\u4e0d\u53ef\u80fd\u6bcf\u4e2a\u4eba\u90fd\u5f3a\u5236\u9075\u5b88\uff0c\u90a3\u4e9b\u662f\u91cd\u8981\u7684\uff0c\u5fc5\u987b\u9075\u5b88\uff0c\u90a3\u4e9b\u662f\u53ef\u4ee5\u9002\u5ea6\u653e\u5bbd\u7684\u3002Maven\u3001git \u547d\u540d\u3001\u6253\u5305\u3001\u53d1\u5e03\u89c4\u8303\u3002\\n(4)\u5efa\u7acb\u81ea\u52a8\u5316\u53d1\u5e03\u8fd0\u7ef4\u7684\u6846\u67b6\u6bd4\u5982 jenkins\u3001ELK\u3001\u9489\u9489\u90ae\u4ef6\u9884\u8b66\u3001\u7f51\u5173(zuul \u666e\u7f57\u7c73\u4fee\u65af)\u6d41\u91cf\u76d1\u63a7\u62a5\u8b66\uff0c\u4ee5\u53ca WIKI \u548c\u7c7b\u4f3c\u7985\u9053\u4e4b\u7c7b\u7684 BUG \u7ba1\u7406\u5e73\u53f0\\n(5)\u8fd9\u4e9b\u7b97\u662f\u901a\u7528\u7684\u5e95\u5b50\uff0c\u7136\u540e\u8981\u6839\u636e\u73b0\u6709\u7684\u4e1a\u52a1\u8fdb\u884c\u62c6\u5206\uff0c\u6bd4\u5982\u5fae\u670d\u52a1\u7684\u8bdd\u53ef\u4ee5\u5bf9\u4e1a\u52a1\u62c6\u5206\uff0c\u6bd4\u5982\u7528\u6237\u5e73\u53f0\u3001\u6743\u9650\u5e73\u53f0\u3001\u5546\u54c1\u5e73\u53f0\u3001\u4ea4\u6613\u5e73\u53f0\u3001\u98ce\u63a7\u5e73\u53f0\u7b49\u3002\u5fae\u670d\u52a1\u4e4b\u4e0a\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u4e1a\u52a1\u805a\u5408\u670d\u52a1\uff0c\u76f4\u63a5\u5bf9\u5e94\u90e8\u5206\u524d\u7aef\u3002\u6240\u6709\u5bf9\u5916\u670d\u52a1\u90fd\u5e94\u901a\u8fc7\u7f51\u5173\u7edf\u4e00\u5bf9\u5916\u66b4\u9732\uff0c\u5728\u7f51\u5173\u5c42\u9762\u8003\u8651\u7528\u666e\u7f57\u7c73\u4fee\u65af\u4e4b\u7c7b\u7684\u5bf9\u8c03\u7528\u505a\u76d1\u63a7\u3002\u5bf9\u4e8e\u7528\u6237\u5e73\u53f0\u9700\u8981\u8003\u8651\u7edf\u4e00\u7684\u767b\u5f55\u6ce8\u518c\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u7f51\u5173\u5c42\u589e\u52a0\u5bf9\u8c03\u7528\u7684\u7ba1\u7406\u3002\u4ea4\u6613\u5e73\u53f0\u53ef\u80fd\u8ddf\u98ce\u63a7\u76f8\u5173\uff0c\u901a\u8fc7\u65e5\u5fd7\u91c7\u96c6\u53d1\u5f80\u76f8\u5173\u7684\u5904\u7406\u7cfb\u7edf\u518d\u56de\u5199\u5230\u76f8\u5173\u8868\u4e2d\uff0c\u98ce\u63a7\u63d0\u4f9b\u76f8\u5173\u63a5\u53e3\u3002\u6bd4\u5982\u5546\u54c1\u53ef\u80fd\u9700\u8981\u68c0\u7d22\u7cfb\u7edf\uff0c\u90a3\u53ef\u4ee5\u8003\u8651\u5728\u57fa\u7840\u4e4b\u4e0a\u589e\u52a0 ElasticSearch \u5bf9\u5546\u54c1\u4fe1\u606f\u8fdb\u884c\u68c0\u7d22\u3002\u6bd4\u5982\u6d3b\u52a8\u5e73\u53f0\u53ef\u4ee5\u8003\u8651\u589e\u52a0\u89c4\u5219\u5f15\u64ce\uff0c\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u89c4\u5219\uff0c\u5c06\u89c4\u5219\u914d\u7f6e\u79fb\u4ea4\u7ed9\u8fd0\u8425\u4eba\u5458\uff0c\u51cf\u5c11\u91cd\u590d\u5f00\u53d1\u3002\u6839\u636e\u516c\u53f8\u4e1a\u52a1\u62c6\u5206\u6210\u4e0d\u540c\u7684\u5c0f\u5e73\u53f0\u548c\u4e1a\u52a1\uff0c\u518d\u6839\u636e\u5176\u7279\u70b9\u9009\u62e9\u6280\u672f\u3002\\n(6)\u539f\u5219\u4e0a\u6709\u5f00\u6e90\u7684\u7cfb\u7edf\uff0c\u5c31\u5b66\u4e60\u5e76\u4f7f\u7528\u5f00\u6e90\u4ea7\u54c1\uff0c\u8fd9\u6837\u51cf\u5c11\u5f00\u53d1\u65f6\u95f4\uff0c\u4f46\u968f\u7740\u4e1a\u52a1\u53d1\u5c55\u5f00\u6e90\u4ea7\u54c1\u4e0d\u80fd\u6ee1\u8db3\u65f6\uff0c\u53ef\u4ee5\u6839\u636e\u81ea\u8eab\u7279\u70b9\u5f00\u53d1\u81ea\u5df1\u7684\u4ea7\u54c1\uff0c\u6bd4\u5982\u4e1a\u754c\u7684\u5de5\u4f5c\u6d41\u53ef\u80fd\u4e0d\u80fd\u6ee1\u8db3\u516c\u53f8\u7684\u9700\u6c42\uff0c\u516c\u53f8\u53ef\u4ee5\u81ea\u5df1\u5f00\u53d1\u4e00\u5957\u57fa\u4e8e XX \u4e0a\u7684\u6539\u8fdb\u7248\u672c\u3002\u5c31\u7c7b\u4f3c\u4e0e Dubbo->Dubbox\uff0c\u751a\u81f3\u5f00\u6e90\u51fa\u6765\u56de\u9988\u793e\u533a\\n\\n\u6700\u540e\u6280\u672f\u53ea\u662f\u4e3a\u4e1a\u52a1\u670d\u52a1\u7684\uff0c\u4efb\u4f55\u516c\u53f8\u90fd\u662f\u4f9d\u9760\u4e1a\u52a1\u53d1\u5c55\u7684\uff0c\u8ffd\u6c42\u4f18\u79c0\u7684\u6280\u672f\u662f\u6b63\u786e\uff0c\u4f46\u8981\u4e00\u5b9a\u8981\u8003\u8651\u516c\u53f8\u81ea\u8eab\u7684\u60c5\u51b5\u548c\u5bfb\u627e\u5408\u9002\u7684\u65f6\u95f4>_<"},{"id":"/2022/05/04/mobile-technology","metadata":{"permalink":"/2022/05/04/mobile-technology","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-05-04-mobile-technology/index.md","source":"@site/blog/2022-05-04-mobile-technology/index.md","title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","description":"https://github.com/didi/DoraemonKit \u79fb\u52a8\u7aef app \u6d4b\u8bd5\u5de5\u5177\u5305","date":"2022-05-04T00:00:00.000Z","formattedDate":"2022\u5e745\u67084\u65e5","tags":[{"label":"mobile","permalink":"/tags/mobile"}],"readingTime":2.8433333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","tags":["mobile"],"authors":"me"},"prevItem":{"title":"How to establish the infrastructure from scratch in a startup","permalink":"/establish-infrastructure-from-scratch"},"nextItem":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","permalink":"/2021/09/20/face-recognition-detection-ocr"}},"content":"https://github.com/didi/DoraemonKit \u79fb\u52a8\u7aef app \u6d4b\u8bd5\u5de5\u5177\u5305\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u79fb\u52a8\u7aef\u9009\u578b\\n\\n## \u539f\u751f native\\n\\n\u5982android\u3001ios\u3001wp\\n\\n\u4f18\u70b9: \u4f53\u9a8c\u6700\u597d, \u529f\u80fd\u6700\u5f3a\\n\\n\u7f3a\u70b9:\\n\\n- \u5f00\u53d1\u6210\u672c\u9ad8, \u65e0\u6cd5\u8de8\u5e73\u53f0\\n\\n- \u4e0a\u7ebf\u65f6\u95f4\u4e0d\u7a33\u5b9a\uff0c\u9700\u8981\u5ba1\u6838\uff0c\u7279\u522b\u662f\u82f9\u679c\u5ba1\u6838\u673a\u5236\uff0c\u5ba1\u6838\u65f6\u95f4\u957f\u77ed\u4e0d\u4e00\uff0c\u5bf9\u5185\u5bb9\u8fd8\u6709\u63a7\u5236\\n\\n\\n## react native\\n\\n\u4f7f\u7528react-native\u53ef\u4ee5\u7ef4\u62a4\u591a\u79cd\u5e73\u53f0\uff08Web\uff0cAndroid\u548cIOS\uff09, \u539f\u7406\u662f\u5c06 js \u8f6c\u4e3a \u5e73\u53f0\u5bf9\u5e94\u7684\u7ec4\u4ef6\\n\\nreact-native\u7684\u4f18\u70b9\uff1a\u4e0d\u7528webview,\u6446\u8131\u4e86webview\u7684\u4ea4\u4e92\u548c\u6027\u80fd\u95ee\u9898\uff1b\u6709\u8f83\u5f3a\u7684\u6269\u5c55\u6027\uff0cjava\u7aef\u63d0\u4f9b\u4e86\u57fa\u7840\u63a7\u4ef6\uff0cjs\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u4f7f\u7528\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ec4\u5408\u63a7\u4ef6\uff1b\\n\\nreact-native\u7684\u7f3a\u70b9\uff1a\u7ec4\u4ef6\u4e0d\u5168\uff0c\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u4e5f\u4e0d\u5168\uff0c\u9047\u5230\u67d0\u4e9b\u7279\u6b8a\u529f\u80fd\uff0c\u9700\u8981\u82b1\u5927\u529b\u6c14\u5199\uff1b\u6027\u80fd\u65b9\u9762\u4e5f\u65e0\u6cd5\u5ab2\u7f8e\u539f\u751f\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u635f\u8017\uff0c\u7279\u522b\u662f\u4ea4\u6362\u5927\u6570\u636e\u65f6\uff1bIOS\u7248\u672c\u7565\u597d\uff0candroi\u53d1\u5c55\u8f83\u6162\uff1bios\u548candroid\u4ee3\u7801\u5e76\u975e\u901a\u7528\uff0c\u6709\u53ef\u80fd\u9700\u8981\u7ef4\u62a4\u4e24\u5957\u4ee3\u7801\u6216\u8005\u5728\u4ee3\u7801\u4e2d\u505a\u4e00\u4e9b\u5224\u65ad\uff1b\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u9700\u8981\u4f1a\u539f\u751f\u5f00\u53d1\uff0c\u4e0d\u7136\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u65e0\u6cd5\u7f16\u7801\uff1b\\n\\n\u76ee\u524d\u5f97\u5230\u7ecf\u9a8c\u662fIOS\u7248\u672c\u6bd4\u8f83\u7a33\u5b9a\uff0candroid\u7248\u672c\u8fd8\u4e0d\u592a\u6210\u719f\\n\\n## flutter\\n\\n\\n\u5f00\u53d1\u4e00\u5957\u4ee3\u7801\u540c\u65f6\u8fd0\u884c\u5728iOS\u548cAndroid\u5e73\u53f0, \u539f\u7406\u662f\u901a\u8fc7\u7ed8\u56fe\u5f15\u64ce\u76f4\u63a5\u5c06 dart \u7ed8\u5236\u4e3a\u56fe\u5f62, \u7701\u53bb\u4e86 rn \u7684\u8f6c\u6362\u6b65\u9aa4\\n\\n\u751f\u6001\u4e0d\u5b8c\u5584, \u9700\u8981\u81ea\u5df1\u9020\u8f6e\u5b50\\n\\nhttps://www.zhihu.com/question/359468918 \u4e3a\u4ec0\u4e48\u8981\u521b\u9020 dart \u4e0d\u76f4\u63a5\u7528 java?\\n\\n\\n## h5 hybird \u6df7\u5408\u5f00\u53d1\\n\\n\u5373\u6df7\u5408\u5f00\u53d1,\u7531Native\u901a\u8fc7JSBridge\u7b49\u65b9\u6cd5\u63d0\u4f9b\u7edf\u4e00\u7684API,\u7136\u540e\u7528Html5+JS\u6765\u5199\u5b9e\u9645\u7684\u903b\u8f91,\u8c03\u7528API\\n\\n\u6846\u67b6: Ionic\\n\\n\\n\u4f18\u70b9: \\n\\n- \u8c03\u8bd5\u9002\u914d\u7b80\u5355, \u76f4\u63a5\u5728\u7f51\u9875\u4e0a\u8c03\u8bd5\u548c\u4fee\u6539\uff0c\u51e0\u4e4e\u4e0d\u7528\u8003\u8651\u7528\u6237\u673a\u578b\u548c\u9002\u914d\u7684\u95ee\u9898\\n\\n- \u7248\u672c\u5347\u7ea7\u4f18\u52bf\uff0c\u7f51\u9875\u7684\u5347\u7ea7\u4e0e\u7528\u6237\u65e0\u5173\uff0c\u7528\u6237\u65e0\u9700\u4e0b\u8f7d\u66f4\u65b0\u5b89\u88c5, \u66f4\u65b0\u7248\u672c\u65e0\u9700\u5ba1\u6838\\n\\n- \u90e8\u5206\u6027\u80fd\u8981\u6c42\u7684\u9875\u9762\u53ef\u7528\u539f\u751f\u5b9e\u73b0\u8fd9\u5e94\u8be5\u662fHybrid\u6a21\u5f0f\u7684\u6700\u591a\u4e00\u4e2a\u597d\u5904\u4e86,\u56e0\u4e3a\u8fd9\u79cd\u6a21\u5f0f\u662f\u539f\u751f\u6df7\u5408web,\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5c06\u4ea4\u4e92\u5f3a,\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u9875\u9762\u7528\u539f\u751f\u5199,\u7136\u540e\u4e00\u4e9b\u5176\u5b83\u9875\u9762\u7528JS\u5199,\u5d4c\u5165webview\u4e2d,\u8fbe\u5230\u6700\u4f73\u4f53\u9a8c\\n\\n\u7f3a\u70b9: (\u4e3b\u8981\u662f\u6027\u80fd\u95ee\u9898)\\n\\n- H5\u52a0\u8f7d\u5927\u56fe\u7247\u7684\u65f6\u5019\u6027\u80fd\u4f1a\u4e0b\u964d\\n\\n- \u5927\u91cf\u7528\u6237\u8bbf\u95ee\u540c\u4e00\u4e2aH5\u5e94\u7528\u65f6\u6027\u80fd\u4f1a\u4e0b\u964d\\n\\n- \u4e0d\u9002\u7528\u4e8e\u4ea4\u4e92\u6027\u8f83\u5f3a\u7684app\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u5e94\u7528\u662f:\u4e00\u4e9b\u65b0\u95fb\u9605\u8bfb\u7c7b,\u4fe1\u606f\u5c55\u793a\u7c7b\u7684app;\u4f46\u662f\u4e0d\u9002\u7528\u4e8e\u4e00\u4e9b\u4ea4\u4e92\u8f83\u5f3a\u6216\u8005\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684app(\u6bd4\u5982\u52a8\u753b\u8f83\u591a\u5c31\u4e0d\u9002\u5408)\\n\\n## web app\\n\\n\u5373\u79fb\u52a8\u7aef\u7684\u7f51\u7ad9,\u5c06\u9875\u9762\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a,\u7136\u540e\u7528\u6237\u4f7f\u7528\u5404\u5927\u6d4f\u89c8\u5668\u8bbf\u95ee,\u4e0d\u662f\u72ec\u7acbAPP, \u6cdb\u6307 SPA(Single Page Application)\u6a21\u5f0f\u5f00\u53d1\u51fa\u7684\u7f51\u7ad9\\n\\npros (advantage/superiority):\\n\\n- \u5f00\u53d1\u6210\u672c\u4f4e,\u53ef\u4ee5\u8de8\u5e73\u53f0,\u8c03\u8bd5\u65b9\u4fbf\\n\\ncons (disadvantage/weakness):\\n\\n- \u6027\u80fd\u4f4e,\u7528\u6237\u4f53\u9a8c\u5dee, \u529f\u80fd\u53d7\u9650,\u5927\u91cf\u529f\u80fd\u65e0\u6cd5\u5b9e\u73b0\\n- \u4f9d\u8d56\u4e8e\u7f51\u7edc,\u9875\u9762\u8bbf\u95ee\u901f\u5ea6\u6162,\u8017\u8d39\u6d41\u91cf\\n- \u4e34\u65f6\u6027\u5165\u53e3,\u7528\u6237\u7559\u5b58\u7387\u4f4e\u8fd9\u65e2\u662f\u5b83\u7684\u4f18\u70b9,\u4e5f\u662f\u7f3a\u70b9,\u4f18\u70b9\u662f\u65e0\u9700\u5b89\u88c5,\u786e\u5b9a\u662f\u7528\u5b8c\u540e\u6709\u65f6\u5019\u5f88\u96be\u518d\u627e\u5230,\u6216\u8005\u8bf4\u5f88\u96be\u4e13\u95e8\u4e3a\u67d0\u4e2aweb app\u7559\u5b58\u4e00\u4e2a\u5165\u53e3\\n\\n## jetpack"},{"id":"/2021/09/20/face-recognition-detection-ocr","metadata":{"permalink":"/2021/09/20/face-recognition-detection-ocr","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2021-09-20-face-recognition-detection-ocr/index.md","source":"@site/blog/2021-09-20-face-recognition-detection-ocr/index.md","title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","description":"\u672c\u6587\u6536\u96c6\u4e86\u76ee\u524d\u4eba\u8138\u8bc6\u522b\u9886\u57df\u7684\u5f00\u6e90\u65b9\u6848, \u57fa\u4e8e\u8fd9\u4e9b\u5f00\u6e90\u65b9\u6848, \u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u7840 demo, \u4ee3\u7801\u5e93//github.com/xiaoyureed/facerecognizerest_api","date":"2021-09-20T00:00:00.000Z","formattedDate":"2021\u5e749\u670820\u65e5","tags":[{"label":"face recognition","permalink":"/tags/face-recognition"}],"readingTime":1.7933333333333332,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","tags":["face recognition"],"authors":["me"]},"prevItem":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","permalink":"/2022/05/04/mobile-technology"},"nextItem":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","permalink":"/2019/09/27/web-framework-design"}},"content":"\u672c\u6587\u6536\u96c6\u4e86\u76ee\u524d\u4eba\u8138\u8bc6\u522b\u9886\u57df\u7684\u5f00\u6e90\u65b9\u6848, \u57fa\u4e8e\u8fd9\u4e9b\u5f00\u6e90\u65b9\u6848, \u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u7840 demo, \u4ee3\u7801\u5e93: https://github.com/xiaoyureed/face_recognize_rest_api\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u4eba\u8138\u8bc6\u522b\\n\\n## \u6982\u5ff5\\n\\n\u6d41\u7a0b: face detection -> face alignment -> face verification -> face identification\\n\\n\\n- \u4eba\u8138\u68c0\u6d4b/\u8ddf\u8e2a /\u5b9a\u4f4d face detection\\n\\n  \u5728\u56fe\u50cf/\u89c6\u9891\u4e2d\u627e\u5230\u5404\u4e2a\u4eba\u8138\u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f, \u6846\u51fa\u6765\uff1b\u5bf9\u4e8e\u8ddf\u8e2a\u800c\u8a00\uff0c\u8fd8\u9700\u8981\u786e\u5b9a\u5e27\u95f4\u4e0d\u540c\u4eba\u8138\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\\n\\n  \u5728OpenCV\u4e2d\u6709\u76f4\u63a5\u80fd\u62ff\u51fa\u6765\u7528\u7684Harr\u5206\u7c7b\u5668\\n\\n- \u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d \\n\\n  \u786e\u5b9a\u8138\u90e8\u7279\u5f81\u70b9\uff08\u773c\u775b\u3001\u5634\u5df4\u4e2d\u5fc3\u70b9\u3001\u773c\u775b\u3001\u5634\u5df4\u8f6e\u5ed3\u7279\u5f81\u70b9\u3001\u5668\u5b98\u8f6e\u5ed3\u7279\u5f81\u70b9\u7b49\uff09\u7684\u4f4d\u7f6e\u3002\u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d\u7684\u57fa\u672c\u601d\u8def\uff0c\u4e3b\u8981\u662f\u5c06\u4eba\u8138\u5c40\u90e8\u5668\u5b98\u7684\u7eb9\u7406\u7279\u5f81\u548c\u5668\u5b98\u7279\u5f81\u70b9\u4e4b\u95f4\u7684\u4f4d\u7f6e\u7ea6\u675f\u8fdb\u884c\u7ed3\u5408\u6765\u8fdb\u884c\u5904\u7406\\n\\n- \u4eba\u8138\u6821\u51c6\uff08face alignment\uff09\\n\\n  \u68c0\u6d4b\u51fa\u4eba\u8138\u7279\u5f81\u70b9\u540e, \u8fdb\u884c\u59ff\u6001\u7684\u6821\u6b63\uff0c\u4f7f\u5176\u4eba\u8138\u5c3d\u53ef\u80fd\u7684\u201d\u6b63\u201d, \u53ef\u4ee5\u63d0\u9ad8\u4eba\u8138\u8bc6\u522b\u7684\u7cbe\u5ea6\\n\\n- \u4eba\u8138\u786e\u8ba4\uff08face verification\uff09\\n\\n  pair matching: \u6bd4\u5bf9\u8f93\u5165\u7684\u4eba\u8138\u548c \u5df2\u6709\u7684\u4eba\u8138\u662f\u5426\u5339\u914d\\n\\n- \u4eba\u8138\u9274\u522b\uff08face identification/recognition\uff09\\n\\n  \u5bf9\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u3001\u4eba\u8138\u6821\u6b63\u540e\u7684\u56fe\u50cf\uff08\u4eba\u8138\uff09\u8fdb\u884c\u5206\u7c7b(face grouping)\\n\\n\\n## \u6d3b\u4f53\u68c0\u6d4b\\n\\n\u4e00\u822c\u6709 \u7728\u773c\u68c0\u6d4b, \u5634\u5df4\u5f20/\u95ed\u68c0\u6d4b\\n\\n- \u7728\u773c\u68c0\u6d4b\u65b9\u6cd5\\n\\n  \u6293\u53d6\u6444\u50cf\u5934\u4f20\u6765\u7684\u8fde\u7eed\u5e27, \u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d,\u67d0\u4e2a\u65f6\u523b\u4e3a\u7741\u773c, \u4e0b\u4e00\u5e27\u4e3a\u95ed\u773c, \u63a5\u7740\u4e3a\u7741\u773c, \u89c6\u4e3a\u4e00\u6b21\u7728\u773c\\n\\n  \u6216\u8005\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u4e2a\u95ee\u9898\u5f53\u505a\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\uff0c\u7c7b\u522b\u4e3a\uff1a\u7741\u773c\u548c\u95ed\u773c\u3002\u5148\u901a\u8fc7\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\uff0c\u6bd4\u5982dlib\u3001face_recognition\uff0c\u4ece\u4eba\u8138\u7167\u7247\u4e2d\u88c1\u526a\u51fa\u773c\u90e8\u56fe\u7247\uff0c\u518d\u5bf9\u773c\u90e8\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\u3002\\n\\n\\n## \u5f00\u6e90\u65b9\u6848\\n\\n- https://github.com/ageitgey/face_recognition  \u57fa\u4e8e dlib\\n  - dlib,opencv (https://zhuanlan.zhihu.com/p/79784400) dlib 19.7.0 \u548cface_recognition 1.2.1 ; https://zhuanlan.zhihu.com/p/45827914\\n- https://github.com/deepinsight/insightface MXNet and PyTorch\\n- https://github.com/davidsandberg/facenet Tensorflow\\n- https://github.com/cmusatyalab/openface Torch\\n- https://github.com/justadudewhohacks js \u5e93\\n\\n## \u5982\u4f55\u5b58\u50a8\\n\\n\\nhttps://shentuzhigang.blog.csdn.net/article/details/103793031\\nhttps://blog.csdn.net/xia4215/article/details/113888148\\n\\n## ref\\n\\nhttps://www.cnblogs.com/GarfieldEr007/p/5372345.html\\nhttps://blog.csdn.net/u014696921/article/details/74779798\\nhttps://www.face-rec.org/general-info/\\nhttps://www.zhihu.com/question/64860792/answer/233782977\\n\\n\u57fa\u7840\u5e93\\nhttps://github.com/opencv/opencv\\nhttps://github.com/opencv/opencv_contrib\\nhttp://dlib.net/\\n\\n\\nhttps://ai.arcsoft.com.cn/course/index.html \u516c\u5f00\u8bfe\\n\\nhttps://github.com/ChanChiChoi/awesome-Face_Recognition#face-application \u8bba\u6587\u96c6\\n\\nhttps://github.com/weslynn/AlphaTree-graphic-deep-neural-network \u6750\u6599\\n\\nhttps://viusuangio.github.io/2018/10/08/face_datasets_table/ \u516c\u5f00\u6570\u636e\u96c6\\n\\n\\n## \u4ee3\u7801\u5b9e\u73b0\\n\\nhttps://blog.csdn.net/libo1004/article/details/110874855 base64 \u56fe\u7247 api\\n\\nhttps://blog.csdn.net/weixin_43796192/article/details/90111437 \u56fe\u7247\u4f20\u8f93 \u534f\u8bae\u9009\u62e9 \\nhttps://blog.csdn.net/ymaini/article/details/80645917\\nhttps://blog.csdn.net/sinat_29552923/article/details/70833455"},{"id":"/2019/09/27/web-framework-design","metadata":{"permalink":"/2019/09/27/web-framework-design","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2019-09-27-web-framework-design/index.md","source":"@site/blog/2019-09-27-web-framework-design/index.md","title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","description":"https://my.oschina.net/huangyong/blog/158380","date":"2019-09-27T00:00:00.000Z","formattedDate":"2019\u5e749\u670827\u65e5","tags":[{"label":"java","permalink":"/tags/java"},{"label":"web design","permalink":"/tags/web-design"}],"readingTime":1.0466666666666666,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","tags":["java","web design"],"authors":"me"},"prevItem":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","permalink":"/2021/09/20/face-recognition-detection-ocr"},"nextItem":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","permalink":"/2021/11/04/make-database-db"}},"content":"https://my.oschina.net/huangyong/blog/158380\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n- [Action](#action)\\n- [Action\u5206\u53d1\u673a\u5236](#action\u5206\u53d1\u673a\u5236)\\n- [entity\u5b9e\u4f53](#entity\u5b9e\u4f53)\\n- [\u6280\u672f\u9009\u578b](#\u6280\u672f\u9009\u578b)\\n- [Java\u70ed\u63d2\u62d4](#java\u70ed\u63d2\u62d4)\\n\\n\\n\\n# Action\\n\\n\u7c7b\u6bd4 controller\\n\\n# Action\u5206\u53d1\u673a\u5236\\n\\n\u4f9d\u9760\u552f\u4e00\u7684 Servlet : DispatcherServlet\\n\\n1. \u4ece ServletRequest \u4e2d\u5f97\u5230 request url, \u904d\u5386\u8def\u7531\u5e93\u627e\u5230\u5bf9\u5e94\u7684 Action (\u5305\u62ec Action \u7c7b\u4e0e Action \u65b9\u6cd5)\\n\\n1. \u89e3\u6790 url \u4e2d\u7684\u5360\u4f4d\u7b26, \u5f97\u5230 Action \u65b9\u6cd5\u53c2\u6570\\n\\n1. \u53cd\u5c04\u521b\u5efa Action, \u6267\u884c\u5bf9\u5e94\u65b9\u6cd5, \u5f97\u5230\u8fd4\u56de\u503c (\u8fdb\u4e00\u6b65\u8f6c\u4e3a json/xml, \u6839\u636e\u6ce8\u89e3\u5224\u65ad)\\n\\n# entity\u5b9e\u4f53\\n\\n- \u5b9a\u4e49\u4e00\u4e2a\u9876\u7ea7 Bean \u7c7b \u5b9e\u73b0 \u5e8f\u5217\u5316\u63a5\u53e3, \u63d0\u4f9b hashcode, equals, tostring, toJson, toXml \u65b9\u6cd5, \u4f7f\u7528\u4e86 Apache Commons \u7684  lang \u5305\u6765\u5b9e\u73b0; (\u65e0\u8bba\u662f\u5426 entity \u7c7b, \u90fd\u53ef\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u590d\u7528); \\n\\n- \u6267\u884c SQL \u8bed\u53e5\uff0c\u5c06 ResultSet \u6620\u5c04\u4e3a Map(\u5c24\u5176\u662f\u6267\u884c\u591a\u8868\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u67e5\u8be2\u51fa\u6765\u7684\u5217\u6765\u81ea\u4e8e\u4e0d\u540c\u7684\u8868\uff0c\u800c\u4e14\u6570\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u5199\u4e00\u4e2a Entity \u53bb\u6620\u5c04\u4e86\uff0c\u76f4\u63a5\u62ff\u5230\u4e00\u4e2a Map\uff0c\u6700\u540e\u5c06\u5176\u8f6c\u4e3a JSON \u7ed9\u524d\u7aef)\\n\\n# \u6280\u672f\u9009\u578b\\n\\nJUint\uff1a\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u3002\\nApache Commons\uff1a\u7528\u4e8e\u63d0\u4f9b\u6700\u57fa\u7840\u7684\u652f\u6301\uff0c\u4f8b\u5982\uff1aLang\u3001Collections\u3001BeanUtils\u3001DBCP\u3001DbUtils \u7b49\u3002\\nLog4J\uff1a\u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u3002\\nJackson\uff1a\u7528\u4e8e\u5904\u7406 JSON \u6570\u636e\u3002\\nCGLib\uff1a\u7528\u4e8e\u52a8\u6001\u4ee3\u7406\u3002\\n\\n# Java\u70ed\u63d2\u62d4\\n\\nTODO"},{"id":"/2021/11/04/make-database-db","metadata":{"permalink":"/2021/11/04/make-database-db","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2021-11-04-make-database-db/index.md","source":"@site/blog/2021-11-04-make-database-db/index.md","title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","description":"https://www.bilibili.com/video/BV1ct411k7jn?p=3","date":"2019-04-06T00:00:00.000Z","formattedDate":"2019\u5e744\u67086\u65e5","tags":[{"label":"database","permalink":"/tags/database"}],"readingTime":0.13666666666666666,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","date":"2019-04-06T00:00:00.000Z","tags":["database"],"toc_min_heading_level":2,"toc_max_heading_level":5},"prevItem":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","permalink":"/2019/09/27/web-framework-design"},"nextItem":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","permalink":"/2018/05/25/redis-login-limitation"}},"content":"https://www.bilibili.com/video/BV1ct411k7jn?p=3\\nhttps://github.com/aosabook/500lines/tree/master/data-store\\n\\nhttps://www.bilibili.com/video/BV17a411C7Kv/?spm_id_from=333.788.recommend_more_video.0 \u5206\u5e03\u5f0f\u6570\u636e\u5e93\\n\\nhttps://www.bilibili.com/video/BV1Zv411G7ty/?spm_id_from=333.788.recommend_more_video.3\u539f\u7406\\n\\nhttps://www.bilibili.com/video/BV1ct411k7jn?p=3\\n\\nhttps://www.bilibili.com/video/BV1aZ4y1w7Uz#reply4366921730\\n\\nhttps://www.bilibili.com/video/BV16N411X7y8/?spm_id_from=333.788.recommend_more_video.2\\n\\nhttps://www.bilibili.com/video/BV1jS4y1N7QU/?spm_id_from=333.788\\n\\nhttps://zhuanlan.zhihu.com/p/351897096\\nwww.zhihu.com/question/35382593/answer/102269843\\nwww.zhihu.com/question/30803867/answer/1987624954\\nwww.zhihu.com/question/26802517/answer/1234617717\\nhttps://zhuanlan.zhihu.com/p/43411082\\nhttps://www.zhihu.com/question/27677011/answer/240670571\\nhttps://www.zhihu.com/question/36571460/answer/68880015\\nhttps://www.zhihu.com/question/35382593/answer/102269843\\nhttps://zhuanlan.zhihu.com/p/29401694\\n\\nhttps://cstack.github.io/db_tutorial/ \u6559\u7a0b (https://github.com/cstack/db_tutorial)\\n\u300a\u6570\u636e\u5bc6\u96c6\u578b\u5e94\u7528\u7cfb\u7edf\u8bbe\u8ba1\u300b"},{"id":"/2018/05/25/redis-login-limitation","metadata":{"permalink":"/2018/05/25/redis-login-limitation","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2018-05-25-redis-login-limitation/index.md","source":"@site/blog/2018-05-25-redis-login-limitation/index.md","title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","description":"\u6bd4\u5982\u5e0c\u671b\u8fbe\u5230\u7684\u8981\u6c42\u662f\u8fd9\u6837: \u5728 1min \u5185\u767b\u9646\u5f02\u5e38\u6b21\u6570\u8fbe\u52305\u6b21, \u9501\u5b9a\u8be5\u7528\u6237 1h","date":"2018-05-25T00:00:00.000Z","formattedDate":"2018\u5e745\u670825\u65e5","tags":[{"label":"redis","permalink":"/tags/redis"}],"readingTime":2.42,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","tags":["redis"],"authors":["me"]},"prevItem":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","permalink":"/2021/11/04/make-database-db"},"nextItem":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","permalink":"/2017/02/01/create-my-own-ioc"}},"content":"\u6bd4\u5982\u5e0c\u671b\u8fbe\u5230\u7684\u8981\u6c42\u662f\u8fd9\u6837: \u5728 1min \u5185\u767b\u9646\u5f02\u5e38\u6b21\u6570\u8fbe\u52305\u6b21, \u9501\u5b9a\u8be5\u7528\u6237 1h\\n\\n\u90a3\u4e48\u767b\u9646\u8bf7\u6c42\u7684\u53c2\u6570\u4e2d, \u4f1a\u6709\u4e00\u4e2a\u53c2\u6570\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a user, \u6bd4\u5982 \u90ae\u7bb1/\u624b\u673a\u53f7/userName\\n\\n\u7528\u8fd9\u4e2a\u53c2\u6570\u4f5c\u4e3akey\u5b58\u5165redis, \u5bf9\u5e94\u7684value\u4e3a\u767b\u9646\u9519\u8bef\u7684\u6b21\u6570, string \u7c7b\u578b, \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a 1min. \u5f53\u83b7\u53d6\u5230\u7684 value == \\"4\\" , \u8bf4\u660e\u5f53\u524d\u8bf7\u6c42\u4e3a\u7b2c 5 \u6b21\u767b\u9646\u5f02\u5e38, \u9501\u5b9a.\\n\\n\u6240\u8c13\u7684\u9501\u5b9a, \u5c31\u662f\u5c06\u5bf9\u5e94\u7684value\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u6807\u8bc6\u7b26, \u6bd4\u5982\\"lock\\", \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a 1h\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u6838\u5fc3\u4ee3\u7801\\n\\n\u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3, \u7528\u6765\u6807\u8bc6\u9700\u8981\u767b\u9646\u6b21\u6570\u6821\u9a8c\u7684\u65b9\u6cd5\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.anno;\\n\\nimport java.lang.annotation.*;\\n\\n@Documented\\n@Target({ElementType.METHOD})\\n@Retention(RetentionPolicy.RUNTIME)\\npublic @interface RedisLimit {\\n    /**\\n     * \u6807\u8bc6\u53c2\u6570\u540d, \u5fc5\u987b\u662f\u8bf7\u6c42\u53c2\u6570\u4e2d\u7684\u4e00\u4e2a\\n     */\\n    String identifier();\\n\\n    /**\\n     * \u5728\u591a\u957f\u65f6\u95f4\u5185\u76d1\u63a7, \u5982\u5e0c\u671b\u5728 60s \u5185\u5c1d\u8bd5\\n     * \u6b21\u6570\u9650\u5236\u4e3a5\u6b21, \u90a3\u4e48 watch=60; unit: s\\n     */\\n    long watch();\\n\\n    /**\\n     * \u9501\u5b9a\u65f6\u957f, unit: s\\n     */\\n    long lock();\\n\\n    /**\\n     * \u9519\u8bef\u7684\u5c1d\u8bd5\u6b21\u6570\\n     */\\n    int times();\\n}\\n\\n```\\n\\n\u7f16\u5199\u5207\u9762, \u5728\u76ee\u6807\u65b9\u6cd5\u524d\u540e\u8fdb\u884c\u6821\u9a8c, \u5904\u7406...\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.aop;\\n\\n@Component\\n@Aspect\\n// Ensure that current advice is outer compared with ControllerAOP\\n// so we can handling login limitation Exception in this aop advice.\\n//@Order(9)\\n@Slf4j\\npublic class RedisLimitAOP {\\n\\n    @Autowired\\n    private StringRedisTemplate stringRedisTemplate;\\n\\n    @Around(\\"@annotation(io.github.xiaoyureed.redispractice.anno.RedisLimit)\\")\\n    public Object handleLimit(ProceedingJoinPoint joinPoint) {\\n        MethodSignature  methodSignature = (MethodSignature) joinPoint.getSignature();\\n        final Method     method          = methodSignature.getMethod();\\n        final RedisLimit redisLimitAnno  = method.getAnnotation(RedisLimit.class);// \u8c8c\u4f3c\u53ef\u4ee5\u76f4\u63a5\u5728\u65b9\u6cd5\u53c2\u6570\u4e2d\u6ce8\u5165 todo\\n\\n        final String identifier = redisLimitAnno.identifier();\\n        final long   watch      = redisLimitAnno.watch();\\n        final int    times      = redisLimitAnno.times();\\n        final long   lock       = redisLimitAnno.lock();\\n        // final ServletRequestAttributes att             = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();\\n        // final HttpServletRequest       request         = att.getRequest();\\n        // final String                   identifierValue = request.getParameter(identifier);\\n\\n        String identifierValue = null;\\n        try {\\n            final Object arg           = joinPoint.getArgs()[0];\\n            final Field  declaredField = arg.getClass().getDeclaredField(identifier);\\n            declaredField.setAccessible(true);\\n            identifierValue = (String) declaredField.get(arg);\\n        } catch (NoSuchFieldException e) {\\n            log.error(\\">>> invalid identifier [{}], cannot find this field in request params\\", identifier);\\n        } catch (IllegalAccessException e) {\\n            e.printStackTrace();\\n        }\\n        if (StringUtils.isBlank(identifierValue)) {\\n            log.error(\\">>> the value of RedisLimit.identifier cannot be blank, invalid identifier: {}\\", identifier);\\n        }\\n\\n        // check User locked\\n        final ValueOperations<String, String> ssOps = stringRedisTemplate.opsForValue();\\n        final String                          flag  = ssOps.get(identifierValue);\\n        if (flag != null && \\"lock\\".contentEquals(flag)) {\\n            final BaseResp result = new BaseResp();\\n            result.setErrMsg(\\"user locked\\");\\n            result.setCode(\\"1\\");\\n            return new ResponseEntity<>(result, HttpStatus.OK);\\n        }\\n\\n        ResponseEntity result;\\n        try {\\n            result = (ResponseEntity) joinPoint.proceed();\\n        } catch (Throwable e) {\\n            result = handleLoginException(e, identifierValue, watch, times, lock);\\n        }\\n        return result;\\n    }\\n\\n    private ResponseEntity handleLoginException(Throwable e, String identifierValue, long watch, int times, long lock) {\\n        final BaseResp result = new BaseResp();\\n        result.setCode(\\"1\\");\\n        if (e instanceof LoginException) {\\n            log.info(\\">>> handle login exception...\\");\\n            final ValueOperations<String, String> ssOps = stringRedisTemplate.opsForValue();\\n            Boolean                               exist = stringRedisTemplate.hasKey(identifierValue);\\n            // key doesn\'t exist, so it is the first login failure\\n            if (exist == null || !exist) {\\n                ssOps.set(identifierValue, \\"1\\", watch, TimeUnit.SECONDS);\\n                result.setErrMsg(e.getMessage());\\n                return new ResponseEntity<>(result, HttpStatus.OK);\\n            }\\n\\n            String count = ssOps.get(identifierValue);\\n            // has been reached the limitation\\n            if (Integer.parseInt(count) + 1 == times) {\\n                log.info(\\">>> [{}] has been reached the limitation and will be locked for {}s\\", identifierValue, lock);\\n                ssOps.set(identifierValue, \\"lock\\", lock, TimeUnit.SECONDS);\\n                result.setErrMsg(\\"user locked\\");\\n                return new ResponseEntity<>(result, HttpStatus.OK);\\n            }\\n            ssOps.increment(identifierValue);\\n            result.setErrMsg(e.getMessage() + \\"; you have try \\" + ssOps.get(identifierValue) + \\"times.\\");\\n        }\\n        log.error(\\">>> RedisLimitAOP cannot handle {}\\", e.getClass().getName());\\n        return new ResponseEntity<>(result, HttpStatus.OK);\\n    }\\n}\\n\\n```\\n\\n\u8fd9\u6837\u4f7f\u7528:\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.web;\\n\\n@RestController\\npublic class SessionResources {\\n\\n    @Autowired\\n    private SessionService sessionService;\\n\\n    /**\\n     * 1 min \u4e4b\u5185\u5c1d\u8bd5\u8d85\u8fc75\u6b21, \u9501\u5b9a user 1h\\n     */\\n    @RedisLimit(identifier = \\"name\\", watch = 30, times = 5, lock = 10)\\n    @RequestMapping(value = \\"/session\\", method = RequestMethod.POST)\\n    public ResponseEntity<LoginResp> login(@Validated @RequestBody LoginReq req) {\\n        return new ResponseEntity<>(sessionService.login(req), HttpStatus.OK);\\n    }\\n}\\n\\n```\\n\\n# references\\n\\nhttps://github.com/xiaoyureed/redis-login-limitation"},{"id":"/2017/02/01/create-my-own-ioc","metadata":{"permalink":"/2017/02/01/create-my-own-ioc","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2017-02-01-create-my-own-ioc/index.md","source":"@site/blog/2017-02-01-create-my-own-ioc/index.md","title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","description":"\u5b9a\u4e49\u5bb9\u5668\u63a5\u53e3\u89c4\u8303, \u6709\u6ce8\u518c, \u83b7\u53d6\u7b49\u51e0\u4e2a\u65b9\u6cd5","date":"2017-02-01T00:00:00.000Z","formattedDate":"2017\u5e742\u67081\u65e5","tags":[{"label":"ioc","permalink":"/tags/ioc"}],"readingTime":3.29,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","tags":["ioc"],"authors":["me"]},"prevItem":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","permalink":"/2018/05/25/redis-login-limitation"},"nextItem":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","permalink":"/2016/04/09/toss-about-raspberrypi"}},"content":"\u5b9a\u4e49\u5bb9\u5668\u63a5\u53e3\u89c4\u8303, \u6709\u6ce8\u518c, \u83b7\u53d6\u7b49\u51e0\u4e2a\u65b9\u6cd5\\n\\n```java\\n/**\\n * container \u63a5\u53e3(\u6dfb\u52a0/\u79fb\u9664/\u83b7\u53d6)\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53485:00:34\\n */\\npublic interface Container {\\n\\n    /**\\n     * \u521d\u59cb\u5316\\n     * @param clazzSet \\n     */\\n    void register(String packageName);\\n    \\n    /**\\n     * \u8c8c\u4f3c\u6682\u65f6\u7528\u4e0d\u5230\\n     */\\n//    void remove();\\n    \\n    /**\\n     * \u6839\u636e class \u83b7\u53d6 bean\\n     * @param clazz\\n     * @return\\n     */\\n    <T> T getByType(Class<T> clazz);\\n    \\n    /**\\n     * \\n     * @param name\\n     * @return\\n     */\\n    <T> T getByName(String name);\\n}\\n\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\\n\\n```java\\n/**\\n * default container\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u534811:20:02\\n */\\npublic class DefaultContainer implements Container {\\n    \\n    private static final Logger log = LoggerFactory.getLogger(DefaultContainer.class);\\n    \\n    /**\\n     * store beans\\n     * \\n     * key -- value\\n     * beanSimpleName -- bean\\n     */\\n    Map<String, Object> beanMap = new ConcurrentHashMap<String, Object>();\\n    \\n    /**\\n     * store dependencies, key: \u6ce8\u5165\u5173\u7cfb, value: bean\'s name(beansMap\u7684key)\\n     * \\n     * key--value\\n     * beanSimpleName.fieldName--beanSimpleName\\n     */\\n    Map<String, String> relationMap = new ConcurrentHashMap<String, String>();\\n    \\n    /////////////// \u5355\u4f8b start //////////////////////////\\n        \\n    private DefaultContainer() {\\n    }\\n    private static class DefaultContainerHolder {\\n    private static final DefaultContainer instance = new DefaultContainer();\\n    }\\n    public static DefaultContainer me() {\\n    return DefaultContainer.DefaultContainerHolder.instance;\\n    }\\n    //////////////////end//////////////////////\\n    \\n\\n    @SuppressWarnings(\\"unchecked\\")\\n    public <T> T getByType(Class<T> clazz) {\\n        Bean beanAnno = clazz.getAnnotation(Bean.class);\\n        if (beanAnno != null\\n                && StringUtil.isValid(beanAnno.value())) {// use specified beanName\\n            String specifiedName = beanAnno.value();\\n            log.debug(\\"class [{}]\u6307\u5b9a\u4e86\u6709\u6548beanName[{}]\\", clazz.getName(), specifiedName);\\n            return (T) this.beanMap.get(specifiedName);\\n        }\\n        else {// use beanSimpleName\\n            String simpleName = clazz.getSimpleName();\\n            log.debug(\\"class [{}]\u6ca1\u6307\u5b9a\u6709\u6548\u7684beanName, \u4f7f\u7528\u9ed8\u8ba4\u503c(simple bean name)\\", clazz.getName());\\n            return (T) this.beanMap.get(simpleName);\\n        }\\n    }\\n    \\n    @SuppressWarnings(\\"unchecked\\")\\n    public <T> T getByName(String name) {\\n        return (T) this.beanMap.get(name);\\n    }\\n\\n    public void register(String packageName) {\\n        \\n        Set<Class<?>> clazzSet = scanPackage(packageName);  \\n        \\n        init(clazzSet);\\n        \\n        inject();\\n    }\\n\\n    /**\\n     * \u6ce8\u5165\\n     */\\n    private void inject() {\\n        Iterator<Entry<String, String>> ite = relationMap.entrySet().iterator();\\n        while(ite.hasNext()) {\\n            Entry<String, String> next = ite.next();\\n            String value = next.getValue();\\n            String key = next.getKey();\\n            String[] split = key.split(\\"\\\\\\\\.\\");\\n            try {\\n                PropertyUtils.setProperty(this.beanMap.get(split[0]), split[1], this.beanMap.get(value));\\n            } catch (IllegalAccessException e) {\\n                e.printStackTrace();\\n            } catch (InvocationTargetException e) {\\n                e.printStackTrace();\\n            } catch (NoSuchMethodException e) {\\n                e.printStackTrace();\\n            }\\n        }\\n    }\\n\\n\\n    /**\\n     * \u521b\u5efabean\u5b9e\u4f8b, \u521b\u5efa\u6ce8\u5165\u5173\u7cfb\\n     * (\u4e5f\u5c31\u662f\u586b\u5145\u4e24\u4e2amap)\\n     * @param clazzSet\\n     */\\n    private void init(Set<Class<?>> clazzSet) {\\n        \\n        Iterator<Class<?>> ite = clazzSet.iterator();\\n        while(ite.hasNext()) {\\n            Class<?> clazz = ite.next();\\n            Object bean = null;\\n            try {\\n                bean = ReflectUtil.createInstance(clazz);\\n            } catch (Exception e) {\\n                log.error(\\"\u521b\u5efabean[{}]\u51fa\u73b0\u95ee\u9898\\", clazz.getName(), e);\\n            }\\n            \\n            String specName = clazz.getAnnotation(Bean.class).value();\\n            if (StringUtil.isValid(specName)) {\\n                this.beanMap.put(specName, bean);\\n            }\\n            // \u6ca1\u6709\u6307\u5b9abeanname, \u4f7f\u7528bean \u7684 qualifiedName \u6ce8\u518c\\n            else {\\n                this.beanMap.put(clazz.getName(), bean);\\n            }\\n            \\n            // \u521d\u59cb\u5316 relationMap\\n            Field[] fields = clazz.getDeclaredFields();\\n            for (Field f: fields) {\\n                Inject injectAnno = f.getAnnotation(Inject.class);\\n                if (injectAnno != null) {\\n                    // \u6307\u5b9a\u4e86\u6ce8\u5165\u7684name\\n                    if (StringUtil.isValid(injectAnno.value())) {\\n//                        this.relationMap.put(clazz.getName().concat(\\".\\").concat(f.getName()), injectAnno.value());\\n                        this.relationMap.put(specName.concat(\\".\\").concat(f.getName()), injectAnno.value());\\n                    }\\n                    // \u6ca1\u6709\u6307\u5b9ainjection name\\n                    else {\\n                        \\n//                        this.relationMap.put(clazz.getName() + \\".\\" + f.getName(), f.getName());\\n                        this.relationMap.put(specName + \\".\\" + f.getName(), f.getName());\\n                    }\\n                }\\n            }\\n            \\n        }\\n        \\n        \\n    }\\n    /**\\n     * \u626b\u63cf\u6240\u6709class\\n     * @param packageName\\n     * @return\\n     */\\n    private Set<Class<?>> scanPackage(String packageName) {\\n        Set<Class<?>> result = new LinkedHashSet<Class<?>>();\\n        \\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\\n        // classpath \u4e0b\u6240\u6709\u7684\u8d44\u6e90\u6587\u4ef6\\n        Enumeration<URL> urls = null;\\n        try {\\n            urls = classLoader.getResources(packageName.replace(\\".\\", \\"/\\"));\\n        } catch (IOException e) {\\n            e.printStackTrace();\\n        }\\n        \\n        while (urls.hasMoreElements()) {\\n            URL url = urls.nextElement();\\n            String protocol = url.getProtocol();\\n            \\n            // \u6587\u672c\u4e2d\u7684 class\\n            if (\\"file\\".equals(protocol)) {\\n                try {\\n                    File packageFile = new File(URLDecoder.decode(url.getFile(), \\"UTF-8\\"));\\n                    \\n                    if (!packageFile.exists()\\n                            || !packageFile.isDirectory()) {\\n                        log.error(\\"package: [{}]\u65e0\u6548\\", url.getFile());\\n                    }\\n                    \\n                    File[] files = packageFile.listFiles();\\n                    \\n                    handleFiles(files, result, classLoader, packageName);\\n                    \\n                } catch (UnsupportedEncodingException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            // jar \u4e2d\u7684 class\\n            else if (\\"jar\\".equals(protocol)) {\\n                JarURLConnection jarConn;\\n                try {\\n                    jarConn = (JarURLConnection) url.openConnection();\\n                    JarFile jarFile = jarConn.getJarFile();\\n                    Enumeration<JarEntry> jarEntry = jarFile.entries();\\n                    // TODO\\n//                    handleJarFile();\\n                } catch (IOException e) {\\n                    // TODO Auto-generated catch block\\n                    e.printStackTrace();\\n                }\\n                \\n            }\\n            else {\\n                log.error(\\"\u83b7\u53d6package\u4e0b\u8d44\u6e90\u7684protocal\u51fa\u9519.\\");\\n            }\\n        }\\n     \\n        \\n        return result;\\n    }\\n    \\n    private void handleFiles(File[] files, Set<Class<?>> result, ClassLoader classLoader, String packageName) {\\n        for (File f: files) {\\n            // it\'s a folder, \u9012\u5f52\\n            if (f.isDirectory()) {\\n                handleFiles(f.listFiles(), result, classLoader, packageName);\\n            }\\n            // \u662f\u6587\u4ef6\\n            else {\\n                try {\\n                    Class<?> clazz = classLoader.loadClass(packageName + \\".\\" + f.getName().substring(0, f.getName().lastIndexOf(\\".\\")));\\n                    // \u88ab @Bean \u6ce8\u89e3\u624d\u626b\u63cf\\n                    Bean beanAnno = clazz.getAnnotation(Bean.class);\\n                    if (beanAnno != null) {\\n                        /*// specified name\\n                        if (StringUtil.isValid(beanAnno.value()) {\\n                            \\n                        }\\n                        // \u9ed8\u8ba4, \u4f7f\u7528 bean \u7684 SimpleName \\n                        else {\\n                            \\n                        }*/\\n                        result.add(clazz);\\n                    }\\n                } catch (ClassNotFoundException e) {\\n                    log.error(\\"\u626b\u63cf\u6587\u4ef6[{}]\u53d1\u751f\u9519\u8bef\\", f.getPath(), e);\\n//                    e.printStackTrace();\\n                }\\n            }\\n        }\\n        \\n    }\\n    \\n}\\n```\\n\\n\u5f53\u7136, \u8fd8\u9700\u8981\u6700\u5c11\u4e24\u4e2a\u6ce8\u89e3. \u9996\u5148\u662f@bean, \u6807\u8bc6\u7eb3\u5165container\\n\\n```java\\n/**\\n * put into the Ioc container\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53487:48:17\\n */\\n@Documented\\n@Retention(RetentionPolicy.RUNTIME)\\n@Target({ElementType.TYPE})\\npublic @interface Bean {\\n\\n    String value() default \\"\\";\\n}\\n```\\n\\n\u7136\u540e\u662f@inject, \u4f9d\u8d56\u6ce8\u5165\u65f6\u5019\u7528:\\n\\n```java\\n\\n/**\\n * inject resources into \\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53487:53:21\\n */\\n@Documented\\n@Retention(RetentionPolicy.RUNTIME)\\n@Target({ElementType.FIELD})\\npublic @interface Inject {\\n\\n    String value();\\n}\\n\\n```\\n\\n# \u6d4b\u8bd5\\n\\n\u5148\u5b9a\u4e49bean\\n\\n```java\\n@Bean(\\"son\\")\\npublic class Son {\\n\\n}\\n\\n@Bean(\\"mama\\")\\n@Data// \u9700\u8981\u5f15\u5165lombok\\npublic class Mama {\\n\\n    @Inject(\\"son\\")\\n    private Son son;\\n    \\n    // lombok \u63d0\u4f9b getter\\n}\\n```\\n\\n\u4f7f\u7528:\\n\\n```java\\npublic class DefaultContainerTest {\\n\\n    @Test\\n    public void testDefaultContainer() {\\n        DefaultContainer container = DefaultContainer.me();\\n        container.register(\\"com.xiaoyu.ioc.bean\\");\\n        Object oMama = container.getByName(\\"mama\\");\\n        System.out.println(oMama);\\n    }\\n}\\n```"},{"id":"/2016/04/09/toss-about-raspberrypi","metadata":{"permalink":"/2016/04/09/toss-about-raspberrypi","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2016-04-09-toss-about-raspberrypi/index.md","source":"@site/blog/2016-04-09-toss-about-raspberrypi/index.md","title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","description":"\u51e0\u4e2a\u6708\u524d\u6211\u4e70\u4e86\u4e00\u4e2a\u6811\u8393\u6d3e, \u65b0\u9c9c\u52b2\u513f\u53bb\u4e86\u5c31\u4e00\u76f4\u5728\u5403\u7070, \u6700\u8fd1\u95f2\u4e0b\u6765 \u60f3\u628a\u5b83\u6253\u9020\u6210\u4e00\u4e2a\u5c0f\u670d\u52a1\u5668, \u8dd1\u4e00\u8dd1\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801, \u90a3\u4e48, \u8bf4\u5e72\u5c31\u5e72.","date":"2016-04-09T00:00:00.000Z","formattedDate":"2016\u5e744\u67089\u65e5","tags":[{"label":"raspberrypi","permalink":"/tags/raspberrypi"}],"readingTime":4.383333333333334,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","tags":["raspberrypi"],"authors":"me"},"prevItem":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","permalink":"/2017/02/01/create-my-own-ioc"},"nextItem":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","permalink":"/2015/10/04/class-conflict-check"}},"content":"\u51e0\u4e2a\u6708\u524d\u6211\u4e70\u4e86\u4e00\u4e2a\u6811\u8393\u6d3e, \u65b0\u9c9c\u52b2\u513f\u53bb\u4e86\u5c31\u4e00\u76f4\u5728\u5403\u7070, \u6700\u8fd1\u95f2\u4e0b\u6765 \u60f3\u628a\u5b83\u6253\u9020\u6210\u4e00\u4e2a\u5c0f\u670d\u52a1\u5668, \u8dd1\u4e00\u8dd1\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801, \u90a3\u4e48, \u8bf4\u5e72\u5c31\u5e72.\\n\\n\u7f51\u7edc\uff1a\u7535\u4fe11000M\u5bbd\u5e26\\n\u8f6f\u8def\u7531\uff1aJ4125\u56db\u53e3\u5de5\u63a7\u4e3b\u673a\\n\u8f6f\u8def\u7531\u7cfb\u7edf\uff1aUnraid\u4e28OpenWrt \u4e28iKuai\\n\u4ea4\u6362\u673a\uff1a\u7f51\u4ef68\u53e3\u5343\u5146\u4ea4\u6362\u673a GS308\\n\u786c\u8def\u7531\uff1a\u5c0f\u7c73AX3600\u4e28\u534e\u7855RT-AC86U \u4e28 NewWfi-3\\n\u53f0\u5f0f\u673a\uff1a\u9ed1\u679c+Windows10 \u53cc\u7cfb\u7edf\u7ec4\u88c5\u673a \u4e28M1 Mac mini\\n\u7b14\u8bb0\u672c\uff1a MacBook Pro 2015\u4e28 MacBook Pro 2019\u4e28 Mac Mini M1\\n\u5e73\u677f\uff1aIpad Air\\n\u8f6f\u4ef6\uff1aFinal Cut Pro\u4e28 \u526a\u6620\u4e13\u4e1a\u7248\u4e28 PR\\n\u952e\u76d8\uff1aFILCO 108 \u7ea2\u8f74 \u4e28AkkO 3098 \u84dd\u8f74 \u4e28 Keychron K2\u4e28 \u73c2\u829d K75\\n\u76f8\u673a\uff1aSONY a6300 \u4e28\u4f73\u80fd G7X mark III\\n\u624b\u673a\uff1aiPhone 13 Pro \u4e28iPhone 13 Mini\\n\u76f8\u673a\u955c\u5934\uff1a\u7d22\u5c3c16-50mm\u72d7\u5934\u4e28\u9002\u9a6c30mm F1.4\\n\u8bdd\u7b52\uff1a\u731b\u72b8\u65e0\u7ebf\u9ea6\u514b\u98ce\\n\u79fb\u52a8\u786c\u76d8\uff1a\u4e1c\u829d 4T\u4e28\u5965\u777f\u79d1M.2\u79fb\u52a8\u786c\u76d8\u76d2+256\u786c\u76d8\u4e28 \u96f7\u7535 3 \u6269\u5c55\u575e + SN550\\nU\u76d8\uff1a\u95ea\u8fea64G*3\\nNAS\uff1aDS218 Play 4T*2\\n\\n\x3c!--truncate--\x3e\\n\\n\\n## \u5b89\u88c5 Ubuntu server\\n\\n```sh\\n\\nversion: 2\\nethernets:\\n  eth0:\\n    dhcp4: true\\n    optional: true\\n#wifis:\\n#  wlan0:\\n#    dhcp4: true\\n#    optional: true\\n#    access-points:\\n#      myhomewifi:\\n#        password: \\"S3kr1t\\"\\n#      myworkwifi:\\n#        password: \\"correct battery horse staple\\"\\n#      workssid:\\n#        auth:\\n#          key-management: eap\\n#          method: peap\\n#          identity: \\"me@example.com\\"\\n#          password: \\"passw0rd\\"\\n#          ca-certificate: /etc/my_ca.pem\\nwifis:\\n  wlan0:\\n    dhcp4: true\\n    optional: true\\n    access-points:\\n      CMCC-2EE8-5G:\\n        password: \\"ezVL7XjF\\"\\n```\\n\\n## \u914d\u7f6e raspberry pi\\n\\n\u6211\u4e4b\u524d\u521a\u4e70\u56de\u6765\u6811\u8393\u6d3e\u5c31\u914d\u7f6e\u597d\u4e86, \u4e3a\u4e86\u4fdd\u6301\u6587\u7ae0\u7684\u5b8c\u6574\u6027, \u8fd8\u662f\u8bb0\u5f55\u4e00\u4e0b\u914d\u7f6e\u8fc7\u7a0b\\n\\n```sh\\n# raspberry \u9ed8\u8ba4 user \u662f pi/raspberry\\n# \u5982\u679c\u662f Ubuntu \u7cfb\u7edf, \u5219\u662f ubuntu/ubuntu (\u767b\u5165\u540e\u9700\u8981\u4fee\u6539\u5bc6\u7801)\\n\\n\\n# \u8054\u7f51\\n# \u5148\u63d2\u6709\u7ebf, \u5b89\u88c5 iw, ifconfig, iwconfig \u8fd9\u4e9b\u5de5\u5177\\nsudo iwconfig # wlan0 \u65e0\u7ebf\u7f51\u5361\u662f\u5426\u5b58\u5728\\nifconfig wlan0 up # \u542f\u52a8\\nip link set wlan0 up # \u542f\u52a8\\niw dev wlan0 scan | grep SSID # \u626b\u63cf\u53ef\u7528 ssid\\n\\n\\n\\n####\\n\\nsudo vim /etc/network/interfaces\\n\\nauto lo //\u8868\u793a\u4f7f\u7528localhost\\niface eth0 inet dhcp //\u8868\u793a\u5982\u679c\u6709\u7f51\u5361ech0, \u5219\u7528dhcp\u83b7\u5f97IP\u5730\u5740 (\u8fd9\u4e2a\u7f51\u5361\u662f\u672c\u673a\u7684\u7f51\u5361\uff0c\u800c\u4e0d\u662fWIFI\u7f51\u5361)\\nauto wlan0 //\u8868\u793a\u5982\u679c\u6709wlan\u8bbe\u5907\uff0c\u4f7f\u7528wlan0\u8bbe\u5907\u540d\\nallow-hotplug wlan0 //\u8868\u793awlan\u8bbe\u5907\u53ef\u4ee5\u70ed\u63d2\u62e8\\niface wlan0 inet dhcp //\u8868\u793a\u5982\u679c\u6709WLAN\u7f51\u5361wlan0 (\u5c31\u662fWIFI\u7f51\u5361), \u5219\u7528dhcp\u83b7\u5f97IP\u5730\u5740\\nwpa-ssid \u201c\u4f60\u7684wifi\u540d\u79f0\u201d//\u8868\u793a\u8fde\u63a5SSID\u540d\\nwpa-psk \u201c\u4f60\u7684wifi\u5bc6\u7801\u201d//\u8868\u793a\u8fde\u63a5WIFI\u7f51\u7edc\u65f6\uff0c\u4f7f\u7528wpa-psk\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u8ba4\u8bc1\u5bc6\u7801\\n\\n#####\\n\\n## \u9759\u6001ip https://www.jianshu.com/p/ac9d784f112b\\n\\nsudo vi /etc/dhcpcd.conf\\n\\n###### \u5185\u5bb9\u5982\u4e0b:\\n\\ninterface eth0\\n\\nstatic ip_address=192.168.0.10/24 # \u9759\u6001ip\\nstatic routers=192.168.1.1 # \u7f51\u5173\\nstatic domain_name_servers=192.168.0.1 # dns\\n\\ninterface wlan0 # \u65e0\u7ebf\u7f51\u5361\\n\\nstatic ip_address=192.168.0.200/24\\nstatic routers=192.168.1.1\\nstatic domain_name_servers=192.168.0.1\\n\\n######\\n\\n#\u91cd\u542f\\nsudo reboot\\n\\n# \u914d\u7f6e\u56fd\u5185\u6e90\\n\\n# \u5982\u679c\u662f raspberry os, \u5219:\\n# \u5206\u4e3a\u8f6f\u4ef6\u66f4\u65b0\u6e90, \u7cfb\u7edf\u66f4\u65b0\u6e90\\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak # \u5148\u5907\u4efd\u603b\u662f\u6ca1\u9519\u7684\\nsudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak # \u5907\u4efd\\nsudo vim /etc/apt/sources.list\\n# modify the content like this:\\ndeb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi\\n# \u7136\u540e\u662f\u4fee\u6539\u7cfb\u7edf\u66f4\u65b0\u6e90\\nsudo vim /etc/apt/sources.list.d/raspi.list\\n# \u4fee\u6539\u6210\u8fd9\u6837:\\ndeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui\\n\\n# \u5982\u679c\u662f Ubuntu os \u5219:\\nhttp://mirrors.ustc.edu.cn/ubuntu-ports\\n\\n# \u66f4\u65b0\u8f6f\u4ef6\u5305\\nsudo apt update \\nsudo apt full-upgrade\\n\\n# \u914d\u7f6e\u9759\u6001 ip\\nsudo vim  \\n\\n\\n\\n## \u5207\u6362 root\\n\\nsudo passwd root # \u7136\u540e\u8bbe\u7f6e root \u5bc6\u7801\\n\\n\\n```\\n\\n## \u5b89\u88c5 docker\\n\\nhttps://shumeipai.nxez.com/2019/05/20/how-to-install-docker-on-your-raspberry-pi.html\\n\\n```sh\\nsudo apt update \\nsudo apt full-upgrade\\n\\nsudo apt-get install apt-transport-https \\\\\\n                       ca-certificates \\\\\\n                       software-properties-common\\n\\n# \u65b9\u6cd5\u4e00:\\nsudo curl -sSL https://get.docker.com | sh\\n\\n# \u65b9\u6cd5\u4e8c:\\n# \u66f4\u65b0\u8f6f\u4ef6\u5e93\u7d22\u5f15\\nsudo apt update\\n# \u5148\u5b89\u88c5 https \u4f9d\u8d56\u5305\\nsudo apt install -y apt-transport-https \\\\\\n                       ca-certificates \\\\\\n                       software-properties-common\\n# \u6dfb\u52a0 Docker \u7684 GPG key\\ncurl -fsSL https://yum.dockerproject.org/gpg | sudo apt-key add -\\n# \u9a8c\u8bc1\u4e00\u4e0b:\\napt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\\nsudo apt update\\nsudo apt install -y docker-engine   \\n\\n\\n# (\u4e00\u6b21\u6027)\u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90\\ndocker run hello-world --registry-mirror=https://docker.mirrors.ustc.edu.cn\\n# \u63a8\u8350\u65b9\u6cd5:\\nvim /etc/docker/daemn.json\\n{ \\n\\n\\"registry-mirrors\\": [\\"https://docker.mirrors.ustc.edu.cn\\"] \\n\\n}\\n\\n# \u5141\u8bb8 \u975e root \u4f7f\u7528\\nsudo usermod -aG docker pi\\n\\n################################################################\\n\\n\\n# \u5b89\u88c5 docker-compose\\n\\napt-get update\\napt-get install -y python python-pip\\napt-get install libffi-dev\\npip3 install docker-compose # \u5fc5\u987b\u4f7f\u7528 Python3 \u5b89\u88c5\\ndocker-compose -v\\n\\n\\n```\\n\\n## \u8fd0\u884c\u73af\u5883\\n\\n```sh\\n# mysql\\ndocker pull hypriot/rpi-mysql\\ndocker run --name mysql -d -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 --restart=always hypriot/rpi-mysql\\n# \u65b0\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u4f5c\u4e3a client \u53bb\u8fde\u63a5 MySQL server\\ndocker run --rm -it --link mysql:ms hypriot/rpi-mysql mysql -hms -uroot -p\\n\\n\\n# jdk8\\nsudo apt-get purge openjdk-8-jre-headless\\nsudo apt-get install openjdk-8-jre-headless\\nsudo apt-get install openjdk-8-jre\\n```\\n\\n\\n## \u914d\u7f6e\u52a8\u6001\u57df\u540d\u670d\u52a1 ddns\\n\\n\\n\u516c\u7f51vps \u662f\u5fc5\u987b\u7684\\n\\n### \u901a\u8fc7 ssh\u96a7\u9053\\n\\nssh \u96a7\u9053\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1(ssh remote forwarding) : \u672c\u5730\u6267\u884c `ssh -NTf -R 8080:127.0.0.1:8080 username@12.34.56.78`, \u5c06\u8fdc\u7a0b server\u7684 8080 \u6620\u5c04\u5230 \u672c\u5730\u7684 8080; \u518d\u5982: `ssh -NTf -R 8080:github.com:80 username@12.34.56.78` \u5c31\u80fd\u901a\u8fc7 12.34.56.78:8080 \u53bb\u8bbf\u95ee github.com:80 \u4e86\u3002\\n\\n```\\nN\u53c2\u6570\uff1a\u8868\u793a\u53ea\u8fde\u63a5\u8fdc\u7a0b\u4e3b\u673a\uff0c\u4e0d\u6253\u5f00\u8fdc\u7a0bshell\uff1b\\nT\u53c2\u6570\uff1a\u8868\u793a\u4e0d\u4e3a\u8fd9\u4e2a\u8fde\u63a5\u5206\u914dTTY\uff1b\\nf\u53c2\u6570\uff1a\u8868\u793a\u8fde\u63a5\u6210\u529f\u540e\uff0c\u8f6c\u5165\u540e\u53f0\u8fd0\u884c\uff1b\\nR: \u8fdc\u7a0b\u8f6c\u53d1 \\n```\\n\\n\u4f46\u662f SSH \u96a7\u9053\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5728\u7f51\u7edc\u6076\u52a3\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u968f\u65f6\u65ad\u5f00, AutoSSH \u80fd\u8ba9 SSH \u96a7\u9053\u4e00\u76f4\u4fdd\u6301\u6267\u884c\uff0c\u4ed6\u4f1a\u542f\u52a8\u4e00\u4e2a SSH \u8fdb\u7a0b\uff0c\u5e76\u76d1\u63a7\u8be5\u8fdb\u7a0b\u7684\u5065\u5eb7\u72b6\u51b5\uff1b\u5f53 SSH \u8fdb\u7a0b\u5d29\u6e83\u6216\u505c\u6b62\u901a\u4fe1\u65f6\uff0cAutoSSH \u5c06\u91cd\u542f\u52a8 SSH \u8fdb\u7a0b: `autossh -N -R 8080:127.0.0.1:8080 username@12.34.56.78`\\n\\n\u9700\u8981\u53bb\u5916\u7f51\u670d\u52a1\u5668\u4e0a\u4fee\u6539 /etc/ssh/sshd_config \u6587\u4ef6\u5982\u4e0b: (\u91cd\u542f`service sshd restart`)\\n\\n```\\nGatewayPorts yes\\n```\\n\\n\u610f\u601d\u662f\uff0cSSH \u96a7\u9053\u76d1\u542c\u7684\u670d\u52a1\u7684 IP \u662f\u5bf9\u5916\u5f00\u653e\u7684 0.0.0.0\uff0c\u800c\u4e0d\u662f\u53ea\u5bf9\u672c\u673a\u7684 127.0.0.1\u3002\\n\\n## \u8fde\u63a5\u4e0a WiFi \u4f46\u65e0\u6cd5\u4e0a\u7f51\\n\\n```sh\\n# \u6dfb\u52a0 nameserver 8.8.8.8\\nsudo vim /etc/resolv.conf\\n\\n# relead\\nsudo resolvconf -u \\n# restart network\\nsudo /etc/init.d/networking restart\\n\\n```\\n\\n\u5c1d\u8bd5\u540e\u8c8c\u4f3c\u65e0\u6548\\n\\n\u4e0b\u9762\u6709\u6548: (https://www.geek-share.com/detail/2755498900.html)\\n\\n```sh\\nsudo nano /etc/dhcpcd.conf\\n\\n# \u8bbe\u7f6e WiFi\\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf\\n\\n```\\n\\n\\n## \u5b89\u88c5 node\\n\\nhttps://blog.csdn.net/sunxdd/article/details/105894882"},{"id":"/2015/10/04/class-conflict-check","metadata":{"permalink":"/2015/10/04/class-conflict-check","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2015-10-04-class-conflict-check/index.md","source":"@site/blog/2015-10-04-class-conflict-check/index.md","title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","description":"\u7528\u4e8e\u68c0\u6d4bjar\u5305\u4f9d\u8d56\u51b2\u7a81\uff0c\u591a\u4e2a\u7248\u672c\u540c\u65f6\u5b58\u5728","date":"2015-10-04T00:00:00.000Z","formattedDate":"2015\u5e7410\u67084\u65e5","tags":[{"label":"java","permalink":"/tags/java"}],"readingTime":1.2766666666666666,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","tags":["java"],"authors":"me"},"prevItem":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","permalink":"/2016/04/09/toss-about-raspberrypi"},"nextItem":{"title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","permalink":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking"}},"content":"\u7528\u4e8e\u68c0\u6d4bjar\u5305\u4f9d\u8d56\u51b2\u7a81\uff0c\u591a\u4e2a\u7248\u672c\u540c\u65f6\u5b58\u5728\\njava.lang.NoSuchMethodException, java.lang.ClassNotFoundException\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u4ee3\u7801\\n\\n```java\\npublic class ClassConflictCheck {\\n  // key\uff1aclass name\\n  // value: jar name \uff08\u7531\u4e8e\u7248\u672c\u95ee\u9898,\u4e00\u4e2aclass\u53ef\u80fd\u5b58\u5728\u4e8e\u591a\u4e2ajar\u4e2d\uff0c\u6240\u4ee5\u662f set\uff09\\n    private static Map<String, HashSet<String>> classMap = new HashMap<String, HashSet<String>>();\\n\\n    public static void check(String classPath) throws Exception {\\n        File dir = new File(classPath);\\n        File[] jarFiles = dir.listFiles();\\n        for (File jarFile : jarFiles) {// \u904d\u5386\u6bcf\u4e2a jar\\n            if (jarFile.getName().endsWith(\\".jar\\")) {\\n                JarFile jar = new JarFile(jarFile);\\n                Enumeration<JarEntry> enumeration = jar.entries();\\n                while (enumeration.hasMoreElements()) {// \u904d\u5386\u6bcf\u4e2a class\\n                    JarEntry jarEntry = enumeration.nextElement();\\n                    if (jarEntry.getName().endsWith(\\".class\\")) {\\n                        storeClassAndJarRel(jarEntry.getName(), jar.getName());\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n    * put className-jarName into map\\n    */\\n    private static void storeClassAndJarRel(String className, String jarName) {\\n      // \u83b7\u53d6 jar set\\n        HashSet<String> jarSet = classMap.get(className);\\n        if (jarSet == null) {\\n            jarSet = new HashSet<String>();\\n        }\\n        jarSet.add(jarName.substring(jarName.lastIndexOf(\\"/\\") + 1));\\n        classMap.put(className, jarSet);\\n    }\\n\\n    \\n    public static void main(String[] args) throws Exception {\\n        //args = new String[] { \\"/Users/yuekuo/soft/taobao-tomcat-7.0.54.1/deploy/cloud-mobile-cloudapi-gateway/WEB-INF/lib\\" };\\n        for (String arg : args) {\\n            check(arg);\\n        }\\n\\n        boolean isConflict = false;\\n        for (Iterator<Map.Entry<String, HashSet<String>>> iterator = classMap.entrySet().iterator(); iterator\\n                .hasNext();) {\\n            Map.Entry<String, HashSet<String>> entry = iterator.next();\\n            HashSet<String> jarSet = entry.getValue();\\n            if (jarSet.size() > 1) {// \u82e5\u67d0\u4e2a class \u5bf9\u5e94 \u7684 jar \u6709\u591a\u4e2a\uff0c \u5219\u51b2\u7a81\\n                if (!isConflict) {\\n                    isConflict = true;\\n                }\\n                List<String> jarList = Arrays.asList(jarSet.toArray(new String[] {}));\\n                // \u6253\u5370\u51b2\u7a81\u7684class\\n                System.out.println(\\"Class conflict!!! the class :\\" + entry.getKey()\\n                        + \\" has been duplicate inclusioned in the jars : \\" + jarList);\\n            }\\n        }\\n\\n        if(!isConflict) {// \u6ca1\u6709\u51b2\u7a81\\n            System.out.println(\\"no class conflict\\");\\n        }\\n    }\\n\\n}\\n\\n```\\n\\n## \u600e\u4e48\u4f7f\u7528\\n\\n```sh\\njavac ClassConflictCheck.java\\n\\njava ClassConflictCheck xxx/WEB-INF/lib\\n\\n```\\n\\n## \u539f\u7406\\n\\n\u904d\u5386\u626b\u63cf\u6307\u5b9a\u76ee\u5f55\u4e0b \u6240\u6709.jar \u7ed3\u5c3e\u7684\u6587\u4ef6, \u901a\u8fc7\u666e\u901a\u7684 File \u7c7b\u6784\u9020 jdk \u63d0\u7684 JarFile \u5bf9\u8c61, \u904d\u5386\u5185\u90e8\u51fa\u5185\u90e8\u7684 JarEntry, \u53ef\u4ee5\u83b7\u53d6\u5230 classname \u548c \u5bf9\u5e94\u7684 jarName , \u5982\u679c\u4e00\u4e2a classname \u627e\u5230\u4e86\u591a\u4e2a Jarname, \u90a3\u4e48 \u5c31\u662f\u91cd\u590d\u7684, \u53ef\u4ee5\u6807\u8bc6\u51fa\u6765"},{"id":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking","metadata":{"permalink":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2015-05-02-defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking.md","source":"@site/blog/2015-05-02-defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking.md","title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","description":"\u6765\u81ea: \u7f16\u7a0b\u968f\u60f3; Java \u7a0b\u5e8f\u733f\u7684\u6bdb\u75c5","date":"2015-05-02T00:00:00.000Z","formattedDate":"2015\u5e745\u67082\u65e5","tags":[{"label":"java","permalink":"/tags/java"}],"readingTime":13.62,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","tags":["java"],"authors":["me"]},"prevItem":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","permalink":"/2015/10/04/class-conflict-check"}},"content":"<div align=\\"center\\">\\n\u6765\u81ea: [\u7f16\u7a0b\u968f\u60f3](https://program-think.blogspot.com/2009/01/defect-of-java-beginner-0-overview.html); Java \u7a0b\u5e8f\u733f\u7684\u6bdb\u75c5\\n</div>\\n\\n\\n\x3c!--truncate--\x3e\\n\\n# \u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u4e0d\u719f\u6089\\n\\n\u2605\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u6570\u7ec4\u578b\u5bb9\u5668\u3001\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u94fe\u8868\u578b\u5bb9\u5668\uff1f<font color=\\"green\\"> > \u524d\u8005\u9002\u7528\u4e8e\u67e5\u8be2\u8f83\u591a\u7684\u573a\u666f\u589e\u5220\u7279\u522b\u6162\u56e0\u4e3a\u6d89\u53ca\u5230\u6570\u7ec4\u521b\u5efa\u590d\u5236, \u540e\u8005\u9002\u5408\u589e\u5220\u591a\u7684\u573a\u666f</font>\\n\u2605\u4ec0\u4e48\u662f\u6563\u5217\u51fd\u6570\uff1fHashMap \u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f<font color=\\"green\\"> > \u6563\u5217\u51fd\u6570 see [link](https://www.zhihu.com/question/26762707), hashmap\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0, \u535a\u5ba2\u5185\u641c\u7d22 \\"java core Note\\" </font>\\n\u2605\u4ec0\u4e48\u662f\u9012\u5f52\uff1f\u5982\u679c\u4f60\u4ee5\u524d\u4ece\u6765\u6ca1\u5199\u8fc7\u9012\u5f52\u51fd\u6570\uff0c\u5c1d\u8bd5\u7740\u5199\u4e00\u4e2a\uff08\u6bd4\u5982\u7528\u9012\u5f52\u51fd\u6570\u8fdb\u884c\u76ee\u5f55\u6811\u904d\u5386\uff09\u3002<font color=\\"green\\"> > \u7b80\u5355\u7406\u89e3\u5c31\u662f\u51fd\u6570\u8c03\u7528\u81ea\u8eab, \u9700\u8981\u6709\u7ed3\u675f\u6761\u4ef6, \u4e0d\u7136\u5c31\u6b7b\u5faa\u73af\u4e86 </font>\\n\u2605\u4ec0\u4e48\u662f\u7b97\u6cd5\u590d\u6742\u5ea6\uff1f\\n\u2605\u4f60\u662f\u5426\u7406\u89e3\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u601d\u60f3\uff1f\\n\u2605\u5199\u4e00\u4e2a\u9488\u5bf9\u6574\u6570\u6570\u7ec4\u7684\u5192\u6ce1\u6392\u5e8f\u51fd\u6570\uff0c\u770b\u770b\u4f60\u8981\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u8dd1\u901a\u3002\\n\u2605\u5199\u4e00\u4e2a\u9488\u5bf9\u6574\u6570\u6570\u7ec4\u7684\u4e8c\u5206\u67e5\u627e\u51fd\u6570\uff0c\u770b\u770b\u4f60\u8981\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u8dd1\u901a\u3002\\n\\n\\n# \u79bb\u5f00\u5f00\u53d1\u6846\u67b6\u6d3b\u4e0d\u4e86\\n\\n\u5bf9 Spring\u3001Hibernate \u7b49\u6846\u67b6\u4e86\u5982\u6307\u638c\uff1b\u4f46\u5982\u679c\u7ed9\u4ed6\u4e00\u4e2a\u7b80\u5355\u9700\u6c42\uff0c\u8ba9\u4ed6\u5199\u4e00\u4e2a\u8131\u79bb Web \u6846\u67b6\u7684\u72ec\u7acb Application\uff0c\u4ed6\u5c31\u4e0d\u77e5\u6240\u63aa\u4e86\\n\\n\u2605\u57fa\u4e8e\u63a5\u53e3\u7684\u7ee7\u627f\u548c\u57fa\u4e8e\u5b9e\u73b0\u7684\u7ee7\u627f\u5404\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f\\n\u2605\u7ee7\u627f\uff08\u5305\u62ec extend \u548c implement\uff09\u6709\u4ec0\u4e48\u3010\u7f3a\u70b9\u3011\uff1f\\n\u2605\u591a\u6001\uff08polymorphism\uff09\u6709\u4ec0\u4e48\u3010\u7f3a\u70b9\u3011\uff1f\\n\u2605\u4e3a\u4ec0\u4e48 Java \u53ef\u4ee5\u591a\u7ee7\u627f interface\uff0c\u800c\u4e0d\u53ef\u4ee5\u591a\u7ee7\u627f class\uff1f<font color=\\"green\\"> > \u591a\u7ee7\u627fclass\u4e2d\u6709\u76f8\u540c\u65b9\u6cd5\u65f6\u5e94\u8be5\u9009\u7528\u54ea\u4e2a\u7248\u672c\u5462? \u53e6\u5916, java8\u5f00\u59cb\u5df2\u7ecf\u5141\u8bb8\u63a5\u53e3\u91cc\u9762\u6709 default method\u4e86, \u53d1\u73b0\u7ee7\u627f\u591a\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\u5b9e\u73b0\u5e76\u4e14\u6ca1\u6709override\u65f6\u62a5\u9519, \u907f\u514d\u4e86\u96c6\u6210\u591a\u4e2aclass\u9009\u62e9\u54ea\u4e2a\u7248\u672c\u7684\u95ee\u9898 </font>\\n\u2605\u5047\u5982\u8ba9\u4f60\u5199\u4e00\u4e2a\u5c0f\u6e38\u620f\uff08\u6bd4\u5982\u4eba\u673a\u5bf9\u6218\u7684\u4e94\u5b50\u68cb\uff09\uff0c\u4f60\u4f1a\u5982\u4f55\u8bbe\u8ba1\u7c7b\u7ed3\u6784\uff1f\\n\u2605\u7c7b\u7ed3\u6784\u8bbe\u8ba1\u65f6\uff0c\u5982\u4f55\u8003\u8651\u53ef\u6269\u5c55\u6027\uff1f\\n\\n\\n# \u7f16\u7a0b\u4e60\u60ef\\n\\n## \u968f\u610f\u5730\u547d\u540d\\n    \\n\u53cd\u9762: \u4f7f\u7528\u5355\u5b57\u6bcd\u547d\u540d\u53d8\u91cf\uff1b\u4f7f\u7528\u4e00\u4e9b\u6ca1\u592a\u5927\u610f\u4e49\u7684\u53d8\u91cf\u540d\uff08\u4f8b\u5982 s1\u3001s2\u3001s3\uff09\uff1b\u5bf9\u540c\u4e00\u4e2a\u4e1a\u52a1\u6982\u5ff5\u4f7f\u7528\u4e0d\u540c\u7684\u672f\u8bed/\u7f29\u5199\uff08\u5bb9\u6613\u8ba9\u8bfb\u4ee3\u7801\u7684\u4eba\u795e\u7ecf\u5206\u88c2\uff09\uff1b\u4f7f\u7528\u62fc\u97f3\u547d\u540d\uff08\u5982\u679c\u4f60\u56e2\u961f\u4e2d\u6709\u6e2f\u53f0\u4eba\u58eb\u6216\u8005\u8001\u5916\uff0c\u5c31\u60e8\u4e86\uff09\\n\\n## \u4e60\u60ef\u4e8e\u4ee3\u7801\u7684 copy & paste\\n\\n\u53cd\u9762\uff1a\u5982\u679c\u53d1\u73b0\u8981\u5199\u7684\u67d0\u4e2a\u51fd\u6570\u548c\u524d\u51e0\u5929\u5199\u7684\u67d0\u4e2a\u51fd\u6570\u5dee\u4e0d\u591a\uff0c\u5c31\u628a\u539f\u6765\u7684\u90a3\u4e2a\u51fd\u6570\u8d34\u8fc7\u6765\uff0c\u7136\u540e\u7a0d\u5fae\u6539\u51e0\u4e0b\uff0c\u5fc3\u4e2d\u8fd8\u6697\u559c\uff1a\u201c\u53c8\u5feb\u901f\u641e\u5b9a\u4e86\u4e00\u4e2a\u529f\u80fd\u201d....... \u8fd9\u79cd\u505a\u6cd5\u662f\u4ee3\u7801\u81ed\u5473\uff08\u501f\u7528\u300a\u91cd\u6784 - \u6539\u5584\u65e2\u6709\u4ee3\u7801\u7684\u8bbe\u8ba1\u300b\u7684\u63d0\u6cd5\uff09\u7684\u4e3b\u8981\u6765\u6e90\uff0c\u5bfc\u81f4\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\u5927\u5927\u4e0b\u964d\u3002\u5f53\u4f60\u5c06\u6765\u9700\u8981\u589e\u52a0\u529f\u80fd\u6216\u4fee\u6539 bug \u7684\u65f6\u5019\uff0c\u8981\u540c\u65f6\u6539\u52a8\u591a\u4e2a\u5730\u65b9\uff0c\u800c\u90a3\u65f6\u4f60\u4f30\u8ba1\u5df2\u7ecf\u60f3\u4e0d\u8d77\u6765\u8fd9\u7823\u4ee3\u7801\u6709\u51e0\u4e2a\u514b\u9686\u4e86\\n\\n## Magic Number \u6ee1\u5929\u98de\\n\\n\u5047\u8bbe\u6709\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u9700\u8981\u8fdb\u884c10\u79d2\u7684\u8d85\u65f6\u7b49\u5f85\uff0c\u4f60\u4f1a\u600e\u4e48\u5199\u8fd9\u4e2asleep\u8bed\u53e5\uff1f\u6211\u4f30\u8ba1\u5927\u90e8\u5206\u4eba\u4e0d\u5916\u4e4e\u4e0b\u9762\u4e09\u79cd\u5199\u6cd5:\\n1\u3001\u76f4\u63a5\u5199\u4e0a sleep(10*1000); \u4e86\u4e8b ----\u6700\u5dee, \u7f3a\u4e4f\u53ef\u8bfb\u6027, \u4ee3\u7801\u81ed\u5473\\n2\u3001\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf TIMEOUT_XXX = 10*1000; \u7136\u540e sleep(TIMEOUT_XXX); ---- \u6bd41\u7a0d\u597d, \u4f46\u662f\uff0c\u5c06\u6765\u4e00\u65e6\u53d1\u751f\u9700\u6c42\u53d8\u66f4\uff0c\u8981\u6c42\u5728\u3010\u8fd0\u884c\u65f6\u3011\u8c03\u6574\u8d85\u65f6\u95f4\u9694\uff08\u751a\u81f3\u8981\u6c42\u8ba9\u7528\u6237\u6765\u914d\u5236\u8d85\u65f6\u95f4\u9694\uff09\uff0c\u5219\u5199\u6cd52\u7684\u7f3a\u70b9\u7acb\u9a6c\u66b4\u9732\u65e0\u9057\\n3\u3001`\u5728\u914d\u5236\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u4e2a\u8d85\u65f6\u9879\uff0c\u7136\u540e\u7a0b\u5e8f\u8bfb\u53d6\u914d\u5236\u6587\u4ef6\u83b7\u5f97\u8d85\u65f6\u503c\uff0c\u7136\u540e\u8c03\u7528 sleep`\u3002------  \u6b63\u786e\u65b9\u5f0f.\\n\\n## \u4ee3\u7801\u8026\u5408\u5ea6\u592a\u5927\\n\\n\u5408\u7406\u4f7f\u7528  MVC\u6216\u8005\u8bbe\u8ba1\u6a21\u5f0f (\u4ee3\u7801\u8026\u5408\u5206\u522b\u7531\u54ea\u4e9b\u60c5\u51b5\u5f15\u8d77\uff1f\u4ec0\u4e48\u662f\u6b63\u4ea4\u7684\u8bbe\u8ba1\uff1f)\\n\\n## \u4e0d\u6ce8\u610f\u8d44\u6e90\u56de\u6536\\n\\nJava \u5728\u8bed\u8a00\u5c42\u9762\u63d0\u4f9b\u4e86\u5185\u5b58\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u7a0b\u5e8f\u5458\u53ea\u7ba1\u7533\u8bf7\u5185\u5b58\uff0c\u4e0d\u9700\u8981\u518d\u5173\u5fc3\u91ca\u653e\u7684\u95ee\u9898. \u6b64\u5f88\u591a\u65b0\u624b\u517b\u6210\u4e86\u574f\u4e60\u60ef\uff0c\u5bf9\u4e8e\u5176\u5b83\u8d44\u6e90\uff08\u6bd4\u5982\u6570\u636e\u5e93\u8fde\u63a5\uff09\u4e5f\u53ea\u7533\u8bf7\u4e0d\u91ca\u653e\uff08\u6709\u4e9b\u4eba\u751a\u81f3\u5929\u771f\u5730\u4ee5\u4e3a JVM \u4f1a\u5e2e\u4f60\u641e\u5b9a\u8d44\u6e90\u56de\u6536\uff09. \u8fd9\u4e2a\u574f\u4e60\u60ef\u4f1a\u5bfc\u81f4\u8d44\u6e90\u7684\u6cc4\u9732\uff0c\u800c\u8d44\u6e90\u6cc4\u9732\u5f80\u5f80\u6bd4\u5185\u5b58\u6cc4\u9732\u66f4\u8981\u547d\u3002\u5982\u679c\u4f60\u5199\u7684\u7a0b\u5e8f\u662f\u957f\u65f6\u95f4\u8fd0\u884c\u7684\uff08\u6bd4\u5982\u8fd0\u884c\u5728 Web Server \u4e0a\uff09\uff0c\u65f6\u95f4\u957f\u4e86\u4f1a\u7531\u4e8e\u8d44\u6e90\u8017\u5c3d\u800c\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u51fa\u95ee\u9898\\n\\n# \u5f02\u5e38\u5904\u7406\u4f7f\u7528\u4e0d\u5f53\\n\\n[\u5f02\u5e38\u7684\u5904\u7406\u539f\u5219](http://codebuild.blogspot.com/2012/01/15-best-practices-about-exception.html), \u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u5173\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u7ecf\u9a8c [link1](https://www.ibm.com/developerworks/cn/java/j-lo-exception-misdirection/index.html), [link2](https://www.ibm.com/developerworks/cn/java/j-lo-exception/index.html)\\n\\n*   \u5f02\u5e38\u7684\u540d\u5b57\u5fc5\u987b\u6e05\u6670\u800c\u4e14\u6709\u5177\u4f53\u7684\u610f\u601d\uff0c\u8868\u793a\u5f02\u5e38\u53d1\u751f\u7684\u95ee\u9898\uff0c\u4f8b\u5982 FileNotFoundException \u5c31\u5f88\u6e05\u6670\u76f4\u89c2\\n\\n*   \u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b\u5c42\u6b21\uff0c\u4f8b\u5982 UserException \u548c SystemException \u5206\u522b\u4ee3\u8868\u7528\u6237\u7ea7\u522b\u7684\u5f02\u5e38\u4fe1\u606f\u548c\u7cfb\u7edf\u7ea7\u522b\u7684\u5f02\u5e38\u4fe1\u606f\uff0c\u800c\u5176\u4ed6\u7684\u5f02\u5e38\u5728\u8fd9\u4e24\u4e2a\u57fa\u7c7b\u4e0a\u8fdb\u884c\u6269\u5c55\\n\\n*   \u53d7\u68c0\u5f02\u5e38\u548c\u975e\u53d7\u68c0\u5f02\u5e38: \u524d\u8005\u7528\u5728[\u9519\u8bef\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u548c\u6062\u590d, \u5982SQLException, \u9700\u8981\u8fdb\u4e00\u6b65\u5173\u95edconnection, transaction\u56de\u6eda], \u540e\u8005\u7528\u5728 [\u7a0b\u5e8f\u4e0d\u80fd\u7ee7\u7eed\u6267\u884c, \u4e5f\u6ca1\u5fc5\u8981\u8fdb\u4e00\u6b65\u5bf9\u5f02\u5e38\u5904\u7406, \u5982\u670d\u52a1\u5668\u8fde\u63a5\u4e0d\u4e0a\u3001\u53c2\u6570\u4e0d\u6b63\u786e]\\n\\n*   \u907f\u514d\u629b\u51fa\u5f02\u5e38\u5bf9\u4ee3\u7801\u5c42\u6b21\u6c61\u67d3(\u8bbe\u8ba1\u9694\u79bb\u539f\u5219)\\n\\n    *   \u4f8b\u5982dao\u5c42\u67d0\u4e2a\u65b9\u6cd5\u629b\u51fasqlexception, \u6b64\u65f6\u5c31\u4e0d\u8981\u7ee7\u7eed\u5411\u4e0a\u629b\u4e86, \u5e94\u8be5\u5728catch\u4e4b\u540e\u5904\u7406\u6210runtimeException\u629b\u51fa\\n\\n\\n*   \u7a7a\u7684 catch \u8bed\u53e5\u5757\\n\\n    *   \u5373\u4f7f\u6709ex.printStacktrace()\u4e5f\u7b97\u7a7a\u7684catch\u5757, \u56e0\u4e3a\u8be5\u65b9\u6cd5\u53ea\u662f\u6253\u5370\u5806\u6808\u4fe1\u606f, \u800c\u4e14\u5f02\u5e38\u5e76\u6ca1\u6709\u4f7f\u5f97\u7a0b\u5e8f\u7ec8\u7aef\u6267\u884c, \u5bfc\u81f4\u66f4\u591a\u7684\u5f02\u5e38\u3002\\n    *   \u53ef\u4ee5catch\u540e\u629b\u51fa\u975e\u53d7\u68c0\u5f02\u5e38, finally\u91cc\u9762\u5904\u7406\u5176\u4ed6\u540e\u7eed\u64cd\u4f5c\u5982\u5173\u95ed\u8d44\u6e90\u7b49\u7b49\\n\\n\\n*   \u6ca1\u6709\u4f7f\u7528 finally \u53ef\u80fd\u4f1a\u4ea7\u751f\u8d44\u6e90\u6cc4\u9732\\n\\n*   \u4e0d\u8981\u4f7f\u7528\u51fd\u6570\u8fd4\u56de\u503c\u8fdb\u884c\u9519\u8bef\u5904\u7406\\n\\n    *   \u653e\u7740 Java \u7684\u5f02\u5e38\u673a\u5236\u4e0d\u7528\uff0c\u800c\u7528\u51fd\u6570\u8fd4\u56de\u503c\u6765\u8868\u793a\u6210\u529f/\u5931\u8d25, \u7b80\u76f4\u662f\u201c\u6367\u7740\u91d1\u7897\u8981\u996d\u201d\\n\\n        1. \u8fd4\u56de\u503c\u4e00\u822c\u7528\u6574\u6570\u503c\u6216\u5e03\u5c14\u503c\u8868\u793a\uff0c\u4f20\u9012\u7684\u4fe1\u606f\u8fc7\u4e8e\u7b80\u964b\uff1b\\n        2. \u4e00\u65e6\u8c03\u7528\u8005\u5ffd\u7565\u4e86\u9519\u8bef\u8fd4\u56de\u7801\uff0c\u5c31\u4f1a\u5bfc\u81f4\u548c\u201c\u7a7a catch \u8bed\u53e5\u5757\u201d\u7c7b\u4f3c\u7684\u95ee\u9898\uff1b\\n        3. \u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u591a\u5904\u8c03\u7528\uff0c\u90fd\u9700\u8981\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u91cd\u590d\u5224\u65ad\uff0c\u5bfc\u81f4\u4ee3\u7801\u5197\u4f59\\n\\n*   \u5faa\u73af\u5757\u4e2d\u4e0d\u8981\u6709try...catch\\n\\n    *   \u5f02\u5e38\u5904\u7406\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\\n    *   \u540c\u6837, \u8fd9\u6837\u7684\u4f8b\u5b50\u4e5f\u8981\u907f\u514d: \u7c7b A \u4e2d\u6267\u884c\u4e86\u4e00\u6bb5\u5faa\u73af\uff0c\u5faa\u73af\u4e2d\u8c03\u7528\u4e86 B \u7c7b\u7684\u65b9\u6cd5\uff0cB \u7c7b\u4e2d\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u5374\u53c8\u5305\u542b try-catch \u8fd9\u6837\u7684\u8bed\u53e5\u5757\\n\\n\\n*   \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2aruntimeException, \u6784\u9020\u51fd\u6570\u63a5\u53d7\u5404\u7c7b\u53d7\u68c0Exception, \u5e76\u5c06\u6709\u6548\u7684\u5f02\u5e38\u4fe1\u606f\u590d\u5236\u5230\u81ea\u8eab\u5c5e\u6027, \u8fd9\u6837\u53ef\u4ee5\u5728\u4f7f\u7528\u65f6\u7edf\u4e00\u6355\u6349Exception, \u53ef\u4ee5\u7701\u4e0d\u5c11\u529b\u6c14(\u591a\u65f6\u5019\u6ca1\u6709\u5fc5\u8981\u6bcf\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684 Exception \u5199\u4e00\u6bb5 catch \u8bed\u53e5\uff0c\u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4efb\u4f55\u4e00\u79cd\u5f02\u5e38\u90fd\u8db3\u591f\u8bf4\u660e\u4e86\u7a0b\u5e8f\u7684\u5177\u4f53\u95ee\u9898\u3002)\\n\\n    ```java\\n    /**\\n    * \u81ea\u5b9a\u4e49 RuntimeException\\n    * \u6dfb\u52a0\u9519\u8bef\u4ee3\u7801\u5c5e\u6027\\n    */\\n    public class RuntimeException extends java.lang.RuntimeException { \\n        //\u9ed8\u8ba4\u9519\u8bef\u4ee3\u7801 \\n        public static final Integer GENERIC = 1000000; \\n        //\u9519\u8bef\u4ee3\u7801\\n        private Integer errorCode; \\n\\n        private String msg;\\n\\n        public RuntimeException(Integer errorCode, Throwable cause) {\\n                this(errorCode, null, cause);\\n        }\\n        public RuntimeException(String message, Throwable cause) {\\n                //\u5229\u7528\u901a\u7528\u9519\u8bef\u4ee3\u7801\\n                this(GENERIC, message, cause);\\n        }\\n        public RuntimeException(Integer errorCode, String message, Throwable cause) {\\n                // \u90a3\u4e48\u5f53 Exception \u7684\u7c7b\u578b\u5df2\u7ecf\u662f RuntimeException \u65f6\uff0c\u6211\u4eec\u53c8\u505a\u4e86\u4e00\u6b21\u5c01\u88c5\u3002\u5c06 RuntimeException \u53c8\u91cd\u65b0\u5c01\u88c5\u4e86\u4e00\u6b21\uff0c\u8fdb\u800c\u4e22\u5931\u4e86\u539f\u6709\u7684 RuntimeException \u643a\u5e26\u7684\u6709\u6548\u4fe1\u606f\u3002\\n                // \u6dfb\u52a0\u76f8\u5173\u7684\u68c0\u67e5\uff0c\u786e\u8ba4\u53c2\u6570 Throwable \u4e0d\u662f RuntimeException \u7684\u5b9e\u4f8b\u3002\u5982\u679c\u662f\uff0c\u5c06\u62f7\u8d1d\u76f8\u5e94\u7684\u5c5e\u6027\u5230\u65b0\u5efa\u7684\u5b9e\u4f8b\u4e0a\\n                if (cause instanceof RuntimeException) {\\n                    this.msg = ...\\n                }\\n                this.errorCode = errorCode;\\n                super(message, cause);\\n        }\\n        public Integer getErrorCode() {\\n                return errorCode;\\n        } \\n    }\\n    ```\\n\\n    \u540e\u9762\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fd9\u6837\u4e86\\n\\n    ```java\\n    try{\\n    //\u53ef\u80fd\u629b\u51fa RuntimeException\u3001IOExeption \u6216\u8005\u5176\u5b83\uff1b\\n    //\u6ce8\u610f\u8fd9\u91cc\u548c\u8bef\u533a\u516d\u7684\u533a\u522b\uff0c\u8fd9\u91cc\u662f\u4e00\u6bb5\u4ee3\u7801\u629b\u51fa\u591a\u79cd\u5f02\u5e38\u3002\u4ee5\u4e0a\u662f\u591a\u6bb5\u4ee3\u7801\uff0c\u5404\u81ea\u629b\u51fa\u4e0d\u540c\u7684\u5f02\u5e38\\n    }catch(Exception e){\\n        //\u4e00\u5982\u65e2\u5f80\u7684\u5c06 Exception \u8f6c\u6362\u6210 RuntimeException\uff0c\u4f46\u662f\u8fd9\u91cc\u7684 e \u5176\u5b9e\u662f RuntimeException \u7684\u5b9e\u4f8b\uff0c\u5df2\u7ecf\u5728\u524d\u6bb5\u4ee3\u7801\u4e2d\u5c01\u88c5\u8fc7\\n        throw new RuntimeException(/**/code, /**/, e);\\n    }\\n\\n    ```\\n\\n*   \u907f\u514d\u6253\u5370\u591a\u5c42\u6b21\u7684\u91cd\u590d\u7684\u5f02\u5e38\\n\\n    ```java\\n    public class A {\\n    private static Logger logger = LoggerFactory.getLogger(A.class);\\n    public void process(){\\n        try{\\n        //\u5b9e\u4f8b\u5316 B \u7c7b\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u5b83\u6ce8\u5165\u7b49\u65b9\u5f0f\\n        B b = new B();\\n        b.process(); // \u89e3\u51b3\u529e\u6cd5\u662f: \u8fd9\u91cc\u7684\u90e8\u5206\u5e94\u8be5\u62ff\u51fatry...catch\u5757\\n\\n        //other code might cause exception\\n        \\n        } catch(XXXException e){\\n        //\u5982\u679c B \u7c7b process \u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\uff0c\u5f02\u5e38\u4f1a\u5728 B \u7c7b\u4e2d\u88ab\u6253\u5370\uff0c\u5728\u8fd9\u91cc\u4e5f\u4f1a\u88ab\u6253\u5370\uff0c\u4ece\u800c\u4f1a\u6253\u5370 2 \u6b21\\n        // \u5982\u679c\u5c42\u6b21\u518d\u590d\u6742\u4e00\u70b9\uff0c\u4e0d\u53bb\u8003\u8651\u6253\u5370\u65e5\u5fd7\u6d88\u8017\u7684\u7cfb\u7edf\u6027\u80fd\uff0c\u4ec5\u4ec5\u5728\u5f02\u5e38\u65e5\u5fd7\u4e2d\u53bb\u5b9a\u4f4d\u5f02\u5e38\u5177\u4f53\u7684\u95ee\u9898\u5df2\u7ecf\u591f\u5934\u75bc\u7684\u4e86\u3002\\n        // \u5176\u5b9e\u6253\u5370\u65e5\u5fd7\u53ea\u9700\u8981\u5728\u4ee3\u7801\u7684\u6700\u5916\u5c42\u6355\u6349\u6253\u5370\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f02\u5e38\u6253\u5370\u4e5f\u53ef\u4ee5\u5199\u6210 AOP\uff0c\u7ec7\u5165\u5230\u6846\u67b6\u7684\u6700\u5916\u5c42\\n        logger.error(e);\\n        throw new RuntimeException(/* \u9519\u8bef\u4ee3\u7801 */ errorCode, /*\u5f02\u5e38\u4fe1\u606f*/msg, e);\\n        }\\n        }\\n    }\\n    public class B{\\n    private static Logger logger = LoggerFactory.getLogger(B.class);\\n        public void process(){\\n            try{\\n                //\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\\n            }\\n            catch(XXXException e){\\n                logger.error(e);\\n                throw new RuntimeException(/* \u9519\u8bef\u4ee3\u7801 */ errorCode, /*\u5f02\u5e38\u4fe1\u606f*/msg, e);\\n            }\\n    }\\n    }\\n    ```\\n\\n\\n# \u5173\u4e8e\u57fa\u672c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5728\u5185\u5b58\u5b58\u50a8\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\\n```java\\nStringBuffer str = new StringBuffer();\\nint n = 123;\\n// \u8be5 StringBuffer \u3010\u5bf9\u8c61\u3011\u7684\u5185\u5bb9\u662f\u5b58\u50a8\u5728\u5806\uff08Heap\uff09\u4e0a\u7684\uff0c\u9700\u8981\u7533\u8bf7\u5806\u5185\u5b58\u3002\u800c\u53d8\u91cf str \u53ea\u4e0d\u8fc7\u662f\u9488\u5bf9\u8be5 StringBuffer \u5bf9\u8c61\u7684\u4e00\u4e2a\u5f15\u7528\uff08\u6216\u8005\u53eb\u5730\u5740\uff09\u3002\u53d8\u91cf str \u7684\u3010\u503c\u3011\uff08\u4e5f\u5c31\u662f StringBuffer \u5bf9\u8c61\u7684\u5730\u5740\uff09\u662f\u5b58\u50a8\u5728\u3010\u6808\u3011\u4e0a\u7684\u3002\\n// \u53d8\u91cf n \u7684\u3010\u503c\u3011\u4e5f\u662f\u5b58\u50a8\u5728\u6808\uff08Stack\uff09\u4e0a\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u8bed\u53e5\u4e0d\u9700\u8981\u518d\u4ece\u5806\u4e2d\u7533\u8bf7\u5185\u5b58\u4e86\u3002\\n```\\n\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5728\u6027\u80fd\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\\nStack: \u53ea\u80fd\u88ab\u672c\u7ebf\u7a0b\u8bbf\u95ee; \u5185\u5b58\u7533\u8bf7\u7b80\u5355; \u5185\u5b58\u6709\u9650\\nHeap: \u80fd\u591f\u88ab\u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee; \u5185\u5b58\u7533\u8bf7\u590d\u6742(\u7531\u4e8e\u591a\u7ebf\u7a0b\u5171\u4eab, \u9700\u8981\u52a0\u9501); \u5185\u5b58\u5145\u8db3\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5bf9\u4e8e GC \u6709\u4ec0\u4e48\u533a\u522b\\n\\n\\n# \u5173\u4e8e\u5783\u573e\u56de\u6536\uff08Garbage Collection\uff09\\n\\n## JVM \u7684\u5185\u5b58\u7a7a\u95f4\\n\\n\u25c7\u6808\u5185\u5b58\uff08Stack\uff09\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u79c1\u6709\u7684\u3002\\n\u25c7\u5806\u5185\u5b58\uff08Heap\uff09\uff1a\u6240\u6709\u7ebf\u7a0b\u516c\u7528\u7684\u3002\\n\u25c7\u65b9\u6cd5\u533a\uff08Method Area\uff09\uff1a\u6709\u70b9\u50cf\u4ee5\u524d\u5e38\u8bf4\u7684\u201c\u8fdb\u7a0b\u4ee3\u7801\u6bb5\u201d\uff0c\u8fd9\u91cc\u9762\u5b58\u653e\u4e86\u6bcf\u4e2a\u52a0\u8f7d\u7c7b\u7684\u53cd\u5c04\u4fe1\u606f\u3001\u7c7b\u51fd\u6570\u7684\u4ee3\u7801\u3001\u7f16\u8bd1\u65f6\u5e38\u91cf\u7b49\u4fe1\u606f\u3002\\n\u25c7\u539f\u751f\u65b9\u6cd5\u6808\uff08Native Method Stack\uff09\uff1a\u4e3b\u8981\u7528\u4e8e JNI \u4e2d\u7684\u539f\u751f\u4ee3\u7801\uff0c\u5e73\u65f6\u5f88\u5c11\u6d89\u53ca\u3002\\n\\n## \u5783\u573e\u56de\u6536\u673a\u5236\u7b80\u4ecb\\n\\n\u5783\u573e\u56de\u6536\u673a\u5236\u53d6\u51b3\u4e8e\u4e0d\u540cjvm, \u8fd9\u91cc\u4ee5\u5b98\u65b9jvm\u4ecb\u7ecd\\n\\n* \u4f55\u65f6\u56de\u6536?\\n    * \u5f53 JVM \u53d1\u73b0\u5806\u5185\u5b58\u6bd4\u8f83\u7d27\u5f20\u3001\u4e0d\u592a\u591f\u7528\u65f6\uff0c\u5b83\u5c31\u4f1a\u7740\u624b\u8fdb\u884c\u5783\u573e\u56de\u6536\u5de5\u4f5c\u3002JVM \u8fdb\u884c GC \u7684\u65f6\u95f4\u70b9\u662f\u65e0\u6cd5\u51c6\u786e\u9884\u77e5\u7684\u3002\u56e0\u4e3a GC \u542f\u52a8\u7684\u65f6\u523b\u4f1a\u53d7\u5230\u5404\u79cd\u8fd0\u884c\u73af\u5883\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u968f\u673a\u6027\u592a\u5927\\n    * \u901a\u8fc7 JVM \u7684\u547d\u4ee4\u884c\u53c2\u6570\u201c-XX:+PrintGC\u201d\u628a\u76f8\u5173\u56de\u6536\u4fe1\u606f\u6253\u5370\u51fa\u6765\\n* \u8c01\u8d1f\u8d23\u56de\u6536?\\n    * JVM \u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4e13\u95e8\u7684\u5783\u573e\u56de\u6536\u7ebf\u7a0b\uff0c\u7531\u5b83\u4eec\u8d1f\u8d23\u6e05\u7406\u56de\u6536\u5783\u573e\u5185\u5b58\u3002\\n* \u5982\u4f55\u53d1\u73b0\u5783\u573e\u5bf9\u8c61\uff1f\\n    * \u5783\u573e\u56de\u6536\u7ebf\u7a0b\u4f1a\u4ece\u201c\u6839\u96c6\uff08Root Set\uff09\u201d\u5f00\u59cb\u8fdb\u884c\u5bf9\u8c61\u5f15\u7528\u7684\u904d\u5386\u3002\u6240\u8c13\u7684\u201c\u6839\u96c6\u201d\uff0c\u5c31\u662f\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7684\u3010\u5f15\u7528\u53d8\u91cf\u3011\u7684\u96c6\u5408\uff08\u6bd4\u5982\u6240\u6709\u7ebf\u7a0b\u5f53\u524d\u51fd\u6570\u7684\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\u3001\u5f53\u524d\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u7b49\u7b49\uff09\u3002\u5783\u573e\u56de\u6536\u7ebf\u7a0b\u5148\u627e\u51fa\u88ab\u6839\u96c6\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61\uff08\u4e0d\u59a8\u53eb\u96c6\u54081\uff09\uff0c\u7136\u540e\u518d\u627e\u51fa\u88ab\u96c6\u54081\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61\uff08\u4e0d\u59a8\u53eb\u96c6\u54082\uff09\uff0c\u7136\u540e\u518d\u627e\u51fa\u88ab\u96c6\u54082\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61......\u5982\u6b64\u5faa\u73af\u5f80\u590d\uff0c\u76f4\u5230\u628a\u80fd\u904d\u5386\u5230\u7684\u5bf9\u8c61\u90fd\u904d\u5386\u5b8c\u3002\u5982\u679c\u80fd\u591f\u904d\u5386\u5230, \u5219\u6709\u6548, \u6ca1\u6709\u904d\u5386\u5230\u5219\u56de\u6536\\n    * \u628a\u5783\u573e\u5185\u5b58\u91cd\u65b0\u53d8\u4e3a\u53ef\u7528\u5185\u5b58\u3001\u8fdb\u884c\u5185\u5b58\u7684\u6574\u7406\u4ee5\u6d88\u9664\u5185\u5b58\u788e\u7247\u3001\u7b49\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u6d89\u53ca\u5230\u82e5\u5e72\u7b97\u6cd5\\n* \u5206\u4ee3\\n    * \u65e9\u671f\u7684jvm\u6ca1\u6709\u5206\u4ee3\u6280\u672f, \u6240\u6709\u88ab GC \u7ba1\u7406\u7684\u5bf9\u8c61\u90fd\u5b58\u653e\u5728\u540c\u4e00\u4e2a\u5806\u91cc\u9762,\u6bcf\u6b21\u8fdb\u884cGC\u90fd\u8981\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5f00\u9500\u5f88\u5927,\u4ece JDK 1.2 \u4e4b\u540e\uff0cJVM \u5f00\u59cb\u4f7f\u7528\u5206\u4ee3\u7684\u5783\u573e\u56de\u6536\uff08Generational Garbage Collection\uff09\\n    * \u201c\u5e74\u8001\u4ee3\u201d\uff08Tenured\uff09\u548c\u201c\u5e74\u8f7b\u4ee3\u201d\uff08Nursery\uff09\u3001\u201c\u6301\u4e45\u4ee3\u201d\uff08Permanent\uff0c\u5bf9\u5e94\u4e8e JVM \u89c4\u8303\u7684\u201c\u65b9\u6cd5\u533a\u201d\uff09\\n    * \u3010\u5927\u90e8\u5206\u3011\u5bf9\u8c61\u5728\u521a\u521b\u5efa\u65f6\uff0c\u90fd\u4f4d\u4e8e\u201c\u5e74\u8f7b\u4ee3\u201d\u3002\u5982\u679c\u67d0\u5bf9\u8c61\u7ecf\u5386\u4e86\u51e0\u8f6e GC \u8fd8\u6d3b\u7740\uff08\u5927\u9f84\u5bf9\u8c61\uff09\uff0c\u5c31\u628a\u5b83\u79fb\u5230\u201c\u5e74\u8001\u4ee3\u201d\u3002\u53e6\u5916\uff0c\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u5728\u521b\u5efa\u65f6\u6bd4\u8f83\u5927\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u88ab\u4e22\u5230\u5e74\u8001\u4ee3\u3002\u7ecf\u8fc7\u8fd9\u79cd\u7b56\u7565\uff0c\u4f7f\u5f97\u5e74\u8f7b\u4ee3\u603b\u662f\u4fdd\u5b58\u90a3\u4e9b\u77ed\u547d\u7684\u5c0f\u5bf9\u8c61\u3002\u5728\u7a7a\u95f4\u5c3a\u5bf8\u4e0a\uff0c\u201c\u5e74\u8f7b\u4ee3\u201d\u76f8\u5bf9\u8f83\u5c0f\uff0c\u800c\u201c\u5e74\u8001\u4ee3\u201d\u76f8\u5bf9\u8f83\u5927\u3002\\n    * \u56e0\u4e3a\u6709\u4e86\u5206\u4ee3\u6280\u672f\uff0cJVM \u7684 GC \u4e5f\u76f8\u5e94\u5206\u4e3a\u4e24\u79cd\u2014\u2014\u4e3b\u8981\u6536\u96c6\uff08Major Collection\uff09\u548c\u6b21\u8981\u6536\u96c6\uff08Minor Collection\uff09\u3002\u201c\u4e3b\u8981\u6536\u96c6\u201d\u540c\u65f6\u6e05\u7406\u5e74\u8001\u4ee3\u548c\u5e74\u8f7b\u4ee3\uff0c\u56e0\u6b64\u5f00\u9500\u5f88\u5927\uff0c\u4e0d\u5e38\u8fdb\u884c\uff1b\u201c\u6b21\u8981\u6536\u96c6\u201d\u4ec5\u4ec5\u6e05\u7406\u5e74\u8f7b\u4ee3\uff0c\u5f00\u9500\u5f88\u5c0f\uff0c\u7ecf\u5e38\u8fdb\u884c\u3002\\n\\n## GC\u5bf9\u6027\u80fd\u4f1a\u6709\u5565\u5f71\u54cd\\n\\n* \u9020\u6210\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684\u505c\u987f\\n* \u904d\u5386\u5bf9\u8c61\u5f15\u7528\u7684\u5f00\u9500\\n* \u6e05\u7406\u548c\u56de\u6536\u5783\u573e\u7684\u5f00\u9500(\u90e8\u5206\u5f00\u9500\u53ef\u80fd\u5305\u62ec\u590d\u5236\u5185\u5b58\u5757\u3001\u66f4\u65b0\u5bf9\u8c61\u5f15\u7528\u7b49\u7b49\u3002)\\n\\n## \u51e0\u79cd\u6536\u96c6\u5668\\n\\n\u8861\u91cf GC \u6027\u80fd\u7684\u4e24\u4e2a\u91cd\u8981\u6307\u6807\uff1a\u541e\u5410\u91cf\uff08Throughput\uff09\u548c\u505c\u987f\u65f6\u95f4\uff08Pause Time\uff09\u3002\u541e\u5410\u91cf\u8fd9\u4e2a\u8bcd\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u89e3\u91ca\u4e00\u4e0b\uff1a\u5c31\u662f JVM\u3010\u4e0d\u7528\u4e8e\u3011GC \u7684\u65f6\u95f4\u5360\u603b\u65f6\u95f4\u7684\u6bd4\u7387\u3002\u201c\u541e\u5410\u91cf\u201d\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u201c\u505c\u987f\u65f6\u95f4\u201d\u662f\u8d8a\u5c0f\u8d8a\u597d\u3002\\n\\n* \u4e32\u884c\u6536\u96c6\u5668\uff08Serial Collector\uff09\\n* \u5e76\u884c\u6536\u96c6\u5668\uff08Parallel Throughput Collector\uff09\\n* \u5e76\u53d1\u6536\u96c6\u5668\uff08Concurrent Low Pause Collector\uff09\\n\\n## \u5982\u4f55\u964d\u4f4eGC\u7684\u5f71\u54cd\uff1f\\n\\n* \u5c3d\u91cf\u51cf\u5c11\u5806\u5185\u5b58\u7684\u4f7f\u7528\\n* \u8bbe\u7f6e\u5408\u9002\u7684\u5806\u5185\u5b58\u5927\u5c0f\\n    * JVM \u7684\u5806\u5185\u5b58\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u4e0d\u80fd\u592a\u5927\u4e5f\u4e0d\u80fd\u592a\u5c0f\u3002\u5982\u679c\u5806\u5185\u5b58\u592a\u5c0f\uff0cJVM \u8001\u662f\u611f\u89c9\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9891\u7e41\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u5f71\u54cd\u4e86\u6027\u80fd\uff1b\u5982\u679c\u5806\u5185\u5b58\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5927\u90e8\u5206\u7269\u7406\u5185\u5b58\u90fd\u88ab JVM \u81ea\u4e2a\u513f\u9738\u5360\u4e86\uff0c\u90a3\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u751a\u81f3\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u7684\u6027\u80fd\u3002\u53e6\u5916\uff0c\u5e74\u8f7b\u4ee3\u7684\u5927\u5c0f\uff08\u6216\u8005\u8bf4\u201c\u5e74\u8f7b\u4ee3\u201d\u4e0e\u201c\u5e74\u8001\u4ee3\u201d\u7684\u6bd4\u503c\uff09\u5bf9\u4e8e GC \u7684\u6027\u80fd\u4e5f\u6709\u660e\u663e\u5f71\u54cd\u3002\u5982\u679c\u5e74\u8f7b\u4ee3\u592a\u5c0f\uff0c\u53ef\u80fd\u5bfc\u81f4\u6b21\u8981\u6536\u96c6\u5f88\u9891\u7e41\uff1b\u5982\u679c\u5e74\u8f7b\u4ee3\u592a\u5927\uff0c\u5bfc\u81f4\u6b21\u8981\u6536\u96c6\u7684\u505c\u987f\u5f88\u660e\u663e\u3002\\n* \u541e\u5410\u91cf\u548c\u505c\u987f\u7684\u53d6\u820d\\n    * (1)\u770b\u91cd\u541e\u5410\u91cf\uff0c\u5bf9\u505c\u987f\u65f6\u95f4\u65e0\u6240\u8c13\uff1b(2)\u4fa7\u91cd\u4e8e\u505c\u987f\u65f6\u95f4\u3002\\n    * \u5bf9\u4e8e\u67d0\u4e9b\u5728\u540e\u53f0\u7684\u3001\u5355\u7eaf\u8fd0\u7b97\u5bc6\u96c6\u578b\u7684\u5e94\u7528\uff0c\u5c5e\u4e8e\u7b2c\u4e00\u79cd\u3002\u6bd4\u5982\u67d0\u4e9b\u79d1\u5b66\u8ba1\u7b97\u7684\u5e94\u7528\u3002\u8fd9\u65f6\u5019\u5efa\u8bae\u4f7f\u7528\u5e76\u884c\u6536\u96c6\u5668\u3002\\n    * \u5bf9\u4e8e\u6d89\u53ca\u7528\u6237 UI \u4ea4\u4e92\u7684\u3001\u5b9e\u65f6\u6027\u8981\u6c42\u6bd4\u8f83\u9ad8\u3001\u7a0b\u5e8f\u9700\u8981\u5feb\u901f\u54cd\u5e94\u7684\uff0c\u5c5e\u4e8e\u7b2c\u4e8c\u79cd\u3002\u6bd4\u5982\u67d0\u4e9b\u684c\u9762\u6e38\u620f\u3001\u67d0\u4e9b\u7535\u4fe1\u4ea4\u6362\u7cfb\u7edf\u3002\u8fd9\u65f6\u5019\u5efa\u8bae\u4f7f\u7528\u5e76\u53d1\u6536\u96c6\u5668\u3002\\n\\n\\n\\n\\n# \u5173\u4e8e\u8303\u578b\uff08Generic Programming\uff09\\n\\nGP \u662f\u5728\u7f16\u8bd1\u65f6\u5b9e\u73b0\u7684\u8fd8\u662f\u5728\u8fd0\u884c\u65f6\u5b9e\u73b0\u7684\uff1f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5b9e\u73b0\uff1f\\nGP \u7684\u7c7b\u578b\u64e6\u9664\u673a\u5236\u662f\u548b\u56de\u4e8b\uff1f\u6709\u5565\u4f18\u70b9/\u7f3a\u70b9\uff1f\\n\u4f7f\u7528\u8303\u578b\u5bb9\u5668\uff08\u76f8\u5bf9\u4e8e\u4f20\u7edf\u5bb9\u5668\uff09\u5728\u6027\u80fd\u4e0a\u6709\u5565\u5f71\u54cd\uff1f\u4e3a\u4ec0\u4e48\uff1f\\n\\n# \u5173\u4e8e\u591a\u7ebf\u7a0b\\n\\nsynchronized \u5173\u952e\u5b57\u662f\u600e\u4e48\u8d77\u4f5c\u7528\u6ef4\uff1f\\n\\nsynchronized \u7684\u9897\u7c92\u5ea6\uff08\u6216\u8005\u8bf4\u4f5c\u7528\u57df\uff09\u5982\u4f55\uff1f\u662f\u9488\u5bf9\u67d0\u4e2a\u7c7b\u8fd8\u662f\u9488\u5bf9\u67d0\u4e2a\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\uff1f\\n\\nsynchronized \u5bf9\u6027\u80fd\u6709\u6ca1\u6709\u5f71\u54cd\uff1f\u4e3a\u4ec0\u4e48\uff1f\\n\\nvolatile \u5173\u952e\u5b57\u53c8\u662f\u6d3e\u5565\u7528\u6ef4\uff1f\u5565\u65f6\u5019\u9700\u8981\u7528\u8fd9\u4e2a\u5173\u952e\u5b57\u634f\uff1f"}]}')}}]);