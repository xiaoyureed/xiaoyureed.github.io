"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7516],{3905:function(n,e,t){t.d(e,{Zo:function(){return p},kt:function(){return g}});var r=t(67294);function a(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){a(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,a=function(n,e){if(null==n)return{};var t,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||(a[t]=n[t]);return a}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)t=i[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(a[t]=n[t])}return a}var s=r.createContext({}),u=function(n){var e=r.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},p=function(n){var e=u(n.components);return r.createElement(s.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,a=n.mdxType,i=n.originalType,s=n.parentName,p=o(n,["components","mdxType","originalType","parentName"]),m=u(t),g=a,f=m["".concat(s,".").concat(g)]||m[g]||c[g]||i;return t?r.createElement(f,l(l({ref:e},p),{},{components:t})):r.createElement(f,l({ref:e},p))}));function g(n,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof n||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=n,o.mdxType="string"==typeof n?n:a,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},69750:function(n,e,t){t.r(e),t.d(e,{assets:function(){return p},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return c}});var r=t(83117),a=t(80102),i=(t(67294),t(3905)),l=["components"],o={title:"Golang \u7b14\u8bb0",tags:["go"],date:new Date("2020-05-04T00:00:00.000Z"),toc_min_heading_level:2,toc_max_heading_level:5},s=void 0,u={unversionedId:"golang-note",id:"golang-note",title:"Golang \u7b14\u8bb0",description:"- 1. \u7b80\u4ecb",source:"@site/docs/golang-note.md",sourceDirName:".",slug:"/golang-note",permalink:"/docs/golang-note",draft:!1,tags:[{label:"go",permalink:"/docs/tags/go"}],version:"current",frontMatter:{title:"Golang \u7b14\u8bb0",tags:["go"],date:"2020-05-04T00:00:00.000Z",toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Git \u5907\u5fd8 \ud83c\udf08",permalink:"/docs/git-note"},next:{title:"\u57fa\u4e8e\u5730\u7406\u4f4d\u7f6e\u5f00\u53d1\u6280\u672f",permalink:"/docs/gps-gis-tracing"}},p={},c=[{value:"2.1. \u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf",id:"21-\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf",level:2},{value:"2.2. install",id:"22-install",level:2},{value:"2.3. \u56fd\u5185\u955c\u50cf",id:"23-\u56fd\u5185\u955c\u50cf",level:2},{value:"2.4. IDE",id:"24-ide",level:2},{value:"6.1. == DeepEqual \u5224\u65ad\u76f8\u7b49",id:"61--deepequal-\u5224\u65ad\u76f8\u7b49",level:2},{value:"6.2. \u957f\u8d4b\u503c \u77ed\u8d4b\u503c",id:"62-\u957f\u8d4b\u503c-\u77ed\u8d4b\u503c",level:2},{value:"6.3. make \u548c new \u548c var",id:"63-make-\u548c-new-\u548c-var",level:2},{value:"6.4. \u96f6\u503c nil",id:"64-\u96f6\u503c-nil",level:2},{value:"6.5. \u57fa\u672c\u6570\u636e\u7c7b\u578b",id:"65-\u57fa\u672c\u6570\u636e\u7c7b\u578b",level:2},{value:"6.6. \u5b57\u7b26\u4e32 string",id:"66-\u5b57\u7b26\u4e32-string",level:2},{value:"6.6.1. string \u57fa\u672c\u4f7f\u7528",id:"661-string-\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.6.2. \u9ad8\u6548\u7684\u62fc\u63a5\u65b9\u5f0f",id:"662-\u9ad8\u6548\u7684\u62fc\u63a5\u65b9\u5f0f",level:3},{value:"6.6.3. \u683c\u5f0f\u5316\u5360\u4f4d\u7b26",id:"663-\u683c\u5f0f\u5316\u5360\u4f4d\u7b26",level:3},{value:"6.7. array \u548c slice",id:"67-array-\u548c-slice",level:2},{value:"6.7.1. \u6570\u7ec4",id:"671-\u6570\u7ec4",level:3},{value:"6.7.2. \u5207\u7247",id:"672-\u5207\u7247",level:3},{value:"6.7.2.1. \u5207\u7247\u57fa\u672c\u4f7f\u7528",id:"6721-\u5207\u7247\u57fa\u672c\u4f7f\u7528",level:4},{value:"6.7.2.2. \u5207\u7247\u5f15\u7528 Full Slice Expression",id:"6722-\u5207\u7247\u5f15\u7528-full-slice-expression",level:4},{value:"6.7.2.3. \u4f7f\u7528 copy \u9632\u6b62\u5927\u91cf\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e",id:"6723-\u4f7f\u7528-copy-\u9632\u6b62\u5927\u91cf\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e",level:4},{value:"6.8. map",id:"68-map",level:2},{value:"6.8.1. map \u57fa\u672c\u4f7f\u7528",id:"681-map-\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.8.2. \u5e76\u53d1\u5b89\u5168\u7684 map",id:"682-\u5e76\u53d1\u5b89\u5168\u7684-map",level:3},{value:"6.9. container \u5305",id:"69-container-\u5305",level:2},{value:"6.9.1. heap",id:"691-heap",level:3},{value:"6.9.2. ring",id:"692-ring",level:3},{value:"6.9.3. list",id:"693-list",level:3},{value:"6.10. \u8fed\u4ee3 range",id:"610-\u8fed\u4ee3-range",level:2},{value:"6.10.1. \u8fed\u4ee3slice",id:"6101-\u8fed\u4ee3slice",level:3},{value:"6.10.2. \u8fed\u4ee3 map",id:"6102-\u8fed\u4ee3-map",level:3},{value:"6.10.3. \u8fed\u4ee3 channel",id:"6103-\u8fed\u4ee3-channel",level:3},{value:"6.10.4. for \u548c range \u6027\u80fd\u5dee\u5f02",id:"6104-for-\u548c-range-\u6027\u80fd\u5dee\u5f02",level:3},{value:"6.11. \u6307\u9488",id:"611-\u6307\u9488",level:2},{value:"6.12. \u7ed3\u6784\u4f53struct",id:"612-\u7ed3\u6784\u4f53struct",level:2},{value:"6.12.1. struct \u57fa\u672c\u4f7f\u7528",id:"6121-struct-\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.12.2. \u7a7a struct",id:"6122-\u7a7a-struct",level:3},{value:"6.12.2.1. \u5229\u7528 map\u5b9e\u73b0\u96c6\u5408set",id:"61221-\u5229\u7528-map\u5b9e\u73b0\u96c6\u5408set",level:4},{value:"6.12.2.2. \u5229\u7528 channel \u4f5c\u4e3a\u901a\u77e5\u901a\u9053",id:"61222-\u5229\u7528-channel-\u4f5c\u4e3a\u901a\u77e5\u901a\u9053",level:4},{value:"6.12.3. \u533f\u540d\u7ed3\u6784\u4f53 \u7ee7\u627f \u91cd\u5199",id:"6123-\u533f\u540d\u7ed3\u6784\u4f53-\u7ee7\u627f-\u91cd\u5199",level:3},{value:"6.13. \u63a5\u53e3 interface",id:"613-\u63a5\u53e3-interface",level:2},{value:"6.13.1. \u5728 IDE \u4e2d\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3",id:"6131-\u5728-ide-\u4e2d\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3",level:3},{value:"6.13.2. \u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2 \u503c\u63a5\u6536\u8005 \u6307\u9488\u63a5\u6536\u8005",id:"6132-\u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2-\u503c\u63a5\u6536\u8005-\u6307\u9488\u63a5\u6536\u8005",level:3},{value:"6.13.3. \u7a7a\u63a5\u53e3",id:"6133-\u7a7a\u63a5\u53e3",level:3},{value:"6.13.4. \u7c7b\u578b\u65ad\u8a00",id:"6134-\u7c7b\u578b\u65ad\u8a00",level:3},{value:"6.13.5. \u5185\u7f6e\u63a5\u53e3",id:"6135-\u5185\u7f6e\u63a5\u53e3",level:3},{value:"6.13.6. \u63a5\u53e3\u5d4c\u5957",id:"6136-\u63a5\u53e3\u5d4c\u5957",level:3},{value:"6.13.7. \u63a5\u53e3\u5b8c\u6574\u6027\u68c0\u67e5",id:"6137-\u63a5\u53e3\u5b8c\u6574\u6027\u68c0\u67e5",level:3},{value:"6.14. \u51fd\u6570",id:"614-\u51fd\u6570",level:2},{value:"6.14.1. \u51fd\u6570\u57fa\u672c\u8bed\u6cd5",id:"6141-\u51fd\u6570\u57fa\u672c\u8bed\u6cd5",level:3},{value:"6.14.2. \u503c\u4f20\u9012 \u5f15\u7528\u4f20\u9012",id:"6142-\u503c\u4f20\u9012-\u5f15\u7528\u4f20\u9012",level:3},{value:"6.14.3. \u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf \u9003\u9038\u5206\u6790",id:"6143-\u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf-\u9003\u9038\u5206\u6790",level:3},{value:"6.15. \u95ed\u5305",id:"615-\u95ed\u5305",level:2},{value:"6.16. \u65b9\u6cd5 \u548c \u63a5\u6536\u5668",id:"616-\u65b9\u6cd5-\u548c-\u63a5\u6536\u5668",level:2},{value:"6.17. \u6d41\u7a0b\u63a7\u5236",id:"617-\u6d41\u7a0b\u63a7\u5236",level:2},{value:"6.17.1. \u6b7b\u5faa\u73af for \u548c select \u533a\u522b",id:"6171-\u6b7b\u5faa\u73af-for-\u548c-select-\u533a\u522b",level:3},{value:"6.17.2. if \u548c for \u5faa\u73af",id:"6172-if-\u548c-for-\u5faa\u73af",level:3},{value:"6.17.3. \u6807\u7b7e goto break",id:"6173-\u6807\u7b7e-goto-break",level:3},{value:"6.17.4. defer",id:"6174-defer",level:3},{value:"6.18. sort \u5305",id:"618-sort-\u5305",level:2},{value:"6.19. http",id:"619-http",level:2},{value:"6.19.1. \u539f\u7406",id:"6191-\u539f\u7406",level:3},{value:"6.19.2. \u6848\u4f8b:\u5ba2\u6237\u7aef\u8d85\u65f6\u53d6\u6d88",id:"6192-\u6848\u4f8b\u5ba2\u6237\u7aef\u8d85\u65f6\u53d6\u6d88",level:3},{value:"6.20. context",id:"620-context",level:2},{value:"6.20.1. context\u6ce8\u610f\u5b9e\u73b0",id:"6201-context\u6ce8\u610f\u5b9e\u73b0",level:3},{value:"6.20.2. WithCancel",id:"6202-withcancel",level:3},{value:"6.20.3. WithDeadline",id:"6203-withdeadline",level:3},{value:"6.20.4. WithTimeout",id:"6204-withtimeout",level:3},{value:"6.20.5. WithValue",id:"6205-withvalue",level:3},{value:"6.21. io",id:"621-io",level:2},{value:"6.21.1. \u6587\u4ef6\u64cd\u4f5c",id:"6211-\u6587\u4ef6\u64cd\u4f5c",level:3},{value:"6.21.2. scanner",id:"6212-scanner",level:3},{value:"6.22. image",id:"622-image",level:2},{value:"6.23. channel csp\u5e76\u53d1\u63a7\u5236",id:"623-channel-csp\u5e76\u53d1\u63a7\u5236",level:2},{value:"6.23.1. channel \u4f7f\u7528",id:"6231-channel-\u4f7f\u7528",level:3},{value:"6.23.2. \u5229\u7528 nil channel \u5b9e\u73b0\u52a8\u6001 \u7684 select case",id:"6232-\u5229\u7528-nil-channel-\u5b9e\u73b0\u52a8\u6001-\u7684-select-case",level:3},{value:"6.23.3. \u8fed\u4ee3 channel \u5143\u7d20",id:"6233-\u8fed\u4ee3-channel-\u5143\u7d20",level:3},{value:"6.23.3.1. \u4f7f\u7528 for range",id:"62331-\u4f7f\u7528-for-range",level:4},{value:"6.23.3.2. \u4f7f\u7528 for select",id:"62332-\u4f7f\u7528-for-select",level:4},{value:"6.23.4. \u4f7f\u7528\u56de\u8c03\u800c\u4e0d\u662f\u8fd4\u56de channel",id:"6234-\u4f7f\u7528\u56de\u8c03\u800c\u4e0d\u662f\u8fd4\u56de-channel",level:3},{value:"6.23.5. \u4ec5\u9700\u4efb\u610f\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0",id:"6235-\u4ec5\u9700\u4efb\u610f\u4efb\u52a1\u5b8c\u6210-\u5229\u7528-buffered-channel-\u5b9e\u73b0",level:3},{value:"6.23.6. \u9700\u8981\u6240\u6709\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0",id:"6236-\u9700\u8981\u6240\u6709\u4efb\u52a1\u5b8c\u6210-\u5229\u7528-buffered-channel-\u5b9e\u73b0",level:3},{value:"6.23.7. \u5229\u7528 close channel \u5b9e\u73b0\u5e7f\u64ad",id:"6237-\u5229\u7528-close-channel-\u5b9e\u73b0\u5e7f\u64ad",level:3},{value:"6.23.8. \u5bf9\u8c61\u6c60",id:"6238-\u5bf9\u8c61\u6c60",level:3},{value:"6.23.8.1. \u5229\u7528 no buffered channel \u5b9e\u73b0\u5bf9\u8c61\u6c60",id:"62381-\u5229\u7528-no-buffered-channel-\u5b9e\u73b0\u5bf9\u8c61\u6c60",level:4},{value:"6.23.8.2. sync.pool \u5bf9\u8c61\u7f13\u5b58",id:"62382-syncpool-\u5bf9\u8c61\u7f13\u5b58",level:4},{value:"6.23.9. \u4f18\u96c5\u5173\u95ed channel",id:"6239-\u4f18\u96c5\u5173\u95ed-channel",level:3},{value:"6.24. goroutine",id:"624-goroutine",level:2},{value:"6.24.1. goroutine\u539f\u7406",id:"6241-goroutine\u539f\u7406",level:3},{value:"6.24.1.1. \u5982\u4f55\u7406\u89e3\u534f\u7a0b",id:"62411-\u5982\u4f55\u7406\u89e3\u534f\u7a0b",level:4},{value:"6.24.1.2. \u548c\u7ebf\u7a0b\u5bf9\u6bd4",id:"62412-\u548c\u7ebf\u7a0b\u5bf9\u6bd4",level:4},{value:"6.24.2. \u534f\u7a0b\u5728\u5185\u5b58\u5c42\u9762\u7684\u5b9e\u73b0",id:"6242-\u534f\u7a0b\u5728\u5185\u5b58\u5c42\u9762\u7684\u5b9e\u73b0",level:3},{value:"6.24.3. goroutine\u57fa\u672c\u4f7f\u7528",id:"6243-goroutine\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.24.4. goroutine \u6355\u83b7\u5916\u90e8\u53d8\u91cf",id:"6244-goroutine-\u6355\u83b7\u5916\u90e8\u53d8\u91cf",level:3},{value:"6.24.5. \u4f7f\u7528select \u5904\u7406\u8d85\u65f6",id:"6245-\u4f7f\u7528select-\u5904\u7406\u8d85\u65f6",level:3},{value:"6.24.6. \u4f18\u96c5\u9000\u51fa goroutine",id:"6246-\u4f18\u96c5\u9000\u51fa-goroutine",level:3},{value:"6.24.6.1. \u901a\u8fc7\u5168\u5c40\u53d8\u91cf waitGroup",id:"62461-\u901a\u8fc7\u5168\u5c40\u53d8\u91cf-waitgroup",level:4},{value:"6.24.6.2. \u901a\u8fc7 channel \u7684\u65b9\u5f0f",id:"62462-\u901a\u8fc7-channel-\u7684\u65b9\u5f0f",level:4},{value:"6.24.6.3. \u901a\u8fc7 context \u5b98\u65b9\u63a8\u8350",id:"62463-\u901a\u8fc7-context-\u5b98\u65b9\u63a8\u8350",level:4},{value:"6.24.7. \u9650\u5236\u5e76\u53d1\u6570\u91cf",id:"6247-\u9650\u5236\u5e76\u53d1\u6570\u91cf",level:3},{value:"6.24.8. \u6848\u4f8b-\u5206\u6bb5\u6267\u884c\u4efb\u52a1\u7684\u9000\u51fa",id:"6248-\u6848\u4f8b-\u5206\u6bb5\u6267\u884c\u4efb\u52a1\u7684\u9000\u51fa",level:3},{value:"6.25. \u9501 \u5171\u4eab\u5185\u5b58\u4e0b\u7684\u5e76\u53d1\u63a7\u5236",id:"625-\u9501-\u5171\u4eab\u5185\u5b58\u4e0b\u7684\u5e76\u53d1\u63a7\u5236",level:2},{value:"6.25.1. Mutex \u4e92\u65a5\u9501",id:"6251-mutex-\u4e92\u65a5\u9501",level:3},{value:"6.25.2. \u9501\u7684\u516c\u5e73\u6027",id:"6252-\u9501\u7684\u516c\u5e73\u6027",level:3},{value:"6.25.3. RWMutex\u8bfb\u5199\u9501",id:"6253-rwmutex\u8bfb\u5199\u9501",level:3},{value:"6.25.4. sync.Once\u53ea\u5141\u8bb8\u6267\u884c\u4e00\u6b21",id:"6254-synconce\u53ea\u5141\u8bb8\u6267\u884c\u4e00\u6b21",level:3},{value:"6.25.5. sync.Cond \u591a\u4e2a\u89c2\u5bdf\u8005\u7b49\u5f85\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210 \u5e7f\u64ad",id:"6255-synccond-\u591a\u4e2a\u89c2\u5bdf\u8005\u7b49\u5f85\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210-\u5e7f\u64ad",level:3},{value:"6.25.6. waitGroup \u7b49\u5f85\u591a\u4e2a\u4efb\u52a1\u5168\u90e8\u5fc5\u987b\u5b8c\u6210",id:"6256-waitgroup-\u7b49\u5f85\u591a\u4e2a\u4efb\u52a1\u5168\u90e8\u5fc5\u987b\u5b8c\u6210",level:3},{value:"6.25.7. \u9501\u76f8\u5173\u6848\u4f8b",id:"6257-\u9501\u76f8\u5173\u6848\u4f8b",level:3},{value:"6.25.7.1. \u5355\u4f8b\u6a21\u5f0f",id:"62571-\u5355\u4f8b\u6a21\u5f0f",level:4},{value:"6.26. atomic \u539f\u5b50\u64cd\u4f5c",id:"626-atomic-\u539f\u5b50\u64cd\u4f5c",level:2},{value:"6.27. \u53cd\u5c04 reflect",id:"627-\u53cd\u5c04-reflect",level:2},{value:"6.27.1. \u53cd\u5c04\u57fa\u672c\u4f7f\u7528",id:"6271-\u53cd\u5c04\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.27.1.1. \u83b7\u53d6\u51fd\u6570\u540d\u79f0",id:"62711-\u83b7\u53d6\u51fd\u6570\u540d\u79f0",level:4},{value:"6.27.1.2. \u5b9e\u73b0\u7c7b\u578b\u65ad\u8a00",id:"62712-\u5b9e\u73b0\u7c7b\u578b\u65ad\u8a00",level:4},{value:"6.27.1.3. \u4e3a\u4efb\u4f55 struct \u8bbe\u7f6e\u503c",id:"62713-\u4e3a\u4efb\u4f55-struct-\u8bbe\u7f6e\u503c",level:4},{value:"6.27.1.4. \u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e",id:"62714-\u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e",level:4},{value:"6.27.2. \u53cd\u5c04\u6027\u80fd\u4f18\u5316",id:"6272-\u53cd\u5c04\u6027\u80fd\u4f18\u5316",level:3},{value:"6.27.3. \u53cd\u5c04\u5b9e\u73b0 filter map reduce",id:"6273-\u53cd\u5c04\u5b9e\u73b0-filter-map-reduce",level:3},{value:"6.28. \u6cdb\u578b",id:"628-\u6cdb\u578b",level:2},{value:"6.28.1. \u6cdb\u578b\u4f7f\u7528",id:"6281-\u6cdb\u578b\u4f7f\u7528",level:3},{value:"6.28.2. go generation",id:"6282-go-generation",level:3},{value:"6.29. unsafe \u4e0d\u5b89\u5168\u7f16\u7a0b",id:"629-unsafe-\u4e0d\u5b89\u5168\u7f16\u7a0b",level:2},{value:"6.30. http \u670d\u52a1",id:"630-http-\u670d\u52a1",level:2},{value:"6.30.1. http \u5305",id:"6301-http-\u5305",level:3},{value:"6.30.2. \u81ea\u5b9a\u4e49\u590d\u7528\u5668",id:"6302-\u81ea\u5b9a\u4e49\u590d\u7528\u5668",level:3},{value:"6.30.3. \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6",id:"6303-\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6",level:3},{value:"6.30.4. \u83b7\u53d6 ip \u5730\u5740",id:"6304-\u83b7\u53d6-ip-\u5730\u5740",level:3},{value:"6.30.5. \u66f4\u597d\u7528\u7684\u8def\u7531 router",id:"6305-\u66f4\u597d\u7528\u7684\u8def\u7531-router",level:3},{value:"6.31. json \u5305",id:"631-json-\u5305",level:2},{value:"6.31.1. json\u57fa\u672c\u4f7f\u7528",id:"6311-json\u57fa\u672c\u4f7f\u7528",level:3},{value:"6.31.2. \u4e34\u65f6\u5ffd\u7565json \u5b57\u6bb5",id:"6312-\u4e34\u65f6\u5ffd\u7565json-\u5b57\u6bb5",level:3},{value:"6.31.3. \u4e34\u65f6\u7c98\u5408\u4e24\u4e2astruct",id:"6313-\u4e34\u65f6\u7c98\u5408\u4e24\u4e2astruct",level:3},{value:"6.31.4. \u4e00\u4e2ajson\u5207\u5206\u6210\u4e24\u4e2astruct",id:"6314-\u4e00\u4e2ajson\u5207\u5206\u6210\u4e24\u4e2astruct",level:3},{value:"6.31.5. \u7528\u5b57\u7b26\u4e32\u4f20\u9012\u6570\u5b57",id:"6315-\u7528\u5b57\u7b26\u4e32\u4f20\u9012\u6570\u5b57",level:3},{value:"6.31.6. \u4f7f\u7528 json\u7684RawMessage",id:"6316-\u4f7f\u7528-json\u7684rawmessage",level:3},{value:"6.32. socket \u7f16\u7a0b",id:"632-socket-\u7f16\u7a0b",level:2},{value:"6.32.1. tcp",id:"6321-tcp",level:3},{value:"6.32.1.1. \u7c98\u5305\u95ee\u9898",id:"63211-\u7c98\u5305\u95ee\u9898",level:4},{value:"6.32.1.2. \u89e3\u51b3\u7c98\u5305 scanner",id:"63212-\u89e3\u51b3\u7c98\u5305-scanner",level:4},{value:"6.32.1.3. \u89e3\u51b3\u7c98\u5305 \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801",id:"63213-\u89e3\u51b3\u7c98\u5305-\u81ea\u5b9a\u4e49\u7f16\u89e3\u7801",level:4},{value:"6.32.2. udp",id:"6322-udp",level:3},{value:"6.33. websocket",id:"633-websocket",level:2},{value:"6.34. Unicode \u5305",id:"634-unicode-\u5305",level:2},{value:"6.35. time \u5305",id:"635-time-\u5305",level:2},{value:"6.35.1. \u5b9a\u65f6\u5668",id:"6351-\u5b9a\u65f6\u5668",level:3},{value:"6.35.2. \u7edf\u8ba1\u8fd0\u884c\u65f6\u95f4",id:"6352-\u7edf\u8ba1\u8fd0\u884c\u65f6\u95f4",level:3},{value:"6.35.3. \u65f6\u95f4\u521d\u59cb\u5316",id:"6353-\u65f6\u95f4\u521d\u59cb\u5316",level:3},{value:"6.35.4. \u65f6\u95f4\u683c\u5f0f\u5316 \u65f6\u533a \u52a0\u51cf",id:"6354-\u65f6\u95f4\u683c\u5f0f\u5316-\u65f6\u533a-\u52a0\u51cf",level:3},{value:"6.36. math \u5305",id:"636-math-\u5305",level:2},{value:"6.36.1. \u968f\u673a\u503c",id:"6361-\u968f\u673a\u503c",level:3},{value:"6.36.2. \u7cbe\u5bc6\u8ba1\u7b97\u548c big \u5305",id:"6362-\u7cbe\u5bc6\u8ba1\u7b97\u548c-big-\u5305",level:3},{value:"6.37. \u6570\u636e\u5e93\u64cd\u4f5c",id:"637-\u6570\u636e\u5e93\u64cd\u4f5c",level:2},{value:"6.38. runtime\u5305",id:"638-runtime\u5305",level:2},{value:"6.39. flag\u5305",id:"639-flag\u5305",level:2},{value:"6.40. embed \u5305",id:"640-embed-\u5305",level:2},{value:"6.40.1. \u5185\u5d4c react \u9875\u9762",id:"6401-\u5185\u5d4c-react-\u9875\u9762",level:3},{value:"6.41. \u7f16\u8bd1\u65f6\u751f\u6210 \u7f16\u8bd1\u65f6\u7ea6\u675f go-generate go-build",id:"641-\u7f16\u8bd1\u65f6\u751f\u6210-\u7f16\u8bd1\u65f6\u7ea6\u675f-go-generate-go-build",level:2},{value:"7.1. \u8bbe\u8ba1\u6a21\u5f0f",id:"71-\u8bbe\u8ba1\u6a21\u5f0f",level:2},{value:"7.1.1. \u521b\u5efa\u578b",id:"711-\u521b\u5efa\u578b",level:3},{value:"7.1.1.1. \u7b80\u5355\u5de5\u5382",id:"7111-\u7b80\u5355\u5de5\u5382",level:4},{value:"7.1.1.2. \u5355\u4f8b",id:"7112-\u5355\u4f8b",level:4},{value:"7.1.2. \u884c\u4e3a\u578b",id:"712-\u884c\u4e3a\u578b",level:3},{value:"7.1.2.1. \u89c2\u5bdf\u8005",id:"7121-\u89c2\u5bdf\u8005",level:4},{value:"7.1.2.1.1. \u57fa\u672c\u793a\u4f8b",id:"71211-\u57fa\u672c\u793a\u4f8b",level:5},{value:"7.1.2.1.2. \u5b9e\u73b0 event bus",id:"71212-\u5b9e\u73b0-event-bus",level:5},{value:"7.1.3. \u7ed3\u6784\u578b",id:"713-\u7ed3\u6784\u578b",level:3},{value:"7.1.3.1. \u4ee3\u7406\u6a21\u5f0f",id:"7131-\u4ee3\u7406\u6a21\u5f0f",level:4},{value:"7.2. \u8c03\u8bd5 debug",id:"72-\u8c03\u8bd5-debug",level:2},{value:"7.3. \u6a21\u5757\u62c6\u5206",id:"73-\u6a21\u5757\u62c6\u5206",level:2},{value:"7.3.1. \u6309\u7167 mvc \u6a21\u5f0f\u62c6\u5206",id:"731-\u6309\u7167-mvc-\u6a21\u5f0f\u62c6\u5206",level:3},{value:"7.3.2. \u6309\u7167\u804c\u8d23\u5bf9\u8fdb\u884c\u62c6\u5206",id:"732-\u6309\u7167\u804c\u8d23\u5bf9\u8fdb\u884c\u62c6\u5206",level:3},{value:"7.3.3. \u6309\u4f9d\u8d56\u62c6\u5206",id:"733-\u6309\u4f9d\u8d56\u62c6\u5206",level:3},{value:"7.4. \u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u89c4\u8303",id:"74-\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u89c4\u8303",level:2},{value:"7.5. package \u5bfc\u5165\u81ea\u5b9a\u4e49\u5305",id:"75-package-\u5bfc\u5165\u81ea\u5b9a\u4e49\u5305",level:2},{value:"7.6. init \u65b9\u6cd5",id:"76-init-\u65b9\u6cd5",level:2},{value:"7.6.1. init\u4f7f\u7528",id:"761-init\u4f7f\u7528",level:3},{value:"7.6.2. \u6267\u884c\u987a\u5e8f",id:"762-\u6267\u884c\u987a\u5e8f",level:3},{value:"7.7. go mod",id:"77-go-mod",level:2},{value:"7.7.1. go mod \u7b80\u4ecb",id:"771-go-mod-\u7b80\u4ecb",level:3},{value:"7.7.2. \u4f7f\u7528\u65b9\u6cd5 \u76f8\u5173\u547d\u4ee4",id:"772-\u4f7f\u7528\u65b9\u6cd5-\u76f8\u5173\u547d\u4ee4",level:3},{value:"7.7.3. GO111MODULE",id:"773-go111module",level:3},{value:"7.7.4. \u4f9d\u8d56 \u95f4\u63a5\u4f9d\u8d56",id:"774-\u4f9d\u8d56-\u95f4\u63a5\u4f9d\u8d56",level:3},{value:"7.8. \u7f16\u7801\u5957\u8def",id:"78-\u7f16\u7801\u5957\u8def",level:2},{value:"7.8.1. \u9762\u5411\u63a5\u53e3\u7f16\u7a0b",id:"781-\u9762\u5411\u63a5\u53e3\u7f16\u7a0b",level:3},{value:"7.8.2. functional options \u6784\u9020\u5bf9\u8c61",id:"782-functional-options-\u6784\u9020\u5bf9\u8c61",level:3},{value:"7.8.3. \u63a7\u5236\u53cd\u8f6c",id:"783-\u63a7\u5236\u53cd\u8f6c",level:3},{value:"7.8.4. \u4fee\u9970\u5668",id:"784-\u4fee\u9970\u5668",level:3},{value:"7.8.5. pipeline \u6a21\u5f0f",id:"785-pipeline-\u6a21\u5f0f",level:3},{value:"7.8.6. visitor \u6a21\u5f0f",id:"786-visitor-\u6a21\u5f0f",level:3},{value:"7.8.7. microKernel \u67b6\u6784",id:"787-microkernel-\u67b6\u6784",level:3},{value:"7.9. \u538b\u6d4b \u538b\u529b\u6d4b\u8bd5",id:"79-\u538b\u6d4b-\u538b\u529b\u6d4b\u8bd5",level:2},{value:"7.10. \u5355\u5143\u6d4b\u8bd5",id:"710-\u5355\u5143\u6d4b\u8bd5",level:2},{value:"7.10.1. \u5f00\u6e90\u6d4b\u8bd5\u5e93",id:"7101-\u5f00\u6e90\u6d4b\u8bd5\u5e93",level:3},{value:"7.10.2. \u901a\u7528 mock",id:"7102-\u901a\u7528-mock",level:3},{value:"7.10.3. \u6570\u636e\u5c42 mock\u6d4b\u8bd5",id:"7103-\u6570\u636e\u5c42-mock\u6d4b\u8bd5",level:3},{value:"7.10.4. web\u5c42\u6d4b\u8bd5",id:"7104-web\u5c42\u6d4b\u8bd5",level:3},{value:"7.10.5. testing \u5305",id:"7105-testing-\u5305",level:3},{value:"7.10.5.1. \u547d\u4ee4\u884c\u57fa\u672c\u4f7f\u7528",id:"71051-\u547d\u4ee4\u884c\u57fa\u672c\u4f7f\u7528",level:4},{value:"7.10.5.2. testing \u901a\u7528\u65b9\u6cd5",id:"71052-testing-\u901a\u7528\u65b9\u6cd5",level:4},{value:"7.10.5.3. \u8868\u683c\u6d4b\u8bd5 http\u6d4b\u8bd5",id:"71053-\u8868\u683c\u6d4b\u8bd5-http\u6d4b\u8bd5",level:4},{value:"7.11. \u9519\u8bef\u5904\u7406",id:"711-\u9519\u8bef\u5904\u7406",level:2},{value:"7.11.1. \u4ee5\u95ed\u5305\u7684\u5f62\u5f0f\u5c01\u88c5\u9519\u8bef\u68c0\u6d4b",id:"7111-\u4ee5\u95ed\u5305\u7684\u5f62\u5f0f\u5c01\u88c5\u9519\u8bef\u68c0\u6d4b",level:3},{value:"7.11.2. panic recover \u673a\u5236",id:"7112-panic-recover-\u673a\u5236",level:3},{value:"7.11.3. \u5bf9\u9519\u8bef\u8fdb\u884c\u6bd4\u8f83",id:"7113-\u5bf9\u9519\u8bef\u8fdb\u884c\u6bd4\u8f83",level:3},{value:"7.11.4. \u5bf9\u9519\u8bef\u8fdb\u884c\u5305\u88c5 erros\u5305 Is As Unwrap \u81ea\u5b9a\u4e49\u9519\u8bef",id:"7114-\u5bf9\u9519\u8bef\u8fdb\u884c\u5305\u88c5-erros\u5305-is-as-unwrap-\u81ea\u5b9a\u4e49\u9519\u8bef",level:3},{value:"7.11.5. if err\u9519\u8bef\u5904\u7406\u4f18\u5316\u5957\u8def",id:"7115-if-err\u9519\u8bef\u5904\u7406\u4f18\u5316\u5957\u8def",level:3},{value:"7.11.6. \u4f7f\u7528 pkg-errors\u5e93",id:"7116-\u4f7f\u7528-pkg-errors\u5e93",level:3},{value:"7.12. \u65e5\u5fd7",id:"712-\u65e5\u5fd7",level:2},{value:"7.12.1. \u81ea\u5e26\u65e5\u5fd7\u5305",id:"7121-\u81ea\u5e26\u65e5\u5fd7\u5305",level:3},{value:"7.12.2. \u65e5\u5fd7\u5207\u5206",id:"7122-\u65e5\u5fd7\u5207\u5206",level:3},{value:"7.12.3. \u65e5\u5fd7\u5168\u5c40\u914d\u7f6e",id:"7123-\u65e5\u5fd7\u5168\u5c40\u914d\u7f6e",level:3},{value:"7.12.4. zerolog",id:"7124-zerolog",level:3},{value:"7.12.5. zap",id:"7125-zap",level:3},{value:"7.12.6. logrus",id:"7126-logrus",level:3},{value:"7.12.7. \u65e5\u5fd7\u6587\u4ef6\u5207\u5206",id:"7127-\u65e5\u5fd7\u6587\u4ef6\u5207\u5206",level:3},{value:"7.13. \u4f9d\u8d56\u6ce8\u5165",id:"713-\u4f9d\u8d56\u6ce8\u5165",level:2},{value:"8.1. \u8ba1\u7b97\u5185\u5b58\u5360\u7528",id:"81-\u8ba1\u7b97\u5185\u5b58\u5360\u7528",level:2},{value:"8.2. \u5185\u5b58\u5bf9\u9f50\u5bf9\u6027\u80fd\u5f71\u54cd",id:"82-\u5185\u5b58\u5bf9\u9f50\u5bf9\u6027\u80fd\u5f71\u54cd",level:2},{value:"8.3. \u901a\u8fc7\u76f8\u5173\u5de5\u5177\u67e5\u770b\u6027\u80fd\u74f6\u9888",id:"83-\u901a\u8fc7\u76f8\u5173\u5de5\u5177\u67e5\u770b\u6027\u80fd\u74f6\u9888",level:2},{value:"8.4. \u7f16\u8bd1\u4f18\u5316",id:"84-\u7f16\u8bd1\u4f18\u5316",level:2},{value:"8.4.1. \u4f18\u5316\u7f16\u8bd1\u4f53\u79ef",id:"841-\u4f18\u5316\u7f16\u8bd1\u4f53\u79ef",level:3},{value:"8.4.2. \u9003\u9038\u5206\u6790\u53cb\u597d\u7684\u4ee3\u7801",id:"842-\u9003\u9038\u5206\u6790\u53cb\u597d\u7684\u4ee3\u7801",level:3},{value:"8.5. \u7f16\u7a0b\u5b9e\u8df5",id:"85-\u7f16\u7a0b\u5b9e\u8df5",level:2},{value:"9.1. gc \u7b97\u6cd5",id:"91-gc-\u7b97\u6cd5",level:2},{value:"9.2. gc \u5206\u6790",id:"92-gc-\u5206\u6790",level:2},{value:"9.3. \u5199GC \u53cb\u597d\u4ee3\u7801\u7684\u539f\u5219",id:"93-\u5199gc-\u53cb\u597d\u4ee3\u7801\u7684\u539f\u5219",level:2},{value:"11.1. \u6709\u54ea\u4e9b\u547d\u4ee4",id:"111-\u6709\u54ea\u4e9b\u547d\u4ee4",level:2},{value:"11.2. \u4ea4\u53c9\u7f16\u8bd1",id:"112-\u4ea4\u53c9\u7f16\u8bd1",level:2},{value:"cgo",id:"cgo",level:2},{value:"13.1. \u9879\u76ee\u7ed3\u6784",id:"131-\u9879\u76ee\u7ed3\u6784",level:2},{value:"13.2. fiber",id:"132-fiber",level:2},{value:"13.3. gen",id:"133-gen",level:2},{value:"13.4. gin \u548c\u539f\u751f http \u5bf9\u6bd4",id:"134-gin-\u548c\u539f\u751f-http-\u5bf9\u6bd4",level:2},{value:"13.5. gin \u4e2d\u7684 json",id:"135-gin-\u4e2d\u7684-json",level:2},{value:"13.6. \u4e2d\u95f4\u4ef6",id:"136-\u4e2d\u95f4\u4ef6",level:2},{value:"goframe gf\u6846\u67b6",id:"goframe-gf\u6846\u67b6",level:2},{value:"15.1. \u670d\u52a1\u4e4b\u95f4\u901a\u4fe1",id:"151-\u670d\u52a1\u4e4b\u95f4\u901a\u4fe1",level:2},{value:"15.2. \u5fae\u670d\u52a1\u6846\u67b6\u9009\u578b",id:"152-\u5fae\u670d\u52a1\u6846\u67b6\u9009\u578b",level:2},{value:"15.3. go-micro",id:"153-go-micro",level:2},{value:"15.4. \u7f51\u5173",id:"154-\u7f51\u5173",level:2},{value:"\u5de5\u4e1a\u7269\u8054\u7f51",id:"\u5de5\u4e1a\u7269\u8054\u7f51",level:2},{value:"16.1. \u5f02\u6b65\u961f\u5217",id:"161-\u5f02\u6b65\u961f\u5217",level:2},{value:"16.2. \u76d1\u542c\u6587\u4ef6\u6539\u52a8",id:"162-\u76d1\u542c\u6587\u4ef6\u6539\u52a8",level:2},{value:"16.3. Python \u89e3\u91ca\u5668",id:"163-python-\u89e3\u91ca\u5668",level:2},{value:"16.4. \u6743\u9650\u7ba1\u7406",id:"164-\u6743\u9650\u7ba1\u7406",level:2},{value:"16.5. \u7f51\u7edc",id:"165-\u7f51\u7edc",level:2},{value:"16.6. \u70ed\u52a0\u8f7d live-reloading hot reload",id:"166-\u70ed\u52a0\u8f7d-live-reloading-hot-reload",level:2},{value:"16.7. \u5bb9\u5668",id:"167-\u5bb9\u5668",level:2},{value:"16.8. \u6570\u636e\u5e93",id:"168-\u6570\u636e\u5e93",level:2},{value:"16.9. \u7f13\u5b58",id:"169-\u7f13\u5b58",level:2},{value:"16.10. \u89e3\u6790\u5e93",id:"1610-\u89e3\u6790\u5e93",level:2},{value:"16.11. \u989c\u8272",id:"1611-\u989c\u8272",level:2},{value:"16.12. \u597d\u7684\u7f16\u7a0b\u4f53\u9a8c",id:"1612-\u597d\u7684\u7f16\u7a0b\u4f53\u9a8c",level:2},{value:"16.12.1. \u6570\u636e\u5e93\u8868\u8f6c struct",id:"16121-\u6570\u636e\u5e93\u8868\u8f6c-struct",level:3},{value:"16.12.2. struct \u89e3\u6790",id:"16122-struct-\u89e3\u6790",level:3},{value:"16.12.3. \u683c\u5f0f\u5316\u65e5\u671f",id:"16123-\u683c\u5f0f\u5316\u65e5\u671f",level:3},{value:"16.12.4. \u6d41\u5f0f\u5904\u7406 \u6d41\u5f0f\u7f16\u7a0b",id:"16124-\u6d41\u5f0f\u5904\u7406-\u6d41\u5f0f\u7f16\u7a0b",level:3},{value:"16.12.5. \u6c60",id:"16125-\u6c60",level:3},{value:"16.12.6. \u4f9d\u8d56\u6ce8\u5165",id:"16126-\u4f9d\u8d56\u6ce8\u5165",level:3},{value:"16.13. \u5b9a\u65f6\u4efb\u52a1",id:"1613-\u5b9a\u65f6\u4efb\u52a1",level:2},{value:"16.14. api \u548c\u6587\u6863",id:"1614-api-\u548c\u6587\u6863",level:2},{value:"16.15. \u7cfb\u7edf\u4fe1\u606f \u8fd0\u7ef4",id:"1615-\u7cfb\u7edf\u4fe1\u606f-\u8fd0\u7ef4",level:2},{value:"\u76d1\u63a7 \u65f6\u5e8f\u6570\u636e\u5e93",id:"\u76d1\u63a7-\u65f6\u5e8f\u6570\u636e\u5e93",level:2},{value:"16.16. \u65f6\u95f4\u5de5\u5177",id:"1616-\u65f6\u95f4\u5de5\u5177",level:2},{value:"16.17. \u6301\u7eed\u8ffd\u8e2a\u8bfb\u53d6\u65e5\u5fd7",id:"1617-\u6301\u7eed\u8ffd\u8e2a\u8bfb\u53d6\u65e5\u5fd7",level:2},{value:"16.18. \u5206\u5e03\u5f0f",id:"1618-\u5206\u5e03\u5f0f",level:2},{value:"16.19. \u5b9e\u73b0\u63d2\u4ef6\u673a\u5236",id:"1619-\u5b9e\u73b0\u63d2\u4ef6\u673a\u5236",level:2},{value:"16.20. \u548c\u5176\u4ed6\u8bed\u8a00\u4ea4\u4e92",id:"1620-\u548c\u5176\u4ed6\u8bed\u8a00\u4ea4\u4e92",level:2},{value:"16.21. \u97f3\u9891\u89c6\u9891\u56fe\u7247\u5904\u7406",id:"1621-\u97f3\u9891\u89c6\u9891\u56fe\u7247\u5904\u7406",level:2},{value:"16.22. \u5e38\u7528\u5de5\u5177\u5e93",id:"1622-\u5e38\u7528\u5de5\u5177\u5e93",level:2},{value:"16.23. \u6ce8\u89e3\u7f16\u7a0b",id:"1623-\u6ce8\u89e3\u7f16\u7a0b",level:2},{value:"16.24. \u751f\u6210\u5047\u6570\u636e",id:"1624-\u751f\u6210\u5047\u6570\u636e",level:2},{value:"16.25. \u7f51\u7edc\u6293\u5305",id:"1625-\u7f51\u7edc\u6293\u5305",level:2},{value:"16.26. gui\u6846\u67b6",id:"1626-gui\u6846\u67b6",level:2}],m={toc:c};function g(n){var e=n.components,t=(0,a.Z)(n,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1-%E7%AE%80%E4%BB%8B"},"1. \u7b80\u4ecb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#2-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE"},"2. \u73af\u5883\u914d\u7f6e"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#21-%E7%9B%B8%E5%85%B3%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"},"2.1. \u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#22-install"},"2.2. install")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#23-%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F"},"2.3. \u56fd\u5185\u955c\u50cf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#24-ide"},"2.4. IDE")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#3-quickstart-%E8%AF%BB%E5%8F%96%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0"},"3. quickstart \u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#4-golang-%E7%9A%84%E5%9D%91"},"4. golang \u7684\u5751")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#5-%E5%B8%B8%E8%A7%81%E9%80%89%E5%9E%8B"},"5. \u5e38\u89c1\u9009\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6-basic"},"6. basic"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#61--deepequal-%E5%88%A4%E6%96%AD%E7%9B%B8%E7%AD%89"},"6.1. == DeepEqual \u5224\u65ad\u76f8\u7b49")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62-%E9%95%BF%E8%B5%8B%E5%80%BC-%E7%9F%AD%E8%B5%8B%E5%80%BC"},"6.2. \u957f\u8d4b\u503c \u77ed\u8d4b\u503c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63-make-%E5%92%8C-new-%E5%92%8C-var"},"6.3. make \u548c new \u548c var")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#64-%E9%9B%B6%E5%80%BC-nil"},"6.4. \u96f6\u503c nil")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#65-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"},"6.5. \u57fa\u672c\u6570\u636e\u7c7b\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#66-%E5%AD%97%E7%AC%A6%E4%B8%B2-string"},"6.6. \u5b57\u7b26\u4e32 string"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#661-string-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.6.1. string \u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#662-%E9%AB%98%E6%95%88%E7%9A%84%E6%8B%BC%E6%8E%A5%E6%96%B9%E5%BC%8F"},"6.6.2. \u9ad8\u6548\u7684\u62fc\u63a5\u65b9\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#663-%E6%A0%BC%E5%BC%8F%E5%8C%96%E5%8D%A0%E4%BD%8D%E7%AC%A6"},"6.6.3. \u683c\u5f0f\u5316\u5360\u4f4d\u7b26")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#67-array-%E5%92%8C-slice"},"6.7. array \u548c slice"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#671-%E6%95%B0%E7%BB%84"},"6.7.1. \u6570\u7ec4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#672-%E5%88%87%E7%89%87"},"6.7.2. \u5207\u7247"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6721-%E5%88%87%E7%89%87%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.7.2.1. \u5207\u7247\u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6722-%E5%88%87%E7%89%87%E5%BC%95%E7%94%A8-full-slice-expression"},"6.7.2.2. \u5207\u7247\u5f15\u7528 Full Slice Expression")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6723-%E4%BD%BF%E7%94%A8-copy-%E9%98%B2%E6%AD%A2%E5%A4%A7%E9%87%8F%E5%86%85%E5%AD%98%E5%BE%97%E4%B8%8D%E5%88%B0%E9%87%8A%E6%94%BE"},"6.7.2.3. \u4f7f\u7528 copy \u9632\u6b62\u5927\u91cf\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#68-map"},"6.8. map"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#681-map-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.8.1. map \u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#682-%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8%E7%9A%84-map"},"6.8.2. \u5e76\u53d1\u5b89\u5168\u7684 map")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#69-container-%E5%8C%85"},"6.9. container \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#691-heap"},"6.9.1. heap")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#692-ring"},"6.9.2. ring")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#693-list"},"6.9.3. list")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#610-%E8%BF%AD%E4%BB%A3-range"},"6.10. \u8fed\u4ee3 range"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6101-%E8%BF%AD%E4%BB%A3slice"},"6.10.1. \u8fed\u4ee3slice")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6102-%E8%BF%AD%E4%BB%A3-map"},"6.10.2. \u8fed\u4ee3 map")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6103-%E8%BF%AD%E4%BB%A3-channel"},"6.10.3. \u8fed\u4ee3 channel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6104-for-%E5%92%8C-range-%E6%80%A7%E8%83%BD%E5%B7%AE%E5%BC%82"},"6.10.4. for \u548c range \u6027\u80fd\u5dee\u5f02")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#611-%E6%8C%87%E9%92%88"},"6.11. \u6307\u9488")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#612-%E7%BB%93%E6%9E%84%E4%BD%93struct"},"6.12. \u7ed3\u6784\u4f53struct"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6121-struct-%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.12.1. struct \u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6122-%E7%A9%BA-struct"},"6.12.2. \u7a7a struct"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#61221-%E5%88%A9%E7%94%A8-map%E5%AE%9E%E7%8E%B0%E9%9B%86%E5%90%88set"},"6.12.2.1. \u5229\u7528 map\u5b9e\u73b0\u96c6\u5408set")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#61222-%E5%88%A9%E7%94%A8-channel-%E4%BD%9C%E4%B8%BA%E9%80%9A%E7%9F%A5%E9%80%9A%E9%81%93"},"6.12.2.2. \u5229\u7528 channel \u4f5c\u4e3a\u901a\u77e5\u901a\u9053")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6123-%E5%8C%BF%E5%90%8D%E7%BB%93%E6%9E%84%E4%BD%93-%E7%BB%A7%E6%89%BF-%E9%87%8D%E5%86%99"},"6.12.3. \u533f\u540d\u7ed3\u6784\u4f53 \u7ee7\u627f \u91cd\u5199")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#613-%E6%8E%A5%E5%8F%A3-interface"},"6.13. \u63a5\u53e3 interface"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6131-%E5%9C%A8-ide-%E4%B8%AD%E5%BF%AB%E9%80%9F%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3"},"6.13.1. \u5728 IDE \u4e2d\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6132-%E6%8E%A5%E5%8F%A3%E4%BD%9C%E4%B8%BA%E5%87%BD%E6%95%B0%E5%BD%A2%E5%8F%82-%E5%80%BC%E6%8E%A5%E6%94%B6%E8%80%85-%E6%8C%87%E9%92%88%E6%8E%A5%E6%94%B6%E8%80%85"},"6.13.2. \u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2 \u503c\u63a5\u6536\u8005 \u6307\u9488\u63a5\u6536\u8005")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6133-%E7%A9%BA%E6%8E%A5%E5%8F%A3"},"6.13.3. \u7a7a\u63a5\u53e3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6134-%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80"},"6.13.4. \u7c7b\u578b\u65ad\u8a00")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6135-%E5%86%85%E7%BD%AE%E6%8E%A5%E5%8F%A3"},"6.13.5. \u5185\u7f6e\u63a5\u53e3")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6136-%E6%8E%A5%E5%8F%A3%E5%B5%8C%E5%A5%97"},"6.13.6. \u63a5\u53e3\u5d4c\u5957")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6137-%E6%8E%A5%E5%8F%A3%E5%AE%8C%E6%95%B4%E6%80%A7%E6%A3%80%E6%9F%A5"},"6.13.7. \u63a5\u53e3\u5b8c\u6574\u6027\u68c0\u67e5")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#614-%E5%87%BD%E6%95%B0"},"6.14. \u51fd\u6570"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6141-%E5%87%BD%E6%95%B0%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95"},"6.14.1. \u51fd\u6570\u57fa\u672c\u8bed\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6142-%E5%80%BC%E4%BC%A0%E9%80%92-%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92"},"6.14.2. \u503c\u4f20\u9012 \u5f15\u7528\u4f20\u9012")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6143-%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F-%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90"},"6.14.3. \u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf \u9003\u9038\u5206\u6790")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#615-%E9%97%AD%E5%8C%85"},"6.15. \u95ed\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#616-%E6%96%B9%E6%B3%95-%E5%92%8C-%E6%8E%A5%E6%94%B6%E5%99%A8"},"6.16. \u65b9\u6cd5 \u548c \u63a5\u6536\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#617-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6"},"6.17. \u6d41\u7a0b\u63a7\u5236"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6171-%E6%AD%BB%E5%BE%AA%E7%8E%AF-for-%E5%92%8C-select-%E5%8C%BA%E5%88%AB"},"6.17.1. \u6b7b\u5faa\u73af for \u548c select \u533a\u522b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6172-if-%E5%92%8C-for-%E5%BE%AA%E7%8E%AF"},"6.17.2. if \u548c for \u5faa\u73af")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6173-%E6%A0%87%E7%AD%BE-goto-break"},"6.17.3. \u6807\u7b7e goto break")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6174-defer"},"6.17.4. defer")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#618-sort-%E5%8C%85"},"6.18. sort \u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#619-http"},"6.19. http"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6191-%E5%8E%9F%E7%90%86"},"6.19.1. \u539f\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6192-%E6%A1%88%E4%BE%8B%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%B6%85%E6%97%B6%E5%8F%96%E6%B6%88"},"6.19.2. \u6848\u4f8b:\u5ba2\u6237\u7aef\u8d85\u65f6\u53d6\u6d88")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#620-context"},"6.20. context"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6201-context%E6%B3%A8%E6%84%8F%E5%AE%9E%E7%8E%B0"},"6.20.1. context\u6ce8\u610f\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6202-withcancel"},"6.20.2. WithCancel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6203-withdeadline"},"6.20.3. WithDeadline")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6204-withtimeout"},"6.20.4. WithTimeout")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6205-withvalue"},"6.20.5. WithValue")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#621-io"},"6.21. io"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6211-%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C"},"6.21.1. \u6587\u4ef6\u64cd\u4f5c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6212-scanner"},"6.21.2. scanner")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#622-image"},"6.22. image")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#623-channel-csp%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6"},"6.23. channel csp\u5e76\u53d1\u63a7\u5236"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6231-channel-%E4%BD%BF%E7%94%A8"},"6.23.1. channel \u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6232-%E5%88%A9%E7%94%A8-nil-channel-%E5%AE%9E%E7%8E%B0%E5%8A%A8%E6%80%81-%E7%9A%84-select-case"},"6.23.2. \u5229\u7528 nil channel \u5b9e\u73b0\u52a8\u6001 \u7684 select case")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6233-%E8%BF%AD%E4%BB%A3-channel-%E5%85%83%E7%B4%A0"},"6.23.3. \u8fed\u4ee3 channel \u5143\u7d20"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62331-%E4%BD%BF%E7%94%A8-for-range"},"6.23.3.1. \u4f7f\u7528 for range")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62332-%E4%BD%BF%E7%94%A8-for-select"},"6.23.3.2. \u4f7f\u7528 for select")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6234-%E4%BD%BF%E7%94%A8%E5%9B%9E%E8%B0%83%E8%80%8C%E4%B8%8D%E6%98%AF%E8%BF%94%E5%9B%9E-channel"},"6.23.4. \u4f7f\u7528\u56de\u8c03\u800c\u4e0d\u662f\u8fd4\u56de channel")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6235-%E4%BB%85%E9%9C%80%E4%BB%BB%E6%84%8F%E4%BB%BB%E5%8A%A1%E5%AE%8C%E6%88%90-%E5%88%A9%E7%94%A8-buffered-channel-%E5%AE%9E%E7%8E%B0"},"6.23.5. \u4ec5\u9700\u4efb\u610f\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6236-%E9%9C%80%E8%A6%81%E6%89%80%E6%9C%89%E4%BB%BB%E5%8A%A1%E5%AE%8C%E6%88%90-%E5%88%A9%E7%94%A8-buffered-channel-%E5%AE%9E%E7%8E%B0"},"6.23.6. \u9700\u8981\u6240\u6709\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6237-%E5%88%A9%E7%94%A8-close-channel-%E5%AE%9E%E7%8E%B0%E5%B9%BF%E6%92%AD"},"6.23.7. \u5229\u7528 close channel \u5b9e\u73b0\u5e7f\u64ad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6238-%E5%AF%B9%E8%B1%A1%E6%B1%A0"},"6.23.8. \u5bf9\u8c61\u6c60"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62381-%E5%88%A9%E7%94%A8-no-buffered-channel-%E5%AE%9E%E7%8E%B0%E5%AF%B9%E8%B1%A1%E6%B1%A0"},"6.23.8.1. \u5229\u7528 no buffered channel \u5b9e\u73b0\u5bf9\u8c61\u6c60")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62382-syncpool-%E5%AF%B9%E8%B1%A1%E7%BC%93%E5%AD%98"},"6.23.8.2. sync.pool \u5bf9\u8c61\u7f13\u5b58")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6239-%E4%BC%98%E9%9B%85%E5%85%B3%E9%97%AD-channel"},"6.23.9. \u4f18\u96c5\u5173\u95ed channel")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#624-goroutine"},"6.24. goroutine"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6241-goroutine%E5%8E%9F%E7%90%86"},"6.24.1. goroutine\u539f\u7406"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62411-%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E5%8D%8F%E7%A8%8B"},"6.24.1.1. \u5982\u4f55\u7406\u89e3\u534f\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62412-%E5%92%8C%E7%BA%BF%E7%A8%8B%E5%AF%B9%E6%AF%94"},"6.24.1.2. \u548c\u7ebf\u7a0b\u5bf9\u6bd4")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6242-%E5%8D%8F%E7%A8%8B%E5%9C%A8%E5%86%85%E5%AD%98%E5%B1%82%E9%9D%A2%E7%9A%84%E5%AE%9E%E7%8E%B0"},"6.24.2. \u534f\u7a0b\u5728\u5185\u5b58\u5c42\u9762\u7684\u5b9e\u73b0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6243-goroutine%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.24.3. goroutine\u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6244-goroutine-%E6%8D%95%E8%8E%B7%E5%A4%96%E9%83%A8%E5%8F%98%E9%87%8F"},"6.24.4. goroutine \u6355\u83b7\u5916\u90e8\u53d8\u91cf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6245-%E4%BD%BF%E7%94%A8select-%E5%A4%84%E7%90%86%E8%B6%85%E6%97%B6"},"6.24.5. \u4f7f\u7528select \u5904\u7406\u8d85\u65f6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6246-%E4%BC%98%E9%9B%85%E9%80%80%E5%87%BA-goroutine"},"6.24.6. \u4f18\u96c5\u9000\u51fa goroutine"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62461-%E9%80%9A%E8%BF%87%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F-waitgroup"},"6.24.6.1. \u901a\u8fc7\u5168\u5c40\u53d8\u91cf waitGroup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62462-%E9%80%9A%E8%BF%87-channel-%E7%9A%84%E6%96%B9%E5%BC%8F"},"6.24.6.2. \u901a\u8fc7 channel \u7684\u65b9\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62463-%E9%80%9A%E8%BF%87-context-%E5%AE%98%E6%96%B9%E6%8E%A8%E8%8D%90"},"6.24.6.3. \u901a\u8fc7 context \u5b98\u65b9\u63a8\u8350")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6247-%E9%99%90%E5%88%B6%E5%B9%B6%E5%8F%91%E6%95%B0%E9%87%8F"},"6.24.7. \u9650\u5236\u5e76\u53d1\u6570\u91cf")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6248-%E6%A1%88%E4%BE%8B-%E5%88%86%E6%AE%B5%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E9%80%80%E5%87%BA"},"6.24.8. \u6848\u4f8b-\u5206\u6bb5\u6267\u884c\u4efb\u52a1\u7684\u9000\u51fa")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#625-%E9%94%81-%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98%E4%B8%8B%E7%9A%84%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6"},"6.25. \u9501 \u5171\u4eab\u5185\u5b58\u4e0b\u7684\u5e76\u53d1\u63a7\u5236"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6251-mutex-%E4%BA%92%E6%96%A5%E9%94%81"},"6.25.1. Mutex \u4e92\u65a5\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6252-%E9%94%81%E7%9A%84%E5%85%AC%E5%B9%B3%E6%80%A7"},"6.25.2. \u9501\u7684\u516c\u5e73\u6027")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6253-rwmutex%E8%AF%BB%E5%86%99%E9%94%81"},"6.25.3. RWMutex\u8bfb\u5199\u9501")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6254-synconce%E5%8F%AA%E5%85%81%E8%AE%B8%E6%89%A7%E8%A1%8C%E4%B8%80%E6%AC%A1"},"6.25.4. sync.Once\u53ea\u5141\u8bb8\u6267\u884c\u4e00\u6b21")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6255-synccond-%E5%A4%9A%E4%B8%AA%E8%A7%82%E5%AF%9F%E8%80%85%E7%AD%89%E5%BE%85%E6%9F%90%E4%B8%AA%E4%BB%BB%E5%8A%A1%E5%AE%8C%E6%88%90-%E5%B9%BF%E6%92%AD"},"6.25.5. sync.Cond \u591a\u4e2a\u89c2\u5bdf\u8005\u7b49\u5f85\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210 \u5e7f\u64ad")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6256-waitgroup-%E7%AD%89%E5%BE%85%E5%A4%9A%E4%B8%AA%E4%BB%BB%E5%8A%A1%E5%85%A8%E9%83%A8%E5%BF%85%E9%A1%BB%E5%AE%8C%E6%88%90"},"6.25.6. waitGroup \u7b49\u5f85\u591a\u4e2a\u4efb\u52a1\u5168\u90e8\u5fc5\u987b\u5b8c\u6210")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6257-%E9%94%81%E7%9B%B8%E5%85%B3%E6%A1%88%E4%BE%8B"},"6.25.7. \u9501\u76f8\u5173\u6848\u4f8b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62571-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"},"6.25.7.1. \u5355\u4f8b\u6a21\u5f0f")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#626-atomic-%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C"},"6.26. atomic \u539f\u5b50\u64cd\u4f5c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#627-%E5%8F%8D%E5%B0%84-reflect"},"6.27. \u53cd\u5c04 reflect"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6271-%E5%8F%8D%E5%B0%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.27.1. \u53cd\u5c04\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62711-%E8%8E%B7%E5%8F%96%E5%87%BD%E6%95%B0%E5%90%8D%E7%A7%B0"},"6.27.1.1. \u83b7\u53d6\u51fd\u6570\u540d\u79f0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62712-%E5%AE%9E%E7%8E%B0%E7%B1%BB%E5%9E%8B%E6%96%AD%E8%A8%80"},"6.27.1.2. \u5b9e\u73b0\u7c7b\u578b\u65ad\u8a00")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62713-%E4%B8%BA%E4%BB%BB%E4%BD%95-struct-%E8%AE%BE%E7%BD%AE%E5%80%BC"},"6.27.1.3. \u4e3a\u4efb\u4f55 struct \u8bbe\u7f6e\u503c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#62714-%E4%BB%8E%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E8%AF%BB%E5%8F%96%E9%85%8D%E7%BD%AE"},"6.27.1.4. \u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6272-%E5%8F%8D%E5%B0%84%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96"},"6.27.2. \u53cd\u5c04\u6027\u80fd\u4f18\u5316")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6273-%E5%8F%8D%E5%B0%84%E5%AE%9E%E7%8E%B0-filter-map-reduce"},"6.27.3. \u53cd\u5c04\u5b9e\u73b0 filter map reduce")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#628-%E6%B3%9B%E5%9E%8B"},"6.28. \u6cdb\u578b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6281-%E6%B3%9B%E5%9E%8B%E4%BD%BF%E7%94%A8"},"6.28.1. \u6cdb\u578b\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6282-go-generation"},"6.28.2. go generation")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#629-unsafe-%E4%B8%8D%E5%AE%89%E5%85%A8%E7%BC%96%E7%A8%8B"},"6.29. unsafe \u4e0d\u5b89\u5168\u7f16\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#630-http-%E6%9C%8D%E5%8A%A1"},"6.30. http \u670d\u52a1"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6301-http-%E5%8C%85"},"6.30.1. http \u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6302-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%8D%E7%94%A8%E5%99%A8"},"6.30.2. \u81ea\u5b9a\u4e49\u590d\u7528\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6303-%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%AD%E9%97%B4%E4%BB%B6"},"6.30.3. \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6304-%E8%8E%B7%E5%8F%96-ip-%E5%9C%B0%E5%9D%80"},"6.30.4. \u83b7\u53d6 ip \u5730\u5740")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6305-%E6%9B%B4%E5%A5%BD%E7%94%A8%E7%9A%84%E8%B7%AF%E7%94%B1-router"},"6.30.5. \u66f4\u597d\u7528\u7684\u8def\u7531 router")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#631-json-%E5%8C%85"},"6.31. json \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6311-json%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"6.31.1. json\u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6312-%E4%B8%B4%E6%97%B6%E5%BF%BD%E7%95%A5json-%E5%AD%97%E6%AE%B5"},"6.31.2. \u4e34\u65f6\u5ffd\u7565json \u5b57\u6bb5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6313-%E4%B8%B4%E6%97%B6%E7%B2%98%E5%90%88%E4%B8%A4%E4%B8%AAstruct"},"6.31.3. \u4e34\u65f6\u7c98\u5408\u4e24\u4e2astruct")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6314-%E4%B8%80%E4%B8%AAjson%E5%88%87%E5%88%86%E6%88%90%E4%B8%A4%E4%B8%AAstruct"},"6.31.4. \u4e00\u4e2ajson\u5207\u5206\u6210\u4e24\u4e2astruct")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6315-%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%BC%A0%E9%80%92%E6%95%B0%E5%AD%97"},"6.31.5. \u7528\u5b57\u7b26\u4e32\u4f20\u9012\u6570\u5b57")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6316-%E4%BD%BF%E7%94%A8-json%E7%9A%84rawmessage"},"6.31.6. \u4f7f\u7528 json\u7684RawMessage")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#632-socket-%E7%BC%96%E7%A8%8B"},"6.32. socket \u7f16\u7a0b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6321-tcp"},"6.32.1. tcp"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63211-%E7%B2%98%E5%8C%85%E9%97%AE%E9%A2%98"},"6.32.1.1. \u7c98\u5305\u95ee\u9898")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63212-%E8%A7%A3%E5%86%B3%E7%B2%98%E5%8C%85-scanner"},"6.32.1.2. \u89e3\u51b3\u7c98\u5305 scanner")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#63213-%E8%A7%A3%E5%86%B3%E7%B2%98%E5%8C%85-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BC%96%E8%A7%A3%E7%A0%81"},"6.32.1.3. \u89e3\u51b3\u7c98\u5305 \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6322-udp"},"6.32.2. udp")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#633-websocket"},"6.33. websocket")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#634-unicode-%E5%8C%85"},"6.34. Unicode \u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#635-time-%E5%8C%85"},"6.35. time \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6351-%E5%AE%9A%E6%97%B6%E5%99%A8"},"6.35.1. \u5b9a\u65f6\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6352-%E7%BB%9F%E8%AE%A1%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4"},"6.35.2. \u7edf\u8ba1\u8fd0\u884c\u65f6\u95f4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6353-%E6%97%B6%E9%97%B4%E5%88%9D%E5%A7%8B%E5%8C%96"},"6.35.3. \u65f6\u95f4\u521d\u59cb\u5316")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6354-%E6%97%B6%E9%97%B4%E6%A0%BC%E5%BC%8F%E5%8C%96-%E6%97%B6%E5%8C%BA-%E5%8A%A0%E5%87%8F"},"6.35.4. \u65f6\u95f4\u683c\u5f0f\u5316 \u65f6\u533a \u52a0\u51cf")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#636-math-%E5%8C%85"},"6.36. math \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6361-%E9%9A%8F%E6%9C%BA%E5%80%BC"},"6.36.1. \u968f\u673a\u503c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6362-%E7%B2%BE%E5%AF%86%E8%AE%A1%E7%AE%97%E5%92%8C-big-%E5%8C%85"},"6.36.2. \u7cbe\u5bc6\u8ba1\u7b97\u548c big \u5305")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#637-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C"},"6.37. \u6570\u636e\u5e93\u64cd\u4f5c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#638-runtime%E5%8C%85"},"6.38. runtime\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#639-flag%E5%8C%85"},"6.39. flag\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#640-embed-%E5%8C%85"},"6.40. embed \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#6401-%E5%86%85%E5%B5%8C-react-%E9%A1%B5%E9%9D%A2"},"6.40.1. \u5185\u5d4c react \u9875\u9762")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#641-%E7%BC%96%E8%AF%91%E6%97%B6%E7%94%9F%E6%88%90-%E7%BC%96%E8%AF%91%E6%97%B6%E7%BA%A6%E6%9D%9F-go-generate-go-build"},"6.41. \u7f16\u8bd1\u65f6\u751f\u6210 \u7f16\u8bd1\u65f6\u7ea6\u675f go-generate go-build")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7-%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5-%E7%BC%96%E7%A8%8B%E6%80%9D%E7%BB%B4"},"7. \u5de5\u7a0b\u5b9e\u8df5 \u7f16\u7a0b\u601d\u7ef4"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"},"7.1. \u8bbe\u8ba1\u6a21\u5f0f"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#711-%E5%88%9B%E5%BB%BA%E5%9E%8B"},"7.1.1. \u521b\u5efa\u578b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7111-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82"},"7.1.1.1. \u7b80\u5355\u5de5\u5382")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7112-%E5%8D%95%E4%BE%8B"},"7.1.1.2. \u5355\u4f8b")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#712-%E8%A1%8C%E4%B8%BA%E5%9E%8B"},"7.1.2. \u884c\u4e3a\u578b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7121-%E8%A7%82%E5%AF%9F%E8%80%85"},"7.1.2.1. \u89c2\u5bdf\u8005"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71211-%E5%9F%BA%E6%9C%AC%E7%A4%BA%E4%BE%8B"},"7.1.2.1.1. \u57fa\u672c\u793a\u4f8b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71212-%E5%AE%9E%E7%8E%B0-event-bus"},"7.1.2.1.2. \u5b9e\u73b0 event bus")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#713-%E7%BB%93%E6%9E%84%E5%9E%8B"},"7.1.3. \u7ed3\u6784\u578b"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7131-%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F"},"7.1.3.1. \u4ee3\u7406\u6a21\u5f0f")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#72-%E8%B0%83%E8%AF%95-debug"},"7.2. \u8c03\u8bd5 debug")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#73-%E6%A8%A1%E5%9D%97%E6%8B%86%E5%88%86"},"7.3. \u6a21\u5757\u62c6\u5206"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#731-%E6%8C%89%E7%85%A7-mvc-%E6%A8%A1%E5%BC%8F%E6%8B%86%E5%88%86"},"7.3.1. \u6309\u7167 mvc \u6a21\u5f0f\u62c6\u5206")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#732-%E6%8C%89%E7%85%A7%E8%81%8C%E8%B4%A3%E5%AF%B9%E8%BF%9B%E8%A1%8C%E6%8B%86%E5%88%86"},"7.3.2. \u6309\u7167\u804c\u8d23\u5bf9\u8fdb\u884c\u62c6\u5206")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#733-%E6%8C%89%E4%BE%9D%E8%B5%96%E6%8B%86%E5%88%86"},"7.3.3. \u6309\u4f9d\u8d56\u62c6\u5206")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#74-%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84%E8%A7%84%E8%8C%83"},"7.4. \u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u89c4\u8303")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#75-package-%E5%AF%BC%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8C%85"},"7.5. package \u5bfc\u5165\u81ea\u5b9a\u4e49\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#76-init-%E6%96%B9%E6%B3%95"},"7.6. init \u65b9\u6cd5"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#761-init%E4%BD%BF%E7%94%A8"},"7.6.1. init\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#762-%E6%89%A7%E8%A1%8C%E9%A1%BA%E5%BA%8F"},"7.6.2. \u6267\u884c\u987a\u5e8f")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#77-go-mod"},"7.7. go mod"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#771-go-mod-%E7%AE%80%E4%BB%8B"},"7.7.1. go mod \u7b80\u4ecb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#772-%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4"},"7.7.2. \u4f7f\u7528\u65b9\u6cd5 \u76f8\u5173\u547d\u4ee4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#773-go111module"},"7.7.3. GO111MODULE")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#774-%E4%BE%9D%E8%B5%96-%E9%97%B4%E6%8E%A5%E4%BE%9D%E8%B5%96"},"7.7.4. \u4f9d\u8d56 \u95f4\u63a5\u4f9d\u8d56")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#78-%E7%BC%96%E7%A0%81%E5%A5%97%E8%B7%AF"},"7.8. \u7f16\u7801\u5957\u8def"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#781-%E9%9D%A2%E5%90%91%E6%8E%A5%E5%8F%A3%E7%BC%96%E7%A8%8B"},"7.8.1. \u9762\u5411\u63a5\u53e3\u7f16\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#782-functional-options-%E6%9E%84%E9%80%A0%E5%AF%B9%E8%B1%A1"},"7.8.2. functional options \u6784\u9020\u5bf9\u8c61")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#783-%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%AC"},"7.8.3. \u63a7\u5236\u53cd\u8f6c")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#784-%E4%BF%AE%E9%A5%B0%E5%99%A8"},"7.8.4. \u4fee\u9970\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#785-pipeline-%E6%A8%A1%E5%BC%8F"},"7.8.5. pipeline \u6a21\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#786-visitor-%E6%A8%A1%E5%BC%8F"},"7.8.6. visitor \u6a21\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#787-microkernel-%E6%9E%B6%E6%9E%84"},"7.8.7. microKernel \u67b6\u6784")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#79-%E5%8E%8B%E6%B5%8B-%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95"},"7.9. \u538b\u6d4b \u538b\u529b\u6d4b\u8bd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#710-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95"},"7.10. \u5355\u5143\u6d4b\u8bd5"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7101-%E5%BC%80%E6%BA%90%E6%B5%8B%E8%AF%95%E5%BA%93"},"7.10.1. \u5f00\u6e90\u6d4b\u8bd5\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7102-%E9%80%9A%E7%94%A8-mock"},"7.10.2. \u901a\u7528 mock")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7103-%E6%95%B0%E6%8D%AE%E5%B1%82-mock%E6%B5%8B%E8%AF%95"},"7.10.3. \u6570\u636e\u5c42 mock\u6d4b\u8bd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7104-web%E5%B1%82%E6%B5%8B%E8%AF%95"},"7.10.4. web\u5c42\u6d4b\u8bd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7105-testing-%E5%8C%85"},"7.10.5. testing \u5305"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71051-%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8"},"7.10.5.1. \u547d\u4ee4\u884c\u57fa\u672c\u4f7f\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71052-testing-%E9%80%9A%E7%94%A8%E6%96%B9%E6%B3%95"},"7.10.5.2. testing \u901a\u7528\u65b9\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#71053-%E8%A1%A8%E6%A0%BC%E6%B5%8B%E8%AF%95-http%E6%B5%8B%E8%AF%95"},"7.10.5.3. \u8868\u683c\u6d4b\u8bd5 http\u6d4b\u8bd5")))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#711-%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86"},"7.11. \u9519\u8bef\u5904\u7406"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7111-%E4%BB%A5%E9%97%AD%E5%8C%85%E7%9A%84%E5%BD%A2%E5%BC%8F%E5%B0%81%E8%A3%85%E9%94%99%E8%AF%AF%E6%A3%80%E6%B5%8B"},"7.11.1. \u4ee5\u95ed\u5305\u7684\u5f62\u5f0f\u5c01\u88c5\u9519\u8bef\u68c0\u6d4b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7112-panic-recover-%E6%9C%BA%E5%88%B6"},"7.11.2. panic recover \u673a\u5236")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7113-%E5%AF%B9%E9%94%99%E8%AF%AF%E8%BF%9B%E8%A1%8C%E6%AF%94%E8%BE%83"},"7.11.3. \u5bf9\u9519\u8bef\u8fdb\u884c\u6bd4\u8f83")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7114-%E5%AF%B9%E9%94%99%E8%AF%AF%E8%BF%9B%E8%A1%8C%E5%8C%85%E8%A3%85-erros%E5%8C%85-is-as-unwrap-%E8%87%AA%E5%AE%9A%E4%B9%89%E9%94%99%E8%AF%AF"},"7.11.4. \u5bf9\u9519\u8bef\u8fdb\u884c\u5305\u88c5 erros\u5305 Is As Unwrap \u81ea\u5b9a\u4e49\u9519\u8bef")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7115-if-err%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E4%BC%98%E5%8C%96%E5%A5%97%E8%B7%AF"},"7.11.5. if err\u9519\u8bef\u5904\u7406\u4f18\u5316\u5957\u8def")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7116-%E4%BD%BF%E7%94%A8-pkg-errors%E5%BA%93"},"7.11.6. \u4f7f\u7528 pkg-errors\u5e93")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#712-%E6%97%A5%E5%BF%97"},"7.12. \u65e5\u5fd7"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7121-%E8%87%AA%E5%B8%A6%E6%97%A5%E5%BF%97%E5%8C%85"},"7.12.1. \u81ea\u5e26\u65e5\u5fd7\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7122-%E6%97%A5%E5%BF%97%E5%88%87%E5%88%86"},"7.12.2. \u65e5\u5fd7\u5207\u5206")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7123-%E6%97%A5%E5%BF%97%E5%85%A8%E5%B1%80%E9%85%8D%E7%BD%AE"},"7.12.3. \u65e5\u5fd7\u5168\u5c40\u914d\u7f6e")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7124-zerolog"},"7.12.4. zerolog")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7125-zap"},"7.12.5. zap")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7126-logrus"},"7.12.6. logrus")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#7127-%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E5%88%87%E5%88%86"},"7.12.7. \u65e5\u5fd7\u6587\u4ef6\u5207\u5206")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#713-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5"},"7.13. \u4f9d\u8d56\u6ce8\u5165")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#8-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E8%B0%83%E4%BC%98"},"8. \u6027\u80fd\u4f18\u5316\u8c03\u4f18"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#81-%E8%AE%A1%E7%AE%97%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8"},"8.1. \u8ba1\u7b97\u5185\u5b58\u5360\u7528")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#82-%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90%E5%AF%B9%E6%80%A7%E8%83%BD%E5%BD%B1%E5%93%8D"},"8.2. \u5185\u5b58\u5bf9\u9f50\u5bf9\u6027\u80fd\u5f71\u54cd")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#83-%E9%80%9A%E8%BF%87%E7%9B%B8%E5%85%B3%E5%B7%A5%E5%85%B7%E6%9F%A5%E7%9C%8B%E6%80%A7%E8%83%BD%E7%93%B6%E9%A2%88"},"8.3. \u901a\u8fc7\u76f8\u5173\u5de5\u5177\u67e5\u770b\u6027\u80fd\u74f6\u9888")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#84-%E7%BC%96%E8%AF%91%E4%BC%98%E5%8C%96"},"8.4. \u7f16\u8bd1\u4f18\u5316"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#841-%E4%BC%98%E5%8C%96%E7%BC%96%E8%AF%91%E4%BD%93%E7%A7%AF"},"8.4.1. \u4f18\u5316\u7f16\u8bd1\u4f53\u79ef")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#842-%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90%E5%8F%8B%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81"},"8.4.2. \u9003\u9038\u5206\u6790\u53cb\u597d\u7684\u4ee3\u7801")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#85-%E7%BC%96%E7%A8%8B%E5%AE%9E%E8%B7%B5"},"8.5. \u7f16\u7a0b\u5b9e\u8df5")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#9-gc"},"9. GC"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#91-gc-%E7%AE%97%E6%B3%95"},"9.1. gc \u7b97\u6cd5")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#92-gc-%E5%88%86%E6%9E%90"},"9.2. gc \u5206\u6790")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#93-%E5%86%99gc-%E5%8F%8B%E5%A5%BD%E4%BB%A3%E7%A0%81%E7%9A%84%E5%8E%9F%E5%88%99"},"9.3. \u5199GC \u53cb\u597d\u4ee3\u7801\u7684\u539f\u5219")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#10-golang-runtime-%E8%BF%90%E8%A1%8C%E6%97%B6"},"10. golang runtime \u8fd0\u884c\u65f6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#11-golang-%E5%91%BD%E4%BB%A4%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8"},"11. golang \u547d\u4ee4\u5de5\u5177\u4f7f\u7528"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#111-%E6%9C%89%E5%93%AA%E4%BA%9B%E5%91%BD%E4%BB%A4"},"11.1. \u6709\u54ea\u4e9b\u547d\u4ee4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#112-%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91"},"11.2. \u4ea4\u53c9\u7f16\u8bd1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#cgo"},"cgo")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#12-%E5%BC%80%E6%BA%90%E8%87%AA%E5%B7%B1%E7%9A%84%E7%B1%BB%E5%BA%93"},"12. \u5f00\u6e90\u81ea\u5df1\u7684\u7c7b\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#13-%E5%BC%80%E5%8F%91restful-api"},"13. \u5f00\u53d1restful api"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#131-%E9%A1%B9%E7%9B%AE%E7%BB%93%E6%9E%84"},"13.1. \u9879\u76ee\u7ed3\u6784")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#132-fiber"},"13.2. fiber")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#133-gen"},"13.3. gen")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#134-gin-%E5%92%8C%E5%8E%9F%E7%94%9F-http-%E5%AF%B9%E6%AF%94"},"13.4. gin \u548c\u539f\u751f http \u5bf9\u6bd4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#135-gin-%E4%B8%AD%E7%9A%84-json"},"13.5. gin \u4e2d\u7684 json")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#136-%E4%B8%AD%E9%97%B4%E4%BB%B6"},"13.6. \u4e2d\u95f4\u4ef6")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#goframe-gf%E6%A1%86%E6%9E%B6"},"goframe gf\u6846\u67b6")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#14-%E5%BC%80%E5%8F%91%E5%8D%95%E4%BD%93app"},"14. \u5f00\u53d1\u5355\u4f53app")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#15-%E5%BC%80%E5%8F%91%E5%BE%AE%E6%9C%8D%E5%8A%A1-microservice"},"15. \u5f00\u53d1\u5fae\u670d\u52a1 microservice"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#151-%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E9%80%9A%E4%BF%A1"},"15.1. \u670d\u52a1\u4e4b\u95f4\u901a\u4fe1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#152-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6%E9%80%89%E5%9E%8B"},"15.2. \u5fae\u670d\u52a1\u6846\u67b6\u9009\u578b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#153-go-micro"},"15.3. go-micro")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#154-%E7%BD%91%E5%85%B3"},"15.4. \u7f51\u5173")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16-%E5%BC%80%E6%BA%90%E5%BA%93"},"16. \u5f00\u6e90\u5e93"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%E5%B7%A5%E4%B8%9A%E7%89%A9%E8%81%94%E7%BD%91"},"\u5de5\u4e1a\u7269\u8054\u7f51")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#161-%E5%BC%82%E6%AD%A5%E9%98%9F%E5%88%97"},"16.1. \u5f02\u6b65\u961f\u5217")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#162-%E7%9B%91%E5%90%AC%E6%96%87%E4%BB%B6%E6%94%B9%E5%8A%A8"},"16.2. \u76d1\u542c\u6587\u4ef6\u6539\u52a8")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#163-python-%E8%A7%A3%E9%87%8A%E5%99%A8"},"16.3. Python \u89e3\u91ca\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#164-%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86"},"16.4. \u6743\u9650\u7ba1\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#165-%E7%BD%91%E7%BB%9C"},"16.5. \u7f51\u7edc")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#166-%E7%83%AD%E5%8A%A0%E8%BD%BD-live-reloading-hot-reload"},"16.6. \u70ed\u52a0\u8f7d live-reloading hot reload")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#167-%E5%AE%B9%E5%99%A8"},"16.7. \u5bb9\u5668")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#168-%E6%95%B0%E6%8D%AE%E5%BA%93"},"16.8. \u6570\u636e\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#169-%E7%BC%93%E5%AD%98"},"16.9. \u7f13\u5b58")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1610-%E8%A7%A3%E6%9E%90%E5%BA%93"},"16.10. \u89e3\u6790\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1611-%E9%A2%9C%E8%89%B2"},"16.11. \u989c\u8272")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1612-%E5%A5%BD%E7%9A%84%E7%BC%96%E7%A8%8B%E4%BD%93%E9%AA%8C"},"16.12. \u597d\u7684\u7f16\u7a0b\u4f53\u9a8c"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16121-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%A1%A8%E8%BD%AC-struct"},"16.12.1. \u6570\u636e\u5e93\u8868\u8f6c struct")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16122-struct-%E8%A7%A3%E6%9E%90"},"16.12.2. struct \u89e3\u6790")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16123-%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%97%A5%E6%9C%9F"},"16.12.3. \u683c\u5f0f\u5316\u65e5\u671f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16124-%E6%B5%81%E5%BC%8F%E5%A4%84%E7%90%86-%E6%B5%81%E5%BC%8F%E7%BC%96%E7%A8%8B"},"16.12.4. \u6d41\u5f0f\u5904\u7406 \u6d41\u5f0f\u7f16\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16125-%E6%B1%A0"},"16.12.5. \u6c60")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#16126-%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5"},"16.12.6. \u4f9d\u8d56\u6ce8\u5165")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1613-%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1"},"16.13. \u5b9a\u65f6\u4efb\u52a1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1614-api-%E5%92%8C%E6%96%87%E6%A1%A3"},"16.14. api \u548c\u6587\u6863")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1615-%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF-%E8%BF%90%E7%BB%B4"},"16.15. \u7cfb\u7edf\u4fe1\u606f \u8fd0\u7ef4")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#%E7%9B%91%E6%8E%A7-%E6%97%B6%E5%BA%8F%E6%95%B0%E6%8D%AE%E5%BA%93"},"\u76d1\u63a7 \u65f6\u5e8f\u6570\u636e\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1616-%E6%97%B6%E9%97%B4%E5%B7%A5%E5%85%B7"},"16.16. \u65f6\u95f4\u5de5\u5177")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1617-%E6%8C%81%E7%BB%AD%E8%BF%BD%E8%B8%AA%E8%AF%BB%E5%8F%96%E6%97%A5%E5%BF%97"},"16.17. \u6301\u7eed\u8ffd\u8e2a\u8bfb\u53d6\u65e5\u5fd7")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1618-%E5%88%86%E5%B8%83%E5%BC%8F"},"16.18. \u5206\u5e03\u5f0f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1619-%E5%AE%9E%E7%8E%B0%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6"},"16.19. \u5b9e\u73b0\u63d2\u4ef6\u673a\u5236")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1620-%E5%92%8C%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E4%BA%A4%E4%BA%92"},"16.20. \u548c\u5176\u4ed6\u8bed\u8a00\u4ea4\u4e92")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1621-%E9%9F%B3%E9%A2%91%E8%A7%86%E9%A2%91%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86"},"16.21. \u97f3\u9891\u89c6\u9891\u56fe\u7247\u5904\u7406")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1622-%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%BA%93"},"16.22. \u5e38\u7528\u5de5\u5177\u5e93")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1623-%E6%B3%A8%E8%A7%A3%E7%BC%96%E7%A8%8B"},"16.23. \u6ce8\u89e3\u7f16\u7a0b")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1624-%E7%94%9F%E6%88%90%E5%81%87%E6%95%B0%E6%8D%AE"},"16.24. \u751f\u6210\u5047\u6570\u636e")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1625-%E7%BD%91%E7%BB%9C%E6%8A%93%E5%8C%85"},"16.25. \u7f51\u7edc\u6293\u5305")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#1626-gui%E6%A1%86%E6%9E%B6"},"16.26. gui\u6846\u67b6")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#17-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5"},"17. \u53c2\u8003\u94fe\u63a5"))),(0,i.kt)("h1",{id:"1-\u7b80\u4ecb"},"1. \u7b80\u4ecb"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u5b8c\u6574\u7684\u5f00\u53d1\u5de5\u5177\u94fe \uff08tools\uff0c test\uff0cbenchmark\uff0cbuiltin\u3002\u3002\u3002\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u90e8\u7f72\u7b80\u5355\uff08\u76f4\u63a5\u7f16\u8bd1\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c \u4e22\u5230\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u4e86\uff09"),(0,i.kt)("li",{parentName:"ul"},"\u6807\u51c6\u5e93\u5df2\u7ecf\u5305\u542b\u4e86\u5f88\u591a\u5de5\u5177, \u4f9d\u8d56\u5c11"),(0,i.kt)("li",{parentName:"ul"},"\u4f18\u79c0\u7684\u5e76\u53d1\u6a21\u578b\uff1b")),(0,i.kt)("p",null,"\u521b\u59cb\u4eba:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rob pike : Unix \u5f00\u53d1\u8005\u4e4b\u4e00, utf-8 \u4f5c\u8005"),(0,i.kt)("li",{parentName:"ul"},"Ken Thompson:  Unix \u4f5c\u8005, c \u8bed\u8a00\u4f5c\u8005"),(0,i.kt)("li",{parentName:"ul"},"Robert Griesemer: V8 engine \u4f5c\u8005, hot spot \u5f00\u53d1\u8005  ")),(0,i.kt)("p",null,"\u548c java \u5bf9\u6bd4:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Java \u5305\u76f8\u5f53\u4e8e\u5355\u4e2a .go \u6e90\u6587\u4ef6\u3002 "),(0,i.kt)("li",{parentName:"ul"},"Go \u8bed\u8a00\u5305\u76f8\u5f53\u4e8e\u6574\u4e2a Maven \u6a21\u5757\u6216 .NET \u7a0b\u5e8f\u96c6\u3002")),(0,i.kt)("p",null,"\u573a\u666f:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e91\u8ba1\u7b97: docker, kubernetes"),(0,i.kt)("li",{parentName:"ul"},"\u533a\u5757\u94fe: \u4ee5\u592a\u574a(ethereum), hyperledger")),(0,i.kt)("h1",{id:"2-\u73af\u5883\u914d\u7f6e"},"2. \u73af\u5883\u914d\u7f6e"),(0,i.kt)("h2",{id:"21-\u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf"},"2.1. \u76f8\u5173\u7684\u73af\u5883\u53d8\u91cf"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$GOROOT \u8868\u793a Go \u5728\u4f60\u7684\u7535\u8111\u4e0a\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u5b83\u7684\u503c\u4e00\u822c\u90fd\u662f $HOME/go\uff0c\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5b89\u88c5\u5728\u522b\u7684\u5730\u65b9\u3002\n\n    $GOBIN \u8868\u793a\u7f16\u8bd1\u5668\u548c\u94fe\u63a5\u5668\u7684\u5b89\u88c5\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f $GOROOT/bin\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u662f Go 1.0.3 \u53ca\u4ee5\u540e\u7684\u7248\u672c\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4f60\u53ef\u4ee5\u5c06\u5b83\u7684\u503c\u8bbe\u7f6e\u4e3a\u7a7a\uff0cGo \u5c06\u4f1a\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u9ed8\u8ba4\u503c\n\n$GOARCH \u8868\u793a\u7f16\u8bd1\u76ee\u6807\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f 386\u3001amd64 \u6216 arm\u3002\n\n$GOOS \u8868\u793a\u76ee\u6807\u673a\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f darwin\u3001freebsd\u3001linux \u6216 windows\u3002\n\n$GOHOSTOS \u548c $GOHOSTARCH \u8bbe\u7f6e\u672c\u5730\u673a\u5668\u7684\u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0\u548c\u7f16\u8bd1\u4f53\u7cfb\u7ed3\u6784\n\n    \u53ea\u6709\u5728\u8fdb\u884c\u4ea4\u53c9\u7f16\u8bd1\u7684\u65f6\u5019\u624d\u4f1a\u7528\u5230\uff0c\u5982\u679c\u4f60\u4e0d\u8fdb\u884c\u663e\u793a\u8bbe\u7f6e\uff0c\u4ed6\u4eec\u7684\u503c\u4f1a\u548c\u672c\u5730\u673a\u5668\uff08$GOOS \u548c $GOARCH\uff09\u4e00\u6837\u3002\n\n$GOPATH \u9ed8\u8ba4\u91c7\u7528\u548c $GOROOT \u4e00\u6837\u7684\u503c\uff0c\u4f46\u4ece Go 1.1 \u7248\u672c\u5f00\u59cb\uff0c\u4f60\u5fc5\u987b\u4fee\u6539\u4e3a\u5176\u5b83\u8def\u5f84\u3002\u5982\u679c\u4f7f\u7528 go module, \u5219\u4e0d\u7528\u8bbe\u7f6e\n\n$GOARM \u4e13\u95e8\u9488\u5bf9\u57fa\u4e8e arm \u67b6\u6784\u7684\u5904\u7406\u5668\uff0c\u5b83\u7684\u503c\u53ef\u4ee5\u662f 5 \u6216 6\uff0c\u9ed8\u8ba4\u4e3a 6\u3002\n\n$GOMAXPROCS \u7528\u4e8e\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u53ef\u4f7f\u7528\u7684\u5904\u7406\u5668\u4e2a\u6570\u4e0e\u6838\u6570\n")),(0,i.kt)("h2",{id:"22-install"},"2.2. install"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://studygolang.com/dl"},"https://studygolang.com/dl")),(0,i.kt)("p",null,"\u5bf9\u4e8e Unix:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u73af\u5883\u53d8\u91cf\n# \n#\u82e5\u4e0d\u8bbe\u7f6e, Unix\u9ed8\u8ba4 ${home}/go, win \u9ed8\u8ba4\u4e3a %userprofile%/go\nGOPATH=xxx\n# \u5f00\u542f go module \nGO111MODULE=on\n# \u56fd\u5185\u955c\u50cf\u4ee3\u7406\nGOPROXY=https://goproxy.io,direct\n# \u8bbe\u7f6e\u4e0d\u8d70 proxy \u7684\u79c1\u6709\u4ed3\u5e93\uff0c\u591a\u4e2a\u7528\u9017\u53f7\u76f8\u9694\uff08\u53ef\u9009\uff09\n#go env -w GOPRIVATE=*.corp.example.com\n# \u8bbe\u7f6e\u4e0d\u8d70 proxy \u7684\u79c1\u6709\u7ec4\u7ec7\uff08\u53ef\u9009\uff09\n#go env -w GOPRIVATE=example.com/org_name\n\n# \u4e0b\u8f7d\u538b\u7f29\u5305\ncurl -L https://studygolang.com/dl/golang/go1.14.6.linux-amd64.tar.gz --output xxx.tar.gz\n# \u89e3\u538b\u5230 /usr/local\ntar -C /usr/local -zxvf go1.14.6.tar.gz \n\n\n# vim /etc/profile\n# centos \u8981\u52a0\u5230\u8fd9\u4e2a\u6587\u4ef6\u91cc, \u624d\u80fd\u6240\u6709\u7528\u6237\u767b\u5f55\u90fd\u6267\u884c go verison  \u6709\u6548\nvi /etc/bashrc\n\n# \n# export GOPATH=/opt/gopath\n# export GOROOT=/usr/lib/golang\n# export GOBIN=$GOROOT/bin\n#\u9700\u8981\u6dfb\u52a0\u5230 path, \n# export PATH=$PATH:$GOBIN ....\n\nsource /etc/profile\n\n# \u9a8c\u8bc1\ngo version\n\n\n# \u67e5\u770b\u73af\u5883\u53d8\u91cf\u662f\u5426\u8bbe\u7f6e\u597d\u4e86\ngo env\n\n\n")),(0,i.kt)("h2",{id:"23-\u56fd\u5185\u955c\u50cf"},"2.3. \u56fd\u5185\u955c\u50cf"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"\n# \u56fd\u5185\u4ee3\u7406 \u53c2\u8003 https://goproxy.io/zh/\n# https://goproxy.cn\n# or https://athens.azurefd.net/\n")),(0,i.kt)("h2",{id:"24-ide"},"2.4. IDE"),(0,i.kt)("p",null,"vscode + go \u63d2\u4ef6 (",(0,i.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/269215596"},"https://zhuanlan.zhihu.com/p/269215596"),"), go struct tag (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/wangzeping722/go-struct-tag"},"https://github.com/wangzeping722/go-struct-tag"),", ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/guyanyijiu/go-struct-tag"},"https://github.com/guyanyijiu/go-struct-tag"),")"),(0,i.kt)("p",null,"idea + go \u63d2\u4ef6"),(0,i.kt)("h1",{id:"3-quickstart-\u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570"},"3. quickstart \u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570"),(0,i.kt)("p",null,"\u7f16\u5199\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n  "flag" // \u4e13\u95e8\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\u7684\u5de5\u5177\u5305\n  "fmt"\n  "os"\n)\n\nfunc main() {\n  cmd := os.Args[0]            //\u547d\u4ee4\u884c\u7b2c\u4e00\u4e2a\u503c, \u5373 \u201c\u5f53\u524d\u547d\u4ee4\u201d\n  fmt.Println("cmd: ", cmd)    //D:\\gopath\\src\\cli-example\\cli-example.exe\n  argCount := len(os.Args[1:]) // \u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570\n  fmt.Println("arg count: ", argCount)\n  //\u904d\u5386\u6253\u5370\u53c2\u6570\n  for i, v := range os.Args[1:] {\n    fmt.Printf("\u53c2\u6570%d: %s\\n", i+1, v)\n  }\n\n  var port int\n  flag.IntVar(&port, "port", 8080, "\u7aef\u53e3, \u9ed8\u8ba4 8080") // \u4e3a\u540d\u79f0\u4e3a port \u7684flag\u8d4b\u503c, \u8bbe\u7f6e\u9ed8\u8ba4\u503c8080\n  flag.Parse()                                    // \u5f00\u59cb\u89e3\u6790\n  fmt.Println("\u7aef\u53e3\u53f7: ", port)\n  /*\n    $ ./cli-example.exe -port=9000 // \u5982\u679c\u6307\u5b9a\u4e86 port , \u5219\u4e3a\u6307\u5b9a\u503c\n    \u7aef\u53e3\u53f7:  9000\n  */\n}\n\n')),(0,i.kt)("p",null,"\u8fd0\u884c: \u4e09\u79cd\u65b9\u6cd5"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u901a\u8fc7 IDE \u7684\u542f\u52a8\u6309\u94ae")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"go run app.go"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u5148\u7f16\u8bd1, \u518d\u8fd0\u884c  ",(0,i.kt)("inlineCode",{parentName:"p"},"go build xxx.go")," + ",(0,i.kt)("inlineCode",{parentName:"p"},"./xxx.exe")," (\u53ef\u6267\u884c\u6587\u4ef6\u540d \u4e3a go \u6587\u4ef6\u540d)"),(0,i.kt)("p",{parentName:"li"},"go build \u82e5\u4e0d\u52a0\u4efb\u4f55\u53c2\u6570, \u5219\u662f\u7f16\u8bd1 main \u5305, \u53ef\u6267\u884c\u6587\u4ef6\u540d \u4e3a \u5305\u540d"))),(0,i.kt)("h1",{id:"4-golang-\u7684\u5751"},"4. golang \u7684\u5751"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5de6\u5927\u62ec\u53f7 { \u4e0d\u80fd\u5355\u72ec\u653e\u4e00\u884c\n// \u7f16\u8bd1\u5668\u4f1a\u5728\u6bcf\u884c\u4ee3\u7801\u5c3e\u90e8\u7279\u5b9a\u5206\u9694\u7b26\u540e\u52a0;\u6765\u5206\u9694\u591a\u6761\u8bed\u53e5\uff0c\u6bd4\u5982\u4f1a\u5728 ) \u540e\u52a0\u5206\u53f7\uff1a\n\n\n\n// \u4e0d\u80fd\u7528\u7b80\u77ed\u58f0\u660e\u65b9\u5f0f\u6765\u5355\u72ec\u4e3a\u4e00\u4e2a\u53d8\u91cf\u91cd\u590d\u58f0\u660e\uff0c:=\u5de6\u4fa7\u81f3\u5c11\u8981\u6709\u4e00\u4e2a\u65b0\u53d8\u91cf\u624d\u884c\uff0c\n// \u9519\u8bef\u793a\u4f8b\nfunc main() {  \n    one := 0\n    one := 1 // error: no new variables on left side of :=\n}\n// \u6b63\u786e\u793a\u4f8b\nfunc main() {\n    one := 0\n    one, two := 1, 2    // two \u662f\u65b0\u53d8\u91cf\uff0c\u5141\u8bb8 one \u7684\u91cd\u590d\u58f0\u660e\u3002\u6bd4\u5982 error \u5904\u7406\u7ecf\u5e38\u7528\u540c\u540d\u53d8\u91cf err\n    one, two = two, one    // \u4ea4\u6362\u4e24\u4e2a\u53d8\u91cf\u503c\u7684\u7b80\u5199\n}\n\n\n// \u77ed\u58f0\u660e\u5e38\u5e38\u4f1a\u7528\u6765\u91cd\u590d\u58f0\u660e\u67d0\u4e2a\u53d8\u91cf, \u5982\u91cd\u590d\u58f0\u660e err, \u7136\u540e\u9519\u8bef\u5904\u7406\n// \u8fd9\u5b9e\u9645\u662f\u53d8\u91cf\u8986\u76d6\n\n\n\n\n// \u5141\u8bb8\u5bf9\u503c\u4e3a nil \u7684 slice \u6dfb\u52a0\u5143\u7d20\uff0c\u4e0d\u5141\u8bb8\u5bf9\u503c\u4e3a nil \u7684 map\u6dfb\u52a0\u5143\u7d20\n// map \u9519\u8bef\u793a\u4f8b\nfunc main() {\n    var m map[string]int\n    m["one"] = 1        // error: panic: assignment to entry in nil map\n    // m := make(map[string]int)// map \u7684\u6b63\u786e\u58f0\u660e\uff0c\u5206\u914d\u4e86\u5b9e\u9645\u7684\u5185\u5b58\n}    \n// slice \u6b63\u786e\u793a\u4f8b\nfunc main() {\n    var s []int\n    s = append(s, 1)\n}\n\n\n\n// \u5728\u521b\u5efa map \u7c7b\u578b\u7684\u53d8\u91cf\u65f6\u53ef\u4ee5\u6307\u5b9a\u5bb9\u91cf\uff0c\u4f46\u4e0d\u80fd\u50cf slice \u4e00\u6837\u4f7f\u7528 cap() \u6765\u68c0\u6d4b\u5206\u914d\u7a7a\u95f4\u7684\u5927\u5c0f\n// \u9519\u8bef\u793a\u4f8b\nfunc main() {\n    m := make(map[string]int, 99)\n    println(cap(m))     // error: invalid argument m1 (type map[string]int) for cap  \n}  \n\n\n\n// string \u7c7b\u578b\u7684\u53d8\u91cf\u503c\u4e0d\u80fd\u4e3a nil\n// \u9519\u8bef\u793a\u4f8b\nfunc main() {\n    var s string = nil    // cannot use nil as type string in assignment\n    if s == nil {    // invalid operation: s == nil (mismatched types string and nil)\n        s = "default"\n    }\n}\n// \u6b63\u786e\u793a\u4f8b\nfunc main() {\n    var s string    // \u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u96f6\u503c\u662f\u7a7a\u4e32 ""\n    if s == "" {\n        s = "default"\n    }\n}\n\n\n\n// Array \u7c7b\u578b\u7684\u503c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570, \u662f\u503c\u4f20\u9012, \u5982\u679c\u60f3\u4fee\u6539\u5916\u90e8\u7684\u53c2\u6570\u6570\u7ec4, \u9700\u8981:\n// - \u76f4\u63a5\u4f20\u9012\u6307\u5411\u8fd9\u4e2a\u6570\u7ec4\u7684\u6307\u9488\u7c7b\u578b\n// - \u6216\u8005 \u76f4\u63a5\u4f7f\u7528 slice\uff1a\u5373\u4f7f\u51fd\u6570\u5185\u90e8\u5f97\u5230\u7684\u662f slice \u7684\u503c\u62f7\u8d1d\uff0c\u4f46\u4f9d\u65e7\u4f1a\u66f4\u65b0 slice \u7684\u539f\u59cb\u5e95\u5c42\u6570\u7ec4  (\u63a8\u8350)\n// \u6570\u7ec4\u4f7f\u7528\u503c\u62f7\u8d1d\u4f20\u53c2\nfunc main() {\n    x := [3]int{1,2,3}\n\n    func(arr [3]int) {\n        arr[0] = 7\n        fmt.Println(arr)    // [7 2 3]\n    }(x)\n    fmt.Println(x)            // [1 2 3]    // \u5e76\u4e0d\u662f\u4f60\u4ee5\u4e3a\u7684 [7 2 3]\n}\n\n// \u4f20\u5740\u4f1a\u4fee\u6539\u539f\u6570\u636e\nfunc main() {\n    x := [3]int{1,2,3}\n\n    func(arr *[3]int) {\n        (*arr)[0] = 7    \n        fmt.Println(arr)    // &[7 2 3]\n    }(&x)\n    fmt.Println(x)    // [7 2 3]\n}\n\n// \u4f1a\u4fee\u6539 slice \u7684\u5e95\u5c42 array\uff0c\u4ece\u800c\u4fee\u6539 slice\nfunc main() {\n    x := []int{1, 2, 3}\n    func(arr []int) {\n        arr[0] = 7\n        fmt.Println(x)    // [7 2 3]\n    }(x)\n    fmt.Println(x)    // [7 2 3]\n}\n\n\n// log \u6807\u51c6\u5e93\u63d0\u4f9b\u4e86\u4e0d\u540c\u7684\u65e5\u5fd7\u8bb0\u5f55\u7b49\u7ea7\uff0c\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u65e5\u5fd7\u5e93\u4e0d\u540c\uff0cGo \u7684 log \u5305\u5728\u8c03\u7528 Fatal*()\u3001Panic*() \u65f6\u80fd\u505a\u66f4\u591a\u65e5\u5fd7\u5916\u7684\u4e8b\uff0c\u5982\u4e2d\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\n\nfunc main() {\n    log.Fatal("Fatal level log: log entry")        // \u8f93\u51fa\u4fe1\u606f\u540e\uff0c\u7a0b\u5e8f\u7ec8\u6b62\u6267\u884c\n    log.Println("Nomal level log: log entry") // \u8fd9\u91cc\u4e0d\u4f1a\u6267\u884c\u5230\u4e86\n}\n\n\n\n\n\n// \u4e0d\u5bfc\u51fa(\u5373\u5927\u5199)\u7684 struct \u5b57\u6bb5\u65e0\u6cd5\u88ab encode\n// \u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5b57\u6bb5\u6210\u5458\u662f\u65e0\u6cd5\u88ab\u5916\u90e8\u76f4\u63a5\u8bbf\u95ee\u7684\uff0c\u6240\u4ee5 struct \u5728\u8fdb\u884c json\u3001xml\u3001gob \u7b49\u683c\u5f0f\u7684 encode \u64cd\u4f5c\u65f6\uff0c\u8fd9\u4e9b\u79c1\u6709\u5b57\u6bb5\u4f1a\u88ab\u5ffd\u7565\uff0c\u5bfc\u51fa\u65f6\u5f97\u5230\u96f6\u503c\uff1a\n\n\n\n// https://www.topgoer.cn/docs/golang/chapter21-1 TODO 35 \u6761\n\n')),(0,i.kt)("h1",{id:"5-\u5e38\u89c1\u9009\u578b"},"5. \u5e38\u89c1\u9009\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"web\uff1agithub.com/gin-gonic/gin\n\u6570\u636e\u5e93\uff1agorm.io/gorm \u6216\u8005 ent \u6216\u8005 sqlx+go-sqlbuilder  \n\u914d\u7f6e\uff1agithub.com/spf13/viper\nredis\uff1a https://github.com/go-redis/redis\n\u5de5\u5177\u5305\uff1agithub.com/duke-git/lancet\n\u53c2\u6570\u9a8c\u8bc1\uff1agithub.com/gookit/validate\n\u65e5\u5b50\uff1ago.uber.org/zap\njson\uff1agithub.com/json-iterator/go\n\u534f\u7a0b\u6c60\uff1agithub.com/panjf2000/ants\n\u6587\u6863 apidoc \u6216\u8005 emirpasic/gods\n\n")),(0,i.kt)("h1",{id:"6-basic"},"6. basic"),(0,i.kt)("h2",{id:"61--deepequal-\u5224\u65ad\u76f8\u7b49"},"6.1. == DeepEqual \u5224\u65ad\u76f8\u7b49"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// == \u6bd4\u8f83\u7684\u4e0d\u662f\u5730\u5740, \u800c\u662f\u5185\u5bb9 (\u548c java \u4e0d\u540c)\np1 := People{"msr", 17}\np2 := People{"msr", 17}\nfmt.Printf("%p %p\\n", &p1, &p2) //\u8f93\u51fa\u5730\u5740\u4e0d\u540c\nfmt.Println(p1 == p2)           //\u8f93\u51fa:true\n\n// reflect.DeepEqual() \u53ef\u7528\u4e8e\u505a\u4e00\u4e9b==\u5224\u65ad\u4e0d\u4e86\u7684\u4e8b\u60c5, \u4f8b\u5982 \u5bf9 slice \u548c map \u8fdb\u884c\u6bd4\u8f83\n//\n// \u590d\u6742\u7ed3\u6784\u7684\u76f8\u7b49\u6bd4\u8f83\n//reflect\u5305\u4e2d\u7684 DeepEqual()\u51fd\u6570\n//\ntype data struct {\n    num    int               //ok\n    checks [10]func() bool   //not comparable\n    doit   func() bool       //not comparable\n    m      map[string]string //not comparable\n    bytes  []byte            //not comparable\n}\n\nfunc compareDemo() {\n    v1 := data{}\n    v2 := data{}\n    fmt.Println("v1 == v2:", reflect.DeepEqual(v1, v2)) //prints: v1 == v2: true\n\n    m1 := map[string]string{"one": "a", "two": "b"}\n    m2 := map[string]string{"two": "b", "one": "a"}\n    fmt.Println("m1 == m2:", reflect.DeepEqual(m1, m2)) //prints: m1 == m2: true\n\n    s1 := []int{1, 2, 3}\n    s2 := []int{1, 2, 3}\n    fmt.Println("s1 == s2:", reflect.DeepEqual(s1, s2)) //prints: s1 == s2: true\n\n    //DeepEqual()\u4e0d\u4f1a\u8ba4\u4e3a\u7a7a\u7684slice\u4e0e\u201cnil\u201d\u7684slice\u76f8\u7b49\n    //bytes.Equal()\u8ba4\u4e3a\u201cnil\u201d\u548c\u7a7a\u7684slice\u662f\u76f8\u7b49\u7684\n    var b1 []byte = nil\n    b2 := []byte{}\n    fmt.Println("b1 == b2:", reflect.DeepEqual(b1, b2)) //prints: b1 == b2: false\n    fmt.Println("b1 == b2:", bytes.Equal(b1, b2))       //prints: b1 == b2: true\n\n}\n\n\n')),(0,i.kt)("h2",{id:"62-\u957f\u8d4b\u503c-\u77ed\u8d4b\u503c"},"6.2. \u957f\u8d4b\u503c \u77ed\u8d4b\u503c"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.learngoprogramming.com/learn-go-lang-variables-visual-tutorial-and-ebook-9a061d29babe"},"https://blog.learngoprogramming.com/learn-go-lang-variables-visual-tutorial-and-ebook-9a061d29babe")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n\n")),(0,i.kt)("h2",{id:"63-make-\u548c-new-\u548c-var"},"6.3. make \u548c new \u548c var"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u90fd\u662f\u7528\u6765\u7533\u8bf7\u5185\u5b58\u7684\n\nnew  \u7528\u6765\u7ed9\u503c\u7c7b\u578b\u548cstruct\u7533\u8bf7\u5185\u5b58 (int, string, bool..., \u4e5f\u5305\u62ec struct \u8fd9\u79cd\u503c\u7c7b\u578b),  \u8fd4\u56de\u6307\u9488\n\nmake \u7528\u6765\u7ed9\u5185\u7f6e\u5f15\u7528\u7c7b\u578b\u5f00\u8f9f\u5185\u5b58 (slice, map, channel), \u8fd4\u56de\u7c7b\u578b\u5bf9\u5e94\u7684\u503c (\u8fd4\u56de\u7684\u7c7b\u578b\u5bf9\u8c61\u5b9e\u9645\u5305\u542b\u4e86\u6307\u9488 https://www.flysnow.org/2018/02/24/golang-function-parameters-passed-by-value.html)\n\n// var \u53ef\u4ee5\u58f0\u660e\u53d8\u91cf\u4e3a\u96f6\u503c\n\n\n")),(0,i.kt)("h2",{id:"64-\u96f6\u503c-nil"},"6.4. \u96f6\u503c nil"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n// \u5047\u8bbe\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u6bcf\u4e2a\u53d8\u91cf\u58f0\u660e\u90fd\u4f1a\u81ea\u52a8\u521d\u59cb\u5316\u4e3a\u4e0e\u96f6\u5185\u5b58\u7684\u5185\u5bb9\u76f8\u5339\u914d\u7684\u503c\n// \u6570\u5b57\u7c7b\u578b ,  0\n// bool\u7c7b\u578b , false\n// \n// \u6570\u7ec4/struct\u7c7b\u578b, [\u6bcf\u4e2a\u5143\u7d20\u7684\u5bf9\u5e94\u7684\u96f6\u503c]\n// \n// map\u3001slice\u3001pointer\u3001channel\u3001func\u3001interface \u7c7b\u578b, nil\n\n// \n// nil \u6807\u8bc6\u7b26\u662f\u4e0d\u80fd\u6bd4\u8f83\u7684\n// nil \u4e0d\u662f\u5173\u952e\u5b57\u6216\u4fdd\u7559\u5b57\n// \n// \u4e0d\u540c\u7c7b\u578b nil \u7684\u6307\u9488\u662f\u4e00\u6837\u7684\n// \n// \n// \n// \n// demo1\ntype MyInt struct {\n    mu  sync.Mutex\n    val int\n}\nfunc main() {\n    var i MyInt\n\n    // i.mu \u65e0\u9700\u521d\u59cb\u5316, \u76f4\u63a5\u4f7f\u7528\u5373\u53ef\n    i.mu.Lock()\n    i.val++\n    i.mu.Unlock()\n}\n\n    // demo2\n    var b bytes.Buffer\n    b.WriteString("Hello, world!\\n")\n    io.Copy(os.Stdout, &b)\n\n\n    // demo3\n    // s := make([]string, 0)   \n    // s := []string{}\n    var s []string  // \u53ea\u9700\u8981\u58f0\u660e\u5373\u53ef\n\n    s = append(s, "Hello")\n    s = append(s, "world")\n    fmt.Println(strings.Join(s, " "))\n\n\n    // demo4: \u901a\u8fc7 nil \u6307\u9488\u8c03\u7528\u65b9\u6cd5, \u8fd4\u56de\u9ed8\u8ba4\u503c\n    var c1 *Config\n    var c2 = &Config{\n        path: "/export",\n    }\n    fmt.Println(c1.Path(), c2.Path())\n    //\ntype Config struct {\npath string\n}\n\nfunc (c *Config) Path() string {\n    if c == nil {\n        return "/usr/home"\n    }\n    return c.path\n}\n\n')),(0,i.kt)("h2",{id:"65-\u57fa\u672c\u6570\u636e\u7c7b\u578b"},"6.5. \u57fa\u672c\u6570\u636e\u7c7b\u578b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n//Basic types\n/* golang \u7684\u57fa\u672c\u7c7b\u578b\nbool\n\nstring\n\n\u6709\u7b26\u53f7 int (32 or 64 bit, os \u51b3\u5b9a)  int8  int16  int32  int64\n\u65e0\u7b26\u53f7 uint (32 or 64 bit, os \u51b3\u5b9a) uint8 uint16 uint32 uint64 uintptr\n\nbyte // alias for uint8, \u4e0d\u652f\u6301\u4e2d\u6587 (\u652f\u6301\u82f1\u6587\u5b57\u7b26)\n\nrune // alias for int32\n     // represents a Unicode code point , \u6240\u4ee5\u652f\u6301\u4e2d\u6587\n\nuintptr //\u65e0\u7b26\u53f7\u6574\u578b\uff0c\u7528\u4e8e\u5b58\u653e\u4e00\u4e2a\u6307\u9488\n\nfloat32 float64 (\u82e5\u9700\u8981\u7cbe\u786e\u8ba1\u7b97, \u6d89\u53ca\u5230\u91d1\u989d\u91d1\u94b1\u4ef7\u683c\u76f8\u5173\u7684\u4e1a\u52a1, \u4f7f\u7528 https://github.com/shopspring/decimal)\n\ncomplex64 complex128 \u5b9e\u6570+\u865a\u6570\n*/\n// \n/* \u5f15\u7528\u7c7b\u578b\nslice\nmap\nchannel\ninterface\nfunc()\n*/\n// \nfunc basicType() {\n    // \u5b9a\u4e49\u53d8\u91cf, \u8d4b\u503c\n    // var c, python, java bool\n    // var x, y int = 1, 2\n\n    // \u5b57\u7b26\u4e32\n    var s string = "hello"\n    s1 := "world" // \u7701\u7565\u7684\u5199\u6cd5, \u53ea\u80fd\u5728\u51fd\u6570\u5185\u90e8\u4f7f\u7528, \u8fd9\u6837\u58f0\u660e\u7684\u53d8\u91cf\u53ef\u4ee5\u91cd\u590d\u8d4b\u503c, \u5e38\u7528\u6765\u63a5\u6536 err\n    fmt.Println("s + s1 = ", s, s1)\n    // \u7c7b\u578b\u63a8\u65ad\n    // i := 42           // int\n    // f := 3.142        // float64\n    // g := 0.867 + 0.5i // complex128\n\n    // \u58f0\u660e\u5e38\u91cf\n    const World = "\u4e16\u754c" // \u6ce8\u610f Constants cannot be declared using the := syntax.\n\n    //  \u591a\u4e2a\u53d8\u91cf\u58f0\u660e\u4e5f\u53ef\u4ee5\u8fd9\u6837\n    var (\n        ToBe   bool       = false\n        MaxInt uint64     = 1<<64 - 1\n        z      complex128 = cmplx.Sqrt(-5 + 12i)\n    )\n    println(ToBe, MaxInt, z)\n\n    var boo1 bool = false\n    fmt.Println("boo1 = ", boo1)\n\n    //\n    // \u6570\u5b57\u7c7b\u578b\n    //\n    // int\u3001uint \u548c uintptr \u4f4d\u6570\u6709\u7cfb\u7edf\u51b3\u5b9a\n    //\n    var a int8 = 1\n    var b, c int16 = 2, 3\n    println("a = ", a)\n    println("b = ", b, ", c = ", c)\n    var d, e int32 // \u5148\u58f0\u660e\n    d, e = 5, 6    // \u518d\u4f7f\u7528\n    println("d = ", d, ", e = ", e)\n\n    //Zero values \u96f6\u503c\n    var i int\n    var f float64\n    var x bool\n    var y string\n    // %q \u5b58\u7591?\n    fmt.Printf("%v %v %v %q\\n", i, f, x, y) //0 0 false ""\n\n//\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\nfunc Decimal(value float64) float64 {\n    value, _ = strconv.ParseFloat(fmt.Sprintf("%.2f", value), 64)\n    return value\n}\n\n\n\n    // \n    //Type conversions \u7c7b\u578b\u8f6c\u6362\n    //\n    // \n    //The expression T(v) converts the value v to the type T.\n    var zz int = 42\n    var w float64 = float64(i)\n    var u uint = uint(f)\n    // \u5728func \u91cc\u53ef\u4ee5\u66f4\u7b80\u5355\n    // i := 42\n    // f := float64(i)\n    // u := uint(f)\n\n    fmt.Println(zz, w, u) //42 42 42\n\n    // \u5c06\u6574\u578b (\u6216\u4efb\u610f\u6570\u636e\u7c7b\u578b) \u8f6c\u4e3a\u5b57\u7b26\u4e32\n    i := 123\n    // \u9519\u8bef\n    s := string(i) // "E"\n    // \u6b63\u786e\n    t := strconv.Itoa(i)\n    // or\n    t:= fmt.Sprintf("%d", i)\n\n\n}\n\n\n\n\n')),(0,i.kt)("h2",{id:"66-\u5b57\u7b26\u4e32-string"},"6.6. \u5b57\u7b26\u4e32 string"),(0,i.kt)("h3",{id:"661-string-\u57fa\u672c\u4f7f\u7528"},"6.6.1. string \u57fa\u672c\u4f7f\u7528"),(0,i.kt)("p",null,"strings \u5305\u76f8\u5173 api \u5b9e\u4f8b: ",(0,i.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/unqiang/p/6682281.html"},"https://www.cnblogs.com/unqiang/p/6682281.html"),"\nTODO"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// string \u662f\u53ea\u8bfb\u7684 byte array, \u53ef\u4ee5\u70ed\u6cb3\u4efb\u4f55\u6570\u636e\nfunc stringDemo() {\n    var s1 = "hello world \\n"\n    s2 := `hello world \\n` // \u591a\u884c\u5b57\u7b26\u4e32\n    fmt.Println(s1) // \u8f93\u51fa\u6362\u884c, "\\n"\u88ab\u89e3\u91ca\u6210\u6362\u884c\n    fmt.Println(s2) // \u4e0d\u6362\u884c, "\\n" \u539f\u6837\u8f93\u51fa\n    // \u957f\u5ea6\n    //  len() \u8fd4\u56de\u7684\u662f\u5b57\u7b26\u4e32\u7684 byte \u5373\u5b57\u8282\u6570\uff0c\u800c\u4e0d\u662f\u50cf Python \u4e2d\u90a3\u6837\u662f\u8ba1\u7b97 Unicode \u5b57\u7b26\u6570\n    fmt.Println(len(s1)) // 13\n    // \u5982\u679c\u8981\u5f97\u5230\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u6570\n    char := "\u2665"\n    fmt.Println(len(char))    // 3   \u5b57\u8282\u6570\n    fmt.Println(utf8.RuneCountInString(char))    // 1 \u5b57\u7b26\u6570\n                // \u6216\u8005  len([]rune(str))\n\n    // \u7b2c\u4e00\u4e2a\u5b57\u7b26, \u7528\u5b57\u8282\u7c7b\u578b\u63a5\u6536, \u6240\u4ee5\u6253\u5370\u5bf9\u5e94\u7684 ascii \u7801\n    fmt.Println(s1[0]) // 104\n    // \u539f\u6837\u6253\u5370\u5b57\u7b26\n    // \u5176\u4ed6\u5360\u4f4d\u7b26: %v \u7528\u4e8e\u590d\u6742\u7c7b\u578b\u5360\u4f4d\u5982 struct (%#v \u4f1a\u628a struct \u7684\u5b57\u6bb5\u540d\u4e5f\u6253\u5370), %s \u7528\u4e8e\u5b57\u7b26\u4e32\u5360\u4f4d, %T \u7528\u4e8e\u6253\u5370\u7c7b\u578b\u5360\u4f4d\n    fmt.Printf("%c\\n", s1[0]) //h\n\n    // \u5b57\u7b26\u4e32\u5224\u7a7a\n    if len(str) == 0{ }\n    if str == "" { }\n\n    // \u6839\u636e\u4e0b\u6807\u83b7\u53d6\n    // string  x[0]\u53d6\u51fa\u6765\u7684\u7d22\u5f15\u662f[]byte\u7c7b\u578b\uff0c\u5fc5\u987b\u8981string(x[0])\u624d\u662f\u60f3\u8981\u7684\u7d22\u5f15\u503c\n\n    // \u4fee\u6539\n    // string \u7c7b\u578b\u7684\u503c\u662f\u5e38\u91cf\uff0c\u4e0d\u53ef\u66f4\u6539\n    // s1[0] = "X" // \u62a5\u9519, string \u7c7b\u578b\u4e0d\u53ef\u4fee\u6539\n    // \u5148\u8f6c\u4e3a\u5b57\u8282\u6570\u7ec4\u518d\u4fee\u6539; \n    strArr := []byte(s1)\n    // strArr[0] = "X" // \u62a5\u9519 : cannot use "X" (type string) as type byte in assignment\n    strArr[0] = \'X\'             // \u5b57\u7b26, \u662f rune \u7c7b\u578b, \u4e0d\u662f \u5b57\u7b26\u4e32\n    fmt.Println(string(strArr)) //Xello world\n    // \u4e0a\u8fb9\u7684\u793a\u4f8b\u5e76\u4e0d\u662f\u66f4\u65b0\u5b57\u7b26\u4e32\u7684\u6b63\u786e\u59ff\u52bf\uff0c\n    // \u56e0\u4e3a\u4e00\u4e2a UTF8 \u7f16\u7801\u7684\u5b57\u7b26\u53ef\u80fd\u4f1a\u5360\u591a\u4e2a\u5b57\u8282\uff0c\u6bd4\u5982\u6c49\u5b57\u5c31\u9700\u8981 3~4\u4e2a\u5b57\u8282\u6765\u5b58\u50a8\uff0c\u6b64\u65f6\u66f4\u65b0\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\u662f\u9519\u8bef\u7684\n    // \u6b63\u786e\u59ff\u52bf\uff1a\u5c06 string \u8f6c\u4e3a rune slice\uff08\u6b64\u65f6 1 \u4e2a rune \u53ef\u80fd\u5360\u591a\u4e2a byte\uff09\uff0c\u76f4\u63a5\u66f4\u65b0 rune \u4e2d\u7684\u5b57\u7b26\n    x := "text"\n    xRunes := []rune(x)\n    xRunes[0] = \'\u6211\'\n    x = string(xRunes)\n    fmt.Println(x)    // \u6211ext\n\n    // \u904d\u5386\n    // bad\n    str := "hello \u4e16\u754c" // 1\u4e2a\u4e2d\u6587\u53603byte\n    for i, l := 0, len(str); i < l; i++ {\n        var c byte = str[i]\n        // \u5bf9\u5e94index, ascii, char\n        fmt.Printf("%d - %v - %c\\n", i, c, c) // \u6709\u4e71\u7801\n    }\n    // good\n    for i, c := range str {\n        fmt.Printf("%d - %v - %c\\n", i, c, c)\n    }\n\n    // \u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u5b50\u4e32\n    substr := str[n:m]\n\n\n    // \u6807\u51c6\u5e93\u4e2d\u6709 "unicode/utf8" \u5305\u6765\u505a UTF8 \u7684\u76f8\u5173\u89e3\u7801\u7f16\u7801\n    str1 := "ABC"\n    fmt.Println(utf8.ValidString(str1))    // true\n    c := str1\n    str2 := "A\\xfeC"\n    fmt.Println(utf8.ValidString(str2))    // false\n    str3 := "A\\\\xfeC"\n    fmt.Println(utf8.ValidString(str3))    // true    // \u628a\u8f6c\u4e49\u5b57\u7b26\u8f6c\u4e49\u6210\u5b57\u9762\u503c\n}\n\n\n\n')),(0,i.kt)("h3",{id:"662-\u9ad8\u6548\u7684\u62fc\u63a5\u65b9\u5f0f"},"6.6.2. \u9ad8\u6548\u7684\u62fc\u63a5\u65b9\u5f0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'    // byte.Buffer \u7c7b\u4f3c Java \u4e2d\u7684 Stringbuffer\n    var buffer bytes.Buffer\n    // or\n    buf := new(bytes.Buffer)\n    buffer.WriteString("hello")\n    fmt.Println(buffer.String())\n\n    // \u66f4\u65b0\u7684\u65b9\u5f0f, strings.Builder\n    // strings.Builder \u548c bytes.Buffer \u5e95\u5c42\u90fd\u662f []byte \u6570\u7ec4\uff0c\u4f46 strings.Builder \u6027\u80fd\u6bd4 bytes.Buffer \u7565\u5feb\n    // \u533a\u522b\u5728\u4e8e\uff0cbytes.Buffer \u8f6c\u5316\u4e3a\u5b57\u7b26\u4e32\u65f6\u91cd\u65b0\u7533\u8bf7\u4e86\u4e00\u5757\u7a7a\u95f4\uff0c\u5b58\u653e\u751f\u6210\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\uff0c\u800c strings.Builder \u76f4\u63a5\u5c06\u5e95\u5c42\u7684 []byte \u8f6c\u6362\u6210\u4e86\u5b57\u7b26\u4e32\u7c7b\u578b\u8fd4\u56de\u4e86\u56de\u6765\n    var builder strings.Builder\n    // \u9884\u5206\u914d\u5185\u5b58\n    builder.Grow(n * len(str))\n    for i := 0; i < n; i++ {\n        builder.WriteString(str)\n    }\n\n    // \u4f7f\u7528 []byte    // \n    str := "hello"\n    buf := make([]byte, 0)\n    // \u5982\u679c\u957f\u5ea6\u662f\u53ef\u9884\u77e5\u7684\uff0c\u90a3\u4e48\u521b\u5efa []byte \u65f6\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u9884\u5206\u914d\u5207\u7247\u7684\u5bb9\u91cf(cap)\n    buf := make([]byte, 0, n*len(str))\n    for i := 0; i < n; i++ {\n        buf = append(buf, str...)\n    }\n    \n}\n\n/*\n\u539f\u7406:\nstrings.Builder \u548c + \u76f4\u63a5\u5c31\u662f\u751f\u6210\u65b0\u7684\u5b57\u7b26\u4e32, \u65b0\u7a7a\u95f4\u7684\u5927\u5c0f\u662f\u539f\u6765\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u4e4b\u548c\n\nstrings.Builder\uff0cbytes.Buffer\uff0c\u5305\u62ec\u5207\u7247 []byte \u7684\u5185\u5b58\u662f\u4ee5\u500d\u6570\u7533\u8bf7\u7684, \u8d85\u8fc7\u4e00\u5b9a\u5927\u5c0f\uff0c\u6bd4\u5982 2048 byte \u540e\uff0c\u7533\u8bf7\u7b56\u7565\u4e0a\u4f1a\u6709\u4e9b\u8bb8\u8c03\u6574\n\n*/\n\n')),(0,i.kt)("h3",{id:"663-\u683c\u5f0f\u5316\u5360\u4f4d\u7b26"},"6.6.3. \u683c\u5f0f\u5316\u5360\u4f4d\u7b26"),(0,i.kt)("p",null,"%d\t\u683c\u5f0f\u5316\u6574\u6570\n%0d\t\u7528\u4e8e\u89c4\u5b9a\u8f93\u51fa\u5b9a\u957f\u7684\u6574\u6570 \u5176\u4e2d\u5f00\u5934\u7684\u6570\u5b57 0 \u662f\u5fc5\u987b\u7684\n%g\t\u683c\u5f0f\u5316\u6d6e\u70b9\u578b\n%n.mg\t\u7528\u4e8e\u8868\u793a\u6570\u5b57 n \u5e76\u7cbe\u786e\u5230\u5c0f\u6570\u70b9\u540e m \u4f4d\uff0c\u9664\u4e86\u4f7f\u7528 g \u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528 e \u6216\u8005 f\n%f\t\u683c\u5f0f\u5316\u6d6e\u70b9\u6570\n%X, %x\t\u683c\u5f0f\u5316 16 \u8fdb\u5236\u8868\u793a\u7684\u6570\u5b57\n%b\t\u4f4d\u7684\u683c\u5f0f\u5316\u6807\u8bc6\u7b26\n%e\t\u79d1\u5b66\u8ba1\u6570\u8868\u793a\u6cd5\n%t\t\u683c\u5f0f\u5316\u5e03\u5c14\u578b\n%c\t\u683c\u5f0f\u5316\u5b57\u7b26\n%s\t\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\n%U, %u\tUnicode\uff0c\u683c\u5f0f\u4e3a U+hhhh \u7684\u5b57\u7b26\u4e32\n%p\t\u683c\u5f0f\u5316\u6307\u9488\n%v\t\u4f7f\u7528\u7c7b\u578b\u7684\u9ed8\u8ba4\u8f93\u51fa\u683c\u5f0f\u7684\u6807\u8bc6\u7b26"),(0,i.kt)("p",null,"%T\t\u6253\u5370\u67d0\u4e2a\u7c7b\u578b\u7684\u5b8c\u6574\u8bf4\u660e\n%#v\t\u6253\u5370\u5305\u62ec\u5b57\u6bb5\u548c\u9650\u5b9a\u7c7b\u578b\u540d\u79f0\u5728\u5185\u7684\u5b9e\u4f8b\u7684\u5b8c\u6574\u4fe1\u606f\n%+v\t\u6253\u5370\u5305\u62ec\u5b57\u6bb5\u5728\u5185\u7684\u5b9e\u4f8b\u7684\u5b8c\u6574\u4fe1\u606f"),(0,i.kt)("h2",{id:"67-array-\u548c-slice"},"6.7. array \u548c slice"),(0,i.kt)("h3",{id:"671-\u6570\u7ec4"},"6.7.1. \u6570\u7ec4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc arrayAndSlice() {\n\n    // Arrays\n    //\u5b9a\u957f\u7684\u76f8\u540c\u7c7b\u578b\u5143\u7d20\u7684\u5e8f\u5217, An array\'s length is part of its type, so arrays cannot be resized \u5bb9\u91cf\u65e0\u6cd5\u66f4\u6539\n    // \u8bed\u6cd5\n    // var a [10]int \u58f0\u660e\n    // a := [3]int{2, 1, 3} // \u521d\u59cb\u5316/ array literal\n    // \u7701\u7565\u957f\u5ea6\u7684\u5199\u6cd5, \u521b\u5efa\u7684\u8fd8\u662f\u6570\u7ec4, \u4e0d\u662f slice (\u5982\u679c\u7701\u6389 ...\u4e09\u4e2a\u70b9, \u5c31\u662f slice \u4e86  )\n    // var student = [...]string{"Tom","Ben","Peter"} // ...\u4e09\u4e2a\u70b9\u4f1a\u81ea\u52a8\u8ba1\u7b97\u957f\u5ea6\n    //\n    \n    var a [2]string\n    a[0] = "Hello"\n    a[1] = "World"\n    fmt.Println(a[0], a[1]) //Hello World\n    fmt.Println(a)          //[Hello World]\n    \n    // \u589e\n    // \u5e95\u5c42\u4f1a\u521b\u5efa\u65b0\u6570\u7ec4\n    newArr = append(arr, xxx_ele)\n    // \u5220\u9664\n    newArr = append(arr[:index], arr[index+1:]...) // ...\u4e09\u4e2a\u70b9\u8868\u793a\u4f9d\u6b21\u53d6\u51fa\u5143\u7d20\n    // \u6e05\u7a7a\u5207\u7247\u4e2d\u7684\u6240\u6709\u5143\u7d20\n    student = student[0:0]\n    // \u6539\n    // arr[index] = xxx\n    // \u67e5\n    for index, value := range arr {}\n\n')),(0,i.kt)("h3",{id:"672-\u5207\u7247"},"6.7.2. \u5207\u7247"),(0,i.kt)("h4",{id:"6721-\u5207\u7247\u57fa\u672c\u4f7f\u7528"},"6.7.2.1. \u5207\u7247\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n    //\n    //\n    /*\n    Slices\n    \n    array \u7684 \u5207\u7247/\u89c6\u56fe,\u5e95\u5c42\u662f\u5f15\u7528\u7684\u4e00\u4e2a\u6570\u7ec4 (\u5207\u7247\u672c\u8eab\u5e76\u4e0d\u5b58\u50a8\u4efb\u4f55\u5143\u7d20\uff0c\u800c\u53ea\u662f\u5bf9\u73b0\u6709\u6570\u7ec4\u7684\u5f15\u7528);\n    \u672c\u8d28\u662f\u4e00\u4e2a struct:\n    struct {\n            ptr *[]T // \u5730\u5740\uff1a\u5207\u7247\u7684\u5730\u5740\u4e00\u822c\u6307\u5207\u7247\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u6240\u6307\u5411\u7684\u5185\u5b58\u5730\u5740\uff0c\u7528\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002\u5373\u5e95\u5c42\u6570\u7ec4\u7684\u6307\u9488\n            len int // \u957f\u5ea6\uff1a\u5207\u7247\u4e2d\u5b9e\u9645\u5b58\u5728\u5143\u7d20\u7684\u4e2a\u6570\u3002\u957f\u5ea6\uff1a\u5207\u7247\u4e2d\u5b9e\u9645\u5b58\u5728\u5143\u7d20\u7684\u4e2a\u6570\u3002\n            cap int  // \u5bb9\u91cf\uff1a\u4ece\u5207\u7247\u7684\u8d77\u59cb\u5143\u7d20\u5f00\u59cb\u5230\u5176\u5e95\u5c42\u6570\u7ec4\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e2a\u6570\u3002\n    }\n            \n    \n    \u5148\u58f0\u660e/\u521d\u59cb\u5316\u957f\u5ea6\u5bb9\u91cf, \u7136\u540e\u8d4b\u503c\u4f7f\u7528\n    \u8bed\u6cd5\n    var slice []T \u58f0\u660e, \u5207\u7247\u58f0\u660e\u540e\u5176\u5185\u5bb9\u4e3a\u7a7a\uff0c\u957f\u5ea6\u548c\u5bb9\u91cf\u5747\u4e3a0\n    \n    \u901a\u8fc7\u5185\u5efa\u51fd\u6570 make() \u521d\u59cb\u5316\n    a := make([]int, 5)  // len(a)=5, cap=5\n    b := make([]int, 0, 5) // len(b)=0, cap(b)=5\n    slice := make([]string, 2, 10) \u521d\u59cb\u5316\u957f\u5ea6\u4e3a 2, \u5bb9\u91cf\u4e3a 10\n    \n    \u4e00\u6b65\u5230\u4f4d, \u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\n    slice := []string{"bb", "dd"} \n    q := []int{2, 3, 5, 7, 11, 13} //Slice literals \u662f\u521d\u59cb\u5316\u6570\u7ec4\u66f4\u597d\u7684\u65b9\u5f0f(\u4e0d\u5fc5\u6307\u5b9a\u957f\u5ea6),\u5e95\u5c42\u662f \u5148 \u6b63\u5e38\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4, \u7136\u540e\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u7684 slice\n    \n     //\u76f4\u63a5\u4ece\u6570\u7ec4\u83b7\u53d6, \u5de6\u95ed\u53f3\u5f00\n    \u5982\u679c\u5207\u7247\u662f\u4ece\u5176\u4ed6\u6570\u7ec4\u6216\u5207\u7247\u751f\u6210\uff0c\u65b0\u5207\u7247\u7684\u5143\u7d20\u6dfb\u52a0\u9700\u8981\u8003\u8651\u5bf9\u539f\u6709\u6570\u7ec4\u6216\u5207\u7247\u4e2d\u6570\u636e\u7684\u5f71\u54cd\n    mySlice := myArray[beginIndex:endIndex] \n    \n    \u5e38\u89c1\u64cd\u4f5c: https://ueokande.github.io/go-slice-tricks/\n    \u590d\u5236\n    b = make([]T, len(a))\n    copy(b, a)\n    \u6216\u8005\n    b = append([]T(nil), a...)\n    \u6216\u8005\n    b = append(a[:0:0], a...)\n    \n    \u6dfb\u52a0\u5143\u7d20, \u901a\u8fc7\u5185\u5efa\u51fd\u6570 func append(s []T, vs ...T) []T\n        slice \u88ab\u4fee\u6539, \u5219\u539f\u59cb array \u4e5f\u4f1a\u76f8\u5e94\u6539\u53d8 (slice\u5c31\u50cf\u6570\u7ec4\u7684\u90e8\u5206\u7684\u5f15\u7528)\n        \u5f53 append \u4e4b\u540e\u7684\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8e cap\uff0c\u5c06\u4f1a\u76f4\u63a5\u5229\u7528\u539f\u5e95\u5c42\u6570\u7ec4\u5269\u4f59\u7684\u7a7a\u95f4\u3002\n        \u5f53 append \u540e\u7684\u957f\u5ea6\u5927\u4e8e cap \u65f6\uff0c\u5219\u4f1a\u5206\u914d\u4e00\u5757\u66f4\u5927\u7684\u533a\u57df\u6765\u5bb9\u7eb3\u65b0\u7684\u5e95\u5c42\u6570\u7ec4\u3002\n    a = append(a[:i], append([]T{x}, a[i:]...)...)\n    \n    \u5220\u9664\n        \u5220\u9664\u610f\u5473\u7740\u540e\u9762\u7684\u5143\u7d20\u9700\u8981\u9010\u4e2a\u5411\u524d\u79fb\u4f4d\u3002\u6bcf\u6b21\u5220\u9664\u7684\u590d\u6742\u5ea6\u4e3a O(N)\uff0c\u56e0\u6b64\u5207\u7247\u4e0d\u5408\u9002\u5927\u91cf\u968f\u673a\u5220\u9664\u7684\u573a\u666f\uff0c\u8fd9\u79cd\u573a\u666f\u4e0b\u9002\u5408\u4f7f\u7528\u94fe\u8868\n        \u5220\u9664\u540e\uff0c\u5c06\u7a7a\u4f59\u7684\u4f4d\u7f6e\u7f6e\u7a7a\uff0c\u6709\u52a9\u4e8e\u5783\u573e\u56de\u6536\n    a = append(a[:i], a[i+1:]...)\n\n    \u8fc7\u6ee4filter\n    \u5f53\u539f\u5207\u7247\u4e0d\u4f1a\u518d\u88ab\u4f7f\u7528\u65f6\uff0c\u5c31\u5730 filter \u65b9\u5f0f\u662f\u6bd4\u8f83\u63a8\u8350\u7684\uff0c\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\n    n := 0\n    for _, x := range a {\n        if keep(x) {\n            a[n] = x\n            n++\n        }\n    }\n    a = a[:n]\n\n    Nil slices  - zero value == nil\n    \n    */\n    var s []int = primes[1:4]\n    fmt.Println(s) //[3 5 7]\n\n    // \u7528\u5207\u7247\u7684\u5b8c\u6574\u5199\u6cd5 slice[start:len:cap]\n    var ls = []int{0, 1, 3, 4}\n    ls = append(append(ls[:2:2], 2), ls[2:]...)\n    fmt.Println(ls)\n    // prints: [0 1 2 3 4]\n\n    // \u9519\u8bef\u5199\u6cd5\n    // var ls = []int{0, 1, 3, 4}\n    // ls = append(append(ls[:2], 2), ls[2:]...)\n    // fmt.Println(ls)\n    // prints: [0 1 2 2 4] but we want [0 1 2 3 4]\n\n    // slice defaults  - slice\u7684\u9ed8\u8ba4index\n    /* \u5bf9\u4e8e\u6570\u7ec4 var a [10]int , \u4ee5\u4e0b\u662f\u7b49\u540c\u7684\n       a[0:10]\n       a[:10]\n       a[0:]\n       a[:]\n    */\n\n    //\n    //struct slice\n    ss := []struct {\n        i int\n        b bool\n    }{\n        {2, true},\n        {3, false},\n        {5, true},\n        {7, true},\n        {11, false},\n        {13, true},\n    }\n    fmt.Println(ss) //[{2 true} {3 false} {5 true} {7 true} {11 false} {13 true}]\n\n    // \u4e8c\u7ef4 slice \u521d\u59cb\u5316\n    board := [][]string{\n        []string{"_", "_", "_"},\n        {"_", "_", "_"}, // []string \u53ef\u7701\u7565\n        []string{"_", "_", "_"},\n    }\n    fmt.Println(board) //[[_ _ _] [_ _ _] [_ _ _]]\n\n    sliceLengthAndCapacity()\n\n    makeSliceDemo()\n\n    sliceAppendingDemo()\n}\n\n//Slice length and capacity\n// length - \u5207\u7247\u5305\u542b\u7684 element \u4e2a\u6570, \u5207\u7247\u6539\u53d8\u7684\u5c31\u662f\u8fd9\u4e2a\u53d8\u91cf\n// capacity - \u5207\u7247\u7684\u5bb9\u91cf: \u5373\u57fa\u7840\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf\uff0c\u4ece\u5207\u7247\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u8ba1\u7b97, \u5230 \u539f\u59cb\u6570\u7ec4\u7684\u672b\u5c3e\n// \u901a\u8fc7 len(s) and cap(s) \u83b7\u5f97\n// \u8fd9\u4e24\u8005\u5173\u7cfb: \u53ea\u8981 capacity \u8db3\u591f, \u53ef\u4ee5\u901a\u8fc7 re-slice \u6765\u5ef6\u957f\u5207\u7247\u7684 length\nfunc sliceLengthAndCapacity() {\n    s := []int{2, 3, 5, 7, 11, 13}\n    printSlice(s) //len=6 cap=6 [2 3 5 7 11 13]\n\n    // Slice the slice to give it zero length.\n    zeroSlice := s[:0]\n    printSlice(zeroSlice) //len=0 cap=6 []\n\n    // Extend its length.\n    s = zeroSlice[:4] // s \u88ab\u91cd\u65b0\u8d4b\u503c\n    printSlice(s)     //len=4 cap=6 [2 3 5 7]\n\n    // Drop its first two values.\n    // \u6ce8\u610f s \u5df2\u7ecf\u88ab\u91cd\u65b0\u8d4b\u503c\u4e86\n    s = s[2:]\n    printSlice(s) //len=2 cap=4 [5 7]\n\n    // nil slice\n    var sli []int\n    fmt.Println(sli, len(sli), cap(sli)) //[] 0 0\n    fmt.Println(sli == nil)              // true\n}\nfunc printSlice(s []int) {\n    fmt.Printf("len=%d cap=%d %v\\n", len(s), cap(s), s)\n}\n\n// Creating a slice with make\n// make([]int, xxLenCap)\n// make([]int, xxLen, xxCap)\nfunc makeSliceDemo() {\n    a := make([]int, 5) // \u521b\u5efa\u7684\u662f zeroed array \u7684\u4e00\u4e2aslice;\n    printSlice2("a", a) //a len=5 cap=5 [0 0 0 0 0]\n\n    b := make([]int, 0, 5)\n    printSlice2("b", b) //b len=0 cap=5 []\n\n    c := b[:2]\n    printSlice2("c", c) //c len=2 cap=5 [0 0]\n\n    d := c[2:5]\n    printSlice2("d", d) //d len=3 cap=3 [0 0 0]\n}\nfunc printSlice2(s string, x []int) {\n    fmt.Printf("%s len=%d cap=%d %v\\n",\n        s, len(x), cap(x), x)\n}\n\n// Appending to a slice \u5411 slice \u6dfb\u52a0\u5143\u7d20\nfunc sliceAppendingDemo() {\n    var s []int\n    printSlice(s) //len=0 cap=0 []\n\n    // append works on nil slices.\u65b0\u7684\u5bb9\u91cf\u66f4\u5927\u7684 array \u88ab\u521b\u5efa, \u8fd4\u56de\u5b83\u7684 slice\n    s = append(s, 0)\n    printSlice(s) //len=1 cap=1 [0]\n\n    // The slice grows as needed.\n    s = append(s, 1)\n    printSlice(s) //len=2 cap=2 [0 1]\n\n    // We can add more than one element at a time.\n    s = append(s, 2, 3, 4)\n    printSlice(s) //len=5 cap=6 [0 1 2 3 4]\n}\n\n/////////////////////////////////////////////\n\n    //\u503c\u4e3a nil \u7684\u5207\u7247\u4e0e\u5177\u6709\u96f6\u957f\u5ea6\u7684\u5207\u7247\u53ef\u4ee5\u6bd4\u8f83, \u7ed3\u679c\u4e0d\u7b49\n    var s1 = []string{}\n    var s2 []string\n    fmt.Println(reflect.DeepEqual(s1, s2)) // false\n')),(0,i.kt)("h4",{id:"6722-\u5207\u7247\u5f15\u7528-full-slice-expression"},"6.7.2.2. \u5207\u7247\u5f15\u7528 Full Slice Expression"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n\n\nfunc main() {\n    path := []byte("AAAA/BBBBBBBBB") // \u5b57\u7b26\u4e32\u8f6c\u4e3a\u5b57\u8282\u6570\u7ec4, \u5c31\u662f\u5b57\u7b26\u6570\u7ec4\n    sepIndex := bytes.IndexByte(path,\'/\')\n\n    // dir1 \u548c dir2 \u5171\u4eab\u4e00\u4e2a\u5e95\u5c42\u6570\u7ec4\n    dir1 := path[:sepIndex]\n    // \u5e94\u8be5\u8fd9\u6837\u4f7f\u7528\n    // \u4f7f\u7528\u4e86 Full Slice Expression\uff0c\u5176\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u53eb\u201cLimited Capacity\u201d\uff0c\u4e8e\u662f\uff0c\u540e\u7eed\u7684 append() \u64cd\u4f5c\u5c06\u4f1a\u5bfc\u81f4\u91cd\u65b0\u5206\u914d\u5185\u5b58\n    dir1 := path[:sepIndex:sepIndex]\n    \n    dir2 := path[sepIndex+1:]\n\n    fmt.Println("dir1 =>",string(dir1)) //prints: dir1 => AAAA\n    fmt.Println("dir2 =>",string(dir2)) //prints: dir2 => BBBBBBBBB\n\n    // \u82e5\u4e0d\u4f7f\u7528 Full Slice Expression, \u8fd9\u91cc dir \u65b0\u589e\u52a0\u7684\u6570\u636e\u4f1a\u6269\u5c55\u5230\u4e86 dir2 \u7684\u7a7a\u95f4, \u8986\u76d6 dir2 \u7684\u5185\u5bb9\n    dir1 = append(dir1,"suffix"...)\n\n    fmt.Println("dir1 =>",string(dir1)) //prints: dir1 => AAAAsuffix\n    fmt.Println("dir2 =>",string(dir2)) //prints: dir2 => uffixBBBB\n}\n\n\n// \u5728\u770b\u4e00\u4e2a\u4f8b\u5b50\nfunc TestSlice(t *testing.T) {\n    slice := []int{0, 1, 3, 4}\n\n    //slice1 := slice[:2]\n    //\u6b63\u786e\u5199\u6cd5\n    slice1 := slice[:2:2]\n\n    t.Log(slice1)//[0 1]\n    slice2 := slice[2:]\n    t.Log(slice2)//[3 4])\n\n    slice1 = append(slice1, 2)\n    t.Log(slice1) // [0 1 2]\n    t.Log(slice2) // [2 4]\n\n    newSlice := append(slice1, slice2...)\n    t.Log(newSlice) //[0 1 2 2 4]\n}\n')),(0,i.kt)("h4",{id:"6723-\u4f7f\u7528-copy-\u9632\u6b62\u5927\u91cf\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e"},"6.7.2.3. \u4f7f\u7528 copy \u9632\u6b62\u5927\u91cf\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u539f\u5207\u7247\u7531\u5927\u91cf\u7684\u5143\u7d20\u6784\u6210\uff0c\u4f46\u662f\u6211\u4eec\u5728\u539f\u5207\u7247\u7684\u57fa\u7840\u4e0a\u5207\u7247\uff0c\u867d\u7136\u53ea\u4f7f\u7528\u4e86\u5f88\u5c0f\u4e00\u6bb5\uff0c\u4f46\u5e95\u5c42\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u4ecd\u7136\u5360\u636e\u4e86\u5927\u91cf\u7a7a\u95f4\uff0c\u5f97\u4e0d\u5230\u91ca\u653e\u3002\n// \u6bd4\u8f83\u63a8\u8350\u7684\u505a\u6cd5\uff0c\u4f7f\u7528 copy \u66ff\u4ee3 re-slice\u3002\n\n//\u53d6 origin \u5207\u7247\u7684\u6700\u540e 2 \u4e2a\u5143\u7d20\n// bad\nfunc lastNumsBySlice(origin []int) []int {\n    // \u76f4\u63a5\u5728\u539f\u5207\u7247\u57fa\u7840\u4e0a\u8fdb\u884c\u5207\u7247\n    return origin[len(origin)-2:]\n}\n\n// good\nfunc lastNumsByCopy(origin []int) []int {\n    // \u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u5207\u7247\uff0c\u5c06 origin \u7684\u6700\u540e\u4e24\u4e2a\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u5207\u7247\u4e0a\uff0c\u7136\u540e\u8fd4\u56de\u65b0\u5207\u7247\n    result := make([]int, 2)\n    copy(result, origin[len(origin)-2:])\n    return result\n}\n\n")),(0,i.kt)("h2",{id:"68-map"},"6.8. map"),(0,i.kt)("h3",{id:"681-map-\u57fa\u672c\u4f7f\u7528"},"6.8.1. map \u57fa\u672c\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n// map - \u952e\u503c\u5bf9, \u65e0\u5e8f, key \u662f\u552f\u4e00\u7684, value \u53ef\u4e3a \u7a7a/\u7a7a struct (\u4f7f\u7528\u7a7a\u7ed3\u6784\u4f53\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u6548\u7387\uff0c\u540c\u65f6\u4e0d\u4f1a\u5360\u7528\u989d\u5916\u7684\u5185\u5b58)\n//Map literals\n//Map literals continued\n// \u58f0\u660e: var m map[keyType]valueType\n// \u521d\u59cb\u5316: make(map[string]Vertex)\n//      \u6216\u8005 make(map[string]Vertex, 10) // \u540c\u65f6\u8bbe\u7f6e capacity, \u4e0d\u662f length (\u65e0\u6cd5\u8bbe\u7f6e length, \u56e0\u4e3a\u8bbe\u7f6e length \u4f1a\u521d\u59cb\u5316\u96f6\u503c, \u800c key \u65e0\u6cd5\u521d\u59cb\u5316\u96f6\u503c, key \u5fc5\u987b\u552f\u4e00)\n// \u63d2\u5165: m[key] = elem\n// retrieve\u68c0\u7d22: elem = m[key]\n// \u662f\u5426\u5b58\u5728: elem, ok = m[key] \u5982\u679ckey\u5b58\u5728, ok==true, \u5426\u5219false, \u6b64\u65f6elem==zero value\n// \u5220\u9664: delete(m, key)\n// zero value == nil\n// \n// len()\u51fd\u6570\u83b7\u53d6map\u7684\u5f53\u524d\u957f\u5ea6 (cap()\u51fd\u6570\u53ea\u80fd\u7528\u4e8e\u83b7\u53d6\u5207\u7247\u7684\u5bb9\u91cf\uff0c\u65e0\u6cd5\u83b7\u5f97map\u7684\u5bb9\u91cf)\n// \n// \u67e5\u8be2/\u8fed\u4ee3 for k,v:=range m {}\n// \nfunc mapDemo() {\n    type Vertex struct {\n        Lat, Long float64\n    }\n    // \u58f0\u660e\n    var m map[string]Vertex\n    // make\u521d\u59cb\u5316\n    // \u53ef\u4ee5\u4e0d\u6307\u5b9amap\u5bb9\u91cf\uff0c\u4f46\u662f\u5bf9\u4e8emap\u7684\u591a\u6b21\u6269\u5145\u4f1a\u9020\u6210\u6027\u80fd\u635f\u8017\n    m = make(map[string]Vertex)\n    // \u58f0\u660e\u540c\u65f6\u521d\u59cb\u5316\n    var studentScoreMap = map[string]int{\n        "Tom":80,\n        "Felix":85,\n        "Peter":90,\n    }\n    // \u8d4b\u503c\n    m["key"] = Vertex{\n        40.68433, -74.39967,\n    }\n    fmt.Println(m["key"]) //{40.68433 -74.39967}\n}\n\n// Map literals - map\u7684\u521d\u59cb\u5316\nfunc mapInitDemo() {\n    type Vertex struct {\n        Lat, Long float64\n    }\n\n    var m = map[string]Vertex{\n        "Bell Labs": { // Vertex \u53ef\u4ee5\u7701\u7565\n            40.68433, -74.39967,\n        },\n        "Google": Vertex{\n            37.42202, -122.08408,\n        },\n    }\n\n    fmt.Println(m) //map[Bell Labs:{40.68433 -74.39967} Google:{37.42202 -122.08408}]\n    fmt.Println(m2)\n}\n\n//////////////////////////////////////////\n\n// \u6392\u5e8f\n// \u5982\u679c\u4f60\u60f3\u4e3a map \u6392\u5e8f\uff0c\u9700\u8981\u5c06 key\uff08\u6216\u8005 value\uff09\u62f7\u8d1d\u5230\u4e00\u4e2a\u5207\u7247\uff0c\u518d\u5bf9\u5207\u7247\u6392\u5e8f\uff08\u4f7f\u7528 sort \u5305)\n\n')),(0,i.kt)("h3",{id:"682-\u5e76\u53d1\u5b89\u5168\u7684-map"},"6.8.2. \u5e76\u53d1\u5b89\u5168\u7684 map"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5207\u7247\u548cmap\u90fd\u662f\u7ebf\u7a0b\u4e0d\u5b89\u5168\u7684\uff0c\u5efa\u8bae\u4e0d\u8981\u5f00\u643a\u7a0b\uff0c\u5426\u5219\u5c31\u9700\u8981\u52a0\u9501\n\n// \u6700\u5e38\u89c1\u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f\u4f7f\u7528sync\u5305\u5bf9map\u52a0\u9501 (\u6548\u7387\u6ca1\u6709 sync.Map \u597d)\n// \u6216\u76f4\u63a5\u4f7f\u7528Go\u57281.9\u7248\u672c\u4e2d\u63d0\u4f9b\u7684\u7ebf\u7a0b\u5b89\u5168\u7684 sync.map\n//      \u9002\u5408\u8bfb\u591a\u5199\u5c11\u573a\u666f (\u5bf9\u4e8e\u8bfb\u591a\u5199\u591a, \u9700\u8981\u81ea\u5df1\u5b9e\u73b0, \u7c7b\u4f3c java \u4e2d\u7684 concurrent map, \u901a\u8fc7\u5c06\u4e00\u4e2a\u5927 map \u5206\u533a\u4e3a\u591a\u4e2a\u5c0f map)\n//      \u91c7\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u65b9\u6848\n\n// \u52a0\u9501\nvar lock sync.RWMutex\n\nfunc readMap(Gomap map[int]int,key int) int {\n    lock.Lock() //\u8bfbmap\u64cd\u4f5c\u524d\u5148\u52a0\u9501\n    m := Gomap[key]\n    lock.Unlock() //\u8bfb\u5b8cmap\u540e\u89e3\u9501\n    return m\n}\nfunc writeMap(Gomap map[int]int,key int,value int){\n    lock.Lock() //\u5199map\u64cd\u4f5c\u524d\u5148\u52a0\u9501\n    Gomap[key] = value\n    lock.Unlock() //\u5199\u5b8cmap\u540e\u89e3\u9501\n}\nfunc main() {\n    GoMap := make(map[int]int)\n    for i := 0; i < 10000; i++ {\n        go writeMap(GoMap,i,i)\n        go readMap(GoMap,i)\n    }\n    fmt.Println("Done")\n}\n\n\n// ------------ ------------ ------------\n\n\nfunc readMap(Gomap sync.Map,key int) int {\n    res ,ok := Gomap.Load(key) //\u7ebf\u7a0b\u5b89\u5168\u8bfb\u53d6\n    if ok == true {\n        return res.(int)//Load()\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u8fd4\u56de\u503c\u662f\u63a5\u53e3\u7c7b\u578b\uff0c\u9700\u8981\u5c06\u5176\u8f6c\u6362\u4e3amap\u503c\u7684\u7c7b\u578b\n    } else {\n        return 0\n    }\n\n}\n\nfunc writeMap(Gomap sync.Map,key int,value int){\n    Gomap.Store(key,value) //\u7ebf\u7a0b\u5b89\u5168\u8bbe\u7f6e\n}\n\nfunc main() {\n    var GoMap sync.Map //\u65e0\u987b\u521d\u59cb\u5316\uff0c\u76f4\u63a5\u58f0\u660e\u5373\u53ef\n    for i := 0; i < 10000; i++ {\n        go writeMap(GoMap,i,i)\n        go readMap(GoMap,i)\n    }\n    fmt.Println("Done")\n}\n\n\n\n')),(0,i.kt)("h2",{id:"69-container-\u5305"},"6.9. container \u5305"),(0,i.kt)("h3",{id:"691-heap"},"6.9.1. heap"),(0,i.kt)("p",null,"heap\uff1a \u5806\u5bb9\u5668\uff0c\u63d0\u4f9b heap \u7684\u5b9e\u73b0, \u5e95\u5c42\u662f\u6570\u7ec4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\u5806\uff08Heap\uff09\u5c31\u662f\u7528\u6570\u7ec4\u5b9e\u73b0\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u3002\u6839\u636e\u5806\u7684\u7279\u6027\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u6700\u5927\u5806\u548c\u6700\u5c0f\u5806\uff0c\u4e24\u8005\u7684\u533a\u522b\u5728\u4e8e\u8282\u70b9\u7684\u6392\u5e8f\u65b9\u5f0f\u4e0a\uff1a\n\n\u5728\u6700\u5927\u5806\u4e2d\uff0c\u7236\u8282\u70b9\u7684\u503c\u6bd4\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u503c\u90fd\u8981\u5927\uff0c\u5806\u6700\u5927\u5143\u7d20\u5728 root \u8282\u70b9\n\u5728\u6700\u5c0f\u5806\u4e2d\uff0c\u7236\u8282\u70b9\u7684\u503c\u6bd4\u6bcf\u4e00\u4e2a\u5b50\u8282\u70b9\u7684\u503c\u90fd\u8981\u5c0f\uff0c \u5806\u6700\u5c0f\u5143\u7d20\u5728 root \u8282\u70b9 (Go \u7684\u5806\u5bb9\u5668 heap \u5728\u5b9e\u73b0\u4e0a\u662f\u4e00\u4e2a\u6700\u5c0f\u5806)\n\n\n")),(0,i.kt)("h3",{id:"692-ring"},"6.9.2. ring"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// ring\uff1a\u5faa\u73af\u94fe\u8868\u5bb9\u5668\n\ntype Ring\n    func New(n int) *Ring  // \u521d\u59cb\u5316\u73af\n    func (r *Ring) Do(f func(interface{}))  // \u5faa\u73af\u73af\u8fdb\u884c\u64cd\u4f5c\n    func (r *Ring) Len() int // \u73af\u957f\u5ea6\n    func (r *Ring) Link(s *Ring) *Ring // \u8fde\u63a5\u4e24\u4e2a\u73af\n    func (r *Ring) Move(n int) *Ring // \u6307\u9488\u4ece\u5f53\u524d\u5143\u7d20\u5f00\u59cb\u5411\u540e\u79fb\u52a8\u6216\u8005\u5411\u524d\uff08n \u53ef\u4ee5\u4e3a\u8d1f\u6570\uff09\n    func (r *Ring) Next() *Ring // \u5f53\u524d\u5143\u7d20\u7684\u4e0b\u4e2a\u5143\u7d20\n    func (r *Ring) Prev() *Ring // \u5f53\u524d\u5143\u7d20\u7684\u4e0a\u4e2a\u5143\u7d20\n    func (r *Ring) Unlink(n int) *Ring // \u4ece\u5f53\u524d\u5143\u7d20\u5f00\u59cb\uff0c\u5220\u9664 n \u4e2a\u5143\u7d20\n")),(0,i.kt)("h3",{id:"693-list"},"6.9.3. list"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u94fe\u8868\u5bb9\u5668 (\u53cc\u5411\u94fe\u8868)\n\ntype Element\n    func (e *Element) Next() *Element\n    func (e *Element) Prev() *Element\ntype List\n    func New() *List\n    func (l *List) Back() *Element   // \u6700\u540e\u4e00\u4e2a\u5143\u7d20\n    func (l *List) Front() *Element  // \u7b2c\u4e00\u4e2a\u5143\u7d20\n    func (l *List) Init() *List  // \u94fe\u8868\u521d\u59cb\u5316\n    func (l *List) InsertAfter(v interface{}, mark *Element) *Element // \u5728\u67d0\u4e2a\u5143\u7d20\u540e\u63d2\u5165\n    func (l *List) InsertBefore(v interface{}, mark *Element) *Element  // \u5728\u67d0\u4e2a\u5143\u7d20\u524d\u63d2\u5165\n    func (l *List) Len() int // \u5728\u94fe\u8868\u957f\u5ea6\n    func (l *List) MoveAfter(e, mark *Element)  // \u628a e \u5143\u7d20\u79fb\u52a8\u5230 mark \u4e4b\u540e\n    func (l *List) MoveBefore(e, mark *Element)  // \u628a e \u5143\u7d20\u79fb\u52a8\u5230 mark \u4e4b\u524d\n    func (l *List) MoveToBack(e *Element) // \u628a e \u5143\u7d20\u79fb\u52a8\u5230\u961f\u5217\u6700\u540e\n    func (l *List) MoveToFront(e *Element) // \u628a e \u5143\u7d20\u79fb\u52a8\u5230\u961f\u5217\u6700\u5934\u90e8\n    func (l *List) PushBack(v interface{}) *Element  // \u5728\u961f\u5217\u6700\u540e\u63d2\u5165\u5143\u7d20\n    func (l *List) PushBackList(other *List)  // \u5728\u961f\u5217\u6700\u540e\u63d2\u5165\u63a5\u4e0a\u65b0\u961f\u5217\n    func (l *List) PushFront(v interface{}) *Element  // \u5728\u961f\u5217\u5934\u90e8\u63d2\u5165\u5143\u7d20\n    func (l *List) PushFrontList(other *List) // \u5728\u961f\u5217\u5934\u90e8\u63d2\u5165\u63a5\u4e0a\u65b0\u961f\u5217\n    func (l *List) Remove(e *Element) interface{} // \u5220\u9664\u67d0\u4e2a\u5143\u7d20\n\na).\u5217\u8868\u521d\u59cb\u5316\n\u65b9\u5f0f\u4e00\uff1a\u901a\u8fc7container/list\u5305\u7684New\u65b9\u6cd5\u521d\u59cb\u5316list\nl := list.New()\n \n\u65b9\u5f0f\u4e8c:\u901a\u8fc7\u58f0\u660e\u521d\u59cb\u5316list\nvar l list.List\n \n\u5217\u8868\u6ca1\u6709\u5177\u4f53\u5143\u7d20\u7c7b\u578b\u7684\u9650\u5236\u3002\u56e0\u6b64\u5217\u8868\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b\n \nb).\u5728\u5217\u8868\u4e2d\u63d2\u5165\u5143\u7d20\nl := list.New()\nl.PushBack("first")              //\u4ece\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u5143\u7d20\u201cfirst\u201d\nelement := l.PushFront(67)       //\u4ece\u94fe\u8868\u5934\u90e8\u63d2\u5165\u5143\u7d2067\nl.InsertAfter("high", element)   //\u5728element\u540e\u63d2\u5165\u5143\u7d20\nl.InsertBefore("noon", element)  //\u5728element\u524d\u63d2\u5165\u5143\u7d20\n \nc).\u4ece\u94fe\u8868\u4e2d\u5220\u9664\u5143\u7d20\nl.Remove(element)\n \nd).\u904d\u5386\u5217\u8868\n \nfor i := l.Front(); i != nil; i = i.Next() {\n    fmt.Println(i.Value)\n}\n\n')),(0,i.kt)("h2",{id:"610-\u8fed\u4ee3-range"},"6.10. \u8fed\u4ee3 range"),(0,i.kt)("h3",{id:"6101-\u8fed\u4ee3slice"},"6.10.1. \u8fed\u4ee3slice"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n/*\nrange\n\u8fed\u4ee3 slice \u6216 map, \u8fd4\u56de index \u548c value(value\u7684\u590d\u5236, \u4e0d\u662f\u5f15\u7528), value \u53ef\u9009\n\n\u6240\u4ee5\u5982\u679c\u5e0c\u671b\u5728 for range \u4e2d\u4fee\u6539\u539f\u59cb\u96c6\u5408\u4e2d\u6570\u636e, \u53ea\u80fd\u901a\u8fc7\u7d22\u5f15/\u4e0b\u6807 data[i] = xxx (\u56e0\u4e3a\u5728\u201crange\u201d\u8bed\u53e5\u4e2d\u751f\u6210\u7684\u6570\u636e\u7684\u503c\u662f\u771f\u5b9e\u96c6\u5408\u5143\u7d20\u7684\u62f7\u8d1d\u3002\u5b83\u4eec\u4e0d\u662f\u539f\u6709\u5143\u7d20\u7684\u5f15\u7528)\n\n/\u5f53\u7136, \u5982\u679c\u96c6\u5408\u4e2d\u662f\u6307\u9488, \u90a3\u4e48\u8fd8\u662f\u53ef\u4ee5\u901a\u8fc7 \u8fed\u4ee3\u51fa\u7684 item \u4fee\u6539\u539f\u59cb\u6570\u636e\u7684\n\n\u5982\u679c\u5728\u5faa\u73af\u4e2d\u4fee\u6539\u5207\u7247\u7684\u957f\u5ea6\u4e0d\u4f1a\u6539\u53d8\u672c\u6b21\u5faa\u73af\u7684\u6b21\u6570\n\n\u9488\u5bf9 nil \u5207\u7247\uff0c\u8fed\u4ee3\u6b21\u6570\u4e3a 0\n\n\n\u8bed\u6cd5\nfor index, value := range sliceName {}\n*/\nfunc rangeDemo() {\n    var pow = []int{1, 2, 4, 8, 16, 32, 64, 128}\n    for i, v := range pow {\n        fmt.Printf("index=%d, value=%d\\n", i, v)\n    }\n    // Range continued\n    // \u53ea\u60f3\u4f7f\u7528 index\n    for i := range pow {\n        pow[i] = 1 << uint(i) // == 2**i\n    }\n    // \u53ea\u60f3\u4f7f\u7528 value\n    for _, value := range pow {\n        fmt.Printf("%d\\n", value)\n    }\n}\n\n\n')),(0,i.kt)("h3",{id:"6102-\u8fed\u4ee3-map"},"6.10.2. \u8fed\u4ee3 map"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n// \u5bf9\u4e8e map:\n// \u8fed\u4ee3 map \u8fc7\u7a0b\u4e2d\uff0c\u5220\u9664\u8fd8\u672a\u8fed\u4ee3\u5230\u7684\u952e\u503c\u5bf9\uff0c\u5219\u8be5\u952e\u503c\u5bf9\u4e0d\u4f1a\u88ab\u8fed\u4ee3\u3002\n// \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u521b\u5efa\u65b0\u7684\u952e\u503c\u5bf9\uff0c\u90a3\u4e48\u65b0\u589e\u952e\u503c\u5bf9\uff0c\u53ef\u80fd\u88ab\u8fed\u4ee3\uff0c\u4e5f\u53ef\u80fd\u4e0d\u4f1a\u88ab\u8fed\u4ee3\n// \u9488\u5bf9 nil \u5b57\u5178\uff0c\u8fed\u4ee3\u6b21\u6570\u4e3a 0\n")),(0,i.kt)("h3",{id:"6103-\u8fed\u4ee3-channel"},"6.10.3. \u8fed\u4ee3 channel"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u5982\u679c\u662f nil \u4fe1\u9053\uff0c\u5faa\u73af\u5c06\u6c38\u8fdc\u963b\u585e\n")),(0,i.kt)("h3",{id:"6104-for-\u548c-range-\u6027\u80fd\u5dee\u5f02"},"6.10.4. for \u548c range \u6027\u80fd\u5dee\u5f02"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\u4e0e for \u4e0d\u540c\u7684\u662f\uff0crange \u5bf9\u6bcf\u4e2a\u8fed\u4ee3\u503c\u90fd\u521b\u5efa\u4e86\u4e00\u4e2a\u62f7\u8d1d\n\n\n\u904d\u5386 []int \u7c7b\u578b\u7684\u5207\u7247\uff0cfor \u4e0e range \u6027\u80fd\u51e0\u4e4e\u6ca1\u6709\u533a\u522b, \u56e0\u4e3a range \u5bf9 int \u7c7b\u578b\u62f7\u8d1d\u6b64\u65f6\u8fd8\u770b\u4e0d\u51fa\u6027\u80fd\u533a\u522b\n\n\u904d\u5386 []struct, \n    \u4ec5\u904d\u5386\u4e0b\u6807\u7684\u60c5\u51b5\u4e0b\uff0cfor \u548c range \u7684\u6027\u80fd\u51e0\u4e4e\u662f\u4e00\u6837\u7684\n    \u904d\u5386\u4e0b\u6807\u548c\u503c, \uff0cfor \u7684\u6027\u80fd\u5927\u7ea6\u662f range (\u540c\u65f6\u904d\u5386\u4e0b\u6807\u548c\u503c) \u7684 2000 \u500d\n*/\n")),(0,i.kt)("h2",{id:"611-\u6307\u9488"},"6.11. \u6307\u9488"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n// Pointers \u6307\u9488\n//A pointer holds the memory address of a value.\u4fdd\u5b58\u7740\u4e00\u4e2avalue\u7684\u5185\u5b58\u5730\u5740\n// &\u53d8\u91cf - \u6839\u636e\u53d8\u91cf\u83b7\u5f97\u6307\u9488\n// *\u6307\u9488   - \u6839\u636e\u6307\u9488\u83b7\u53d6\u53d8\u91cf\n// var t *int  - \u58f0\u660e\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u53d8\u91cf , "*Type" \u8868\u793a\u67d0\u4e2a\u7c7b\u578b\u7684\u6307\u9488\n// \n// \u96f6\u503c\u4e3a nil.\n// \n// \u6c38\u8fdc\u4e0d\u8981\u4f7f\u7528\u4e00\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\uff0c\u56e0\u4e3a\u5b83\u5df2\u7ecf\u662f\u4e00\u4e2a\u6307\u9488, \u5373\u4e0d\u80fd\u5b58\u5728 var xxx *Interface , \u56e0\u4e3a\u63a5\u53e3\u7c7b\u578b\u7684\u53d8\u91cf\u5df2\u7ecf\u662f\u4e00\u4e2a\u6307\u9488\u4e86\n// \nfunc pointerDemo() {\n    i, j := 42, 2701\n\n    p := &i         // point to i\n    fmt.Println(*p) // read i through the pointer\n    *p = 21         // set i through the pointer\n    fmt.Println(i)  // see the new value of i\n\n    p = &j         // point to j\n    *p = *p / 37   // divide j through the pointer\n    fmt.Println(j) // see the new value of j\n\n    type MyStruct struct {\n        X int\n        Y int\n    }\n    myStruct := MyStruct{1, 2}\n    p := &myStruct\n    fmt.Println(p.Y) // 2 ; "(*p).X" \u4e2d\u7684 "*" \u88ab\u7701\u7565\n\n}\n')),(0,i.kt)("h2",{id:"612-\u7ed3\u6784\u4f53struct"},"6.12. \u7ed3\u6784\u4f53struct"),(0,i.kt)("h3",{id:"6121-struct-\u57fa\u672c\u4f7f\u7528"},"6.12.1. struct \u57fa\u672c\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n\n//// Struct\n// A struct is a collection of fields.\nfunc structDemo() {\n    // \u53ef\u5728 func \u4e2d, \u4e5f\u53ef\u5728func\u5916\u5b9a\u4e49\n    type MyStruct struct {\n        X int\n        Y int\n    }\n\n    // struct init\n    myStruct := MyStruct{1, 2}\n    fmt.Println(myStruct) //{1 2}\n    // access field by variable\n    fmt.Println(myStruct.X) // 1\n    // access field by pointer\n    p := &myStruct\n    fmt.Println(p.Y) // 2 ; "(*p).X" \u4e2d\u7684 "*" \u88ab\u7701\u7565\n\n    //Struct Literals : \u901a\u8fc7\u5217\u51fa\u6307\u5b9afield\u6765\u4e3a struct \u4e2d\u7684\u67d0\u4e2a\u76f8\u5e94 field \u91cd\u65b0\u8d4b\u503c\n    //\u8bed\u6cd5\n    // var v = MyStruct{FieldName: fieldValue ...}\n    type Vertex struct {\n        X, Y int\n    }\n    var (\n        v1 = Vertex{1, 2}  // has type Vertex\n        v2 = Vertex{X: 1}  // Y:0 \u9690\u5f0f\u7684, y\u88ab\u8d4b\u503c\u4e3a\u96f6\u503c\n        v3 = Vertex{}      // X:0 and Y:0\n        p1 = &Vertex{1, 2} // has type *Vertex, p \u4e3a\u6307\u9488\u7c7b\u578b\n    )\n\n    fmt.Println(v1, p1, v2, v3) //{1 2} &{1 2} {1 0} {0 0}\n\n\n    // \u533f\u540d\u7ed3\u6784\u4f53\n    var a = struct {\n        name string\n        age  int\n    }{"aa", 11}\n\n    fmt.Println(a)\n\n    // \u533f\u540d\u5b57\u6bb5\n    s := struct {\n        string\n        int\n    }{"hello", 11}\n    println(s.string)\n}\n')),(0,i.kt)("h3",{id:"6122-\u7a7a-struct"},"6.12.2. \u7a7a struct"),(0,i.kt)("h4",{id:"61221-\u5229\u7528-map\u5b9e\u73b0\u96c6\u5408set"},"6.12.2.1. \u5229\u7528 map\u5b9e\u73b0\u96c6\u5408set"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"type Set map[string]struct{}\n\nfunc (s Set) Has(key string) bool {\n    _, ok := s[key]\n    return ok\n}\n\nfunc (s Set) Add(key string) {\n    s[key] = struct{}{}\n}\n\nfunc (s Set) Delete(key string) {\n    delete(s, key)\n}\n\n")),(0,i.kt)("h4",{id:"61222-\u5229\u7528-channel-\u4f5c\u4e3a\u901a\u77e5\u901a\u9053"},"6.12.2.2. \u5229\u7528 channel \u4f5c\u4e3a\u901a\u77e5\u901a\u9053"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func worker(ch chan struct{}) {\n    <-ch\n    fmt.Println("do something")\n    close(ch)\n}\n\nfunc main() {\n    ch := make(chan struct{})\n    go worker(ch)\n    ch <- struct{}{}\n}\n')),(0,i.kt)("h3",{id:"6123-\u533f\u540d\u7ed3\u6784\u4f53-\u7ee7\u627f-\u91cd\u5199"},"6.12.3. \u533f\u540d\u7ed3\u6784\u4f53 \u7ee7\u627f \u91cd\u5199"),(0,i.kt)("p",null,'\u6216\u8005\u53eb "\u5185\u5d4c\u7ed3\u6784\u4f53\t"'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "fmt"\n)\n\n// \u3010\u57fa\u7c7b\u3011\n//\u5b9a\u4e49\u4e00\u4e2a\u6700\u57fa\u7840\u7684struct\u7c7bMsgModel\uff0c\u91cc\u9762\u5305\u542b\u4e00\u4e2a\u6210\u5458\u53d8\u91cfmsgId\ntype MsgModel struct {\n    msgId   int\n    msgType int\n}\n\n// MsgModel\u7684\u4e00\u4e2a\u6210\u5458\u65b9\u6cd5\uff0c\u7528\u6765\u8bbe\u7f6emsgId\nfunc (msg *MsgModel) SetId(msgId int) {\n    msg.msgId = msgId\n}\nfunc (msg *MsgModel) SetType(msgType int) {\n    msg.msgType = msgType\n}\n\n//\u3010\u5b50\u7c7b\u3011\ntype GroupMsgModel struct {\n    // \u5177\u4f53\u5b9e\u73b0\u5c31\u662f\u4e00\u4e2a struct \u91cc\u9762\u5305\u542b\u4e00\u4e2a\u533f\u540d\u7684 struct\n    MsgModel\n\n    // \u5f53\u4e24\u4e2a\u5b57\u6bb5\u62e5\u6709\u76f8\u540c\u7684\u540d\u5b57\uff08\u53ef\u80fd\u662f\u7ee7\u627f\u6765\u7684\u540d\u5b57\uff09\u65f6\n    // - \u5916\u5c42\u540d\u5b57\u4f1a\u8986\u76d6\u5185\u5c42\u540d\u5b57\uff08\u4f46\u662f\u4e24\u8005\u7684\u5185\u5b58\u7a7a\u95f4\u90fd\u4fdd\u7559\uff09\uff0c\u8fd9\u63d0\u4f9b\u4e86\u4e00\u79cd\u91cd\u8f7d\u5b57\u6bb5\u6216\u65b9\u6cd5\u7684\u65b9\u5f0f\uff1b\n    // - \u5982\u679c\u76f8\u540c\u7684\u540d\u5b57\u5728\u540c\u4e00\u7ea7\u522b\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5982\u679c\u8fd9\u4e2a\u540d\u5b57\u88ab\u7a0b\u5e8f\u4f7f\u7528\u4e86\uff0c\u5c06\u4f1a\u5f15\u53d1\u4e00\u4e2a\u9519\u8bef\uff08\u4e0d\u4f7f\u7528\u6ca1\u5173\u7cfb\uff09, \u6bd4\u5982 c \u5305\u542b a,b \u4e24\u4e2a\u533f\u540d struct, a,b \u90fd\u6709\u4e00\u4e2a field \u5177\u6709\u76f8\u540c\u7c7b\u578b\u76f8\u540c\u540d\u5b57, \u90a3\u4e48\u8c03\u7528\u7684\u65f6\u5019\u56de\u62a5\u9519 \n    msgId int\n}\n\nfunc (group *GroupMsgModel) GetId() int {\n    return group.msgId\n}\n\n\n\n// ==============\n\n\n// struct \u7684\u7ee7\u627f\ntype Human struct {\n    name  string\n    age   int\n    phone string\n}\n\ntype Student struct {\n    Human  //\u533f\u540d\u5b57\u6bb5\n    school string\n}\n\ntype Employee struct {\n    Human   //\u533f\u540d\u5b57\u6bb5\n    company string\n}\n\n//\u5728human\u4e0a\u9762\u5b9a\u4e49\u4e86\u4e00\u4e2amethod\n// \u90a3\u4e48 Student, employee \u81ea\u52a8\u7ee7\u627f\u4e86\u8fd9\u4e2a\u65b9\u6cd5\nfunc (h *Human) SayHi() {\n    fmt.Printf("Hi, I am %s you can call me on %s\\n", h.name, h.phone)\n}\n\n//Employee\u7684method\u91cd\u5199Human\u7684method\nfunc (e *Employee) SayHi() {\n    fmt.Printf("Hi, I am %s, I work at %s. Call me on %s\\n", e.name,\n        e.company, e.phone) //Yes you can split into 2 lines here.\n}\n\nfunc methodExtendsOverride() {\n    mark := Student{Human{"Mark", 25, "222-222-YYYY"}, "MIT"}\n    sam := Employee{Human{"Sam", 45, "111-888-XXXX"}, "Golang Inc"}\n\n    mark.SayHi()\n    sam.SayHi()\n}\n\n\n')),(0,i.kt)("h2",{id:"613-\u63a5\u53e3-interface"},"6.13. \u63a5\u53e3 interface"),(0,i.kt)("h3",{id:"6131-\u5728-ide-\u4e2d\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3"},"6.13.1. \u5728 IDE \u4e2d\u5feb\u901f\u5b9e\u73b0\u63a5\u53e3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u6bd4\u5982\u6211\u5e0c\u671b\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u578b\u5b9e\u73b0 error \u63a5\u53e3, \u4f46\u662f\u4e0d\u77e5\u9053\u8981\u5b9e\u73b0\u54ea\u4e9b\u65b9\u6cd5\ntype paramRequiredError struct{}\n// \u6b64\u65f6\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u8bed\u53e5, "_" \u8868\u793a\u5ffd\u7565\u8fd9\u4e2a\u58f0\u660e\u7684\u53d8\u91cf, \n// \u8fd9\u662f IDE \u4f1a\u63d0\u793a\u51fa\u9700\u8981\u5b9e\u73b0\u54ea\u4e9b\u65b9\u6cd5\nvar _ error = paramRequiredError{}\n\n\n')),(0,i.kt)("h3",{id:"6132-\u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2-\u503c\u63a5\u6536\u8005-\u6307\u9488\u63a5\u6536\u8005"},"6.13.2. \u63a5\u53e3\u4f5c\u4e3a\u51fd\u6570\u5f62\u53c2 \u503c\u63a5\u6536\u8005 \u6307\u9488\u63a5\u6536\u8005"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u63a5\u6536\u5668\u8bed\u6cd5: \u7c7b\u4f3c\u65b9\u6cd5\u53c2\u6570 func (receiver T) xxxMethod(xxx, xx) {} , \u5e95\u5c42\u662f\u5bf9\u666e\u901a\u65b9\u6cd5\u5b9a\u4e49\u7684\u8bed\u6cd5\u7cd6, \u7c7b\u4f3c Python: def xxx(self, arg1, arg2...)), \u56e0\u6b64 \u4e0d\u8981\u7528 self \u4f5c\u4e3a\u63a5\u6536\u5668\u53c2\u6570\u540d\n// \n// \u8fd9\u4e2a\u63a5\u6536\u5668\u6240\u5728\u7684\u65b9\u6cd5\u5fc5\u987b\u548c type \u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u5305\u4e0b\n// \n// //pointer receiver\u6307\u9488\u6307\u5411\u539f\u59cb\u503c(\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u503c); \u800c value receiver \u53ea\u662f\u539f\u59cb\u503c\u7684 "\u4e00\u4efd\u590d\u5236",\u4e0d\u53ef\u80fd\u4fee\u6539\u539f\u59cb\u503c(\u548cfunction\u53c2\u6570\u6027\u8d28\u4e00\u6837)\n\n\n//  \u5bf9\u4e8e\u63a5\u6536\u5668\u533a\u522b:\n// \u5982\u679c\u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668\n//      - \u53ea\u80fd\u4f7f\u7528\u6307\u9488\u8c03\u7528\u63a5\u6536\u5668\u65b9\u6cd5\n//      - \u82e5\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3 (\u4ec5\u4ec5\u6307\u9488\u7c7b\u578b\u4f1a\u88ab\u89c6\u4e3a\u662f\u63a5\u53e3 \u7684\u5b50\u7c7b), \u5219\u63a5\u53e3\u4f5c\u4e3a\u5f62\u53c2\u53d8\u91cf, \u53ea\u80fd\u63a5\u6536\u6307\u9488\u5b9e\u53c2\n//      - \u53ef\u4ee5\u4fee\u6539\u63a5\u6536\u5668\u5185\u90e8\u5b57\u6bb5\n// \u5982\u679c\u4f7f\u7528\u53d8\u91cf\u63a5\u6536\u5668\n//      - \u65e2\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u8c03\u7528\u63a5\u6536\u5668\u65b9\u6cd5, \u4e5f\u53ef\u4ee5\u901a\u8fc7\u53d8\u91cf\u8c03\u7528\u63a5\u6536\u5668\u65b9\u6cd5\n//      - \u82e5\u5b9e\u73b0\u4e86\u63a5\u53e3 (\u6307\u9488\u7c7b\u578b\u548c\u53d8\u91cf\u7c7b\u578b\u90fd\u88ab\u89c6\u4e3a\u662f\u63a5\u53e3\u7684\u5b50\u7c7b), \u5219\u63a5\u53e3\u4f5c\u4e3a\u5f62\u53c2\u53d8\u91cf, \u5373\u53ef\u4ee5\u63a5\u6536\u6307\u9488\u5b9e\u53c2, \u4e5f\u53ef\u4ee5\u63a5\u6536\u53d8\u91cf\u5b9e\u53c2\n//      - \u65e0\u6cd5\u4fee\u6539\u63a5\u6536\u5668\u5185\u90e8\u5b57\u6bb5\n//\n////////////////////////////////\n// \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u9488\u76f4\u63a5\u8c03\u503c\u63a5\u6536\u5668\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u503c\u76f4\u63a5\u8c03\u6307\u9488\u63a5\u6536\u5668\u65b9\u6cd5\uff0cgo\u4f1a\u4e3a\u6211\u4eec\u81ea\u52a8\u505a\u503c\u548c\u6307\u9488\u4e4b\u95f4\u7684\u8f6c\u6362\n//\n// \u5728\u5b9e\u73b0\u67d0\u4e2a interface \u65f6, \n// \u4f7f\u7528\u4e86\u666e\u901a\u53d8\u91cf\u63a5\u6536\u5668, \u90a3\u4e48 interface \u5f62\u53c2\u53d8\u91cf \u53ef\u4ee5\u63a5\u6536\u5b9e\u4f8b, \u4e5f\u53ef\u4ee5\u63a5\u6536\u5b9e\u4f8b\u7684\u6307\u9488 \n// \u82e5 \u4f7f\u7528\u7684\u662f\u6307\u9488\u63a5\u6536\u5668\u5b9e\u73b0\u7684 interface, \u90a3\u4e48 interface \u5f62\u53c2\u53d8\u91cf\u53ea\u80fd\u63a5\u6536\u5b9e\u4f8b\u6307\u9488\n// \n// \ntype Abser interface {\n    Abs() float64\n}\ntype MyFloatInterfaceDemo float64\n\n//\n//\u4e3aMyFloatInterfaceDemo\u7c7b\u578b\u6dfb\u52a0 Abs(), \u8868\u793a MyFloatInterfaceDemo \u5b9e\u73b0\u4e86 Abser \u63a5\u53e3\n// \u7c7b\u4f3c Python \u4e2d\u7684 duck type\nfunc (f MyFloatInterfaceDemo) Abs() float64 {\n    if f < 0 {\n        return float64(-f)\n    }\n    return float64(f)\n}\n\n//\ntype VertexInterfaceDemo struct {\n    X, Y float64\n}\n//\n// \u4e3a VertexInterfaceDemo \u6307\u9488\u7c7b\u578b \u6dfb\u52a0 Abs();\n// \u6ce8\u610f \u63a5\u6536\u5668\u4e0d\u662f\u53d8\u91cf\u7c7b\u578b\u800c\u662f\u6307\u9488\u7c7b\u578b, \u6240\u4ee5\u540e\u9762\u4ee3\u7801\u4e2d\u5355\u7eaf\u7684VertexInterfaceDemo\u7c7b\u578b\u8fd8\u662f\u4e0d\u80fd\u8d4b\u503c\u7ed9 interface\u7c7b\u578b\u7684\u53d8\u91cf\nfunc (v *VertexInterfaceDemo) Abs() float64 {\n    return math.Sqrt(v.X*v.X + v.Y*v.Y)\n}\n\nfunc interfaceDemo() {\n    var a Abser // \u5b9a\u4e49 interface \u7c7b\u578b\u53d8\u91cf\n    var b Abser\n    v := VertexInterfaceDemo{3, 4}         // \u5b9a\u4e49 VertexInterfaceDemo \u7c7b\u578b\u7684 struct\n    f := MyFloatInterfaceDemo(-math.Sqrt2) // \u5b9a\u4e49 MyFloatInterfaceDemo \u7c7b\u578b\u53d8\u91cf\n\n    // &v \u662f\u6307\u9488, \u4f5c\u4e3a\u6307\u9488, \u5b9e\u73b0\u4e86 abser interface, \u6240\u4ee5\u53ef\u4ee5\u63a5\u6536\n    a = &v // a *Vertex implements Abser\n    // f \u4f5c\u4e3a\u666e\u901a\u53d8\u91cf, \u5b9e\u73b0\u4e86 abser interface\n    b = f // a MyFloat implements Abser\n\n    // In the following line, v is a Vertex (not *Vertex) and does NOT implement Abser.\n    // \u9519\u8bef, \u56e0\u4e3a v \u662f\u666e\u901a\u53d8\u91cf, \u4f5c\u4e3a\u666e\u901a\u53d8\u91cf v \u5e76\u6ca1\u6709\u5b9e\u73b0 Abser interface\n    //a = v\n\n    // \u6b63\u786e (\u6240\u4ee5 \u5728\u5b9e\u73b0\u67d0\u4e2a interface \u65f6, \u4f7f\u7528\u4e86\u53d8\u91cf\u63a5\u6536\u5668, \u90a3\u4e48 interface \u53d8\u91cf\u53ef\u4ee5\u63a5\u6536\u5b9e\u4f8b\u53d8\u91cf, \u4e5f\u53ef\u4ee5\u63a5\u6536\u5b9e\u4f8b\u6307\u9488)\n    //      (\u82e5 \u4f7f\u7528\u7684\u662f\u6307\u9488\u63a5\u6536\u5668, \u90a3\u4e48 interface \u53d8\u91cf\u53ea\u80fd\u63a5\u6536\u5b9e\u4f8b\u6307\u9488)\n    b = &f\n\n    fmt.Println(a.Abs()) //5\n    fmt.Println(b.Abs()) //1.4142135623730951\n\n\n\n\n\n//\n// pointer \u4f5c\u4e3afunc\u7684 "\u53c2\u6570" and "\u63a5\u6536\u5668"\n// \u533a\u522b: \u5b9a\u4e49\u65f6\u6307\u9488\u4f5c\u4e3a "\u53c2\u6570" - \u5219\u51fd\u6570\u8c03\u7528\u65f6, \u5fc5\u987b\u7ed9 pointer\n//       \u5b9a\u4e49\u65f6\u6307\u9488\u4f5c\u4e3a "\u63a5\u6536\u5668" - \u51fd\u6570\u8c03\u7528\u65f6, \u7ed9 pointer \u6216 \u666e\u901a\u53d8\u91cf \u5747\u53ef\n//\n// \u76f8\u5e94\u7684: \u666e\u901a\u53d8\u91cf \u4f5c\u4e3afunc\u7684 "\u53c2\u6570" and "\u63a5\u6536\u5668" - \u533a\u522b\u548c\u4e0a\u9762\u7c7b\u4f3c https://tour.golang.org/methods/7\ntype ParamAndReceiverPointerVertex struct {\n    X, Y float64\n}\n\nfunc (v *ParamAndReceiverPointerVertex) Scale(f float64) {\n    v.X = v.X * f\n    v.Y = v.Y * f\n}\nfunc ScaleFunc(v *ParamAndReceiverPointerVertex, f float64) {\n    v.X = v.X * f\n    v.Y = v.Y * f\n}\nfunc paramAndReceiverPointerDemo() {\n    v := ParamAndReceiverPointerVertex{3, 4}\n    v.Scale(2)        //\u867d\u7136\u5b9a\u4e49\u65f6\u63a5\u6536\u5668\u662f\u6307\u9488, \u4f46\u662f\u8fd9\u91cc\u63a5\u6536\u5668\u53ef\u4ee5\u662f\u666e\u901a\u53d8\u91cf\n    ScaleFunc(&v, 10) // \u5b9a\u4e49\u65f6\u53c2\u6570\u662f\u6307\u9488, \u8fd9\u91cc\u5fc5\u987b\u662f\u4f20\u6307\u9488\n    //ScaleFunc(v, 10)  // Compile error! \u5982\u679c\u662f\u53d8\u91cf\u5219\u62a5\u9519\n\n    p := &ParamAndReceiverPointerVertex{4, 3}\n    p.Scale(3)      // \u63a5\u6536\u5668\u53ef\u4ee5\u662fpointer\n    ScaleFunc(p, 8) // \u53c2\u6570\u5fc5\u987b\u662f\u6307\u9488\n\n    fmt.Println(v, p) //{60 80} &{96 72}\n}\n')),(0,i.kt)("h3",{id:"6133-\u7a7a\u63a5\u53e3"},"6.13.3. \u7a7a\u63a5\u53e3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n    //\n    //\n    //empty interface \u7a7a\u63a5\u53e3 - \u7a7a\u63a5\u53e3\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u53d8\u91cf\n    //\u4f8b\u5982 fmt.Print\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u7c7b\u578b\u53d8\u91cf, \u5b9a\u4e49\u65f6\u5c31\u662f\u4f7f\u7528\u7684interface{}\u7c7b\u578b\n    //  \u4f8b\u5982 \u7a7a\u63a5\u53e3\u4f5c\u4e3amap\u7684\u503c\n    //\n    describe := func(i interface{}) {\n        fmt.Printf("(%v, %T)\\n", i, i) // \u6253\u5370\u503c, \u7c7b\u578b\n    }\n\n    var i interface{}\n    describe(i) //(<nil>, <nil>)\n\n    i = 42\n    describe(i) //(42, int)\n\n    i = "hello"\n    describe(i) //(hello, string)\n\n    //\n    //\n    stringerInterface()\n\n    //\n    //\n    errorInterface()\n}\n\n\n\n')),(0,i.kt)("h3",{id:"6134-\u7c7b\u578b\u65ad\u8a00"},"6.13.4. \u7c7b\u578b\u65ad\u8a00"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// Type assertions \u7c7b\u578b\u65ad\u8a00 - \u63d0\u4f9b\u5bf9 \u7a7a\u63a5\u53e3\u53d8\u91cf \u5177\u4f53\u7c7b\u578b\u7684\u8bbf\u95ee\n// \u8bed\u6cd5: t := i.(T)\nfunc typeAssert() {\n    var i interface{} = "hello"\n\n    s := i.(string)\n    fmt.Println(s) //hello\n\n    s, ok := i.(string)\n    fmt.Println(s, ok) ////hello true\n\n    f, ok := i.(float64)\n    fmt.Println(f, ok) //0 false\n\n    // f = i.(float64) // \u89e6\u53d1 panic\n    // fmt.Println(f)\n}\n\n// Type switches  - \u7c7b\u578b\u65ad\u8a00\u7684\u5347\u7ea7\u7248: \u591a\u4e2a\u7c7b\u578b\u65ad\u8a00\u5199\u5728\u4e00\u8d77 (\u5fc5\u987b\u548c switch,case \u5408\u7528)\nfunc typeSwitch() {\n    do := func(i interface{}) {\n        switch v := i.(type) { //type \u662f\u5173\u952e\u5b57(\u56fa\u5b9a\u5199\u6cd5), v \u7684\u503c\u662f\u8f6c\u578b\u540e\u7684\u503c, \u4e0d\u662f\u7c7b\u578b\n        case int:\n            fmt.Printf("Twice %v is %v\\n", v, v*2)\n        case string:\n            fmt.Printf("%q is %v bytes long\\n", v, len(v))\n        default:\n            fmt.Printf("I don\'t know about type %T!\\n", v)\n        }\n    }\n\n    do(21)      //Twice 21 is 42\n    do("hello") //"hello" is 5 bytes long\n    do(true)    //I don\'t know about type bool!\n\n}\n\n')),(0,i.kt)("h3",{id:"6135-\u5185\u7f6e\u63a5\u53e3"},"6.13.5. \u5185\u7f6e\u63a5\u53e3"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n//\n// Stringer interface - \u7c7b\u4f3c Java \u4e2d\u7684 toString() - \u5b9a\u4e49\u5728 fmt \u5305, \u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5: String() string\ntype Person struct {\n    Name string\n    Age  int\n}\n\n// \u5b9e\u73b0 Stringer\u63a5\u53e3\nfunc (p Person) String() string {\n    return fmt.Sprintf("%v (%v years)", p.Name, p.Age)\n}\nfunc stringerInterface() {\n    a := Person{"Arthur Dent", 42}\n    z := Person{"Zaphod Beeblebrox", 9001}\n    fmt.Println(a, z) //Arthur Dent (42 years) Zaphod Beeblebrox (9001 years)\n}\n\n//\n// error interface - \u7c7b\u4f3c Stringer \u63a5\u53e3, \u53ea\u6709\u4e00\u4e2a\u65b9\u6cd5: Error() string\ntype MyError struct {\n    When time.Time\n    What string\n}\n\n// \u5b9e\u73b0 error \u63a5\u53e3\n// \u4e4b\u540e \u5c31\u53ef\u4ee5 \u88ab error \u63a5\u6536\nfunc (e *MyError) Error() string {\n    return fmt.Sprintf("at %v, %s",\n        e.When, e.What)\n}\nfunc errorInterface() {\n    run := func() error {\n        return &MyError{\n            time.Now(),\n            "it didn\'t work",\n        }\n    }\n\n    if err := run(); err != nil {\n        fmt.Println(err) //at 2018-10-16 12:56:02.8149885 +0800 CST m=+0.092996101, it didn\'t work\n    }\n}\n')),(0,i.kt)("h3",{id:"6136-\u63a5\u53e3\u5d4c\u5957"},"6.13.6. \u63a5\u53e3\u5d4c\u5957"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n// interface \u7684\u7ee7\u627f\ntype ReadWrite interface {\n    Read(b Buffer) bool\n    Write(b Buffer) bool\n}\n\ntype Lock interface {\n    Lock()\n    Unlock()\n}\n\ntype File interface {\n    ReadWrite\n    Lock\n    Close()\n}\n")),(0,i.kt)("h3",{id:"6137-\u63a5\u53e3\u5b8c\u6574\u6027\u68c0\u67e5"},"6.13.7. \u63a5\u53e3\u5b8c\u6574\u6027\u68c0\u67e5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u58f0\u660e\u4e00\u4e2a _ \u53d8\u91cf\uff08\u6ca1\u4eba\u7528\uff09\uff0c\u628a\u4e00\u4e2a nil \u7684\u7a7a\u6307\u9488\uff0c\u4ece Square \u8f6c\u6210 Shape\uff0c\u8fd9\u6837\uff0c\u5982\u679c*Square\u6ca1\u6709\u5b9e\u73b0\u5b8cShape\u76f8\u5173\u7684\u63a5\u53e3\u65b9\u6cd5\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\nvar _ Shape = (*Square)(nil)\n\n")),(0,i.kt)("h2",{id:"614-\u51fd\u6570"},"6.14. \u51fd\u6570"),(0,i.kt)("h3",{id:"6141-\u51fd\u6570\u57fa\u672c\u8bed\u6cd5"},"6.14.1. \u51fd\u6570\u57fa\u672c\u8bed\u6cd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n//////////////////////////////////////\nfunc funcDemo() {\n\n    //Functions continued\n    //// \u591a\u4e2a\u53c2\u6570\u7c7b\u578b\u76f8\u540c, \u53ef\u5171\u4eab\u7c7b\u578b\n    add1 := func(x, y int) int {\n        return x + y\n    }\n    println(add1) // 0x4ce678\n\n    //Multiple results\n    //\u591a\u4e2a\u8fd4\u56de\u503c\n    swap := func(x, y string) (string, string) {\n        return y, x\n    }\n    println(swap) //0x4ce680\n\n    //Named return values\n    // \u88ab\u547d\u540d\u7684 "\u8fd4\u56de\u503c" - \u76f4\u63a5 "return"\n    // \u53ea\u9002\u5408\u5728\u77ed\u51fd\u6570\u4e2d\u4f7f\u7528, \u56e0\u4e3a They can harm readability in longer functions.\n    split := func(sum int) (x, y int) {\n        x = sum * 4 / 9\n        y = sum - x\n        return\n    }\n    println(split)\n\n    // \u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\n    // \u8fd9\u4e2a\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a \u51fd\u6570, \u7528\u6765\u5904\u7406 \u53c2\u6570 "3" "4"\n    compute := func(fn func(float64, float64) float64) float64 {\n        return fn(3, 4)\n    }\n    hypot := func(x, y float64) float64 { // \u6c42\u76f4\u89d2\u4e09\u89d2\u5f62\u7b2c\u4e09\u8fb9\n        return math.Sqrt(x*x + y*y)\n    }\n    fmt.Println(hypot(5, 12))      //13\n    fmt.Println(compute(hypot))    //5\n    fmt.Println(compute(math.Pow)) //81\n')),(0,i.kt)("h3",{id:"6142-\u503c\u4f20\u9012-\u5f15\u7528\u4f20\u9012"},"6.14.2. \u503c\u4f20\u9012 \u5f15\u7528\u4f20\u9012"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'//\n// \u503c\u4f20\u9012 vs \u5f15\u7528\u4f20\u9012\n// \u5728\u65b9\u6cd5\u4f20\u53c2\u65f6\u5168\u90e8\u90fd\u662f\u503c\u4f20\u9012\uff0c\u5728\u95ed\u5305\u6355\u83b7\u5916\u90e8\u53d8\u91cf\u65f6\u662f\u5f15\u7528\u4f20\u9012 (\u4e00\u4e2a\u51fd\u6570\u603b\u662f\u5f97\u5230\u4e00\u4e2a\u88ab\u4f20\u9012\u7684\u4e1c\u897f\u7684\u526f\u672c, \u95ed\u5305\u62ff\u5230\u7684\u5916\u90e8\u53d8\u91cf\u90fd\u662f\u5f15\u7528), \n// \u6240\u6709\u770b\u4e0a\u53bb\u50cf\u662f\u5f15\u7528\u4f20\u9012\u7684\u573a\u666f, \u5b9e\u9645\u4f20\u9012\u7684\u662f\u6307\u9488(\u6307\u9488\u7684\u62f7\u8d1d, \u6307\u5411\u540c\u4e00\u4e2a\u5730\u5740)\n//\n// \u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b, \u90fd\u662f\u503c\u4f20\u9012, \u5982 byte,int,bool,string, \u6570\u7ec4\n// \u5bf9\u4e8e struct \u503c\u4f20\u9012\n// \u5bf9\u4e8e slice \u548c map , channel, \u662f\u503c\u4f20\u9012, \u5e95\u5c42\u5b9e\u9645\u662f\u5c01\u88c5\u7684\u6307\u9488\u7c7b\u578b, \u5f15\u7528\u7684\u662f\u539f\u6765\u7684\u6570\u636e, \u6240\u4ee5\u4fee\u6539\u4f1a\u4f5c\u7528\u5230\u539f\u6765\u7684\u6570\u636e (\u6240\u4ee5\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u4f20\u5f15\u7528)\n// \u5bf9\u4e8e interface{}  \u590d\u5236\u4e00\u4e2a\u63a5\u53e3\u503c\u4f1a\u590d\u5236\u5b58\u50a8\u5728\u63a5\u53e3\u503c\u4e2d\u7684\u4e1c\u897f (\u5982\u679c\u63a5\u53e3\u503c\u6301\u6709\u4e00\u4e2a\u7ed3\u6784\uff0c\u590d\u5236\u63a5\u53e3\u503c\u5c31\u4f1a\u590d\u5236\u8be5\u7ed3\u6784\u3002\u5982\u679c\u63a5\u53e3\u503c\u6301\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u590d\u5236\u63a5\u53e3\u503c\u4f1a\u590d\u5236\u8be5\u6307\u9488)\n// \u5bf9\u4e8e\u51fd\u6570, \u4e5f\u662f\u503c\u4f20\u9012(\u4f20\u9012\u7684\u662f\u6307\u5411\u51fd\u6570\u7684\u6307\u9488)\n//\u5bf9\u4e8e "\u6307\u9488" , \u4f20\u9012\u7684\u662f\u6307\u9488\u7684\u62f7\u8d1d(\u4e24\u4e2a\u6307\u9488\u62f7\u8d1d\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61/\u5185\u5b58\u5730\u5740), \u6548\u679c\u76f8\u5f53\u4e8e\u6307\u5411\u5bf9\u8c61\u7684 "\u5f15\u7528\u4f20\u9012"\n//\narray := [3]int{0, 1, 2}\n// \u6570\u7ec4\u662f\u503c\u4f20\u9012\nvar array2 = array\narray2[2] = 5\nfmt.Println(array, array2) // [0 1 2] [0 1 5]\n\n\n\n\n// \u5bf9\u4e8e\u5207\u7247, \u4e5f\u662f\u503c\u4f20\u9012, \u4f46\u662f\u5bf9\u5207\u7247\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u539f\u6765\u7684\u5207\u7247\u3002 (\u56e0\u4e3a\u5207\u7247\u5b9e\u9645\u662f\u5bf9\u5e95\u5c42\u6570\u7ec4\u7684\u90e8\u5206\u5f15\u7528)\nfunc passSlice(_s []int){\n    _s[0]=99\n    fmt.Printf("_s \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",_s,&_s)\n}\nfunc exp6(){\n    s:=[]int{11,22,33,44}\n    fmt.Printf("s \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",s,&s)\n    passSlice(s)\n    fmt.Printf("\u6267\u884c\u51fd\u6570\u540e s \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",s,&s)\n    /*\n    s\u503c[11 22 33 44], \u5730\u5740 0x00001\n    _s\u503c[99 22 33 44] \u5730\u5740 0x00099\n    \u6267\u884c\u51fd\u6570\u540es \u503c: [99 22 33 44], \u5730\u5740 0x00001\n    */\n}\n\n\n// \u5bf9\u4e8e\u6570\u7ec4, \u4e5f\u662f\u503c\u4f20\u9012, \u4f46\u662f\u5bf9\u4e8e\u6570\u7ec4\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u539f\u6765\u5207\u7247/\u6570\u7ec4\nfunc passArray(_a [3]int){\n    _a[0]=99\n    fmt.Printf("_a \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",_a,&_a)\n}\nfunc exp7(){\n    a:=[3]int{22,33,44}\n    fmt.Printf("a \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",a,&a)\n    passArray(a)\n    fmt.Printf("\u6267\u884c\u51fd\u6570\u540e a \u503c\uff1a%v,\u5730\u5740\uff1a%p\\n",a,&a)\n    /*\n    s\u503c[11 22 33 44], \u5730\u5740 0x00001\n    _s\u503c[99 22 33 44] \u5730\u5740 0x00099\n    \u6267\u884c\u51fd\u6570\u540es \u503c: [11 22 33 44], \u5730\u5740 0x00001\n    */\n}\n}\n\n')),(0,i.kt)("p",null,"\u6307\u9488\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570 \u4e5f\u662f\u62f7\u8d1d: \u770b\u4e00\u4e2a\u5178\u578b\u9519\u8bef"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u529f\u80fd: \u4f20\u5165\u4e00\u4e2a\u6307\u9488\u4f5c\u4e3a GetOne \u7684\u53c2\u6570\uff0c\u7136\u540e\u5728\u51fd\u6570\u5185\u7ed9\u8fd9\u4e2a\u6307\u9488\u53d8\u91cf\u8bbe\u7f6e\u503c\nfunc main() {\n    var oi OrderInfo\n    \n    GetOne(&oi)\n\n    fmt.Println(oi)\n}\ntype OrderInfo struct {\n    Id string\n    Price float64\n    Status int\n}\n// \u56e0\u4e3a\u7ed9\u51fd\u6570\u4f20\u53c2\u662f\u503c\u4f20\u9012, \u8fd9\u91cc\u4f20\u9012\u7684\u662f\u6307\u9488\u7684\u62f7\u8d1d\nfunc GetOne(orderInfo *OrderInfo) {\n    // \u9519\u8bef\u7684\u5199\u6cd5 (\u8fd9\u91ccorderInfo\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u5168\u65b0\u5730\u5740, \u548c main() \u4e2d\u7684 io \u65e0\u5173\u4e86)\n    orderInfo = &OrderInfo{\n        Id: "aaaa",\n        Price: 100.00,\n        Status: 1,\n    }\n\n    // \u6b63\u786e\u7684\u5199\u6cd5: \u76f4\u63a5\u5bf9\u6307\u9488\u6307\u5411\u7684\u503c\u8fdb\u884c\u8d4b\u503c\n    *orderInfo = OrderInfo{\n        Id: "aaaa",\n        Price: 100.00,\n        Status: 1,\n    }\n}\n\n')),(0,i.kt)("h3",{id:"6143-\u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf-\u9003\u9038\u5206\u6790"},"6.14.3. \u51fd\u6570\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf \u9003\u9038\u5206\u6790"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u5728C/C++\u8bed\u8a00\u4e2d\uff0c\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5728\u6808\u7a7a\u95f4\uff0c\u56e0\u4e3a\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u6536\u51fd\u6570\u91cc\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\n//      \u6240\u4ee5\u5728\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u65f6\uff0c\u5b9e\u9645\u662f\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u526f\u672c; \n//      \u82e5\u8fd4\u56de\u4e86\u5c40\u90e8\u53d8\u91cf\u7684\u6307\u9488, \u4e00\u5b9a\u4f1a\u53d1\u751f\u7a7a\u6307\u9488\u5f02\u5e38 (\u8981\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\uff0c\u53ea\u9700\u5c06\u5185\u5b58\u7a7a\u95f4\u5206\u914d\u5728\u5806\u4e2d\u5373\u53ef\u3002)\n// \u5728Go\u8bed\u8a00\u4e2d\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u4e5f\u662f\u4e00\u6837\u7684\uff0c\n//      \u8fd4\u56de\u7684\u4e5f\u662f\u5c40\u90e8\u53d8\u91cf\u7684\u526f\u672c; \n//      \u82e5\u8fd4\u56de\u6307\u9488, \u51fd\u6570\u5185\u90e8\u5c40\u90e8\u53d8\u91cf\uff0c\u65e0\u8bba\u662f\u52a8\u6001new\u51fa\u6765\u7684\u53d8\u91cf\u8fd8\u662f\u521b\u5efa\u7684\u5c40\u90e8\u53d8\u91cf\uff0c\u5b83\u88ab\u5206\u914d\u5728\u5806\u8fd8\u662f\u6808\uff0c\u662f\u7531\u7f16\u8bd1\u5668\u505a\u201c\u9003\u9038\u5206\u6790\u201d\u4e4b\u540e\u505a\u51fa\u7684\u51b3\u5b9a\n//          - \u5c40\u90e8\u53d8\u91cf\u5206\u914d\u7a7a\u95f4\u65f6\u4f1a\u5c3d\u53ef\u80fd\u5730\u5206\u914d\u5728\u6808\u7a7a\u95f4\u4e2d, \u4f46\u662f\u82e5\u7f16\u8bd1\u5668\u65e0\u6cd5\u786e\u5b9a\u5c40\u90e8\u53d8\u91cf\u662f\u5426\u4f1a\u88ab\u8fd4\u56de\u51fa\u51fd\u6570\u5916\u90e8(\u4e5f\u5c31\u662f\u53ef\u80fd\u5b58\u5728\u5c40\u90e8\u53d8\u91cf\u9003\u9038) \u5219\u4f1a\u5c06\u8be5\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5728\u5806\u7a7a\u95f4\u4e2d, \n//          - \u5982\u679c\u5c40\u90e8\u53d8\u91cf\u5360\u7528\u5185\u5b58\u5f88\u5927\uff0cGo\u7f16\u8bd1\u5668\u4f1a\u5c06\u5176\u5b58\u50a8\u5728\u5806\u7a7a\u95f4\u4e2d \n\nfunc foo() int {    //int\u7c7b\u578b\u51fd\u6570\n    tmp := 1\n    fmt.Println(&tmp)  // 0xc00000a0e0\n    return tmp      //\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\n}\nfunc main() {\n    v := foo()\n    fmt.Println(&v)  // 0xc00000a0c8(\u548ctmp\u5730\u5740\u4e0d\u540c)\n}\n\n// ---------------------\n func foo() *int {    // \u8fd4\u56deint\u7c7b\u578b\u6307\u9488\n    tmp := 2020\n    return &tmp      // \u8fd4\u56de\u5c40\u90e8\u53d8\u91cftmp\u7684\u5730\u5740\n}\n\nfunc main() {\n    var ptr *int\n    // main\u51fd\u6570\u4e2d\u5f15\u7528\u4e86foo\u51fd\u6570\u5185\u7684\u5c40\u90e8\u53d8\u91cftmp\n    // \u6839\u636e\u201c\u9003\u9038\u5206\u6790\u201d\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c06\u5176\u5206\u914d\u5728\u5806\u7a7a\u95f4\u4e0a\n    ptr = foo()\n    // foo\u51fd\u6570\u6267\u884c\u7ed3\u675f\u540etmp\u4e0d\u4f1a\u88ab\u91ca\u653e\n    fmt.Println(*p) // \u7ed3\u679c\u4e3a2020\uff0c\u4e0d\u4f1a\u62a5\u9519\n}\n\n")),(0,i.kt)("h2",{id:"615-\u95ed\u5305"},"6.15. \u95ed\u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc closureDemo() {\n\n    // Function closures \u95ed\u5305\n    // \u95ed\u5305\u662f\u4e00\u4e2a function value\uff0c\u5b83\u5f15\u7528\u6765\u81ea\u5176\u4f53\u5916\u7684\u53d8\u91cf\u3002\n    // \u95ed\u5305\u6784\u6210\u4e86\u4e00\u4e2a\u72ec\u7acb\u7684context, \u6709\u4e86 "\u72b6\u6001"\n    adder := func() func(int) int {\n        sum := 0 // \u4e00\u76f4\u7ef4\u6301\u5728\u5185\u5b58\u4e2d, \u4f1a\u9020\u6210\u7d2f\u52a0\u6548\u679c\n        // \u8fd4\u56de\u4e00\u4e2a\u95ed\u5305\n        return func(x int) int {\n            sum += x // \u8bbf\u95ee\u4f53\u5916\u7684\u53d8\u91cfsum\n            return sum\n        }\n    }\n\n    pos, neg := adder(), adder()\n    for i := 0; i < 5; i++ {\n        fmt.Println(\n            pos(i),\n            neg(-2*i),\n        )\n        /*\n            0 0\n            1 -2\n            3 -6\n            6 -12\n            10 -20\n        */\n    }\n\n}\n\n')),(0,i.kt)("h2",{id:"616-\u65b9\u6cd5-\u548c-\u63a5\u6536\u5668"},"6.16. \u65b9\u6cd5 \u548c \u63a5\u6536\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n////////////////////////////////\n//\n// Methods & \u63a5\u6536\u5668 receiver\n//\n//\u6307\u5b9a\u51fd\u6570\u7684\u63a5\u6536\u5668 - -  \u53ea\u662f\u5728 "func" \u5173\u952e\u5b57 \u548c "func name"\u4e4b\u95f4 \u6dfb\u52a0\u4e86 "\u63a5\u6536\u5668"\n// \u63a5\u6536\u5668\u8bed\u6cd5: \u7c7b\u4f3c\u65b9\u6cd5\u53c2\u6570\n// \u8fd9\u4e2a\u63a5\u6536\u5668\u6240\u5728\u7684\u65b9\u6cd5\u5fc5\u987b\u548c type \u5b9a\u4e49\u5728\u540c\u4e00\u4e2a\u5305\u4e0b\ntype vertex1 struct {\n    X, Y float64\n}\n\n// \u63a5\u6536\u5668\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b, \u8fd9\u91cc\u6307\u5b9a\u4e3a Vertex1, \u76f8\u5f53\u4e8e\u7ed9Vertex1\u6dfb\u52a0\u65b9\u6cd5\nfunc (v vertex1) abs() float64 {\n    return math.Sqrt(v.X*v.X + v.Y*v.Y)\n}\nfunc structMethodReceiver() {\n    v := vertex1{3, 4}\n    fmt.Println("structMethod", v.abs()) //5\n\n    methodContinue()\n\n    pointerReceiverDemo()\n\n    paramAndReceiverPointerDemo()\n\n}\n\n///////////////////////\n\n//MyFloat : Methods continued\n// \u63a5\u6536\u5668\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b, \u6bd4\u5982 float64, \u4e0b\u9762\u7684 func\u4e2d \u7684\u63a5\u6536\u5668\u5c31\u662f\u8fd9\u4e2a\u7c7b\u578b\ntype MyFloat float64\n\n// Abs \u5230\u5904\u5fc5\u987b\u5927\u5199\nfunc (f MyFloat) Abs() float64 {\n    if f < 0 {\n        return float64(-f)\n    }\n    return float64(f)\n}\n\nfunc methodContinue() {\n    var f MyFloat = -2.2\n    println(f.Abs())     //+2.200000e+000\n    fmt.Println(f.Abs()) //2.2\n}\n\n////////////////////////////////////////\n\n// Pointer receivers \u6307\u9488\u63a5\u6536\u5668\n//\u76f8\u6bd4\u4e8e value receiver \u4f7f\u7528\u66f4\u52a0\u5e7f\u6cdb\n//\u5bf9\u6bd4 pointer receiver vs. value receiver:\n//pointer receiver\u6307\u9488\u6307\u5411\u539f\u59cb\u503c(\u53ef\u4ee5\u4fee\u6539\u539f\u59cb\u503c); \u800c value receiver \u53ea\u662f\u539f\u59cb\u503c\u7684 "\u4e00\u4efd\u590d\u5236",\u4e0d\u53ef\u80fd\u4fee\u6539\u539f\u59cb\u503c(\u548cfunction\u53c2\u6570\u6027\u8d28\u4e00\u6837)\n// \u6307\u9488\u63a5\u6536\u5668 \u4f7f\u7528\u573a\u666f:\n//1. \u5e0c\u671b\u901a\u8fc7\u63a5\u6536\u5668\u4fee\u6539\u6307\u5411\u7684\u53d8\u91cf\u7684\u503c; 2. \u5e0c\u671b\u907f\u514d\u5728\u6bcf\u6b21\u65b9\u6cd5\u8c03\u7528\u65f6\u590d\u5236\u503c, \u5c24\u5176\u5f53receiver\u662f\u4e00\u4e2abig struct \u7684\u65f6\u5019\ntype PointerVertex struct {\n    X, Y float64\n}\n\n// \u4f7f\u7528\u666e\u901a\u63a5\u6536\u5668\nfunc (v PointerVertex) Abs() float64 {\n    return math.Sqrt(v.X*v.X + v.Y*v.Y)\n}\n\n// \u4f7f\u7528\u6307\u9488\u63a5\u6536\u5668\n// \u53ef\u4ee5\u76f4\u63a5\u4fee\u6539 pointer \u6307\u5411\u7684\u539f\u59cb\u503c;\n//\u8fd9\u4e2afunction\u4f5c\u7528: \u653e\u5927 f \u500d\nfunc (v *PointerVertex) Scale(f float64) {\n    v.X = v.X * f\n    v.Y = v.Y * f\n}\nfunc pointerReceiverDemo() {\n    v := PointerVertex{3, 4}\n    v.Scale(10)\n    fmt.Println(v.Abs()) //50\n}\n\n/////////////////////////////////////\n\n//\n// pointer \u4f5c\u4e3afunc\u7684 "\u53c2\u6570" and "\u63a5\u6536\u5668"\n// \u533a\u522b: \u5b9a\u4e49\u65f6\u6307\u9488\u4f5c\u4e3a "\u53c2\u6570" - \u5219\u51fd\u6570\u8c03\u7528\u65f6, \u5fc5\u987b\u7ed9 pointer\n//       \u5b9a\u4e49\u65f6\u6307\u9488\u4f5c\u4e3a "\u63a5\u6536\u5668" - \u51fd\u6570\u8c03\u7528\u65f6, \u7ed9 pointer \u6216 \u666e\u901a\u53d8\u91cf \u5747\u53ef\n//\n// \u76f8\u5e94\u7684: \u666e\u901a\u53d8\u91cf \u4f5c\u4e3afunc\u7684 "\u53c2\u6570" and "\u63a5\u6536\u5668" - \u533a\u522b\u548c\u4e0a\u9762\u7c7b\u4f3c https://tour.golang.org/methods/7\n\n\n// \u5bf9\u4e8e\u65b9\u6cd5\u63a5\u6536\u5668: \u5b9a\u4e49\u65f6\u4f7f\u7528\u6307\u9488, \u4f7f\u7528\u65f6\u53ef\u4ee5\u7528 \u53d8\u91cf or \u6307\u9488\n// \u5bf9\u4e8e\u65b9\u6cd5\u53c2\u6570: \u5b9a\u4e49\u65f6\u662f\u5565\u7c7b\u578b, \u4f7f\u7528\u65f6\u5fc5\u987b\u662f\u5565\u7c7b\u578b\ntype ParamAndReceiverPointerVertex struct {\n    X, Y float64\n}\n\nfunc (v *ParamAndReceiverPointerVertex) Scale(f float64) {\n    v.X = v.X * f\n    v.Y = v.Y * f\n}\nfunc ScaleFunc(v *ParamAndReceiverPointerVertex, f float64) {\n    v.X = v.X * f\n    v.Y = v.Y * f\n}\nfunc paramAndReceiverPointerDemo() {\n    v := ParamAndReceiverPointerVertex{3, 4}\n    v.Scale(2)        //\u867d\u7136\u5b9a\u4e49\u65f6\u63a5\u6536\u5668\u662f\u6307\u9488, \u4f46\u662f\u8fd9\u91cc\u63a5\u6536\u5668\u53ef\u4ee5\u662f\u666e\u901a\u53d8\u91cf\n    ScaleFunc(&v, 10) // \u5b9a\u4e49\u65f6\u53c2\u6570\u662f\u6307\u9488, \u8fd9\u91cc\u5fc5\u987b\u662f\u4f20\u6307\u9488\n    //ScaleFunc(v, 10)  // Compile error! \u5982\u679c\u662f\u53d8\u91cf\u5219\u62a5\u9519\n\n    p := &ParamAndReceiverPointerVertex{4, 3}\n    p.Scale(3)      // \u63a5\u6536\u5668\u53ef\u4ee5\u662fpointer\n    ScaleFunc(p, 8) // \u53c2\u6570\u5fc5\u987b\u662f\u6307\u9488\n\n    fmt.Println(v, p) //{60 80} &{96 72}\n}\n\n//////////////////////////////////\n\n')),(0,i.kt)("h2",{id:"617-\u6d41\u7a0b\u63a7\u5236"},"6.17. \u6d41\u7a0b\u63a7\u5236"),(0,i.kt)("h3",{id:"6171-\u6b7b\u5faa\u73af-for-\u548c-select-\u533a\u522b"},"6.17.1. \u6b7b\u5faa\u73af for \u548c select \u533a\u522b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprintln(w, "Hello, GopherCon SG")\n    })\n    go func() {\n        if err := http.ListenAndServe(":8080", nil); err != nil {\n            log.Fatal(err)\n        }\n    }()\n    // bad\n    //\u5c06\u963b\u585e main goroutine, \u65e0\u9650\u5faa\u73af\u4e2d\u6d6a\u8d39 CPU \u8d44\u6e90\n    for {\n    }\n    //good\n    for {\n        //  \u6bcf\u6b21\u7a7a\u5faa\u73af, \u8ba9\u51fa cpu\n        runtime.Gosched()\n    }\n\n    // better\n    select {} // \u7a7a\u7684 select \u8bed\u53e5\u5c06\u6c38\u8fdc\u963b\u585e, \u540c\u65f6\u4e0d\u4f1a\u5360\u4f4f\u6574\u4e2a cpu\n}\n\n\n')),(0,i.kt)("h3",{id:"6172-if-\u548c-for-\u5faa\u73af"},"6.17.2. if \u548c for \u5faa\u73af"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\nfunc conditionControl() {\n\n    // if \u6761\u4ef6\u5224\u65ad\n    //\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u91cc\u9762\u5141\u8bb8\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u8fd9\u4e2a\u53d8\u91cf\u7684\u4f5c\u7528\u57df\u53ea\u80fd\u5728\u8be5\u6761\u4ef6\u903b\u8f91\u5757\u5185\n    // \u5f00\u6839\u53f7\n    // func sqrt(x float64) string { //\u8fd9\u91cc\u53ea\u662f\u6f14\u793a if \u7528\u6cd5\n    //  if x < 0 {\n    //      return sqrt(-x) + "i"\n    //  }\n    //  // \u8f93\u51fa\u5230\u5b57\u7b26\u4e32\n    //  return fmt.Sprint(math.Sqrt(x)) //1.4142135623730951 2i\n    // }\n\n    //if \u540e\u9762\u53ef\u4ee5\u8ddf\u77ed\u53e5\n    // if v := math.Pow(x, n); v < lim { // \u5982\u679c\u5c0f\u4e8e lim \u8fd4\u56de\u7ed3\u679c\n    //  return v\n    //   }\n\n    // for loop \u5faa\u73af\n    sum := 0\n    for i := 0; i < 10; i++ { // The init and post statements are optional.\u9996\u5c3e\u53ef\u9009\n        sum += i\n    }\n    fmt.Println(sum) // 45\n\n    // \u6ca1\u6709 while, \u53ea\u6709 for\n    for sum < 1000 {\n        sum += sum\n    }\n    fmt.Println(sum)\n\n    //Forever\n    // \u6b7b\u5faa\u73af\n    // for {\n    // }\n\n    // \u53e6\u4e00\u79cd\u6b7b\u5faa\u73af\n    // ch := make(chan int)\n    // do sth\n    // go goroutine\n    // <-ch // \u8fd9\u91cc\u4f1a\u963b\u585e\u4f4f\n\n\n    //\n    // switch \u5c31\u662f if else \u7684\u7b80\u4fbf\u5199\u6cd5\n    //Switch evaluation order: Switch cases evaluate cases from top to bottom, stopping when a case succeeds.\n    fmt.Print("Go runs on ")\n    switch os := runtime.GOOS; os { // \u8ddf if \u4e00\u6837, \u6761\u4ef6\u524d\u53ef\u8ddf \u4e00\u6761\u8bed\u53e5\n    case "darwin":\n        fmt.Println("OS X.")\n        // \u8fd9\u91cc\u65e0\u9700\u8ddfbreak\n    case "linux":\n        fmt.Println("Linux.")\n    // case f() // \u53ef\u4ee5\u662f\u51fd\u6570\n    default:\n        // freebsd, openbsd,\n        // plan9, windows...\n        fmt.Printf("%s.", os)\n    }\n\n    // switch \u4e0d\u5e26\u6761\u4ef6, \u76f8\u5f53\u4e8e switch true\n    // \u53ef\u4ee5\u7528\u6765\u4ee3\u66ff long if-then-else chains\n    t := time.Now()\n    switch {\n    case t.Hour() < 12:\n        fmt.Println("Good morning!")\n    case t.Hour() < 17:\n        fmt.Println("Good afternoon.")\n    default:\n        fmt.Println("Good evening.")\n    }\n\n')),(0,i.kt)("h3",{id:"6173-\u6807\u7b7e-goto-break"},"6.17.3. \u6807\u7b7e goto break"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n    //\n    //goto\n    //\u7528goto\u8df3\u8f6c \u5fc5\u987b\u8df3\u8f6c\u5230 \u5728\u5f53\u524d\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u6807\u7b7e\n    //\u6807\u7b7e\u540d\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\n    i := 0\nHere: //\u8fd9\u884c\u7684\u7b2c\u4e00\u4e2a\u8bcd\uff0c\u4ee5\u5192\u53f7\u7ed3\u675f\u4f5c\u4e3a\u6807\u7b7e\n    println("goto ->", i)\n    i++\n    if i < 3 {\n        goto Here //\u8df3\u8f6c\u5230Here\u53bb\n    }\n\n    \n')),(0,i.kt)("h3",{id:"6174-defer"},"6.17.4. defer"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'    //\n    // defer\n    // \u8bed\u6cd5\n    // defer xxxStatement\n    // \n    // defer xxxfunc(arguments)\n    //\u63a8\u8fdf\u6267\u884c, \u4f46\u662f arguments \u4f1a\u88ab\u7acb\u5373\u6b63\u5e38\u6267\u884c, \u4f46\u662f \u8fd9\u4e2afunc\u4f1a\u88ab\u63a8\u8fdf\u6267\u884c(until the surrounding function returns.)\n    // \n    // Stacking defers: \u63a8\u8fdf\u6267\u884c\u7684func\u90fd\u5b58\u50a8\u5230\u54ea\u91cc\u4e86?\n    //  \u90fd\u88ab\u5b58\u50a8\u5230\u4e00\u4e2a stack \u4e2d , \u9075\u5faa last-in-first-out order\n    // \n    // defer \u4ec5\u5728\u51fd\u6570\u8fd4\u56de\u65f6\u624d\u4f1a\u6267\u884c\uff0c\u5728\u5faa\u73af\u7684\u7ed3\u5c3e\u6216\u5176\u4ed6\u4e00\u4e9b\u6709\u9650\u8303\u56f4\u7684\u4ee3\u7801\u5185\u4e0d\u4f1a\u6267\u884c\n    // \n    deferParam := func() string {\n        fmt.Println("\u53c2\u6570\u88ab\u6267\u884c")\n        return "\u4e16\u754c"\n    }\n    defer fmt.Println("world")      // \u5148\u8fdb\u540e\u51fa\n    defer fmt.Println(deferParam()) // \u53c2\u6570\u7acb\u5373\u6267\u884c, \u5373deferParam() \u7acb\u5373\u8fd0\u884c\n\n    fmt.Println("hello")\n    //\u53c2\u6570\u88ab\u6267\u884c\n    // hello\n    // \u4e16\u754c\n    // world\n\n\n\n\nfunc main() {\n  for i := 0; i < 4; i++ {\n      // defer \u4e00\u6761\u8bed\u53e5, \u4e0d\u662f\u51fd\u6570\n    defer fmt.Print(i)\n  }\n}\n/*\n3\n2\n1\n0\n*/\n\nfor i := 0; i < 3; i++ {\n    // defer \u4e00\u4e2a\u81ea\u52a8\u6267\u884c\u7684\u95ed\u5305\n  defer func() {\n   fmt.Println(i) // \u6355\u83b7\u7684\u662f\u53d8\u91cf\u5730\u5740, \u5373 i \u7684\u5730\u5740, \u4e0d\u662f\u62f7\u8d1d, i \u6700\u7ec8\u53d8\u4e3a 3\n                // \u5faa\u73af\u7ed3\u675f, defer \u95ed\u5305\u5185\u7684\u8bed\u53e5\u5f00\u59cb\u6267\u884c\n                //\u6240\u6709\u7684\u5ef6\u8fdf\u51fd\u6570\u4f1a\u67e5\u770b\u76f8\u540c\u7684 i \uff0c\u5faa\u73af\u7ed3\u675f\uff08\u503c\u53d8\u6210\u4e863)\uff0c\u56e0\u6b64\u5b83\u4eec\u67e5\u770b\u5230\u7684\u90fd\u662f 3 \u3002\n\n  }()\n}\n/*\n3\n3\n3\n*/\n\nfor i := 0; i < 3; i++ {\n  defer func(i int) {\n   fmt.Println(i)\n  }(i)//\u76f4\u63a5\u5411\u5ef6\u8fdf\u51fd\u6570\u4f20\u53c2\u6570\u3002\n}\n/*\n2\n1\n0\n*/\n\n\n// \u83b7\u53d6 defer \u51fd\u6570\u7684\u8fd4\u56de\u503c\n\ntype Atype struct {}\n\nfunc (a Atype) Close() error {\n    return errors.New("error off close")\n}\n\nfunc TestDefer(t *testing.T) {\n\n    f := func(a Atype) (err error) {\n        defer func() {\n            // err \u53d8\u91cf\u8d4b\u503c\u4f1a\u521b\u5efa\u4e00\u4e2a\u5168\u65b0\u7684\u53d8\u91cf, \u4e0d\u518d\u662f\u8fd4\u56de\u503c\u5b9a\u4e49\u4e2d\u7684 err \u4e86, \u4e5f\u5c31\u662f "\u4f5c\u7528\u57df\u5c4f\u853d\u4e86\u53c2\u6570"\n            // \u82e5\u5e0c\u671b defer \u4e2d\u7684\u9519\u8bef\u88ab\u8fd4\u56de\u56de\u53bb, \u4f7f\u7528 = \u4e0d\u8981\u4f7f\u7528 :=\n            if err := a.Close(); err != nil {\n\n            }\n        }()\n        return\n    }\n    err := f(Atype{})\n    if err != nil {\n        log.Printf("%v\\n", err)\n    }\n}\n\n\n\n\n\n\n// \u4e0d\u8981\u5728\u5faa\u73af\u4e2d\u76f4\u63a5\u4f7f\u7528defer\nfor {\n    ...\n    defer xxx\n    //\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u6b7b\u5faa\u73af\uff0cdefer\u4ee3\u7801\u4e0d\u4f1a\u88ab\u6267\u884c\u5230\uff0c\u6240\u4ee5\u7533\u8bf7\u7684\u5185\u5b58\u5f97\u4e0d\u5230\u91ca\u653e\uff0c\u7136\u540e\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5360\u6ee1\u6574\u4e2a\u5185\u5b58\uff0c\u6b7b\u673a\n}\n\n// \u4f46\u662f\u53ef\u4ee5\u5c01\u88c5\u5230\u533f\u540d\u51fd\u6570\u4e2d\u4f7f\u7528\nfor {\n\n    ...\n\n    go func (){\n        conn, err := grpc.Dial(address, grpc.WithInsecure())\n        if err != nil {\n            log.Fatalf("did not connect: %v", err)\n        }\n        //\u8fd9\u91cc\u7684defer\u4f1a\u5728\u533f\u540d\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u5f97\u5230\u6267\u884c\uff0c\u6240\u4ee5\u8fd9\u6837\u5199\u5c31\u4e0d\u4f1a\u51fa\u73b0\u4e4b\u524d\u7684\u8d44\u6e90\u6ca1\u6709\u91ca\u653e\u7684\u60c5\u51b5\u3002\n        defer conn.Close()\n    }()\n}\n\n')),(0,i.kt)("h2",{id:"618-sort-\u5305"},"6.18. sort \u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\ntype Sorter interface {\n    Len() int\n    Less(i, j int) bool\n    Swap(i, j int)\n}\n\n// \u60f3\u5bf9\u4e00\u4e2a int \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6240\u6709\u5fc5\u987b\u505a\u7684\u4e8b\u60c5\u5c31\u662f\uff1a\u4e3a\u6570\u7ec4\u5b9a\u4e00\u4e2a\u7c7b\u578b\u5e76\u5728\u5b83\u4e0a\u9762\u5b9e\u73b0 Sorter \u63a5\u53e3\u7684\u65b9\u6cd5\ntype IntArray []int\nfunc (p IntArray) Len() int           { return len(p) }\nfunc (p IntArray) Less(i, j int) bool { return p[i] < p[j] }\nfunc (p IntArray) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }\n")),(0,i.kt)("h2",{id:"619-http"},"6.19. http"),(0,i.kt)("h3",{id:"6191-\u539f\u7406"},"6.19.1. \u539f\u7406"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u8def\u7531\u5982\u4f55\u5b9e\u73b0\u7684?\n// \u9ed8\u8ba4\u8def\u7531\u5668\u4e2d\u6709\u4e2a map[string]muxEntry, muxEntry {pattern, Handler}, Handler \u63a5\u53e3 \u5c31\u662f\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u7684\n// Handler\u5305\u542b\u4e00\u4e2a ServeHTTP(ResponseWriter, *Request) \u65b9\u6cd5, \u53ea\u6709\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5, \u624d\u662f Handler\n\n// \u6700\u5173\u952e\u7684\u70b9:\ntype HandlerFunc func(ResponseWriter, *Request) \n// ServeHTTP calls f(w, r).\nfunc (f HandlerFunc) ServeHTTP(w ResponseWriter, r *Request) {\n    f(w, r)\n}\n// \u8fd9\u6837, \u6211\u4eec\u5b9e\u73b0\u81ea\u5df1\u7684 Handler \u65f6\u5c31\u65e0\u9700\u624b\u52a8\u5b9e\u73b0 ServeHTTP \u65b9\u6cd5\u4e86\n")),(0,i.kt)("h3",{id:"6192-\u6848\u4f8b\u5ba2\u6237\u7aef\u8d85\u65f6\u53d6\u6d88"},"6.19.2. \u6848\u4f8b:\u5ba2\u6237\u7aef\u8d85\u65f6\u53d6\u6d88"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// server\u7aef\uff0c\u968f\u673a\u51fa\u73b0\u6162\u54cd\u5e94\n\nfunc indexHandler(w http.ResponseWriter, r *http.Request) {\n    number := rand.Intn(2)\n    if number == 0 {\n        time.Sleep(time.Second * 10) // \u8017\u65f610\u79d2\u7684\u6162\u54cd\u5e94\n        fmt.Fprintf(w, "slow response")\n        return\n    }\n    fmt.Fprint(w, "quick response")\n}\n\nfunc main() {\n    http.HandleFunc("/", indexHandler)\n    err := http.ListenAndServe(":8000", nil)\n    if err != nil {\n        panic(err)\n    }\n} \n\n\n///////////////////////////////////////////////////\n\n// \u5ba2\u6237\u7aef\n\ntype RespData struct {\n    resp *http.Response\n    err  error\n}\n\nfunc doCall(ctx context.Context) {\n    client := http.Client{\n        Transport: &http.Transport{\n            // \u8bf7\u6c42\u9891\u7e41\u53ef\u5b9a\u4e49\u5168\u5c40\u7684client\u5bf9\u8c61\u5e76\u542f\u7528\u957f\u94fe\u63a5\n            // \u8bf7\u6c42\u4e0d\u9891\u7e41\u4f7f\u7528\u77ed\u94fe\u63a5\n            DisableKeepAlives: true},\n    }\n\n    respChan := make(chan *RespData, 1)\n    req, err := http.NewRequest("GET", "http://127.0.0.1:8000/", nil)\n    if err != nil {\n        fmt.Printf("new requestg failed, err:%v\\n", err)\n        return\n    }\n    req = req.WithContext(ctx) // \u4f7f\u7528\u5e26\u8d85\u65f6\u7684ctx\u521b\u5efa\u4e00\u4e2a\u65b0\u7684client request\n    var wg sync.WaitGroup\n    wg.Add(1)\n    defer wg.Wait()\n    go func() {\n        resp, err := client.Do(req)\n        fmt.Printf("client.do resp:%v, err:%v\\n", resp, err)\n        rd := &RespData{\n            resp: resp,\n            err:  err,\n        }\n        respChan <- rd\n        wg.Done()\n    }()\n\n    select {\n    case <-ctx.Done():\n        //transport.CancelRequest(req)\n        fmt.Println("call api timeout")\n    case result := <-respChan:\n        fmt.Println("call server api success")\n        if result.err != nil {\n            fmt.Printf("call server api failed, err:%v\\n", result.err)\n            return\n        }\n        defer result.resp.Body.Close()\n        data, _ := ioutil.ReadAll(result.resp.Body)\n        fmt.Printf("resp:%v\\n", string(data))\n    }\n}\n\nfunc main() {\n    // \u5b9a\u4e49\u4e00\u4e2a100\u6beb\u79d2\u7684\u8d85\u65f6\n    ctx, cancel := context.WithTimeout(context.Background(), time.Millisecond*100)\n    defer cancel() // \u8c03\u7528cancel\u91ca\u653e\u5b50goroutine\u8d44\u6e90\n    doCall(ctx)\n}\n\n\n')),(0,i.kt)("h2",{id:"620-context"},"6.20. context"),(0,i.kt)("h3",{id:"6201-context\u6ce8\u610f\u5b9e\u73b0"},"6.20.1. context\u6ce8\u610f\u5b9e\u73b0"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Context\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u53ef\u4ee5\u653e\u5fc3\u7684\u5728\u591a\u4e2agoroutine\u4e2d\u4f20\u9012"),(0,i.kt)("li",{parentName:"ul"},"\u7ed9\u4e00\u4e2a\u51fd\u6570\u65b9\u6cd5\u4f20\u9012Context\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u4f20\u9012nil\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u4f20\u9012\u4ec0\u4e48\uff0c\u5c31\u4f7f\u7528context.TODO()"),(0,i.kt)("li",{parentName:"ul"},"\u4ee5Context\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u65b9\u6cd5\uff0c\u5e94\u8be5\u628aContext\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570")),(0,i.kt)("h3",{id:"6202-withcancel"},"6.20.2. WithCancel"),(0,i.kt)("p",null,"\u534f\u8c03\u5177\u6709\u5c42\u7ea7\u5173\u7cfb\u7684 goroutine, \u4e00\u65e6 goroutine \u6709\u5c42\u7ea7, \u5355\u7eaf\u4f7f\u7528 channel \u5c31\u65e0\u6cd5\u63a7\u5236\u8fd9\u4e9bgoroutine \u4e86"),(0,i.kt)("p",null,"\u7528\u4e8e\u4f18\u96c5\u7684\u901a\u77e5\u5b50 goroutine \u9000\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\nfunc main() {\n    con, cancel := context.WithCancel(context.Background())\n    // \u5728\u7a0b\u5e8f\u672b\u5c3e\u8c03\u7528 cancel, \u4f1a\u53d1\u9001\u4e00\u4e2a\u6807\u5fd7 \u5230 Done() channel \u91cc, \u8868\u793a\u7ed3\u675f\n    defer cancel()\n\n    ch := make(chan int)\n    n := 1\n    go func(con context.Context) {\n    LABEL:\n        for true {\n            select {\n            case ch <- n:\n                n++\n            case <-con.Done(): // done()\u8fd4\u56de\u4e00\u4e2a channel, \u8fd9\u91cc\u8868\u793a\u4ece\u4e2d\u63a5\u6536\u7ed3\u675f\u6807\u5fd7\n                break LABEL\n            }\n        }\n    }(con)\n\n    for n := range ch {\n        println(n)\n        if n == 3 {\n            break\n        }\n    }\n\n}\n\n")),(0,i.kt)("h3",{id:"6203-withdeadline"},"6.20.3. WithDeadline"),(0,i.kt)("p",null,"\u53ef\u4ee5\u4e3a \u5b50 goroutine \u8bbe\u7f6e\u4e00\u4e2a\u9000\u51fa\u622a\u6b62\u65f6\u95f4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc main() {\n    deadline, cancelFunc := context.WithDeadline(context.Background(), time.Now().Add(time.Millisecond*50))\n    // \u5c3d\u7ba1ctx\u4f1a\u8fc7\u671f\uff0c\u4f46\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\u8c03\u7528\u5b83\u7684cancel\u51fd\u6570\u90fd\u66f4\u4fdd\u9669\u4e00\u70b9\n    defer cancelFunc()\n\n    select {\n    case <-time.After(time.Second):\n        println("after 1 second")\n    case <-deadline.Done():  // \u4f1a\u8d70\u8fd9\u4e2a\u5206\u652f, \u56e0\u4e3a deadline \u53ea\u8bbe\u7f6e\u4e86 50 ms, \u6ca1\u5230\u4e00\u79d2\n        println("after 50ms")\n        println(deadline.Err()) // \u6253\u5370\u7684\u662f\u5730\u5740\n        fmt.Println(deadline.Err()) // \u6253\u5370\u5b57\u7b26\u4e32\u4fe1\u606f\n    }\n\n}\n')),(0,i.kt)("h3",{id:"6204-withtimeout"},"6.20.4. WithTimeout"),(0,i.kt)("p",null,"\u7c7b\u4f3c withDeadline, \u4e0d\u8fc7\u8bbe\u7f6e\u7684\u662f\u4e00\u4e2a\u65f6\u95f4\u6bb5, \u5230\u671f\u5b50 goroutine \u9000\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nvar waitG sync.WaitGroup\n\nfunc main() {\n    timeout, cancelFunc := context.WithTimeout(context.Background(), time.Second*3)\n    // \u52a0\u4e0a\u8fd9\u884c\u66f4\u4fdd\u9669\n    cancelFunc()\n    waitG.Add(1)\n\n    go func() {\n    LABEL:\n        for {\n            println("do something 1s")\n            time.Sleep(time.Second)\n\n            select {\n            case <-timeout.Done():\n                println("heha")\n                break LABEL\n            default:\n                // \u4e00\u5b9a\u8981\u52a0 default, \u5426\u5219 select \u8fd8\u662f\u4f1a\u548c range xxxChannel \u4e00\u6837\u963b\u585e\u4f4f, \u963b\u585e\u5728\u7b2c\u4e00\u4e2a case\n\n            }\n        }\n        waitG.Done()\n    }()\n\n    waitG.Wait()\n\n}\n\n')),(0,i.kt)("h3",{id:"6205-withvalue"},"6.20.5. WithValue"),(0,i.kt)("p",null,"\u5728\u7236\u5b50 goroutine \u4f20\u9012\u6570\u636e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nvar waitG sync.WaitGroup\n\ntype LogId string\n\nfunc main() {\n\n    timeout, cancelFunc := context.WithTimeout(context.Background(), time.Second*3)\n    defer cancelFunc()\n\n    id := LogId("logId")\n    valueCon := context.WithValue(timeout, id, "123")\n\n    waitG.Add(1)\n\n    go func() {\n        s, ok := valueCon.Value(id).(string)\n        if !ok {\n            fmt.Println("error of get log id value")\n        }\n    LABEL:\n        for {\n            println("do something 1s, log id value = " + s)\n            time.Sleep(time.Second)\n\n            select {\n            case <-valueCon.Done():\n                println("heha")\n                break LABEL\n            default:\n                // \u4e00\u5b9a\u8981\u52a0 default, \u5426\u5219 select \u8fd8\u662f\u4f1a\u548c range xxxChannel \u4e00\u6837\u963b\u585e\u4f4f, \u963b\u585e\u5728\u7b2c\u4e00\u4e2a case\n\n            }\n        }\n        waitG.Done()\n    }()\n\n\n    waitG.Wait()\n\n}\n')),(0,i.kt)("h2",{id:"621-io"},"6.21. io"),(0,i.kt)("h3",{id:"6211-\u6587\u4ef6\u64cd\u4f5c"},"6.21.1. \u6587\u4ef6\u64cd\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'/*\n// io \u5305\u91cc\u7684 Readers \u548c Writers \u90fd\u662f\u4e0d\u5e26\u7f13\u51b2\u7684\uff0c\n// bufio \u5305\u91cc\u63d0\u4f9b\u4e86\u5bf9\u5e94\u7684\u5e26\u7f13\u51b2\u7684\u64cd\u4f5c\uff0c\u5728\u8bfb\u5199 UTF-8 \u7f16\u7801\u7684\u6587\u672c\u6587\u4ef6\u65f6\u5b83\u4eec\u5c24\u5176\u6709\u7528\ntype Reader interface {\n    //\u8fd4\u56de\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u548c\u4e00\u4e2a error \u5bf9\u8c61\uff0c\u5982\u679c\u6ca1\u6709\u9519\u8bef\u53d1\u751f\u8fd4\u56de nil\uff0c\u5982\u679c\u5df2\u7ecf\u5230\u8fbe\u8f93\u5165\u7684\u5c3e\u7aef\uff0c\u4f1a\u8fd4\u56de io.EOF("EOF")\uff0c\n    Read(p []byte) (n int, err error)\n}\ntype Writer interface {\n    Write(p []byte) (n int, err error)\n}\n*/\nfunc ioDemo() {\n\n    // reader - The io package specifies the io.Reader interface\n    //\u6709\u4e00\u4e2a\u65b9\u6cd5: func (T) Read(b []byte) (n int, err error)\n    r := strings.NewReader("Hello, Reader!")\n\n    b := make([]byte, 8)\n    for {\n        // n \u8868\u793a\u8bfb\u53d6\u4e86\u591a\u5c11\u957f\u5ea6\n        n, err := r.Read(b)\n        fmt.Printf("n = %v err = %v b = %v\\n", n, err, b)\n        fmt.Printf("b[:n] = %q\\n", b[:n])\n        if err == io.EOF {\n            break\n        }\n    }\n    // print\n    /*\n        n = 8 err = <nil> b = [72 101 108 108 111 44 32 82]\n        b[:n] = "Hello, R"\n        n = 6 err = <nil> b = [101 97 100 101 114 33 32 82]\n        b[:n] = "eader!"\n        n = 0 err = EOF b = [101 97 100 101 114 33 32 82]\n        b[:n] = ""\n    */\n\n\n}\n\n')),(0,i.kt)("h3",{id:"6212-scanner"},"6.21.2. scanner"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'/*\nScanner\u662f\u6709\u7f13\u5b58\u7684\uff0c\u610f\u601d\u662fScanner\u5e95\u5c42\u7ef4\u62a4\u4e86\u4e00\u4e2aSlice\u7528\u6765\u4fdd\u5b58\u5df2\u7ecf\u4eceReader\u4e2d\u8bfb\u53d6\u7684\u6570\u636e\uff0c\n\ntype SplitFunc func(data []byte, atEOF bool) (advance int, token []byte, err error)\n\n    Scanner\u4f1a\u8c03\u7528\u6211\u4eec\u8bbe\u7f6eSplitFunc\uff0c\u5c06\u7f13\u51b2\u533a\u5185\u5bb9(data)\u548c\u662f\u5426\u5df2\u7ecf\u8f93\u5165\u5b8c\u4e86(atEOF)\u4ee5\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u7ed9SplitFunc\uff0c\u800cSplitFunc\u7684\u804c\u8d23\u5c31\u662f\u6839\u636e\u4e0a\u8ff0\u7684\u4e24\u4e2a\u53c2\u6570\u8fd4\u56de\u4e0b\u4e00\u6b21Scan\u9700\u8981\u524d\u8fdb\u51e0\u4e2a\u5b57\u8282(advance)\uff0c\u5206\u5272\u51fa\u6765\u7684\u6570\u636e(token)\uff0c\u4ee5\u53ca\u9519\u8bef(err)\u3002\n\n\n*/\nfunc main() {\n    input := "abcdefghijkl"\n    scanner := bufio.NewScanner(strings.NewReader(input))\n    split := func(data []byte, atEOF bool) (advance int, token []byte, err error) {\n        fmt.Printf("%t\\t%d\\t%s\\n", atEOF, len(data), data)\n        return 0, nil, nil // \u8fd4\u56de\u7684\u524d\u8fdb\u5b57\u8282\u6570\u59cb\u7ec8\u662f 0, \u6240\u4ee5\u6bcf\u6b21\u8f93\u51fa\u90fd\u662f\u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u8f93\u51fa\n    }\n    scanner.Split(split)\n    buf := make([]byte, 2) //\u7f13\u51b2\u533a\u7684\u521d\u59cb\u5927\u5c0f\u8bbe\u7f6e\u4e3a\u4e862\uff0c\u4e0d\u591f\u7684\u65f6\u5019\u4f1a\u6269\u5c55\u4e3a\u539f\u6765\u76842\u500d\uff0c\u6700\u5927\u4e3abufio.MaxScanTokenSize\n    scanner.Buffer(buf, bufio.MaxScanTokenSize)\n    for scanner.Scan() {\n        fmt.Printf("%s\\n", scanner.Text()) // \u56e0\u4e3a\u6bcf\u6b21\u5faa\u73af split \u51fd\u6570\u8fd4\u56de\u7684 token \u90fd\u662f "", \u8fd9\u91cc\u4e0d\u4f1a\u6253\u5370\u5185\u5bb9, \u53ea\u4f1a\u6253\u5370\u6362\u884c\u7b26\n    }\n}\n/*\nfalse 2 ab\nfalse 4 abcd\nfalse 8 abcdefgh\nfalse 12 abcdefghijkl\ntrue 12 abcdefghijkl\n*/\n\n// \u6807\u51c6\u5e93\u91cc\u7684ScanLines\u5b9e\u73b0\nfunc ScanLines(data []byte, atEOF bool) (advance int, token []byte, err error) {\n    // \u8868\u793a\u6211\u4eec\u5df2\u7ecf\u626b\u63cf\u5230\u7ed3\u5c3e\u4e86\n    if atEOF && len(data) == 0 {\n        return 0, nil, nil\n    }\n    // \u627e\u5230\\n\u7684\u4f4d\u7f6e\n    if i := bytes.IndexByte(data, \'\\n\'); i >= 0 {\n        // \u628a\u4e0b\u6b21\u5f00\u59cb\u8bfb\u53d6\u7684\u4f4d\u7f6e\u5411\u524d\u79fb\u52a8i + 1\u4f4d\n        return i + 1, dropCR(data[0:i]), nil\n    }\n    // \u8fd9\u91cc\u5904\u7406\u7684reader\u5185\u5bb9\u5168\u90e8\u8bfb\u53d6\u5b8c\u4e86\uff0c\u4f46\u662f\u5185\u5bb9\u4e0d\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u628a\u5269\u4f59\u7684\u6570\u636e\u8fd4\u56de\n    if atEOF {\n        return len(data), dropCR(data), nil\n    }\n    // \u8868\u793a\u73b0\u5728\u4e0d\u80fd\u5206\u5272\uff0c\u5411Reader\u8bf7\u6c42\u66f4\u591a\u7684\u6570\u636e\n    return 0, nil, nil\n}\n')),(0,i.kt)("h2",{id:"622-image"},"6.22. image"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n\n    // image -  Package image defines the Image interface\n    // https://tour.golang.org/methods/24\n    /*\n       \u6709\u4e09\u4e2a\u65b9\u6cd5:\n       ColorModel() color.Model\n       Bounds() Rectangle\n       At(x, y int) color.Color\n       **/\n")),(0,i.kt)("h2",{id:"623-channel-csp\u5e76\u53d1\u63a7\u5236"},"6.23. channel csp\u5e76\u53d1\u63a7\u5236"),(0,i.kt)("h3",{id:"6231-channel-\u4f7f\u7528"},"6.23.1. channel \u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// channel\n//\u65e0\u7f13\u51b2 channel \u662f\u5728\u591a\u4e2a goroutine\u4e4b\u95f4\u540c\u6b65\u7684\u597d\u5de5\u5177\n//goroutine\u8fd0\u884c\u5728\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64\u8bbf\u95ee\u5171\u4eab\u5185\u5b58\u5fc5\u987b\u505a\u597d\u540c\u6b65\n//\n/**\u8bed\u6cd5\n ch := make(chan int) // \u58f0\u660e&\u521b\u5efa\n c chan int                     // \u58f0\u660e\nch <- v    // Send v to channel ch.\nv := <-ch  // Receive from ch, \n// \u6216\u8005\nv, ok := <-ch\n\nclose(ch) // \u5173\u95ed channel\n*/\n// \u9ed8\u8ba4\u60c5\u51b5\u4e0b, channel\u63a5\u6536\u548c\u53d1\u9001\u6570\u636e\u90fd\u662f\u963b\u585e\u7684\n// \u6bd4\u5982, \u4efb\u4f55\u53d1\u9001\u52a8\u4f5c\uff08\u5982 ch<-5\uff09\u5c06\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u524d\u4e00\u4e2a\u6570\u636e\u88ab\u8bfb\u51fa; \u4efb\u4f55\u8bfb\u51fa\u52a8\u4f5c (\u5982 value := <-ch) \u5c06\u4f1a\u88ab\u963b\u585e, \u76f4\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\u88ab\u53d1\u9001\n//\u53d1\u9001\u548c\u63a5\u6536\u5757\u4f1a\u5728\u53e6\u4e00\u4fa7\u51c6\u5907\u597d\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c(\u5982\u679c\u5bf9\u65b9\u8fd8\u6ca1\u51c6\u5907\u597d, \u5c31 block)\u3002\u8fd9\u6837\u5c31\u5141\u8bb8goroutine\u5728\u6ca1\u6709\u663e\u5f0f\u9501\u6216\u6761\u4ef6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u540c\u6b65\n//\n//Buffered Channels \u7f13\u51b2 channel\n// \u8bed\u6cd5: ch := make(chan int, 100)\n//\n//sender \u53ef\u4ee5\u5173\u95ed channel \u901a\u8fc7 close(xxxChannel), \u8868\u793a\u4f20\u8f93\u7ec8\u6b62\n// receiver \u53ef\u4ee5\u68c0\u6d4b channel\u662f\u5426\u88ab\u5173\u95ed\u901a\u8fc7 v, ok := <-ch\n// \u53ea\u6709 sender \u53ef\u4ee5 close channel, \u800c\u4e0d\u662f receiver\n// channel\u4e0d\u662f \u6587\u4ef6, \u4e00\u822c\u65e0\u9700\u5173\u95ed, \u53ea\u6709 receiver \u9700\u8981\u88ab\u544a\u77e5 "\u6ca1\u6709\u66f4\u591a\u7684 value \u4f1a\u88ab\u4f20\u8fc7\u6765\u4e86" \u624d\u9700\u8981\u5173\u95ed(\u6bd4\u5982: \u7ec8\u7ed3 range channel)\nfunc channelDemo() {\n    sum := func(s []int, c chan int) {\n        sum := 0\n        for _, v := range s {\n            sum += v\n        }\n        c <- sum // send sum to c\n    }\n\n    ////\u5bf9\u5207\u7247\u4e2d\u7684\u6570\u5b57\u6c42\u548c\uff0c\u5728\u4e24\u4e2agoroutine\u4e4b\u95f4\u5206\u914d\u5de5\u4f5c\u3002\u4e24\u4e2agoroutine\u5b8c\u6210\u8ba1\u7b97\u540e\uff0c\u5b83\u4f1a\u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\n    s := []int{7, 2, 8, -9, 4, 0}\n\n    c := make(chan int)\n    go sum(s[:len(s)/2], c) // \u7528\u4e00\u4e2a goroutine \u8ba1\u7b97\u524d\u534a\u90e8\u5206\n    go sum(s[len(s)/2:], c) // \u8ba1\u7b97\u540e\u534a\u90e8\u5206\n    // receive from c ; x \u4e3a\u540e\u534a\u6bb5\u548c, y \u4e3a\u524d\u534a\u6bb5\u548c\n    x, y := <-c, <-c // \u963b\u585e\u5728\u8fd9\u91cc, \u76f4\u5230\u65b0\u5f00\u7684 goroutine \u5c06\u8ba1\u7b97\u7ed3\u6784\u585e\u5165 chan\n\n    fmt.Println(x, y, x+y) //-5 17 12\n\n    // \u7f13\u51b2\u961f\u5217\n    ch := make(chan int, 2)\n    ch <- 1\n    ch <- 2\n    fmt.Println(<-ch) //1\n    fmt.Println(<-ch) //2\n\n\n\n}\n')),(0,i.kt)("h3",{id:"6232-\u5229\u7528-nil-channel-\u5b9e\u73b0\u52a8\u6001-\u7684-select-case"},"6.23.2. \u5229\u7528 nil channel \u5b9e\u73b0\u52a8\u6001 \u7684 select case"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n    // \u4f7f\u7528\u4e86\u503c\u4e3a nil \u7684 channel, \u5373 \u5728\u4e00\u4e2a\u503c\u4e3a nil \u7684 channel \u4e0a\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u5c06\u6c38\u4e45\u963b\u585e\uff1a\n    // \u5229\u7528\u8fd9\u4e2a\u6b7b\u9501\u7684\u7279\u6027, \u5728 select \u4e2d\u52a8\u6001\u7684\u6253\u5f00\u548c\u5173\u95ed case \u8bed\u53e5\u5757\n    inCh := make(chan int)\n    outCh := make(chan int)\n\n    go func() {\n        var in <-chan int = inCh // in \u662f <-chan int \u7c7b\u578b, \u53ea\u80fd\u5f80\u5916\u62ff\n        var out chan<- int  // out \u53ea\u80fd\u5f80\u91cc\u585e\n        var val int\n\n        for {\n            select {\n            case out <- val:\n                println("--------")\n                out = nil\n                in = inCh\n            case val = <-in:\n                println("++++++++++")\n                out = outCh\n                in = nil\n            }\n        }\n    }()\n\n    go func() {\n        for r := range outCh {\n            fmt.Println("Result: ", r)\n        }\n    }()\n\n    time.Sleep(0)\n    inCh <- 1\n    inCh <- 2\n    time.Sleep(3 * time.Second)\n')),(0,i.kt)("h3",{id:"6233-\u8fed\u4ee3-channel-\u5143\u7d20"},"6.23.3. \u8fed\u4ee3 channel \u5143\u7d20"),(0,i.kt)("h4",{id:"62331-\u4f7f\u7528-for-range"},"6.23.3.1. \u4f7f\u7528 for range"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n    //\n    // range \u5faa\u73af\u8bfb\u53d6 channel\n    //\n    // \u88ab select \u66ff\u4ee3\u4e86, \u56e0\u4e3a range channel\u4e0d\u662f\u5f02\u6b65\u7684, \u662f\u987a\u5e8f\u7684\u4f1a\u963b\u585e,\n    //\u800c\u4e14 \u5982\u679cchannel\u4e2d\u6ca1\u6709\u6570\u636e\u6d41\u52a8\u4e86, \u4f1a\u4e00\u76f4\u963b\u585e, \u800c select \u63d0\u4f9b\u4e86 default \u9009\u9879\n    //\n    fibonacci := func(n int, c chan int) {\n        x, y := 0, 1\n        for i := 0; i < n; i++ {\n            c <- x\n            x, y = y, x+y\n        }\n        close(c) // \u5173\u95ed channel\n    }\n\n    c1 := make(chan int, 10)\n    go fibonacci(cap(c1), c1)\n    for i := range c1 { //// range xxxChan \u4f1a\u5faa\u73af\u63a5\u6536 channel\u4e2d\u7684\u5143\u7d20, \u76f4\u5230 sender \u5173\u95ed channel\n        fmt.Print(i, " ") //0 1 1 2 3 5 8 13 21 34\n    }\n    println()\n\n')),(0,i.kt)("h4",{id:"62332-\u4f7f\u7528-for-select"},"6.23.3.2. \u4f7f\u7528 for select"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\n    //\n    //\n    // select -------- \u5faa\u73af\u8bfb\u53d6 channel \u66f4\u597d\u7684\u9009\u62e9\n    //\n    //select \u7528\u4e8e\u9009\u62e9\u4e0d\u540c\u7c7b\u578b\u7684\u901a\u8baf\n    // \u901a\u8fc7select\u53ef\u4ee5\u76d1\u542c\u591a\u4e2achannel\u4e0a\u7684\u6570\u636e\u6d41\u52a8\n    // select\u9ed8\u8ba4\u662f\u963b\u585e\u7684\uff0c\u6bcf\u4e2acase\u7684IO\u4e8b\u4ef6\u90fd\u662f\u963b\u585e\u7684, \u53ea\u6709\u5f53\u76d1\u542c\u7684channel\u4e2d\u6709\u53d1\u9001\u6216\u63a5\u6536\u53ef\u4ee5\u8fdb\u884c\u65f6\u624d\u4f1a\u8fd0\u884c\n    //\u5f53\u591a\u4e2achannel\u90fd\u51c6\u5907\u597d\u7684\u65f6\u5019\uff0cselect\u662f\u968f\u673a\u7684\u9009\u62e9\u4e00\u4e2a\u6267\u884c\u7684\n    // default\u5c31\u662f\u5f53\u76d1\u542c\u7684channel\u90fd\u6ca1\u6709\u51c6\u5907\u597d\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u6267\u884c\uff08select\u4e0d\u518d\u963b\u585e\u7b49\u5f85channel\uff09\n    fibonacci1 := func(c, quit chan int) {\n        x, y := 1, 1\n        for {\n            select {\n            case c <- x: // \u5982\u679c\u6210\u529f\u5c06 x \u585e\u5165 c \u4e2d\n                x, y = y, x+y\n            case <-quit: // \u5982\u679c\u63a5\u53d7\u5230\u7ed3\u675f\u6807\u5fd7\n                fmt.Println("quit")\n                return\n            default: // \u5f53\u6240\u6709 channel block\u65f6\u6267\u884c, \n            //\u4e00\u5b9a\u8981\u52a0 default, \u5426\u5219 select \u8fd8\u662f\u4f1a\u548c range xxxChannel \u4e00\u6837\u963b\u585e\u4f4f, \u963b\u585e\u5728\u7b2c\u4e00\u4e2a case\n                fmt.Println(">>> all channel block")\n            }\n\n        }\n    }\n    cha := make(chan int)\n    quit := make(chan int)\n    go func() {\n        for i := 0; i < 10; i++ {\n            fmt.Println(<-cha)\n        }\n        quit <- 0 // \u53d1\u51fa\u7ed3\u675f\u6807\u5fd7\n    }()\n    fibonacci1(cha, quit)\n\n\n\n    // \u4e00\u4e2a\u6c38\u8fdc\u65e0\u6cd5\u7ed3\u675f\u7684 goroutine\nfunc TestWaitGroup(t *testing.T) {\n    var wg sync.WaitGroup\n    wg.Add(1)\n    defer func() {\n        println("wait")\n        wg.Wait()\n    }()\n    go func() {\n        for true {\n            select {\n            // \u6c38\u8fdc\u65e0\u6cd5\u7ed3\u675f, \u56e0\u4e3a\u5b58\u5728 default \u5206\u652f, select \u53d8\u4e3a\u975e\u963b\u585e, \u4f1a\u6709\u591a\u6b21\u5faa\u73af,\u6bcf\u6b21for\u5faa\u73af, \u90fd\u4f1a\u65b0\u5efa\u4e00\u4e2a after channel, \u6c38\u8fdc\u4e0d\u4f1a timeout\n            // \u6b63\u786e\u505a\u6cd5\u662f\u5c06 time.After(time.Second*2) \u63d0\u5230 for \u5faa\u73af\u5916\u90e8, \u6216\u8005\u5c06 default \u6ce8\u91ca, \u53d8 select \u4e3a\u963b\u585e\u5f0f\n            case <-time.After(time.Second*2):\n                println("timeout")\n                wg.Done()\n            default:\n                \n            }\n        }\n    }()\n}\n\n}\n')),(0,i.kt)("h3",{id:"6234-\u4f7f\u7528\u56de\u8c03\u800c\u4e0d\u662f\u8fd4\u56de-channel"},"6.23.4. \u4f7f\u7528\u56de\u8c03\u800c\u4e0d\u662f\u8fd4\u56de channel"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u904d\u5386\u76ee\u5f55, \u5bf9\u6bcf\u4e2a\u6587\u4ef6\u6267\u884c\u67d0\u4e2a\u64cd\u4f5c\n\n// \u65b9\u5f0f 1: \u67e5\u51fa\u6240\u6709\u6587\u4ef6\u540d\n//      \u95ee\u9898:\u53ef\u80fd\u4f1a\u963b\u585e\u5f88\u957f\u65f6\u95f4, \u5206\u914d\u5927\u91cf\u5185\u5b58\nfunc ListDirectory(dir string) ([]string, error)\n// \u65b9\u5f0f 2: \u8fd4\u56de\u4e00\u4e2a chan, \u5143\u7d20\u662f\u6587\u4ef6\u540d\n//      \u95ee\u9898: \u904d\u5386\u76ee\u5f55\u53ef\u80fd\u51fa\u73b0\u5f02\u5e38, \u8c03\u7528\u8005\u65e0\u6cd5\u77e5\u9053\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u662f\u4e0d\u662f\u5168\u7684\n//      \u95ee\u9898: \u8c03\u7528\u8005\u5fc5\u987b\u6301\u7eed\u4ece\u901a\u9053\u4e2d\u8bfb\u53d6\uff0c\u76f4\u5230\u5b83\u88ab\u5173\u95ed\uff0c\u56e0\u4e3a\u8fd9\u662f\u8c03\u7528\u8005\u77e5\u9053\u6b64\u901a\u9053\u7684\u662f\u5426\u505c\u6b62\u7684\u552f\u4e00\u65b9\u5f0f\nfunc ListDirectory(dir string) chan string\n// \u65b9\u5f0f 3: \u4f20\u9012\u56de\u8c03\u51fd\u6570 (\u8fd9\u5c31\u662f filepath.WalkDir \u51fd\u6570\u7684\u5de5\u4f5c\u65b9\u5f0f)\nfunc ListDirectory(dir string, fn func(string))\n\n\n")),(0,i.kt)("h3",{id:"6235-\u4ec5\u9700\u4efb\u610f\u4efb\u52a1\u5b8c\u6210-\u5229\u7528-buffered-channel-\u5b9e\u73b0"},"6.23.5. \u4ec5\u9700\u4efb\u610f\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5fc5\u987b\u4f7f\u7528\u5e26\u7f13\u5b58\u7684 channel, \n// \u56e0\u4e3a\u5982\u679c\u4e0d\u5e26\u7f13\u5b58, \u6b64\u65f6\u6709\u4e2a task \u5148\u5b8c\u6210\u4e86, \u653e\u5165\u6570\u636e\u5230 chan, \u90a3\u4e48 channel \u4e2d\u7684\u6570\u636e\u53ea\u8981\u8fd8\u6ca1\u88ab\u62ff\u8d70, , \u5176\u4ed6\u4efb\u52a1goroutine \u8fd8\u662f\u4f1a\u963b\u585e\u5728\u90a3\u91cc\u4e0d\u4f1a\u7ed3\u675f, \u8fd9\u4f1a\u9020\u6210\u8d44\u6e90\u7684\u6d6a\u8d39\n\n\nfunc MultiTask() string {\n    runTask := func(i int) string {\n        time.Sleep(time.Second)\n        return fmt.Sprintf("result from %d", i)\n    }\n\n    ret := make(chan string) // bad\n    //ret := make(chan string, 3) // good\n\n    taskNum := 3\n    for i := 0; i < taskNum; i++ {\n        go func(i int) {\n            ret <- runTask(i)\n        }(i)\n    }\n    return <-ret\n}\n\nfunc TestMethod1(t *testing.T) {\n    t.Logf("before task run, goroutine count: %v\\n", runtime.NumGoroutine())//before task run, goroutine count: 2\n    t.Log(MultiTask())//result from 0\n    time.Sleep(time.Second) // \u505a\u4e00\u4e9b\u5176\u4ed6\u8017\u65f6\u4efb\u52a1\n    t.Logf("after: %v\\n", runtime.NumGoroutine())//after: 4, \u8bc1\u660e\u5373\u4f7f\u6709\u4e00\u4e2a goroutine \u5b8c\u6210\u4efb\u52a1\u4e86, \u4f46\u662f\u5269\u4f59 goroutine \u8fd8\u6ca1\u7ec8\u7ed3\n}\n\n')),(0,i.kt)("h3",{id:"6236-\u9700\u8981\u6240\u6709\u4efb\u52a1\u5b8c\u6210-\u5229\u7528-buffered-channel-\u5b9e\u73b0"},"6.23.6. \u9700\u8981\u6240\u6709\u4efb\u52a1\u5b8c\u6210-\u5229\u7528 buffered channel \u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u4f7f\u7528 waitGroup \u4e5f\u53ef\u4ee5\u5b9e\u73b0, \u8fd9\u91cc\u4f7f\u7528 channel \u5b9e\u73b0\nfunc MultiTask() string {\n    runTask := func(i int) string {\n        time.Sleep(time.Second)\n        return fmt.Sprintf("result from %d", i)\n    }\n\n    ret := make(chan string) // bad\n    //ret := make(chan string, 3) // good\n\n    taskNum := 3\n    for i := 0; i < taskNum; i++ {\n        go func(i int) {\n            ret <- runTask(i)\n        }(i)\n    }\n\n    resp := ""\n    for i:=0, i<taskNum; i++ {\n        resp += <-ret + "\\n"\n    }\n\n    return resp\n}\n')),(0,i.kt)("h3",{id:"6237-\u5229\u7528-close-channel-\u5b9e\u73b0\u5e7f\u64ad"},"6.23.7. \u5229\u7528 close channel \u5b9e\u73b0\u5e7f\u64ad"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n// \u82e5\u53d1\u9001\u8005\u5173\u95ed\u4e86 channel, \u6240\u6709\u7684\u63a5\u6536\u8005\u5728\u8fd9\u91cc\u4f1a \u7acb\u523b\u4ece\u963b\u585e\u6062\u590d\u8fd4\u56de, \u4e14v\u4e3a\u96f6\u503c,ok\u4e3a false (\u53ef\u4ee5\u5b9e\u73b0\u5e7f\u64ad\u673a\u5236)\n// v, ok := <-ch\n// \n// close(ch) // \u5173\u95ed channel\n")),(0,i.kt)("h3",{id:"6238-\u5bf9\u8c61\u6c60"},"6.23.8. \u5bf9\u8c61\u6c60"),(0,i.kt)("h4",{id:"62381-\u5229\u7528-no-buffered-channel-\u5b9e\u73b0\u5bf9\u8c61\u6c60"},"6.23.8.1. \u5229\u7528 no buffered channel \u5b9e\u73b0\u5bf9\u8c61\u6c60"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5bf9\u9700\u8981\u7ecf\u5e38\u4f7f\u7528\u8fc7\u7684\u5bf9\u8c61\u8fdb\u884c\u7f13\u5b58, \u9632\u6b62\u56de\u6536\n// \n//      \n\ntype Obj struct{}\ntype ObjPool struct {\n    bufChan chan *Obj\n}\nfunc New(numOfObj int) *ObjPool {\n    ret := ObjPool{}\n    ret.bufChan = make(chan *Obj, numOfObj)\n    for i := 0; i < numOfObj; i++ {\n        ret.bufChan <- &Obj{}\n    }\n    return &ret\n}\nfunc (o *ObjPool) GetObj(d time.Duration) (*Obj, error) {\n    select {\n    case obj:=<-o.bufChan:\n        return obj, nil\n    case <-time.After(d):\n        return nil, errors.New("timeout")\n    }\n}\nfunc (o ObjPool) ReleaseObj(obj *Obj) error {\n    select {\n    case o.bufChan <- obj:\n        return nil\n    default:\n        return errors.New("overflow")\n    }\n}\n\n\n\n')),(0,i.kt)("h4",{id:"62382-syncpool-\u5bf9\u8c61\u7f13\u5b58"},"6.23.8.2. sync.pool \u5bf9\u8c61\u7f13\u5b58"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5bf9\u8c61\u4f1a\u8fd9\u6837\u987a\u5e8f\u83b7\u53d6\n// 1. \u9996\u5148\u5c1d\u8bd5\u4ece\u5f53\u524d processor \u7684\u79c1\u6709\u5bf9\u8c61\u83b7\u53d6 (\u534f\u7a0b\u5b89\u5168)\n// 2. \u79c1\u6709\u5bf9\u8c61\u4e0d\u5b58\u5728, \u5c1d\u8bd5\u4ece processor \u7684\u5171\u4eab\u6c60\u83b7\u53d6 (\u534f\u7a0b\u4e0d\u5b89\u5168,\u4f1a\u52a0\u9501)\n// 3. \u5982\u679c\u5171\u4eab\u6c60\u7a7a\u7684, \u5c1d\u8bd5\u53bb\u5176\u4ed6 processor \u5171\u4eab\u6c60\u83b7\u53d6\n// 4. \u82e5\u6240\u6709\u5b50\u6c60\u90fd\u662f\u7a7a\u7684, \u8c03\u7528\u7528\u6237\u6307\u5b9a\u7684 New \u51fd\u6570\u8fd4\u56de\u65b0\u5bf9\u8c61\n\n// \u7279\u70b9:\n// - \u65e0\u6cd5\u5f53\u505a\u5bf9\u8c61\u6c60\u7528, \u56e0\u4e3a gc \u4f1a\u6e05\u9664 \u7f13\u5b58\u7684\u5bf9\u8c61, \u6240\u4ee5\u5bf9\u8c61\u7684\u7f13\u5b58\u6709\u6548\u671f\u662f\u4e0b\u4e00\u6b21 gc \u4e4b\u524d (\u53ef\u4f7f\u7528 runtime.GC() \u89e6\u53d1 gc \u6765\u9a8c\u8bc1)\n// - sync.Pool \u662f\u53ef\u4f38\u7f29\u7684\uff0c\u9ad8\u8d1f\u8f7d\u65f6\u4f1a\u52a8\u6001\u6269\u5bb9\uff0c\u5b58\u653e\u5728\u6c60\u4e2d\u7684\u5bf9\u8c61\u5982\u679c\u4e0d\u6d3b\u8dc3\u4e86\u4f1a\u88ab\u81ea\u52a8\u6e05\u7406, \u5176\u5927\u5c0f\u4ec5\u53d7\u9650\u4e8e\u5185\u5b58\u7684\u5927\u5c0f\n// - \u4e5f\u662f\u5e76\u53d1\u5b89\u5168\u7684\uff0c\n\n\n// \u4f7f\u7528 \u573a\u666f: \n// - \u7528\u4e8e\u5b58\u50a8\u90a3\u4e9b\u88ab\u5206\u914d\u4e86\u4f46\u662f\u6ca1\u6709\u88ab\u4f7f\u7528\uff0c\u800c\u672a\u6765\u53ef\u80fd\u4f1a\u4f7f\u7528\u7684\u503c\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e0d\u7528\u518d\u6b21\u7ecf\u8fc7\u5185\u5b58\u5206\u914d\uff0c\u53ef\u76f4\u63a5\u590d\u7528\u5df2\u6709\u5bf9\u8c61\uff0c\u51cf\u8f7b GC \u7684\u538b\u529b\n\n// \u6807\u51c6\u5e93\u4e2d\u7684\u4f8b\u5b50\n// \u4f8b\u5982 fmt \u548c encoding/json\n\n\n// \u793a\u4f8b:\n// bad\ntype Student struct {\n    Name   string\n    Age    int32\n    Remark [1024]byte\n}\nvar buf, _ = json.Marshal(Student{Name: "Geektutu", Age: 25})\nfunc unmarsh() {\n    // \u5f53\u7a0b\u5e8f\u5e76\u53d1\u5ea6\u975e\u5e38\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u77ed\u65f6\u95f4\u5185\u9700\u8981\u521b\u5efa\u5927\u91cf\u7684\u4e34\u65f6\u5bf9\u8c61\u3002\u800c\u8fd9\u4e9b\u5bf9\u8c61\u662f\u90fd\u662f\u5206\u914d\u5728\u5806\u4e0a\u7684\uff0c\u4f1a\u7ed9 GC \u9020\u6210\u5f88\u5927\u538b\u529b\n    stu := &Student{}\n    json.Unmarshal(buf, stu)\n}\n\n// good\n// \u6240\u4ee5\u6700\u597d\u901a\u8fc7 pool \u83b7\u53d6\nvar studentPool = sync.Pool{\n    New: func() interface{} { \n        return new(Student) \n    },\n}\nstu := studentPool.Get().(*Student)\njson.Unmarshal(buf, stu)\n// \u5bf9\u8c61\u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u5bf9\u8c61\u6c60\nstudentPool.Put(stu)\n')),(0,i.kt)("h3",{id:"6239-\u4f18\u96c5\u5173\u95ed-channel"},"6.23.9. \u4f18\u96c5\u5173\u95ed channel"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\n\u60c5\u5f62\u4e00\uff1aM\u4e2a\u63a5\u6536\u8005\u548c\u4e00\u4e2a\u53d1\u9001\u8005\uff0c\u53d1\u9001\u8005\u901a\u8fc7\u5173\u95ed\u7528\u6765\u4f20\u8f93\u6570\u636e\u7684\u901a\u9053\u6765\u4f20\u9012\u53d1\u9001\u7ed3\u675f\u4fe1\u53f7\u3002\n\u60c5\u5f62\u4e8c\uff1a\u4e00\u4e2a\u63a5\u6536\u8005\u548cN\u4e2a\u53d1\u9001\u8005\uff0c\u6b64\u552f\u4e00\u63a5\u6536\u8005\u901a\u8fc7\u5173\u95ed\u4e00\u4e2a\u989d\u5916\u7684\u4fe1\u53f7\u901a\u9053\u6765\u901a\u77e5\u53d1\u9001\u8005\u4e0d\u8981\u518d\u53d1\u9001\u6570\u636e\u4e86\u3002\n\u60c5\u5f62\u4e09\uff1aM\u4e2a\u63a5\u6536\u8005\u548cN\u4e2a\u53d1\u9001\u8005\uff0c\u5b83\u4eec\u4e2d\u7684\u4efb\u4f55\u534f\u7a0b\u90fd\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u4e2d\u95f4\u8c03\u89e3\u534f\u7a0b\u5e2e\u5fd9\u53d1\u51fa\u505c\u6b62\u6570\u636e\u4f20\u9001\u7684\u4fe1\u53f7\u3002\n\n\u6216\u8005:\n\u4f7f\u7528 sync.Once \u6216\u4e92\u65a5\u9501(sync.Mutex)\u786e\u4fdd channel \u53ea\u88ab\u5173\u95ed\u4e00\u6b21\u3002\n// \ntype MyChannel struct {\n    C    chan T\n    once sync.Once\n}\nfunc NewMyChannel() *MyChannel {\n    return &MyChannel{C: make(chan T)}\n}\nfunc (mc *MyChannel) SafeClose() {\n    mc.once.Do(func() {\n        close(mc.C)\n    })\n}\n*/\n")),(0,i.kt)("h2",{id:"624-goroutine"},"6.24. goroutine"),(0,i.kt)("h3",{id:"6241-goroutine\u539f\u7406"},"6.24.1. goroutine\u539f\u7406"),(0,i.kt)("h4",{id:"62411-\u5982\u4f55\u7406\u89e3\u534f\u7a0b"},"6.24.1.1. \u5982\u4f55\u7406\u89e3\u534f\u7a0b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://yushuangqi.com/blog/2017/golang-mian-shi-ti-da-an-yujie-xi.html?from=groupmessage&isappinstalled=0"},"\u76f8\u5173\u9762\u8bd5\u9898")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/wdliu/p/9272220.html"},"https://www.cnblogs.com/wdliu/p/9272220.html")),(0,i.kt)("p",null,"\u6bcf\u4e2a system thread \u5bf9\u5e94\u4e00\u4e2a golang \u5b9e\u73b0\u7684\u534f\u7a0b\u5904\u7406\u5668 processor, processor \u4f1a\u968f\u673a\u5728\u5173\u8054\u7684\u534f\u7a0b\u961f\u5217\u91cc\u6311\u9009\u534f\u7a0b\u6267\u884c (\u5982\u679cprocessor \u4e00\u76f4\u5728\u6267\u884c\u67d0\u4e2a goroutine, \u6709\u4e2a\u5b88\u62a4\u7ebf\u7a0b\u4f1a\u5bf9\u6bcf\u4e2a processor \u5b8c\u6210\u7684\u534f\u7a0b\u7684\u6570\u91cf\u8fdb\u884c\u8bb0\u5f55, \u4e00\u65e6\u53d1\u73b0\u4e00\u76f4\u6ca1\u53d8\u5316, \u4f1a...)"),(0,i.kt)("p",null,"\u591a\u534f\u7a0b\u53ef\u4ee5\u6709\u6548\u5229\u7528\u5355\u6838\u5fc3\u8ba1\u7b97\uff0c\u907f\u514d\u8fc7\u591a\u7684 IO \u7b49\u5f85 , \u56e0\u4e3a io \u7b49\u5f85\u65f6, \u8fd9\u4e2a\u5355\u6838cpu\u53ef\u4ee5\u53bb\u8fd0\u884c\u5176\u4ed6\u534f\u7a0b;\n\u591a\u8fdb\u7a0b\uff08\u7ebf\u7a0b\uff09\u53ef\u4ee5\u6709\u6548\u5229\u7528\u591a\u6838\u5fc3\u8ba1\u7b97\uff0c\u907f\u514d\u5355\u6838\u8d1f\u8f7d\u8fc7\u9ad8\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684 cpu"),(0,i.kt)("p",null," \u534f\u7a0b\u5176\u8c03\u5ea6\u8fc7\u7a0b\u7c7b\u4f3c cpu \u5bf9\u4e8e\u7cfb\u7edf\u7ebf\u7a0b\u7684\u8c03\u5ea6, \u53ea\u4e0d\u8fc7\u8c03\u5ea6\u4eba\u4ece CPU \u6362\u4e3a\u4e86\u7a0b\u5e8f\u5458, \u6240\u4ee5\u534f\u7a0b\u4e5f\u79f0\u4e3a\u7528\u6237\u6001\u7ebf\u7a0b"),(0,i.kt)("p",null,"\u4e3e\u4e2a\u4e0d\u6070\u5f53\u7684\u4f8b\u5b50\uff0c\u4f60\u662f\u4e2a\u6253\u5de5\u4eba\uff0c\u4f60\u6bcf\u5929\u5de5\u4f5c 8 \u5c0f\u65f6\uff0c\u8981\u505a\u7684\u4e8b\u60c5\u6709\u7f16\u8bd1\u7a0b\u5e8f A \u3001\u7f16\u8bd1\u7a0b\u5e8f B \u3001\u5e2e\u8001\u677f\u7aef\u8336\u5012\u6c34\u3001\u6536\u53d1\u90ae\u4ef6\u3002"),(0,i.kt)("p",null,"\u4f60\u76f8\u5f53\u4e8e\u4e00\u4e2a\u7ebf\u7a0b\uff08\u6216\u8fdb\u7a0b\uff09\uff0c\u8001\u677f\u4ea4\u7ed9\u4f60\u7684\u5de5\u4f5c\u76f8\u5f53\u4e8e\u7cfb\u7edf\u5206\u914d\u7ebf\u7a0b\u7684\u4efb\u52a1\u3002"),(0,i.kt)("p",null,"\u800c\u534f\u7a0b\u5c31\u662f\uff0c\u4f60\u81ea\u5df1\u600e\u4e48\u53bb\u66f4\u9ad8\u6548\u5b8c\u6210\u81ea\u5df1\u7684\u4efb\u52a1\u3002\u5982\u679c\u6ca1\u6709\u534f\u7a0b\uff0c\u5c31\u76f8\u5f53\u4e8e\u201c\u7f16\u8bd1 A->\u7f16\u8bd1 B->\u5e2e\u8001\u677f\u7aef\u8336\u5012\u6c34->\u6536\u53d1\u90ae\u4ef6\u201d\uff0c\u800c\u534f\u7a0b\u5c31\u76f8\u5f53\u4e8e\u201c\u7f16\u8bd1 A \u5f00\u59cb->\u8dd1\u53bb\u7ed9\u8001\u677f\u5012\u6c34->\u6536\u53d1\u90ae\u4ef6->\u7f16\u8bd1 B \u5f00\u59cb->\u7f16\u8bd1 A \u7ed3\u675f->\u7f16\u8bd1 B \u7ed3\u675f\u201d\uff0c\u53ef\u4ee5\u8282\u7701\u4f60\u5927\u91cf\u4f60\u5750\u5728\u7535\u8111\u524d\u4f46\u662f\u6ca1\u6709\u5b9e\u9645\u5de5\u4f5c\u7684\u65f6\u95f4\u53bb\u505a\u5176\u4ed6\u4e8b\u60c5\u3002\uff08\u5bf9\u5e94\u534f\u7a0b\u4e2d\u5c31\u662f\uff0c\u6bd4\u5982\u9047\u5230 HTTP API \u8bf7\u6c42\uff0c\u9700\u8981 0.5 \u79d2\uff0c\u53ef\u4ee5\u8ba9\u8fd9\u4e2a\u8fdb\u7a0b\u7ee7\u7eed\u5148\u5e72\u522b\u7684\uff0c\u8bf7\u6c42\u540e\u56de\u6765\u7ee7\u7eed\u5f53\u524d\u5904\u7406\u5b8c HTTP API \u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\uff09\u3002"),(0,i.kt)("h4",{id:"62412-\u548c\u7ebf\u7a0b\u5bf9\u6bd4"},"6.24.1.2. \u548c\u7ebf\u7a0b\u5bf9\u6bd4"),(0,i.kt)("p",null,"\u548c\u7ebf\u7a0b\u7684\u5f02\u540c\uff1a"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u521b\u5efa\u65f6\u9ed8\u8ba4\u7684 stack \u5927\u5c0f:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u534f\u7a0b\u521d\u59cb\u5185\u5b58\u5360\u7528\u8fdc\u5c0f\u4e8e\u7ebf\u7a0b, 2k "),(0,i.kt)("li",{parentName:"ul"},"java thread \u4e3a 1M"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u548c\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u5bf9\u5e94\u5173\u7cfb:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"java thread \u662f 1:1"),(0,i.kt)("li",{parentName:"ul"},"\u534f\u7a0b\u662f m:n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u7ebf\u7a0b\u8fdb\u7a0b\u90fd\u662f\u540c\u6b65\u673a\u5236\uff0c\u800c\u534f\u7a0b\u5219\u662f\u5f02\u6b65")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u534f\u7a0b\u80fd\u4fdd\u7559\u4e0a\u4e00\u6b21\u8c03\u7528\u65f6\u7684\u72b6\u6001\uff0c\u6bcf\u6b21\u8fc7\u7a0b\u91cd\u5165\u65f6\uff0c\u5c31\u76f8\u5f53\u4e8e\u8fdb\u5165\u4e0a\u4e00\u6b21\u8c03\u7528\u7684\u72b6\u6001\uff0c \u6240\u4ee5\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u975e\u5e38\u5feb")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u591a\u4e2a\u7ebf\u7a0b\u76f8\u5bf9\u72ec\u7acb\uff0c\u6709\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"\u5207\u6362\u53d7\u7cfb\u7edf\u63a7\u5236"),"\uff1b\u800c\u534f\u7a0b\u4e5f\u76f8\u5bf9\u72ec\u7acb\uff0c\u6709\u81ea\u5df1\u7684\u4e0a\u4e0b\u6587\uff0c\u4f46\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"\u5176\u5207\u6362\u7531\u7a0b\u5e8f\u5458\u624b\u52a8\u63a7\u5236"),"\uff0c\u5982: \u82e5\u4ece\u5f53\u524d\u534f\u7a0b\u5207\u6362\u5230\u5176\u4ed6\u534f\u7a0b\u5219\u7531\u5f53\u524d\u534f\u7a0b\u6765\u63a7\u5236\u3002\u56e0\u6b64\uff0c\u6ca1\u6709\u7ebf\u7a0b\u5207\u6362\u7684\u5f00\u9500")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u534f\u7a0b\u4e0d\u9700\u8981\u591a\u7ebf\u7a0b\u7684\u9501\u673a\u5236\uff0c\u56e0\u4e3a\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u4e5f\u4e0d\u5b58\u5728\u540c\u65f6\u5199\u53d8\u91cf\u51b2\u7a81\uff0c\u5728\u534f\u7a0b\u4e2d\u63a7\u5236\u5171\u4eab\u8d44\u6e90\u4e0d\u52a0\u9501\uff0c\u53ea\u9700\u8981\u5224\u65ad\u72b6\u6001\u5c31\u597d\u4e86"))),(0,i.kt)("p",null,"\u56e0\u4e3a\u534f\u7a0b\u662f\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\uff0c\u90a3\u600e\u4e48\u5229\u7528\u591a\u6838CPU\u5462\uff1f\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u591a\u8fdb\u7a0b+\u534f\u7a0b\uff0c\u65e2\u5145\u5206\u5229\u7528\u591a\u6838\uff0c\u53c8\u5145\u5206\u53d1\u6325\u534f\u7a0b\u7684\u9ad8\u6548\u7387\uff0c\u53ef\u83b7\u5f97\u6781\u9ad8\u7684\u6027\u80fd"),(0,i.kt)("h3",{id:"6242-\u534f\u7a0b\u5728\u5185\u5b58\u5c42\u9762\u7684\u5b9e\u73b0"},"6.24.2. \u534f\u7a0b\u5728\u5185\u5b58\u5c42\u9762\u7684\u5b9e\u73b0"),(0,i.kt)("p",null,"\u534f\u7a0b\u662f\u53ef\u4ee5\u88ab\u6682\u505c/\u6062\u590d\u7684\u51fd\u6570, \u6240\u4ee5\u6682\u505c\u65f6\u9700\u8981\u5c06\u51fd\u6570\u4e0a\u4e0b\u6587(\u5728\u51fd\u6570\u6808\u533a)\u590d\u5236\u4e00\u4efd\u4fdd\u5b58\u5230\u4e00\u4e2a\u5b89\u5168\u7684\u5730\u65b9 (\u5806)"),(0,i.kt)("p",null,"\u6216\u8005\u8fdb\u4e00\u6b65, \u7701\u6389\u590d\u5236\u7684\u6b65\u9aa4, \u4e3a\u534f\u7a0b\u5206\u914d\u7a7a\u95f4\u65f6, \u76f4\u63a5\u5728\u5806\u4e2d\u5206\u914d"),(0,i.kt)("h3",{id:"6243-goroutine\u57fa\u672c\u4f7f\u7528"},"6.24.3. goroutine\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n//Goroutines\n//go routine \u8f7b\u91cf\u7ea7\u7684thread, \u5341\u51e0\u4e2agoroutine\u53ef\u80fd\u4f53\u73b0\u5728\u5e95\u5c42\u5c31\u662f\u4e94\u516d\u4e2a\u7ebf\u7a0b\n//Go\u8bed\u8a00\u5185\u90e8\u5e2e\u4f60\u5b9e\u73b0\u4e86\u8fd9\u4e9bgoroutine\u4e4b\u95f4\u7684\u5185\u5b58\u5171\u4eab // \u4e5f\u5c31\u662f\u8bf4 goroutine\u8fd0\u884c\u5728\u76f8\u540c\u7684\u5730\u5740\u7a7a\u95f4\n// \u8bed\u6cd5: go f(x, y, z)\nfunc goroutines() {\n    say := func(s string) {\n        for i := 0; i < 5; i++ {\n            time.Sleep(100 * time.Millisecond)\n            fmt.Println(s)\n        }\n    }\n\n    go say("world")\n    say("hello")\n\n    /* runtime\u5305\u4e2d\u6709\u51e0\u4e2a\u5904\u7406goroutine\u7684\u51fd\u6570:\n       Goexit\n\n       \u9000\u51fa\u5f53\u524d\u6267\u884c\u7684goroutine\uff0c\u4f46\u662fdefer\u51fd\u6570\u8fd8\u4f1a\u7ee7\u7eed\u8c03\u7528\n\n       Gosched\n\n       \u8ba9\u51fa\u5f53\u524dgoroutine\u7684\u6267\u884c\u6743\u9650\uff0c\u8c03\u5ea6\u5668\u5b89\u6392\u5176\u4ed6\u7b49\u5f85\u7684\u4efb\u52a1\u8fd0\u884c\uff0c\u5e76\u5728\u4e0b\u6b21\u67d0\u4e2a\u65f6\u5019\u4ece\u8be5\u4f4d\u7f6e\u6062\u590d\u6267\u884c\u3002\n\n       NumCPU\n\n       \u8fd4\u56de CPU \u6838\u6570\u91cf\n\n       NumGoroutine\n\n       \u8fd4\u56de\u6b63\u5728\u6267\u884c\u548c\u6392\u961f\u7684\u4efb\u52a1\u603b\u6570\n\n       GOMAXPROCS\n\n       \u7528\u6765\u8bbe\u7f6e\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u7684CPU\u6838\u6570\u7684\u6700\u5927\u503c\uff0c\u5e76\u8fd4\u56de\u4e4b\u524d\u7684\u503c\u3002\n\n    */\n}\n\n')),(0,i.kt)("h3",{id:"6244-goroutine-\u6355\u83b7\u5916\u90e8\u53d8\u91cf"},"6.24.4. goroutine \u6355\u83b7\u5916\u90e8\u53d8\u91cf"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc main() {\n    // \u9650\u5236\u5355\u6838\n    runtime.GOMAXPROCS(1)\n    wg := sync.WaitGroup{}\n    wg.Add(20)\n    for i := 0; i < 10; i++ {\n        go func() {\n            //golang \u4e2d\u533f\u540d\u51fd\u6570\u6355\u83b7\u5916\u90e8\u53d8\u91cf\u6355\u83b7\u7684\u662f"\u5f15\u7528"\n            fmt.Println("A: ", i) //i\u6253\u5370\u51fa\u6765\u662f\u6700\u7ec8\u503c 10,\n            wg.Done()\n        }()\n    }\n    for i := 0; i < 10; i++ {\n        go func(i int) {\n            fmt.Println("B: ", i) // \u901a\u8fc7\u53c2\u6570\u4f20\u9012\u8fdb\u6765, \u503c\u62f7\u8d1d\n            wg.Done()\n        }(i)\n    }\n    fmt.Println("C")\n    wg.Wait()\n}\n/*\nB:  9\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nA:  10\nB:  0\nB:  1\nB:  2\nB:  3\nB:  4\nB:  5\nB:  6\nB:  7\nB:  8\n*/\n\n\nfunc main() {\n    var a int = 10\n    wg := sync.WaitGroup{}\n    wg.Add(1)\n    go func() {\n        fmt.Printf("&a = %v\\n", &a)\n        wg.Done()\n    }()\n\n    fmt.Printf("&a = %v\\n", &a)\n    wg.Wait()\n}\n// \u5730\u5740\u76f8\u540c\n/*\n&a = 0xc000126010\n&a = 0xc000126010\n*/\n\n\nfunc main() {\n    runtime.GOMAXPROCS(1)\n    wg := sync.WaitGroup{}\n    wg.Add(20)\n    for i := 0; i < 10; i++ {\n        go func() {\n            fmt.Println("A: ", i)\n            wg.Done()\n        }()\n        \n        runtime.Gosched()\n    }\n    for i := 0; i < 10; i++ {\n        go func(i int) {\n            fmt.Println("B: ", i)\n            wg.Done()\n        }(i)\n    }\n    fmt.Println("C")\n    wg.Wait()\n}\n//\u56e0\u4e3a, runtime.Gosched() \u4e3b\u52a8\u8ba9\u51fa\u4e86CPU\u65f6\u95f4\u7247\u7ed9\u521a\u521a\u521b\u5efa\u7684goroutine\n/*\nA:  0\nA:  1\nA:  2\nA:  3\nA:  4\nA:  5\nA:  6\nA:  7\nA:  8\nA:  9\nhello\nB:  9\nB:  0\nB:  1\nB:  2\nB:  3\nB:  4\nB:  5\nB:  6\nB:  7\nB:  8\n*/\n')),(0,i.kt)("h3",{id:"6245-\u4f7f\u7528select-\u5904\u7406\u8d85\u65f6"},"6.24.5. \u4f7f\u7528select \u5904\u7406\u8d85\u65f6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'//\n    //// \u4f7f\u7528 select  \u5904\u7406 goroutine \u8d85\u65f6\n    //\n    ch1 := make(chan int)\n    ch2 := make(chan bool)\n    go func() {\n        for {\n            select {\n            case v := <-ch1:\n                println(v)\n\n            case <-time.After(2 * time.Second): // \u7b49\u5f85 2s\u540e\u6267\u884c\n                //time.After(2 * time.Second) \u8fd4\u56de\u4e00\u4e2achannel, \u7b49\u5f852s \u540e\u585e\u5165\u6570\u636e\n                println("timeout")\n                ch2 <- true\n                break\n            }\n        }\n    }()\n    <-ch2 // block until 2s later\n')),(0,i.kt)("h3",{id:"6246-\u4f18\u96c5\u9000\u51fa-goroutine"},"6.24.6. \u4f18\u96c5\u9000\u51fa goroutine"),(0,i.kt)("h4",{id:"62461-\u901a\u8fc7\u5168\u5c40\u53d8\u91cf-waitgroup"},"6.24.6.1. \u901a\u8fc7\u5168\u5c40\u53d8\u91cf waitGroup"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u901a\u8fc7\u5168\u5c40\u53d8\u91cf\n\n//\u7b49\u5f85\u7ec4, \u7c7b\u4f3cjava \u7684 countdownLunch\nvar wg sync.WaitGroup\n\nfunc main() {\n    fmt.Println("start")\n\n    // \u8bbe\u7f6e\u7b49\u5f85\u5012\u6570\u7684\u4efb\u52a1\u6570\u91cf\n    wg.Add(1)\n\n    go work()\n    time.Sleep(time.Second * 3)\n    exit = true\n\n    wg.Wait()\n\n    fmt.Println("over")\n}\n\n//\u63a7\u5236\u662f\u5426\u9000\u51fa\nvar exit bool\n\nfunc work() {\n    // \u4efb\u52a1\u7ed3\u675f\u9700\u8981\u7ed9 wg \u4e00\u4e2a\u7ed3\u675f\u6807\u5fd7\n    defer wg.Done()\n    for true {\n        fmt.Println("working...")\n        time.Sleep(time.Second)\n        if exit {\n            break\n        }\n    }\n}\n\n')),(0,i.kt)("h4",{id:"62462-\u901a\u8fc7-channel-\u7684\u65b9\u5f0f"},"6.24.6.2. \u901a\u8fc7 channel \u7684\u65b9\u5f0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u901a\u8fc7 channel\n\n//\u7b49\u5f85\u7ec4, \u7c7b\u4f3cjava \u7684 countdownLunch\nvar wg sync.WaitGroup\n\nfunc main() {\n    // \u66f4\u597d\u7684\u65b9\u5f0f\u662f make(chan struct{}, 1) // \u4e0d\u5360\u7a7a\u95f4\n    var ch = make(chan bool, 1)\n            //\u5efa\u8bae\u521b\u5efa\u6709\u7f13\u51b2\u533a\u7684 channel, \u9632\u6b62\u7236 goroutine \u7ed3\u675f\u9020\u6210\u5b50 goroutine \u963b\u585e\u5728 channel \u53d1\u9001\u4e0a\n\n    fmt.Println("start")\n\n    wg.Add(1)\n\n    go work(ch)\n    time.Sleep(time.Second * 3)\n    ch <- true\n\n    wg.Wait()\n\n    fmt.Println("over")\n}\n\nfunc work(ch <-chan bool) {\n    defer wg.Done()\n\nLABEL:\n    for true {\n        select {\n        case <-ch:\n            //do not use "break", "break" can only break "select", cannot break "for"\n            //return\n            \n            // or use break\u6807\u7b7e\n            //return\n            break LABEL\n        default:\n            fmt.Println("working...")\n            time.Sleep(time.Second)\n        }\n\n    }\n}\n\n')),(0,i.kt)("h4",{id:"62463-\u901a\u8fc7-context-\u5b98\u65b9\u63a8\u8350"},"6.24.6.3. \u901a\u8fc7 context \u5b98\u65b9\u63a8\u8350"),(0,i.kt)("p",null,"\u5b98\u65b9\u5e2e\u6211\u4eec\u521b\u5efa\u4e86channel: make(chan struct{}), \u7a7a struct \u4ec5\u4ec5\u662f\u4e00\u4e2a\u6807\u8bc6, \u8f93\u5165\u8fdb channel \u65f6, \u4f20 struct{}{}"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u901a\u8fc7 context\n\n\n//\u7b49\u5f85\u7ec4, \u7c7b\u4f3cjava \u7684 countdownLunch\nvar wg sync.WaitGroup\n\nfunc main() {\n    con, cancel := context.WithCancel(context.Background())\n\n    fmt.Println("start")\n\n    wg.Add(1)\n\n    go work(con)\n\n    time.Sleep(time.Second * 3)\n    cancel()\n\n    wg.Wait()\n\n    fmt.Println("over")\n}\n\nfunc work(con context.Context) {\n    defer wg.Done()\n\nLABEL:\n    for true {\n        fmt.Println("working...")\n        time.Sleep(time.Second)\n\n        select {\n        case <-con.Done():\n            break LABEL\n        default:\n        }\n\n    }\n}\n\n\n')),(0,i.kt)("h3",{id:"6247-\u9650\u5236\u5e76\u53d1\u6570\u91cf"},"6.24.7. \u9650\u5236\u5e76\u53d1\u6570\u91cf"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Jeffail/tunny"},"https://github.com/Jeffail/tunny"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/panjf2000/ants"},"https://github.com/panjf2000/ants")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func main() {\n    // sync.WaitGroup \u5e76\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f8b\u5982 http \u670d\u52a1, \u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u8ba9 main \u4e0d\u8981\u9000\u51fa\n    var wg sync.WaitGroup\n    // \u4fdd\u8bc1\u5e76\u53d1\u4efb\u52a1\u6700\u591a\u4e3a 3 , \u4e5f\u5c31\u662f\u5b9e\u73b0\u534f\u7a0b\u6c60\u7684\u6548\u679c\n    ch := make(chan struct{}, 3)\n    for i := 0; i < 10; i++ {\n        ch <- struct{}{} // \u82e5\u7f13\u5b58\u533a\u6ee1\uff0c\u5219\u963b\u585e\n        wg.Add(1)\n        go func(i int) {\n            defer wg.Done()\n            log.Println(i)\n            time.Sleep(time.Second)\n            <-ch\n        }(i)\n    }\n    wg.Wait()\n}\n")),(0,i.kt)("h3",{id:"6248-\u6848\u4f8b-\u5206\u6bb5\u6267\u884c\u4efb\u52a1\u7684\u9000\u51fa"},"6.24.8. \u6848\u4f8b-\u5206\u6bb5\u6267\u884c\u4efb\u52a1\u7684\u9000\u51fa"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5c06\u4efb\u52a1\u62c6\u5206\u4e3a\u591a\u6bb5\uff0c\u53ea\u68c0\u6d4b\u7b2c\u4e00\u6bb5\u662f\u5426\u8d85\u65f6\uff0c\u82e5\u6ca1\u6709\u8d85\u65f6\uff0c\u540e\u7eed\u4efb\u52a1\u7ee7\u7eed\u6267\u884c\uff0c\u8d85\u65f6\u5219\u7ec8\u6b62\n// (\u597d\u5904: \u8d85\u65f6\u540e\u5373\u65f6\u9000\u51fa\uff0c\u907f\u514d goroutine \u65e0\u7528\u7684\u6267\u884c\u8fc7\u591a\uff0c\u6d6a\u8d39\u8d44\u6e90)\n\nfunc do2phases(phase1, done chan bool) {\n    time.Sleep(time.Second) // \u7b2c 1 \u6bb5\n    select {\n    case phase1 <- true:\n    default:\n        return\n    }\n    time.Sleep(time.Second) // \u7b2c 2 \u6bb5\n    done <- true\n}\n\nfunc timeoutFirstPhase() error {\n    phase1 := make(chan bool)\n    done := make(chan bool)\n    go do2phases(phase1, done)\n    select {\n    case <-phase1:\n        <-done\n        fmt.Println("done")\n        return nil\n    case <-time.After(time.Millisecond):\n        return fmt.Errorf("timeout")\n    }\n}\n\nfunc Test2phasesTimeout(t *testing.T) {\n    for i := 0; i < 1000; i++ {\n        timeoutFirstPhase()\n    }\n    time.Sleep(time.Second * 3)\n    t.Log(runtime.NumGoroutine())\n}\n')),(0,i.kt)("h2",{id:"625-\u9501-\u5171\u4eab\u5185\u5b58\u4e0b\u7684\u5e76\u53d1\u63a7\u5236"},"6.25. \u9501 \u5171\u4eab\u5185\u5b58\u4e0b\u7684\u5e76\u53d1\u63a7\u5236"),(0,i.kt)("h3",{id:"6251-mutex-\u4e92\u65a5\u9501"},"6.25.1. Mutex \u4e92\u65a5\u9501"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n//\n///////////////////////////////////////////\n//\n// sync.Mutex ---------- \u52a0\u9501\n//\n// \u5b9e\u73b0 goroutine \u4e92\u65a5, \u6709\u4e24\u4e2a\u65b9\u6cd5: Lock(), Unlock()\n//sync.Mutex\u4e00\u65e6\u88ab\u9501\u4f4f\uff0c\u5176\u5b83\u7684Lock()\u64cd\u4f5c\u5c31\u65e0\u6cd5\u518d\u83b7\u53d6\u5b83\u7684\u9501\uff0c\u53ea\u6709\u901a\u8fc7Unlock()\u91ca\u653e\u9501\u4e4b\u540e\u624d\u80fd\u901a\u8fc7Lock()\u7ee7\u7eed\u83b7\u53d6\u9501\u3002\n// SafeCounter is safe to use concurrently.\ntype SafeCounter struct {\n    v   map[string]int\n    mux sync.Mutex\n}\n\n// Inc increments the counter for the given key.\nfunc (c *SafeCounter) Inc(key string) {\n    c.mux.Lock() // \u5f00\u59cb\u9501\u5b9a\n    // Lock so only one goroutine at a time can access the map c.v.\n    c.v[key]++\n    c.mux.Unlock() // \u91ca\u653e\u9501\n}\n\n// Value returns the current value of the counter for the given key.\nfunc (c *SafeCounter) Value(key string) int {\n    c.mux.Lock() // \u5f00\u59cb\u9501\u5b9a\n    // Lock so only one goroutine at a time can access the map c.v.\n    defer c.mux.Unlock() // \u91ca\u653e\u9501\n    return c.v[key]\n}\n\nfunc syncMutexDemo() {\n    c := SafeCounter{v: make(map[string]int)} // mux \u65e0\u9700\u521d\u59cb\u5316\n    for i := 0; i < 1000; i++ {\n        go c.Inc("somekey")\n    }\n    time.Sleep(time.Second)\n    fmt.Println(c.Value("somekey"))\n}\n\n')),(0,i.kt)("h3",{id:"6252-\u9501\u7684\u516c\u5e73\u6027"},"6.25.2. \u9501\u7684\u516c\u5e73\u6027"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\u5728\u6b63\u5e38\u72b6\u6001\u4e0b\uff0c\u6240\u6709\u7b49\u5f85\u9501\u7684 goroutine \u6309\u7167FIFO\u987a\u5e8f\u7b49\u5f85, \u5982\u679c\u4e00\u4e2a\u7b49\u5f85\u7684 goroutine \u8d85\u8fc7 1ms \u6ca1\u6709\u83b7\u53d6\u9501\uff0c\u90a3\u4e48\u5b83\u5c06\u4f1a\u628a\u9501\u8f6c\u53d8\u4e3a\u9965\u997f\u6a21\u5f0f\n\n\u5728\u9965\u997f\u6a21\u5f0f\u4e0b\uff0c\u9501\u7684\u6240\u6709\u6743\u5c06\u4ece unlock \u7684 goroutine \u76f4\u63a5\u4ea4\u7ed9\u4ea4\u7ed9\u7b49\u5f85\u961f\u5217\u4e2d\u7684\u7b2c\u4e00\u4e2a\u3002\u65b0\u6765\u7684 goroutine \u5c06\u4e0d\u4f1a\u5c1d\u8bd5\u53bb\u83b7\u5f97\u9501\n\n\u5982\u679c\u4e00\u4e2a\u7b49\u5f85\u7684 goroutine \u83b7\u53d6\u4e86\u9501\uff0c\u5e76\u4e14\u6ee1\u8db3\u4e00\u4ee5\u4e0b\u5176\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u6761\u4ef6\uff1a(1)\u5b83\u662f\u961f\u5217\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\uff1b(2)\u5b83\u7b49\u5f85\u7684\u65f6\u5019\u5c0f\u4e8e1ms\u3002\u5b83\u4f1a\u5c06\u9501\u7684\u72b6\u6001\u8f6c\u6362\u4e3a\u6b63\u5e38\u72b6\u6001\n*/\n")),(0,i.kt)("h3",{id:"6253-rwmutex\u8bfb\u5199\u9501"},"6.25.3. RWMutex\u8bfb\u5199\u9501"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n///////////////////////////////////////////\n//\u8bfb\u5199\u9501\n// \u89e3\u51b3\u8bfb\u591a\u5199\u5c11\u65f6\u7684\u6027\u80fd\u95ee\u9898\n//\n//RWMutex\u662f\u57fa\u4e8eMutex\u7684\uff0c\u5728Mutex\u7684\u57fa\u7840\u4e4b\u4e0a\u589e\u52a0\u4e86\u8bfb\u3001\u5199\u7684\u4fe1\u53f7\u91cf\uff0c\u5e76\u4f7f\u7528\u4e86\u7c7b\u4f3c\u5f15\u7528\u8ba1\u6570\u7684\u8bfb\u9501\u6570\u91cf\n// \u53ef\u4ee5\u540c\u65f6\u7533\u8bf7\u591a\u4e2a\u8bfb\u9501\n// \u6709\u8bfb\u9501\u65f6\u7533\u8bf7\u5199\u9501\u5c06\u963b\u585e\uff0c\u6709\u5199\u9501\u65f6\u7533\u8bf7\u8bfb\u9501\u5c06\u963b\u585e\n// \u53ea\u8981\u6709\u5199\u9501\uff0c\u540e\u7eed\u7533\u8bf7\u8bfb\u9501\u548c\u5199\u9501\u90fd\u5c06\u963b\u585e\n//\n//func (rw *RWMutex) Lock()\n// func (rw *RWMutex) Unlock() //Lock()\u548cUnlock()\u7528\u4e8e\u7533\u8bf7\u548c\u91ca\u653e\u5199\u9501, \u5982\u679c\u4e0d\u5b58\u5728\u5199\u9501\uff0c\u5219Unlock()\u5f15\u53d1panic\n//\n// func (rw *RWMutex) RLock()\n// func (rw *RWMutex) RUnlock() // RLock()\u548cRUnlock()\u7528\u4e8e\u7533\u8bf7\u548c\u91ca\u653e\u8bfb\u9501  // \u4e00\u6b21RUnlock()\u64cd\u4f5c\u53ea\u662f\u5bf9\u8bfb\u9501\u6570\u91cf\u51cf1\uff0c\u5373\u51cf\u5c11\u4e00\u6b21\u8bfb\u9501\u7684\u5f15\u7528\u8ba1\u6570, \u5982\u679c\u4e0d\u5b58\u5728\u8bfb\u9501\uff0c\u5219RUnlock()\u5f15\u53d1panic\n//\n// func (rw *RWMutex) RLocker() Locker  // RLocker()\u7528\u4e8e\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86Lock()\u548cUnlock()\u65b9\u6cd5\u7684Locker\u63a5\u53e3\n\n\n")),(0,i.kt)("h3",{id:"6254-synconce\u53ea\u5141\u8bb8\u6267\u884c\u4e00\u6b21"},"6.25.4. sync.Once\u53ea\u5141\u8bb8\u6267\u884c\u4e00\u6b21"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'////////////////////////////////////\n//\n//sync.Once \u6267\u884c\u4e00\u6b21\n// \u4f5c\u7528\u4e0e\u5305\u7684 init \u51fd\u6570\u7c7b\u4f3c, \u4f46\u662f\u66f4\u5b89\u5168\u65b9\u4fbf, \u53ef\u4ee5\u5728\u4ee3\u7801\u7684\u4efb\u610f\u4f4d\u7f6e\u521d\u59cb\u5316\u548c\u8c03\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u5ef6\u8fdf\u5230\u4f7f\u7528\u65f6\u518d\u6267\u884c\uff0c\u5e76\u53d1\u573a\u666f\u4e0b\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\n//\n// \u4f7f\u7528:\n// var once sync.Once\n        // once.Do(fn1)// fn1\u6267\u884c\u4e00\u6b21\n        // once.Do(fn1) // \u518d do \u4e00\u6b21, \u4e0d\u4f1a\u6267\u884c\n/*\n\u539f\u7406\u5b9e\u73b0: \n    - \u6709\u4e2a\u6807\u5fd7\u6765\u5224\u65ad\u53d8\u91cf\u662f\u5426\u5df2\u521d\u59cb\u5316\u8fc7, \n    \n        \u4e3a\u4ec0\u4e48\u5c06 done \u7f6e\u4e3a Once \u7684\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff1adone \u5728\u70ed\u8def\u5f84\u4e2d\uff0cdone \u653e\u5728\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u80fd\u591f\u51cf\u5c11 CPU \u6307\u4ee4\n\n        \u4e3a\u4ec0\u4e48\u653e\u5728\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u5c31\u80fd\u591f\u51cf\u5c11\u6307\u4ee4\u5462\uff1f\u56e0\u4e3a\u7ed3\u6784\u4f53\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u7684\u5730\u5740\u548c\u7ed3\u6784\u4f53\u7684\u6307\u9488\u662f\u76f8\u540c\u7684\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u76f4\u63a5\u5bf9\u7ed3\u6784\u4f53\u7684\u6307\u9488\u89e3\u5f15\u7528\u5373\u53ef\u3002\u5982\u679c\u662f\u5176\u4ed6\u7684\u5b57\u6bb5\uff0c\u9664\u4e86\u7ed3\u6784\u4f53\u6307\u9488\u5916\uff0c\u8fd8\u9700\u8981\u8ba1\u7b97\u4e0e\u7b2c\u4e00\u4e2a\u503c\u7684\u504f\u79fb(calculate offset)\n\n    - \u9700\u8981\u4e92\u65a5\u9501\u6765\u5b9e\u73b0\n*/\n// \u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\nfunc TestSingle(t *testing.T) {\n    type Single struct {\n    }\n\n    var once sync.Once\n    f := func() *Single {\n        var ret *Single\n        once.Do(func() {\n            println("create")\n            ret = &Single{}\n        })\n        return ret\n    }\n\n    for i := 0; i < 5; i++ {\n        single := f()\n        fmt.Println(single)\n    }\n    time.Sleep(time.Second)\n}\n/*\ncreate\n&{}\n<nil>\n<nil>\n<nil>\n<nil>\n\n*/\n\n\n// \u6848\u4f8b: \u8bfb\u53d6\u5168\u5c40\u914d\u7f6e\u6587\u4ef6\ntype Config struct {\n    Server string\n    Port   int64\n}\n\nvar (\n    once   sync.Once\n    config *Config\n)\n\nfunc ReadConfig() *Config {\n    once.Do(func() {\n        var err error\n        config = &Config{Server: os.Getenv("TT_SERVER_URL")}\n        config.Port, err = strconv.ParseInt(os.Getenv("TT_PORT"), 10, 0)\n        if err != nil {\n            config.Port = 8080 // default port\n        }\n        log.Println("init config")\n    })\n    return config\n}\n')),(0,i.kt)("h3",{id:"6255-synccond-\u591a\u4e2a\u89c2\u5bdf\u8005\u7b49\u5f85\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210-\u5e7f\u64ad"},"6.25.5. sync.Cond \u591a\u4e2a\u89c2\u5bdf\u8005\u7b49\u5f85\u67d0\u4e2a\u4efb\u52a1\u5b8c\u6210 \u5e7f\u64ad"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'/*\n\u4f5c\u7528: \u5f53\u5171\u4eab\u8d44\u6e90\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u901a\u77e5\u88ab\u4e92\u65a5\u9501\u963b\u585e\u7684\u591a\u4e2a goroutine\n\n    sync.Cond \u7ecf\u5e38\u7528\u5728\u591a\u4e2a goroutine \u7b49\u5f85\uff0c\u4e00\u4e2a goroutine \u901a\u77e5\uff08\u4e8b\u4ef6\u53d1\u751f\uff09\u7684\u573a\u666f\u3002\u5982\u679c\u662f\u4e00\u4e2a\u901a\u77e5\uff0c\u4e00\u4e2a\u7b49\u5f85\uff0c\u4f7f\u7528\u4e92\u65a5\u9501\u6216 channel \u5c31\u80fd\u641e\u5b9a\u4e86\n\n\u5b9e\u73b0:\u57fa\u4e8e\u4e92\u65a5\u9501/\u8bfb\u5199\u9501\n\n// \u5982\u679c\u81ea\u5df1\u5b9e\u73b0: \u9700\u8981\u6709\u4e2a\u5168\u5c40\u7684\u53d8\u91cf\u6765\u6807\u5fd7\u7b2c\u4e00\u4e2a\u534f\u7a0b\u6570\u636e\u662f\u5426\u63a5\u53d7\u5b8c\u6bd5\uff0c\u5269\u4e0b\u7684\u534f\u7a0b\uff0c\u53cd\u590d\u68c0\u67e5\u8be5\u53d8\u91cf\u7684\u503c\uff0c\u76f4\u5230\u6ee1\u8db3\u8981\u6c42\u3002\u6216\u8005\u521b\u5efa\u591a\u4e2a channel\uff0c\u6bcf\u4e2a\u534f\u7a0b\u963b\u585e\u5728\u4e00\u4e2a channel \u4e0a\uff0c\u7531\u63a5\u6536\u6570\u636e\u7684\u534f\u7a0b\u5728\u6570\u636e\u63a5\u6536\u5b8c\u6bd5\u540e\uff0c\u9010\u4e2a\u901a\u77e5\n\n\nfunc NewCond(l Locker) *Cond  \u521b\u5efa Cond \u5b9e\u4f8b\n    \u6bcf\u4e2a Cond \u5b9e\u4f8b\u90fd\u4f1a\u5173\u8054\u4e00\u4e2a\u9501 L\uff08\u4e92\u65a5\u9501 *Mutex\uff0c\u6216\u8bfb\u5199\u9501 *RWMutex\uff09\uff0c\u4fee\u6539\u6761\u4ef6\u6216\u8005\u8c03\u7528 Wait \u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u624b\u52a8\u52a0\u9501\nBroadcast \u5e7f\u64ad\u5524\u9192\u6240\u6709\u7b49\u5f85\u8fd9\u4e2a\u6761\u4ef6\u53d8\u91cf c \u7684 goroutine\uff0c\u65e0\u9700\u9501\u4fdd\u62a4\nSignal \u53ea\u5524\u9192\u4efb\u610f 1 \u4e2a\u7b49\u5f85\u6761\u4ef6\u53d8\u91cf c \u7684 goroutine\uff0c\u65e0\u9700\u9501\u4fdd\u62a4\nWait \u7b49\u5f85, \u4f1a\u81ea\u52a8\u91ca\u653e\u9501 c.L\uff0c\u5e76\u6302\u8d77\u8c03\u7528\u8005\u6240\u5728\u7684 goroutine\n    \u5982\u679c\u5176\u4ed6\u534f\u7a0b\u8c03\u7528\u4e86 Signal \u6216 Broadcast \u5524\u9192\u4e86\u8be5\u534f\u7a0b\uff0c\u90a3\u4e48 Wait \u65b9\u6cd5\u5728\u7ed3\u675f\u963b\u585e\u65f6\uff0c\u4f1a\u91cd\u65b0\u7ed9 c.L \u52a0\u9501\uff0c\u5e76\u4e14\u7ee7\u7eed\u6267\u884c Wait \u540e\u9762\u7684\u4ee3\u7801\n    \n\u5bf9\u6761\u4ef6\u7684\u68c0\u67e5\uff0c\u4f7f\u7528\u4e86 for !condition() \u800c\u975e if\n    \u662f\u56e0\u4e3a\u5f53\u524d\u534f\u7a0b\u88ab\u5524\u9192\u65f6\uff0c\u6761\u4ef6\u4e0d\u4e00\u5b9a\u7b26\u5408\u8981\u6c42\uff0c\u9700\u8981\u518d\u6b21 Wait \u7b49\u5f85\u4e0b\u6b21\u88ab\u5524\u9192\u3002\u4e3a\u4e86\u4fdd\u9669\u8d77\u89c1\uff0c\u4f7f\u7528 for \u80fd\u591f\u786e\u4fdd\u6761\u4ef6\u7b26\u5408\u8981\u6c42\u540e\uff0c\u518d\u6267\u884c\u540e\u7eed\u7684\u4ee3\u7801\u3002\n*/\n\n\nvar done = false //\u5373\u4e92\u65a5\u9501\u9700\u8981\u4fdd\u62a4\u7684\u6761\u4ef6\u53d8\u91cf\n\nfunc read(name string, c *sync.Cond) {\n    c.L.Lock() // \u8c03\u7528 wait \u9700\u8981 \u624b\u52a8\u52a0\u9501\n    for !done {\n        c.Wait()\n    }\n    log.Println(name, "starts reading")\n    c.L.Unlock()\n}\n\nfunc write(name string, c *sync.Cond) {\n    log.Println(name, "starts writing")\n    time.Sleep(time.Second)\n    c.L.Lock() // \u4fee\u6539\u6761\u4ef6, \u9700\u8981\u624b\u52a8\u52a0\u9501 \n    done = true\n    c.L.Unlock()\n    log.Println(name, "wakes all")\n    c.Broadcast()\n}\n\nfunc main() {\n    cond := sync.NewCond(&sync.Mutex{})\n\n    go read("reader1", cond)\n    go read("reader2", cond)\n    go read("reader3", cond)\n    write("writer", cond)\n\n    time.Sleep(time.Second * 3)\n}\n')),(0,i.kt)("h3",{id:"6256-waitgroup-\u7b49\u5f85\u591a\u4e2a\u4efb\u52a1\u5168\u90e8\u5fc5\u987b\u5b8c\u6210"},"6.25.6. waitGroup \u7b49\u5f85\u591a\u4e2a\u4efb\u52a1\u5168\u90e8\u5fc5\u987b\u5b8c\u6210"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"waitGroup \u4f5c\u4e3a\u65b9\u6cd5\u5f62\u53c2\u65f6, \u5fc5\u987b\u662f\u6307\u9488, \u5426\u5219\u5982\u679c\u5f62\u53c2\u53ea\u662f\u666e\u901a\u53d8\u91cf\u7c7b\u578b, \u4f20\u9012\u7ed9\u65b9\u6cd5\u5f62\u53c2\u7684\u4f1a\u662f\u503c\u62f7\u8d1d, \u662f\u4e0d\u540c \u7b49\u5f85\u7ec4\n\n\u6240\u4ee5\u53ea\u80fd\u4f5c\u4e3a \u5168\u5c40\u53d8\u91cf \u6216\u8005  \u6307\u9488\u65b9\u6cd5\u5f62\u53c2 \u4f7f\u7528\n\nwg.Add(1) \u5fc5\u987b\u8981\u5728 goroutine \u5916\u90e8 (\u4e5f\u5c31\u662fmain goroutine \u4e0a\u8c03\u7528), \u4e0d\u80fd\u5728goroutine\u5185\u90e8\u8c03\u7528, \u5426\u5219 main goroutine \u5373\u4f7f\u8c03\u7528 wg.wait() \u4e5f\u4e0d\u4f1a\u963b\u585e\n\n")),(0,i.kt)("h3",{id:"6257-\u9501\u76f8\u5173\u6848\u4f8b"},"6.25.7. \u9501\u76f8\u5173\u6848\u4f8b"),(0,i.kt)("h4",{id:"62571-\u5355\u4f8b\u6a21\u5f0f"},"6.25.7.1. \u5355\u4f8b\u6a21\u5f0f"),(0,i.kt)("p",null,"\u6b64\u5916, \u4e5f\u80fd\u4f7f\u7528 Once \u5b9e\u73b0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u5728 singleton \u5305\u8fd9\u4e48\u5199\nvar (\n    config      *Config\n    configMutex sync.Mutex\n)\n\ntype Config struct {\n    Debug bool   `envconfig:"debug"`\n    DBURL string `envconfig:"db_url"`\n}\n\nfunc GetConfig() *Config {\n    if config != nil {\n        return config\n    }\n\n    configMutex.Lock()\n    defer configMutex.Unlock()\n\n    // double check\n    if config != nil {\n        return config\n    }\n\n    config = &Config{}\n    envconfig.Process("APP_NAME", config)\n\n    return config\n}\n// ------------------------------------------------\n// \u5728 main \u4e2d\u521d\u59cb\u5316\nfunc main() {\n    // init config\n    _ = singleton.GetConfig()\n\n}\n// ------------------------------------------------\n// \u5728\u522b\u7684\u5305\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e86\nvar (\n    config = singleton.GetConfig()\n)\n\nfunc Haha() {\n    println(config.DBURL)\n}\n')),(0,i.kt)("h2",{id:"626-atomic-\u539f\u5b50\u64cd\u4f5c"},"6.26. atomic \u539f\u5b50\u64cd\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n// \u539f\u5b50\u64cd\u4f5c\u662fGo\u8bed\u8a00\u63d0\u4f9b\u7684\u65b9\u6cd5\u5b83\u5728\u7528\u6237\u6001\u5c31\u53ef\u4ee5\u5b8c\u6210\uff0c\u56e0\u6b64\u6027\u80fd\u6bd4\u52a0\u9501\u64cd\u4f5c\u66f4\u597d\n\n\n// \u8bfb\u53d6\nfunc LoadInt32(addr int32) (val int32)\n\n// \u5199\u5165\nfunc StoreInt32(addr *int32, val int32)\n\n//  \u52a0\u6cd5\nfunc AddInt32(addr *int32, delta int32) (new int32)\n\n// \u4ea4\u6362\nfunc SwapInt32(addr *int32, new int32) (old int32)\n\n// \u6bd4\u8f83&\u4ea4\u6362\nfunc CompareAndSwapInt32(addr *int32, old, new int32) (swapped bool)\n")),(0,i.kt)("h2",{id:"627-\u53cd\u5c04-reflect"},"6.27. \u53cd\u5c04 reflect"),(0,i.kt)("h3",{id:"6271-\u53cd\u5c04\u57fa\u672c\u4f7f\u7528"},"6.27.1. \u53cd\u5c04\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("h4",{id:"62711-\u83b7\u53d6\u51fd\u6570\u540d\u79f0"},"6.27.1.1. \u83b7\u53d6\u51fd\u6570\u540d\u79f0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"func getFunctionName(i interface{}) string {\n  return runtime.FuncForPC(reflect.ValueOf(i).Pointer()).Name()\n}\n")),(0,i.kt)("h4",{id:"62712-\u5b9e\u73b0\u7c7b\u578b\u65ad\u8a00"},"6.27.1.2. \u5b9e\u73b0\u7c7b\u578b\u65ad\u8a00"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc CheckType (v interface{}) {\n    t : = reflect.TypeOf (v) // \u5f97\u5230 reflect \u5305\u5185\u5b9a\u4e49\u7684\u7c7b\u578b\n    switch t.Kind(){\n    case reflect.Float32, reflect.Float64:\n        fmt.Println("Float")\n    case reflect.Int, reflect.Int32, reflect.Int64\n        fmt.Println("Integer")\n    default:\n        fmt.Printin("Unknown", t)\n    } \n}\n\nfunc TestTypeAndValue (t *testing. T) {\n    var fint64 = 10\n    t.Log(reflect.Type0f(f), reflect.ValueOf (f))\n    t.Log(reflect.ValueOf (f) .Type() )\n}\n\n')),(0,i.kt)("h4",{id:"62713-\u4e3a\u4efb\u4f55-struct-\u8bbe\u7f6e\u503c"},"6.27.1.3. \u4e3a\u4efb\u4f55 struct \u8bbe\u7f6e\u503c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \nfunc TestReflect(t *testing.T) {\n    f:= func(target interface{}, props map[string]interface{}) error {\n        // terget \u5fc5\u987b\u4e3astruct \u6216\u8005\u6307\u5411 struct \u7684\u6307\u9488\n        if reflect.TypeOf(target).Kind() != reflect.Ptr {\n            // \u62ff\u5230 target \u503c\u7684\u5b9e\u9645\u7c7b\u578b\n            if reflect.TypeOf(target).Elem().Kind() != reflect.Struct {\n                return errors.New("1st param should be a struct or a ptr pointing to a struct")\n            }\n        }\n\n        // \u904d\u5386 props\n        for k, v := range props {\n            // \u82e5 k \u5728 target \u4e2d\u4e0d\u5b58\u5728, continue\n            field, fieldOk := reflect.ValueOf(target).Elem().Type().FieldByName(k)\n            if !fieldOk {\n                continue\n            }\n            //\u82e5 props \u4e2d\u7684\u5c5e\u6027\u7c7b\u578b \u80fd\u548c field \u5339\u914d\u4e0a, \u5219\u8bbe\u7f6e\u503c\n            if field.Type == reflect.TypeOf(v) {\n                reflect.ValueOf(target).Elem().FieldByName(k).Set(reflect.ValueOf(v))\n            }\n\n        }\n        return nil\n    }\n\n    type Aa struct {\n        Name string // \u5fc5\u987b\u5bfc\u51fa\n        Age int\n    }\n    var aa = new(Aa)\n    f(aa, map[string]interface{}{\n        "Name": "aa",\n        "Age":  11,\n    })\n    fmt.Println(aa)\n}\n')),(0,i.kt)("h4",{id:"62714-\u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e"},"6.27.1.4. \u4ece\u73af\u5883\u53d8\u91cf\u8bfb\u53d6\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5982\u679c\u4f7f\u7528\u786c\u7f16\u7801\uff0cConfig \u7ed3\u6784\u53d1\u751f\u6539\u53d8\uff0c\u4f8b\u5982\u4fee\u6539 json \u5bf9\u5e94\u7684\u5b57\u6bb5\uff0c\u5220\u9664\u6216\u65b0\u589e\u4e86\u4e00\u4e2a\u914d\u7f6e\u9879\uff0c\u8fd9\u5757\u903b\u8f91\u4e5f\u9700\u8981\u53d1\u751f\u6539\u53d8\n// \u4f7f\u7528\u53cd\u5c04\u5c31\u65b9\u4fbf\u4e86\nfunc readConfig() *Config {\n    // read from xxx.json\uff0c\u7701\u7565\n    config := Config{}\n    typ := reflect.TypeOf(config)\n    value := reflect.Indirect(reflect.ValueOf(&config))\n    for i := 0; i < typ.NumField(); i++ {\n        f := typ.Field(i)\n        if v, ok := f.Tag.Lookup("json"); ok {\n            key := fmt.Sprintf("CONFIG_%s", strings.ReplaceAll(strings.ToUpper(v), "-", "_"))\n            if env, exist := os.LookupEnv(key); exist {\n                value.FieldByName(f.Name).Set(reflect.ValueOf(env))\n            }\n        }\n    }\n    return &config\n}\n\nfunc main() {\n    os.Setenv("CONFIG_SERVER_NAME", "global_server")\n    os.Setenv("CONFIG_SERVER_IP", "10.0.0.1")\n    os.Setenv("CONFIG_SERVER_URL", "geektutu.com")\n    c := readConfig()\n    fmt.Printf("%+v", c)\n}\n')),(0,i.kt)("h3",{id:"6272-\u53cd\u5c04\u6027\u80fd\u4f18\u5316"},"6.27.2. \u53cd\u5c04\u6027\u80fd\u4f18\u5316"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u521b\u5efa\u5bf9\u8c61\n// \u901a\u8fc7\u53cd\u5c04\u521b\u5efa\u5bf9\u8c61\u7684\u8017\u65f6\u7ea6\u4e3a new \u7684 1.5 \u500d\uff0c\u76f8\u5dee\u4e0d\u662f\u7279\u522b\u5927\nfunc BenchmarkNew(b *testing.B) {\n    var config *Config\n    for i := 0; i < b.N; i++ {\n        config = new(Config)\n    }\n    _ = config\n}\nfunc BenchmarkReflectNew(b *testing.B) {\n    var config *Config\n    typ := reflect.TypeOf(Config{})\n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        config, _ = reflect.New(typ).Interface().(*Config)\n    }\n    _ = config\n}\n\n// -----------------------------------\n\n// \u4fee\u6539\u5b57\u6bb5\u7684\u503c\n// \u4e00\u79cd\u662f FieldByName\uff0c\u53e6\u4e00\u79cd\u662f Field(\u6309\u7167\u4e0b\u6807)\n//      FieldByName \u7684\u6027\u80fd\u76f8\u6bd4 Field \u52a3\u5316 10 \u500d\n// \n// \u5e95\u5c42\u5b9e\u73b0\u4e0a, FieldByName \u4e2d\u4f7f\u7528 for \u5faa\u73af\uff0c\u9010\u4e2a\u5b57\u6bb5\u67e5\u627e\uff0c\u5b57\u6bb5\u540d\u5339\u914d\u65f6\u8fd4\u56de\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u53cd\u5c04\u7684\u5185\u90e8\uff0c\u5b57\u6bb5\u662f\u6309\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u56e0\u6b64\u6309\u7167\u4e0b\u6807\u8bbf\u95ee\u67e5\u8be2\u6548\u7387\u4e3a O(1)\uff0c\u800c\u6309\u7167 Name \u8bbf\u95ee\uff0c\u5219\u9700\u8981\u904d\u5386\u6240\u6709\u5b57\u6bb5\uff0c\u67e5\u8be2\u6548\u7387\u4e3a O(N)\u3002\u7ed3\u6784\u4f53\u6240\u5305\u542b\u7684\u5b57\u6bb5(\u5305\u62ec\u65b9\u6cd5)\u8d8a\u591a\uff0c\u90a3\u4e48\u4e24\u8005\u4e4b\u95f4\u7684\u6548\u7387\u5dee\u8ddd\u5219\u8d8a\u5927\u3002\n// \nfunc BenchmarkSet(b *testing.B) {\n\n    config := new(Config)\n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        config.Name = "name"\n        config.IP = "ip"\n        config.URL = "url"\n        config.Timeout = "timeout"\n    }\n}\n\nfunc BenchmarkReflect_FieldSet(b *testing.B) {\n    typ := reflect.TypeOf(Config{})\n    ins := reflect.New(typ).Elem()\n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        ins.Field(0).SetString("name")\n        ins.Field(1).SetString("ip")\n        ins.Field(2).SetString("url")\n        ins.Field(3).SetString("timeout")\n    }\n}\n\nfunc BenchmarkReflect_FieldByNameSet(b *testing.B) {\n    typ := reflect.TypeOf(Config{})\n    ins := reflect.New(typ).Elem()\n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        ins.FieldByName("Name").SetString("name")\n        ins.FieldByName("IP").SetString("ip")\n        ins.FieldByName("URL").SetString("url")\n        ins.FieldByName("Timeout").SetString("timeout")\n    }\n}\n\n\n// \u5982\u679c\u786e\u5b9e\u9700\u8981\u4f7f\u7528 FiledByName, \u53ef\u4ee5\u53ef\u4ee5\u5229\u7528\u5b57\u5178\u5c06 Name \u548c Index \u7684\u6620\u5c04\u7f13\u5b58\u8d77\u6765\nfunc BenchmarkReflect_FieldByNameCacheSet(b *testing.B) {\n    typ := reflect.TypeOf(Config{})\n    cache := make(map[string]int)\n    for i := 0; i < typ.NumField(); i++ {\n        cache[typ.Field(i).Name] = i\n    }\n    ins := reflect.New(typ).Elem()\n    b.ResetTimer()\n    for i := 0; i < b.N; i++ {\n        ins.Field(cache["Name"]).SetString("name")\n        ins.Field(cache["IP"]).SetString("ip")\n        ins.Field(cache["URL"]).SetString("url")\n        ins.Field(cache["Timeout"]).SetString("timeout")\n    }\n}\n')),(0,i.kt)("h3",{id:"6273-\u53cd\u5c04\u5b9e\u73b0-filter-map-reduce"},"6.27.3. \u53cd\u5c04\u5b9e\u73b0 filter map reduce"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5b9e\u73b0 map\n\n// \u6709\u4e24\u4e2a\u7248\u672c\u7684\u51fd\u6570\uff0c\u4e00\u4e2a\u662f\u8fd4\u56de\u4e00\u4e2a\u5168\u65b0\u7684\u6570\u7ec4 \u2013 Transform()\uff0c\u4e00\u4e2a\u662f\u201c\u5c31\u5730\u5b8c\u6210\u201d \u2013 TransformInPlace()\nfunc Transform(slice, function interface{}) interface{} {\n  return transform(slice, function, false)\n}\n\nfunc TransformInPlace(slice, function interface{}) interface{} {\n  return transform(slice, function, true)\n}\n\nfunc transform(slice, function interface{}, inPlace bool) interface{} {\n \n  //check the <code data-enlighter-language="raw" class="EnlighterJSRAW">slice</code> type is Slice\n  sliceInType := reflect.ValueOf(slice)\n//   \u7528 Kind() \u65b9\u6cd5\u68c0\u67e5\u4e86\u6570\u636e\u7c7b\u578b\u662f\u4e0d\u662f Slice\uff0c\u51fd\u6570\u7c7b\u578b\u662f\u4e0d\u662fFunc\n  if sliceInType.Kind() != reflect.Slice {\n    panic("transform: not slice")\n  }\n\n  //check the function signature\n  fn := reflect.ValueOf(function)\n  elemType := sliceInType.Type().Elem()\n  if !verifyFuncSignature(fn, elemType, nil) {\n    panic("trasform: function must be of type func(" + sliceInType.Type().Elem().String() + ") outputElemType")\n  }\n\n  sliceOutType := sliceInType\n  if !inPlace {\n    //   \u9700\u8981\u65b0\u751f\u6210\u4e00\u4e2aSlice\uff0c\u4f1a\u4f7f\u7528 reflect.MakeSlice() \u6765\u5b8c\u6210\n    sliceOutType = reflect.MakeSlice(reflect.SliceOf(fn.Type().Out(0)), sliceInType.Len(), sliceInType.Len())\n  }\n  for i := 0; i < sliceInType.Len(); i++ {\n    sliceOutType.Index(i).Set(fn.Call([]reflect.Value{sliceInType.Index(i)})[0])\n  }\n  return sliceOutType.Interface()\n\n}\n\nfunc verifyFuncSignature(fn reflect.Value, types ...reflect.Type) bool {\n\n  //Check it is a funciton\n  if fn.Kind() != reflect.Func {\n    return false\n  }\n  // NumIn() - returns a function type\'s input parameter count.\n  // NumOut() - returns a function type\'s output parameter count.\n  if (fn.Type().NumIn() != len(types)-1) || (fn.Type().NumOut() != 1) {\n    return false\n  }\n  // In() - returns the type of a function type\'s i\'th input parameter.\n  for i := 0; i < len(types)-1; i++ {\n    if fn.Type().In(i) != types[i] {\n      return false\n    }\n  }\n  // Out() - returns the type of a function type\'s i\'th output parameter.\n  outType := types[len(types)-1]\n  if outType != nil && fn.Type().Out(0) != outType {\n    return false\n  }\n  return true\n}\n\n\n// =============\n\n// reduce\n\nfunc Reduce(slice, pairFunc, zero interface{}) interface{} {\n  sliceInType := reflect.ValueOf(slice)\n  if sliceInType.Kind() != reflect.Slice {\n    panic("reduce: wrong type, not slice")\n  }\n\n  len := sliceInType.Len()\n  if len == 0 {\n    return zero\n  } else if len == 1 {\n    return sliceInType.Index(0)\n  }\n\n  elemType := sliceInType.Type().Elem()\n  fn := reflect.ValueOf(pairFunc)\n  if !verifyFuncSignature(fn, elemType, elemType, elemType) {\n    t := elemType.String()\n    panic("reduce: function must be of type func(" + t + ", " + t + ") " + t)\n  }\n\n  var ins [2]reflect.Value\n  ins[0] = sliceInType.Index(0)\n  ins[1] = sliceInType.Index(1)\n  out := fn.Call(ins[:])[0]\n\n  for i := 2; i < len; i++ {\n    ins[0] = out\n    ins[1] = sliceInType.Index(i)\n    out = fn.Call(ins[:])[0]\n  }\n  return out.Interface()\n}\n\n\n\n// ===========\n\n// filter\n\nfunc Filter(slice, function interface{}) interface{} {\n  result, _ := filter(slice, function, false)\n  return result\n}\n\nfunc FilterInPlace(slicePtr, function interface{}) {\n  in := reflect.ValueOf(slicePtr)\n  if in.Kind() != reflect.Ptr {\n    panic("FilterInPlace: wrong type, " +\n      "not a pointer to slice")\n  }\n  _, n := filter(in.Elem().Interface(), function, true)\n  in.Elem().SetLen(n)\n}\n\nvar boolType = reflect.ValueOf(true).Type()\n\nfunc filter(slice, function interface{}, inPlace bool) (interface{}, int) {\n\n  sliceInType := reflect.ValueOf(slice)\n  if sliceInType.Kind() != reflect.Slice {\n    panic("filter: wrong type, not a slice")\n  }\n\n  fn := reflect.ValueOf(function)\n  elemType := sliceInType.Type().Elem()\n  if !verifyFuncSignature(fn, elemType, boolType) {\n    panic("filter: function must be of type func(" + elemType.String() + ") bool")\n  }\n\n  var which []int\n  for i := 0; i < sliceInType.Len(); i++ {\n    if fn.Call([]reflect.Value{sliceInType.Index(i)})[0].Bool() {\n      which = append(which, i)\n    }\n  }\n\n  out := sliceInType\n\n  if !inPlace {\n    out = reflect.MakeSlice(sliceInType.Type(), len(which), len(which))\n  }\n  for i := range which {\n    out.Index(i).Set(sliceInType.Index(which[i]))\n  }\n\n  return out.Interface(), len(which)\n}\n')),(0,i.kt)("h2",{id:"628-\u6cdb\u578b"},"6.28. \u6cdb\u578b"),(0,i.kt)("h3",{id:"6281-\u6cdb\u578b\u4f7f\u7528"},"6.28.1. \u6cdb\u578b\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"")),(0,i.kt)("h3",{id:"6282-go-generation"},"6.28.2. go generation"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://coolshell.cn/articles/21179.html"},"https://coolshell.cn/articles/21179.html")),(0,i.kt)("h2",{id:"629-unsafe-\u4e0d\u5b89\u5168\u7f16\u7a0b"},"6.29. unsafe \u4e0d\u5b89\u5168\u7f16\u7a0b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\nfunc TestUnsage(t *testing.T) {\n    type MyInt int\n    slice := []int{1, 2, 3}\n    // unsafe.Pointer \u63a5\u6536\u4e00\u4e2a\u5730\u5740, \u8fd4\u56de\u4e00\u4e2a\u6307\u9488\n    ints := *(*[]MyInt)(unsafe.Pointer(&slice))\n    fmt.Println(ints)\n}\n\n")),(0,i.kt)("h2",{id:"630-http-\u670d\u52a1"},"6.30. http \u670d\u52a1"),(0,i.kt)("h3",{id:"6301-http-\u5305"},"6.30.1. http \u5305"),(0,i.kt)("p",null,"\u57fa\u672c\u4f7f\u7528:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc TestHttp(t *testing.T) {\n    /*\n    handleFunc \u63a5\u6536\u4e00\u4e2a pattern \u548c Handler, \n            Handler \u7c7b\u578b\u5982\u4e0b, \n            type Handler interface {\n                ServeHTTP(ResponseWriter, *Request)\n            }\n            HandlerFunc \u5df2\u7ecf\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\n    \n    */\n    http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprint(w, "hello.")\n    })\n    http.HandleFunc("/time", func(w http.ResponseWriter, r *http.Request) {\n        w.Write([]byte(fmt.Sprintf("time: %s", time.Now())))\n    })\n    http.ListenAndServe(":8080", nil) // nil \u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u8def\u7531\u89c4\u5219, \u82e5\u672b\u5c3e\u6709 /, \u8868\u793a\u4e25\u683c\u5339\u914d, \u82e5\u6ca1\u6709 / \u4f1a\u4ece\u5750\u5f80\u53f3\u5339\u914d, \u5339\u914d\u4e0a\u5c31\u8fd4\u56de\n\n\n\n    // \u53ef\u4ee5\u901a\u8fc7Server\u7ed3\u6784\u4f53\u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u66f4\u8be6\u7ec6\u7684\u914d\u7f6e\n     s := &http.Server{\n     Addr:           ":8082",\n     Handler:        myHandler, // \u5f00\u6e90\u5305\u7684 router \u5c31\u662f\u4ece\u8fd9\u91cc\u4f20\u5165\n     ReadTimeout:    10 * time.Second,\n     WriteTimeout:   10 * time.Second,\n     MaxHeaderBytes: 1 << 20,\n }\n s.ListenAndServe(":8080", nil)\n}\n')),(0,i.kt)("h3",{id:"6302-\u81ea\u5b9a\u4e49\u590d\u7528\u5668"},"6.30.2. \u81ea\u5b9a\u4e49\u590d\u7528\u5668"),(0,i.kt)("p",null,"\u867d\u7136\u9ed8\u8ba4\u7684\u591a\u8def\u590d\u7528\u5668\u5f88\u597d\u7528\uff0c\u4f46\u4ecd\u7136\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u6709\u7684\u4ee3\u7801\u90fd\u53ef\u4ee5\u4fee\u6539\u5b83\u3002\u6709\u4e9b\u7b2c\u4e09\u65b9\u5e93\u4e2d\u53ef\u80fd\u4e0e\u9ed8\u8ba4\u590d\u7528\u5668\u4ea7\u751f\u51b2\u7a81\u3002\u6240\u4ee5\u63a8\u8350\u7684\u505a\u6cd5\u662f\u81ea\u5b9a\u4e49"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n     mux := http.NewServeMux()\n     mux.HandleFunc("/", newservemux)\n     mux.HandleFunc("/happy", newservemuxhappy)\n     mux.HandleFunc("/bad", newservemuxbad)\n     s := &http.Server{\n         Addr:    ":8080",\n         Handler: mux,\n     }\n \u200b\n     s.ListenAndServe()\n }\n')),(0,i.kt)("p",null,"ServeMux\u7684\u4e00\u4e2a\u7f3a\u9677\u662f\u65e0\u6cd5\u4f7f\u7528\u53d8\u91cf\u5b9e\u73b0URL\u6a21\u5f0f\u5339\u914d\u3002\u800cHttpRouter\u53ef\u4ee5\uff0cHttpRouter\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684\u7b2c\u4e09\u65b9HTTP\u8def\u7531\u5305\uff0c\u5f25\u8865\u4e86net/http\u5305\u4e2d\u7684\u8def\u7531\u4e0d\u8db3\u95ee\u9898"),(0,i.kt)("h3",{id:"6303-\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6"},"6.30.3. \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://segmentfault.com/a/1190000040343360"},"https://segmentfault.com/a/1190000040343360")),(0,i.kt)("h3",{id:"6304-\u83b7\u53d6-ip-\u5730\u5740"},"6.30.4. \u83b7\u53d6 ip \u5730\u5740"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'dial, err := net.Dial("udp", "8.8.8.8:80")\nif err != nil {\n    log.Fatal(err)\n}\ndefer dial.Close()\n\naddr := dial.LocalAddr()\nfmt.Println(addr)\nudpAddr := addr.(*net.UDPAddr)\nfmt.Println(udpAddr.IP.String())\n\nprintln("------------------------")\n\naddrs, _ := net.InterfaceAddrs()\nfor _, addr := range addrs {\n    ip, ok := addr.(*net.IPNet)\n    if !ok {\n        continue\n    }\n    if ip.IP.IsLoopback() {\n        continue\n    }\n    if ip.IP.IsGlobalUnicast() {\n        continue\n    }\n    println(ip.IP.String())\n}\n')),(0,i.kt)("h3",{id:"6305-\u66f4\u597d\u7528\u7684\u8def\u7531-router"},"6.30.5. \u66f4\u597d\u7528\u7684\u8def\u7531 router"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/julienschmidt/httprouter"},"https://github.com/julienschmidt/httprouter")),(0,i.kt)("h2",{id:"631-json-\u5305"},"6.31. json \u5305"),(0,i.kt)("h3",{id:"6311-json\u57fa\u672c\u4f7f\u7528"},"6.31.1. json\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// encoding/json\n// \u4e0d\u63a8\u8350\u4e86 , \u53cd\u5c04\u6027\u80fd\u4f4e, \u63a8\u8350 Easyjson, \u6216\u8005 https://github.com/json-iterator/go\ntype Person struct {\n    Name string `json:"name"`\n    Age int `json:"age"`\n}\n\nfunc TestReadLog(t *testing.T) {\n    jsonStr := `{\n        "name": "hel",\n        "age": 11\n    }`\n    p := new(Person)\n    err := json.Unmarshal([]byte(jsonStr), p)\n    if err != nil {\n        fmt.Printf(">>> error of unmarshall json str: %v, err: %v\\n", jsonStr, err)\n        return\n    }\n    fmt.Printf(">>> Person: %#v\\n", p)\n\n}\n\n\n')),(0,i.kt)("h3",{id:"6312-\u4e34\u65f6\u5ffd\u7565json-\u5b57\u6bb5"},"6.31.2. \u4e34\u65f6\u5ffd\u7565json \u5b57\u6bb5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'json.Marshal(struct {\n    *User\n    // \u4e34\u65f6\u5ffd\u7565\u6389\u7a7aPassword\u5b57\u6bb5,\u53ef\u4ee5\u7528omitempty\n    // \u4e0d\u4f1a\u5ffd\u7565\u67d0\u4e2a\u5b57\u6bb5\uff0c\u800c\u662f\u5ffd\u7565\u7a7a\u7684\u5b57\u6bb5\uff0c\u5f53\u5b57\u6bb5\u7684\u503c\u4e3a\u7a7a\u503c\u7684\u65f6\u5019\uff0c\u5b83\u4e0d\u4f1a\u51fa\u73b0\u5728JSON\u6570\u636e\u4e2d\n    // \u5982\u679c\u60f3\u4e34\u65f6\u5ffd\u7565\u6389Password\u5b57\u6bb5\u4e0d\u7ba1\u7a7a\u4e0d\u7a7a,\u53ef\u4ee5\u7528 - \n    Password bool `json:"password,omitempty"`\n}{\n    User: user,\n})\n')),(0,i.kt)("h3",{id:"6313-\u4e34\u65f6\u7c98\u5408\u4e24\u4e2astruct"},"6.31.3. \u4e34\u65f6\u7c98\u5408\u4e24\u4e2astruct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'type BlogPost struct {\n    URL   string `json:"url"`\n    Title string `json:"title"`\n}\ntype Analytics struct {\n    Visitors  int `json:"visitors"`\n    PageViews int `json:"page_views"`\n}\njson.Marshal(struct{\n    *BlogPost\n    *Analytics\n}{post, analytics})\n\n')),(0,i.kt)("h3",{id:"6314-\u4e00\u4e2ajson\u5207\u5206\u6210\u4e24\u4e2astruct"},"6.31.4. \u4e00\u4e2ajson\u5207\u5206\u6210\u4e24\u4e2astruct"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'json.Unmarshal([]byte(`{\n  "url": "attila@attilaolah.eu",\n  "title": "Attila\'s Blog",\n  "visitors": 6,\n  "page_views": 14\n}`), &struct {\n  *BlogPost\n  *Analytics\n}{&post, &analytics})\n')),(0,i.kt)("h3",{id:"6315-\u7528\u5b57\u7b26\u4e32\u4f20\u9012\u6570\u5b57"},"6.31.5. \u7528\u5b57\u7b26\u4e32\u4f20\u9012\u6570\u5b57"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'type TestObject struct {\n    Field1 int    `json:",string"`\n}\n// {"Field1": "100"} 100\u4f1a\u88ab\u8f6c\u4e3aint \n\n')),(0,i.kt)("h3",{id:"6316-\u4f7f\u7528-json\u7684rawmessage"},"6.31.6. \u4f7f\u7528 json\u7684RawMessage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5982\u679c\u90e8\u5206json\u6587\u6863\u6ca1\u6709\u6807\u51c6\u683c\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u539f\u59cb\u7684\u4fe1\u606f\u7528[]byte\u4fdd\u5b58\u4e0b\u6765\u3002\n\ntype TestObject struct {\n    Field1 string\n    Field2 json.RawMessage // \u7528\u6765\u63a5\u6536 [1,2,3]\n} \nvar data TestObject\njson.Unmarshal([]byte(`{"field1": "hello", "field2": [1,2,3]}`), &data)\nshould.Equal(` [1,2,3]`, string(data.Field2))\n\n')),(0,i.kt)("h2",{id:"632-socket-\u7f16\u7a0b"},"6.32. socket \u7f16\u7a0b"),(0,i.kt)("h3",{id:"6321-tcp"},"6.32.1. tcp"),(0,i.kt)("h4",{id:"63211-\u7c98\u5305\u95ee\u9898"},"6.32.1.1. \u7c98\u5305\u95ee\u9898"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u7c98\u5305\u662f\u6307\u7f51\u7edc\u901a\u4fe1\u4e2d\uff0c\u53d1\u9001\u65b9\u53d1\u9001\u7684\u591a\u4e2a\u6570\u636e\u5305\u5728\u63a5\u6536\u65b9\u7684\u7f13\u51b2\u533a\u9ecf\u5728\u4e00\u8d77\uff0c\u591a\u4e2a\u6570\u636e\u5305\u9996\u5c3e\u76f8\u8fde\u7684\u73b0\u8c61\n/*\n\u539f\u56e0: (https://studygolang.com/articles/25874)\n\u539f\u56e0\u4e3b\u8981\u662f\u7531tcp\u534f\u8bae\u672c\u8eab\u9020\u6210\u7684\n\n    tcp\u534f\u8bae\u662f\u9762\u5411\u8fde\u63a5\uff0c\u9762\u5411\u6d41\uff0c\u63d0\u4f9b\u9ad8\u53ef\u9760\u6027\u670d\u52a1\u7684, tcp\u6570\u636e\u5305\u8f6c\u53d1\u4f7f\u7528Nagle\u7b97\u6cd5(Nagle\u7b97\u6cd5\u662f\u4e3a\u4e86\u63d0\u9ad8tcp\u7684\u4f20\u8f93\u6548\u7387)\uff0c\u5f53\u5e94\u7528\u5c42\u6709\u4e00\u4e2a\u6570\u636e\u5305\u8981\u53d1\u9001\u65f6\uff0cNagle\u7b97\u6cd5\u5e76\u4e0d\u4f1a\u7acb\u523b\u53d1\u9001\uff0c\u800c\u662f\u7ee7\u7eed\u6536\u96c6\u8981\u53d1\u9001\u7684\u6d88\u606f\uff0c\u76f4\u5230\u6536\u5230 server \u5bf9\u4e0a\u4e00\u4e2a\u5305\u7684\u786e\u8ba4ack\u65f6\uff0c\u624d\u4f1a\u53d1\u9001\u6570\u636e\uff0c\u6b64\u65f6Nagle\u7b97\u6cd5\u4f1a\u5c06\u7d2f\u79ef\u6536\u96c6\u7684\u591a\u4e2a\u7684\u6570\u636e\u5305\u5f62\u6210\u4e00\u4e2a\u5206\u7ec4\uff0c\u5c06\u8fd9\u4e2a\u5206\u7ec4\u4e00\u6b21\u6027\u8f6c\u53d1\u51fa\u53bb, \u5f62\u6210\u7c98\u5305\n\n    udp\u534f\u8bae\u4e0d\u4f1a\u51fa\u73b0\u7c98\u5305\uff0c\u56e0\u4e3audp\u662f\u65e0\u8fde\u63a5\uff0c\u9762\u5411\u6d88\u606f\uff0c\u63d0\u4f9b\u9ad8\u6548\u670d\u52a1\u7684. \u65e0\u8fde\u63a5\u610f\u5473\u7740\u5f53\u6709\u6570\u636e\u5305\u8981\u53d1\u9001\u65f6\uff0cudp\u4f1a\u7acb\u5373\u53d1\u9001\uff0c\u6570\u636e\u5305\u4e0d\u4f1a\u79ef\u538b; \u56e0\u6b64\uff0cudp\u4e0d\u4f1a\u51fa\u73b0\u7c98\u5305\uff0c\u53ea\u53ef\u80fd\u4f1a\u51fa\u73b0\u4e22\u5305\n\n\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u8003\u8651\u5904\u7406\u534a\u5305\u548c\u7c98\u5305\uff1f\n\n    TCP\u8fde\u63a5\u662f\u957f\u8fde\u63a5\uff0c\u5373\u4e00\u6b21\u8fde\u63a5\u591a\u6b21\u53d1\u9001\u6570\u636e\n\n\u89e3\u51b3\u601d\u8def:\n\n    - \u5b9a\u957f\u5206\u9694(\u6bcf\u4e2a\u6570\u636e\u5305\u6700\u5927\u4e3a\u8be5\u957f\u5ea6\uff0c\u4e0d\u8db3\u65f6\u4f7f\u7528\u7279\u6b8a\u5b57\u7b26\u586b\u5145) \uff0c\u4f46\u662f\u6570\u636e\u4e0d\u8db3\u65f6\u4f1a\u6d6a\u8d39\u4f20\u8f93\u8d44\u6e90\n    - \u4f7f\u7528\u7279\u5b9a\u5206\u5272\u5b57\u7b26\u6765\u5206\u5272\u6570\u636e\u5305\uff0c\u4f46\u662f\u82e5\u8981\u4f20\u8f93\u7684\u6570\u636e\u4e2d\u672c\u8eab\u5c31\u542b\u6709\u5206\u5272\u5b57\u7b26\u5219\u4f1a\u51fa\u73b0Bug\n    - \u5728\u6570\u636e\u5305\u4e2d\u6dfb\u52a0\u957f\u5ea6\u5b57\u6bb5\uff0c\u5f25\u8865\u4e86\u4ee5\u4e0a\u4e24\u79cd\u601d\u8def\u7684\u4e0d\u8db3\uff0c             [\u63a8\u8350]\n*/\n\n\n\n")),(0,i.kt)("p",null,"bad \u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// server\n\nfunc serverUp(port int) {\n    portStr := strconv.Itoa(port)\n    listener, err := net.Listen("tcp", ":"+portStr)\n    if err != nil {\n        log.Fatal(err)\n    }\n    defer func() {\n        _ = listener.Close()\n        log.Println("the server is down")\n    }()\n    log.Println("the server is up and listening on port: ", portStr)\n\n    for {\n        accept, err := listener.Accept()\n        if err != nil {\n            log.Println("accept client conn failed: ", err)\n            continue\n        }\n        go func() {\n            addrClient := accept.RemoteAddr()\n            defer func() {\n                _ = accept.Close()\n                log.Println("client conn closed: ", addrClient)\n            }()\n            log.Println("client conn established: ", addrClient)\n\n            for {\n                var buf [512]byte\n                readN, err := accept.Read(buf[:])\n                if err == io.EOF {\n                    //log.Println("read EOF")\n                    continue\n                }\n                if err != nil {\n                    log.Println("read err: ", err)\n                    break\n                }\n                log.Println("read msg: ", string(buf[:readN]))\n            }\n\n        }()\n    }\n}\n/*\n\u6253\u5370:\n2021/12/23 23:52:11 read msg:  [\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, x\n2021/12/23 23:52:11 read msg:  sdfsfsfsfsfsdffsfsdf][\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf]\n\n\u53ef\u4ee5\u770b\u5230\n- \u591a\u4e2a\u6570\u636e\u5305\u201c\u7c98\u201d\u5728\u4e86\u4e00\u8d77\n- \u4e00\u4e2a\u6570\u636e\u5305\u88ab\u201c\u62c6\u201d\u5f00\uff0c\u5f62\u6210\u4e00\u4e2a\u7834\u788e\u7684\u5305\n*/\n\n\n// client\nfunc clientUp(targetPort int) {\n    conn, err := net.Dial("tcp", ":"+strconv.Itoa(targetPort))\n    if err != nil {\n        log.Fatal("the client cannot start, err: ", err)\n    }\n    defer func() {\n        _ = conn.Close()\n        log.Println("the client is down")\n    }()\n\n    for i := 0; i < 20; i++ {\n        _, err := conn.Write([]byte("[\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf]"))\n        if err != nil {\n            log.Fatal(err)\n        }\n    }\n}\n')),(0,i.kt)("h4",{id:"63212-\u89e3\u51b3\u7c98\u5305-scanner"},"6.32.1.2. \u89e3\u51b3\u7c98\u5305 scanner"),(0,i.kt)("p",null,"good \u793a\u4f8b (\u4f7f\u7528 scanner \u5b9e\u73b0)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// server\n\nfunc serverUp(port int) {\n    listener, err := net.Listen("tcp", ":"+strconv.Itoa(port))\n    if err != nil {\n        log.Fatalln(err)\n    }\n    defer func() {\n        _ = listener.Close()\n        log.Println("the server is down")\n    }()\n    log.Println("the server is up and listening on port: ", port)\n\n    for {\n        accept, err := listener.Accept()\n        if err != nil {\n            log.Println("accept client conn failed: ", err)\n            continue\n        }\n        go func(accept net.Conn) {\n            addr := accept.RemoteAddr()\n            log.Println("client conn is established: ", addr)\n            defer func() {\n                _ = accept.Close()\n                log.Println("client conn is closed: ")\n            }()\n\n            var buf [512]byte\n            for {\n                readN, err := accept.Read(buf[:])\n                if err == io.EOF {\n                    continue\n                }\n                if err != nil {\n                    log.Println("read from client failed: ", err)\n                    break\n                }\n\n                scanner := bufio.NewScanner(bytes.NewReader(buf[:readN]))\n                scanner.Split(func(data []byte, atEOF bool) (advance int, token []byte, err error) {\n                    // \u68c0\u67e5 atEOF \u53c2\u6570 \u548c \u6570\u636e\u5305\u5934\u90e8\u7684\u56db\u4e2a\u5b57\u8282\u662f\u5426 \u4e3a 0x123456(\u6211\u4eec\u5b9a\u4e49\u7684\u534f\u8bae\u7684\u9b54\u6570)\n                    if !atEOF && len(data) > 6 && binary.BigEndian.Uint32(data[:4]) == 0x123456 {\n                        var l int16\n                        // \u8bfb\u51fa \u6570\u636e\u5305\u4e2d \u5b9e\u9645\u6570\u636e \u7684\u957f\u5ea6(\u5927\u5c0f\u4e3a 0 ~ 2^16)\n                        binary.Read(bytes.NewReader(data[4:6]), binary.BigEndian, &l)\n                        pl := int(l) + 6\n                        if pl <= len(data) {\n                            return pl, data[:pl], nil\n                        }\n                    }\n                    return\n                })\n\n            }\n        }(accept)\n    }\n}\n\n\n// client\n\nfunc clientUp(target int) {\n    conn, err := net.DialTimeout("tcp", ":"+strconv.Itoa(target), time.Second*10)\n    if err != nil {\n        log.Fatalln("connect to server failed: ", err)\n    }\n\n    content := []byte("[\u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u5305, xsdfsfsfsfsfsdffsfsdf]")\n    var pack bytes.Buffer\n\n    //\u5f80\u6570\u636e\u5305\u5199\u5165\u9b54\u6570, \u5360\u4f4d 4 \u5b57\u8282\n    var magicNum uint32 = 0x12345\n    magicNumBytes := make([]byte, 4)\n    binary.BigEndian.PutUint32(magicNumBytes, magicNum) // \u6309\u7167 bigEndian \u65b9\u5f0f\u5199\u5165\u5b57\u8282\u5e8f\u5217\n    pack.Write(magicNumBytes)\n\n    //\u5f80\u6570\u636e\u5305\u5199\u5165\u6570\u636e\u4f53\u957f\u5ea6, \u5360\u4f4d 2 \u5b57\u8282\n    bodyLenBytes := make([]byte, 2)\n    binary.BigEndian.PutUint16(bodyLenBytes, uint16(len(content)))\n    pack.Write(bodyLenBytes)\n\n    //\u5199\u5165\u5b9e\u9645\u6570\u636e\n    pack.Write(content)\n\n    for i := 0; i < 30; i++ {\n        _, err := conn.Write(pack.Bytes())\n        if err != nil {\n            log.Println("write to server failed: ", err)\n            break\n        }\n    }\n}\n')),(0,i.kt)("h4",{id:"63213-\u89e3\u51b3\u7c98\u5305-\u81ea\u5b9a\u4e49\u7f16\u89e3\u7801"},"6.32.1.3. \u89e3\u51b3\u7c98\u5305 \u81ea\u5b9a\u4e49\u7f16\u89e3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// proto.go\n\nfunc Encode(msg string) ([]byte, error) {\n    pack := new(bytes.Buffer)\n\n    //write the msg header\n    err := binary.Write(pack, binary.LittleEndian, int32(len(msg)))\n    if err != nil {\n        return nil, err\n    }\n\n    err = binary.Write(pack, binary.LittleEndian, []byte(msg))\n    if err != nil {\n        return nil, err\n    }\n    return pack.Bytes(),nil\n\n}\n\nfunc Decode(reader *bufio.Reader) (string, error) {\n    headerBytes, _ := reader.Peek(4) //  \u8bfb\u53d6\u524d4\u4e2a\u5b57\u8282\u7684\u6570\u636e, \u5373\u6d88\u606f\u4f53\u957f\u5ea6\n    var msgLen int32\n    err := binary.Read(bytes.NewBuffer(headerBytes), binary.LittleEndian, &msgLen)\n    if err != nil {\n        return "", err\n    }\n\n    //\u82e5\u8bfb\u53d6\u51fa\u6765\u7684\u6d88\u606f\u603b\u5171\u957f\u5ea6\u5927\u4e8e\u5b9e\u9645\u957f\u5ea6\n    if msgLen+4 > int32(reader.Buffered()) {\n        return "", err\n    }\n\n    // \u8bfb\u53d6\u6d88\u606f\u4f53\n    pack := make([]byte, int(4+msgLen))\n    reader.Read(pack)\n\n    return string(pack[4:]), nil\n}\n\n\n// server\n\ntype Server struct {\n}\n\nfunc (s *Server) Up()  {\n    listener, _ := net.Listen("tcp", ":30000")\n    defer func() {\n        _ = listener.Close()\n        log.Println("server is down")\n    }()\n\n    log.Println("server is up")\n\n    for {\n        accept, _ := listener.Accept()\n\n\n        go func() {\n            defer func() {\n                _ = accept.Close()\n            }()\n            log.Println("new conn: ", accept.RemoteAddr())\n\n            reader := bufio.NewReader(accept)\n            //var buf [1024]byte\n            //for {\n            //  offset, err := reader.Read(buf[:])\n            //  if err == io.EOF {\n            //      break\n            //  }\n            //  if err != nil {\n            //      log.Println("read from client failed, err: ", err)\n            //      break\n            //  }\n            //\n            //  log.Println("msg from client: ", string(buf[:offset]))\n            //}\n\n            for {\n                decode, err := Decode(reader)\n                if err == io.EOF {\n                    break\n                }\n                if err != nil {\n                    log.Println("read from client failed, err: ", err)\n                    break\n                }\n                log.Println("msg from client: ", decode)\n            }\n        }()\n    }\n}\n\n\n// client\n\ntype Client struct {\n\n}\n\nfunc (c Client) Up() {\n    conn, _ := net.Dial("tcp", "127.0.0.1:30000")\n    defer conn.Close()\n    for i := 0; i < 10; i++ {\n        //conn.Write([]byte("hello1, hello2"))\n        encode, _ := Encode("hello1, hello2")\n        conn.Write(encode)\n    }\n}\n')),(0,i.kt)("h3",{id:"6322-udp"},"6.32.2. udp"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\u5728golang\u4e2d\u7684UDPConn\u5206\u4e3aconnected\u548cunconnected.\n\u5982\u679c*UDPConn\u662fconnected,\u8bfb\u5199\u65b9\u6cd5\u662fRead\u548cWrite\u3002\n\u5982\u679c*UDPConn\u662funconnected,\u8bfb\u5199\u65b9\u6cd5\u662fReadFromUDP\u548cWriteToUDP\uff08\u4ee5\u53caReadFrom\u548cWriteTo)\u3002\nDialUDP\u4e2d\u7684UDPConn\u4e3aconnected\u662f\u4e0d\u80fd\u8c03\u7528WriteToUDP\u53d1\u9001\u7ed9\u67d0\u4e2a\u5730\u5740.\nListenUDP\u4e2d\u7684UDPCon\u4e3aunconnected,\u76f4\u63a5\u53ef\u4ee5\u8c03\u7528WriteToUDP\u53d1\u9001\u7ed9\u67d0\u4e2a\u5730\u5740.\nGo\u7684\u8fd9\u79cd\u8bbe\u8ba1\u548cUnix/Linux\u8bbe\u8ba1\u4e00\u81f4,\n*/\n")),(0,i.kt)("h2",{id:"633-websocket"},"6.33. websocket"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/joewalnes/websocketd"},"https://github.com/joewalnes/websocketd")),(0,i.kt)("h2",{id:"634-unicode-\u5305"},"6.34. Unicode \u5305"),(0,i.kt)("p",null,"Unicode \u662f\u4e00\u79cd\u5b57\u7b26\u96c6(code point), \u5176\u4ed6\u8fd8\u6709 ISO8859-1..."),(0,i.kt)("p",null,"utf8\u662f Unicode \u7684\u5b58\u50a8\u5b9e\u73b0 (\u8f6c\u6362\u4e3a\u5b57\u8282\u6570\u7ec4\u7684\u89c4\u5219)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u5b57\u7b26\u5904\u7406\u51fd\u6570\n\u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\uff1a unicode.IsLetter(v)\n\u5224\u65ad\u662f\u5426\u4e3a\u5341\u8fdb\u5236\u6570\u5b57\uff1a unicode.IsDigit(v)\n\u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\uff1a unicode.IsNumber(v)\n\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u767d\u7b26\u53f7\uff1a unicode.IsSpace(v)\n\u5224\u65ad\u662f\u5426\u4e3aUnicode\u6807\u70b9\u5b57\u7b26 :unicode.IsPunct(v)\n")),(0,i.kt)("h2",{id:"635-time-\u5305"},"6.35. time \u5305"),(0,i.kt)("h3",{id:"6351-\u5b9a\u65f6\u5668"},"6.35.1. \u5b9a\u65f6\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\nfunc TestTime(t *testing.T) {\n    // \u5b9a\u65f6\u95f9\u949f, \u83b7\u53d6\u4e00\u4e2a chan Time, \u4ece\u5f53\u524d\u5f00\u59cb, \u8fc7 3s \u53d6\u4e00\u4e2a time\n    for range time.Tick(time.Second*3) {\n        println("hello")\n    }\n\n    // \u6216\u8005\u901a\u8fc7  time.After(xxx)\n}\n\n\n')),(0,i.kt)("h3",{id:"6352-\u7edf\u8ba1\u8fd0\u884c\u65f6\u95f4"},"6.35.2. \u7edf\u8ba1\u8fd0\u884c\u65f6\u95f4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u7edf\u8ba1\u51fd\u6570\u6267\u884c\u65f6\u95f4\nstart := time.Now()\nlongCalculation()\nend := time.Now()\ndelta := end.Sub(start)\n\n// \u6216\u8005\ndefer func(t time.Time) {\n    fmt.Printf("--- Time Elapsed (%s): %v ---\\n", \n        getFunctionName(f), time.Since(t))\n}(time.Now())\n\n')),(0,i.kt)("h3",{id:"6353-\u65f6\u95f4\u521d\u59cb\u5316"},"6.35.3. \u65f6\u95f4\u521d\u59cb\u5316"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},' // func Now() Time\n      fmt.Println(time.Now())\n\n      // func Parse(layout, value string) (Time, error)\n      time.Parse("2016-01-02 15:04:05", "2020-10-23 12:24:51")\n\n      // func ParseInLocation(layout, value string, loc *Location) (Time, error) (layout\u5df2\u5e26\u65f6\u533a\u65f6\u53ef\u76f4\u63a5\u7528Parse)\n      time.ParseInLocation("2006-01-02 15:04:05", "2020-10-23 14:06:06", time.Local)\n\n      // func Unix(sec int64, nsec int64) Time\n      time.Unix(1e9, 0)\n\n      // func Date(year int, month Month, day, hour, min, sec, nsec int, loc *Location) Time\n      time.Date(2018, 1, 2, 15, 30, 10, 0, time.Local)\n\n      // func (t Time) In(loc *Location) Time \u5f53\u524d\u65f6\u95f4\u5bf9\u5e94\u6307\u5b9a\u65f6\u533a\u7684\u65f6\u95f4\n      loc, _ := time.LoadLocation("America/Los_Angeles")\n      fmt.Println(time.Now().In(loc))\n\n      // func (t Time) Local() Time\n')),(0,i.kt)("h3",{id:"6354-\u65f6\u95f4\u683c\u5f0f\u5316-\u65f6\u533a-\u52a0\u51cf"},"6.35.4. \u65f6\u95f4\u683c\u5f0f\u5316 \u65f6\u533a \u52a0\u51cf"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u683c\u5f0f\u5316, \u53ea\u80fd\u4f7f\u7528\u56fa\u5b9a\u7684\u51e0\u4e2a\u6570\u7ec4, \u5373 2006 01 02 15 04 05 (0 \u53ef\u4ee5\u53bb\u6389), \u82e5\u679c\u5e0c\u671b 12 \u5c0f\u65f6\u5236, 15 \u6539\u6210 03\n// \n// \u63a5\u6536\u5b57\u7b26\u4e32, \u4e5f\u63a5\u6536 time \u5305\u4e2d\u4e5f\u7ed9\u4e86\u4e00\u4e9b\u6211\u4eec\u5e38\u7528\u7684\u683c\u5f0f\n/*\n                const (\n                        ANSIC       = "Mon Jan _2 15:04:05 2006"\n                        UnixDate    = "Mon Jan _2 15:04:05 MST 2006"\n                        RubyDate    = "Mon Jan 02 15:04:05 -0700 2006"\n                        RFC822      = "02 Jan 06 15:04 MST"\n                        RFC822Z     = "02 Jan 06 15:04 -0700" // RFC822 with numeric zone\n                        RFC850      = "Monday, 02-Jan-06 15:04:05 MST"\n                        RFC1123     = "Mon, 02 Jan 2006 15:04:05 MST"\n                        RFC1123Z    = "Mon, 02 Jan 2006 15:04:05 -0700" // RFC1123 with numeric zone\n                        RFC3339     = "2006-01-02T15:04:05Z07:00"\n                        RFC3339Nano = "2006-01-02T15:04:05.999999999Z07:00"\n                        Kitchen     = "3:04PM"\n                        // Handy time stamps.\n                        Stamp      = "Jan _2 15:04:05"\n                        StampMilli = "Jan _2 15:04:05.000"\n                        StampMicro = "Jan _2 15:04:05.000000"\n                        StampNano  = "Jan _2 15:04:05.000000000"\n                )     \n*/\nfmt.println(now.format("2006-01-02 15:04:05"))\nfmt.println(now.format("2006-01-02 03:04:05 PM"))\n// \u7cbe\u786e\u5230\u6beb\u79d2\nfmt.println(now.format("2006-01-02 03:04:05.000 PM"))\n\n\n\n// \u65f6\u95f4\u8f6c\u6362\u683c\u5f0f\nbeforeTimeS := beforeTime.Unix() // \u79d2\u65f6\u95f4\u6233\nbeforeDate := time.Unix(beforeTimeS, 0).Format("20060102150405") // \u56fa\u5b9a\u683c\u5f0f\u7684\u65e5\u671f\u65f6\u95f4\u6233\n\n\n\n// \u65f6\u533a\n// \u6839\u636e\u5b57\u7b26\u4e32\u5373\u7cfb\u7b26\u5408\u672c\u5730\u65f6\u533a\u7684\u65f6\u95f4\nlocale, err := time.loadLocale("Asia/Shanghai")\nt :=time.parseInLocation("2006-01-02 03:04:05 pm", timeStr, locale)\n// \u65f6\u533a\n    //timeZone, _ := time.LoadLocation(ServerInfo["timezone"])\n    timeZone := time.FixedZone("CST", 8*3600) // \u4e1c\u516b\u533a\n\n\n\n// \u524d21\u5929\n    nowTime := time.Now().In(timeZone)\n    beforeTime := nowTime.AddDate(0, 0, 21)\n\n\n// Add \u65f6\u95f4\u76f8\u52a0\n    now := time.Now()\n    // ParseDuration parses a duration string.\n    // A duration string is a possibly signed sequence of decimal numbers,\n    // each with optional fraction and a unit suffix,\n    // such as "300ms", "-1.5h" or "2h45m".\n    //  Valid time units are "ns", "us" (or "\xb5s"), "ms", "s", "m", "h".\n    // 10\u5206\u949f\u524d\n    m, _ := time.ParseDuration("-1m")\n    m1 := now.Add(m)\n    fmt.Println(m1)\n\n    // 8\u4e2a\u5c0f\u65f6\u524d\n    h, _ := time.ParseDuration("-1h")\n    h1 := now.Add(8 * h)\n    fmt.Println(h1)\n\n    // \u4e00\u5929\u524d\n    d, _ := time.ParseDuration("-24h")\n    d1 := now.Add(d)\n    fmt.Println(d1)\n\n    printSplit(50)\n\n    // 10\u5206\u949f\u540e\n    mm, _ := time.ParseDuration("1m")\n    mm1 := now.Add(mm)\n    fmt.Println(mm1)\n\n    // 8\u5c0f\u65f6\u540e\n    hh, _ := time.ParseDuration("1h")\n    hh1 := now.Add(hh)\n    fmt.Println(hh1)\n\n    // \u4e00\u5929\u540e\n    dd, _ := time.ParseDuration("24h")\n    dd1 := now.Add(dd)\n    fmt.Println(dd1)\n\n')),(0,i.kt)("h2",{id:"636-math-\u5305"},"6.36. math \u5305"),(0,i.kt)("h3",{id:"6361-\u968f\u673a\u503c"},"6.36.1. \u968f\u673a\u503c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u968f\u673a\u5b57\u7b26\u4e32\nfunc main() {\n    fmt.Println(RandString(10))\n}\n\nvar source = rand.NewSource(time.Now().UnixNano())\n\nconst charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"\n\nfunc RandString(length int) string {\n    b := make([]byte, length)\n    for i := range b {\n        b[i] = charset[source.Int63()%int64(len(charset))]\n    }\n    return string(b)\n}\n\n\n\n// \u6216\u8005\nrand.Seed(time.Now().UnixNano())\nnums := make([]int, 0, n)\nfor i := 0; i < n; i++ {\n    nums = append(nums, rand.Int())\n}\n')),(0,i.kt)("h3",{id:"6362-\u7cbe\u5bc6\u8ba1\u7b97\u548c-big-\u5305"},"6.36.2. \u7cbe\u5bc6\u8ba1\u7b97\u548c big \u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u5982\u679c\u5bf9\u7cbe\u5ea6\u6ca1\u6709\u8981\u6c42\uff0cfloat32 \u6216\u8005 float64 \u53ef\u4ee5\u80dc\u4efb, \u8fd4\u56de\u7ed3\u679c\u5c06\u7cbe\u786e\u5230 15 \u4f4d\uff0c\uff0c\u4f46\u5982\u679c\u5bf9\u7cbe\u5ea6\u6709\u4e25\u683c\u8981\u6c42\u7684\u65f6\u5019\n")),(0,i.kt)("h2",{id:"637-\u6570\u636e\u5e93\u64cd\u4f5c"},"6.37. \u6570\u636e\u5e93\u64cd\u4f5c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"")),(0,i.kt)("h2",{id:"638-runtime\u5305"},"6.38. runtime\u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u663e\u5f0f\u7684\u89e6\u53d1 GC\nruntime.GC() \n//\u53ea\u5728\u67d0\u4e9b\u7f55\u89c1\u7684\u573a\u666f\u4e0b\u624d\u6709\u7528\uff0c\u6bd4\u5982\u5f53\u5185\u5b58\u8d44\u6e90\u4e0d\u8db3\u65f6, \u5b83\u4f1a\u5728\u6b64\u51fd\u6570\u6267\u884c\u7684\u70b9\u4e0a\u7acb\u5373\u91ca\u653e\u4e00\u5927\u7247\u5185\u5b58\uff0c\u6b64\u65f6\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u6709\u77ed\u65f6\u7684\u6027\u80fd\u4e0b\u964d\uff08\u56e0\u4e3a GC \u8fdb\u7a0b\u5728\u6267\u884c\uff09\n\n\n\n// \u83b7\u53d6\u5f53\u524d\u4ee3\u7801\u6267\u884c\u7684\u4f4d\u7f6e\nfunc TestLog(t *testing.T) {\n    writeLog := func(format string, params ...interface{}) {\n        _, file, line, _ := runtime.Caller(1) // skip \u51b3\u5b9a\u4ece\u54ea\u4e00\u5c42 stack frame \u5f00\u59cb\u8bb0\u5f55\n                                                // 0 \u8868\u793a\u8bb0\u5f55\u6700\u5e95\u5c42, \u4e5f\u5c31\u662f writeLog \u5b9a\u4e49\u7684\u5730\u65b9, \u8fd9\u662f\u65e0\u6548\u7684\n                                                // 1 \u8868\u793a\u8bb0\u5f55\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u5730\u65b9, \u8fd9\u4e2a\u624d\u662f\u5408\u9002\u7684\n\n        var formatNew strings.Builder\n        formatNew.WriteString("%v:%d")\n        formatNew.WriteString(format)\n\n        log.Printf(formatNew.String(), append([]interface{}{file, line}, params...))\n    }\n\n    for {\n        i := "hello"\n        writeLog("%v", i)\n        time.Sleep(time.Second*3)\n    }\n}\n\n\n\n\n// \u5f53\u524d\u5185\u5b58\u72b6\u6001\nvar m runtime.MemStats\nruntime.ReadMemStats(&m)\nfmt.Printf("%d Kb\\n", m.Alloc / 1024)\n\n\n\n// \u5728\u4e00\u4e2a\u5bf9\u8c61 obj \u88ab\u4ece\u5185\u5b58\u79fb\u9664\u524d\u6267\u884c\u4e00\u4e9b\u7279\u6b8a\u64cd\u4f5c\uff0c\u6bd4\u5982\u5199\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\nruntime.SetFinalizer(obj, func(obj *typeObj))\n\n\n// \u8ba9\u51faCPU\u65f6\u95f4\u7247\uff0c\u91cd\u65b0\u7b49\u5f85\u5b89\u6392\u4efb\u52a1\nruntime.Gosched()\n\n// \u9000\u51fa\u5f53\u524d\u534f\u7a0b\n// runtime.goexit() \u53ea\u662f\u9000\u51fa\u5f53\u524d\u7684goroutinue  os.exit()\u4f1a\u9000\u51fa\u4e3b\u8fdb\u7a0b\n/*\nos.Exit\u8df3\u8fc7\u5ef6\u8fdf\u51fd\u6570\u7684\u6267\u884c\n\u4f7f\u7528os.Exit\uff0c\u53ef\u4ee5\u6307\u5b9a\u9000\u51fa\u4ee3\u78010, 1\npanic \u4f1a\u6253\u5370\u5806\u6808\n\n\u4e00\u822c\u63a8\u8350 panic\n*/\n runtime.Goexit()\n\n// \u786e\u5b9a\u9700\u8981\u4f7f\u7528\u591a\u5c11\u4e2aOS\u7ebf\u7a0b\u6765\u540c\u65f6\u6267\u884cGo\u4ee3\u7801, \u9ed8\u8ba4\u503c\u662f\u673a\u5668\u4e0a\u7684CPU\u6838\u5fc3\u6570\n runtime.GOMAXPROCS(n)\n')),(0,i.kt)("h2",{id:"639-flag\u5305"},"6.39. flag\u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// flag\u5e93\u652f\u6301\u4e09\u79cd\u547d\u4ee4\u884c\u9009\u9879\u683c\u5f0f:\n// -\u548c--\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5b83\u4eec\u7684\u4f5c\u7528\u662f\u4e00\u6837\u7684\n\n-flag       // \u53ea\u652f\u6301\u5e03\u5c14\u7c7b\u578b\u7684\u9009\u9879\uff0c\u51fa\u73b0\u5373\u4e3atrue\uff0c\u4e0d\u51fa\u73b0\u4e3a\u9ed8\u8ba4\u503c\n-flag=x\n-flag x     // \u4e0d\u652f\u6301\u5e03\u5c14\u7c7b\u578b\u7684\u9009\u9879\n\n\u6240\u4ee5\u6700\u4fdd\u9669\u7684\u7528\u6cd5\u8fd8\u662f\u63a8\u8350 `--flag=xxx`\n\n\n\n// \u793a\u4f8b\nvar (\n    debug bool\n    conf string\n)\n\n//go run main.go -conf=xx -debug=true -- aa bb cc \nfunc main() {\n    flag.StringVar(&conf, "conf", "./config.toml", "config file")\n    flag.BoolVar(&debug, "debug", false, "debug mode")\n\n    flag.Parse()\n\n    log.Println(debug) // true\n    log.Println(conf) // xx\n\n    args := flag.Args()\n    count := flag.NArg()\n    log.Println(args) //  [aa bb cc]\n    log.Println(count) // 3\n}\n\n\n// \u81ea\u5b9a\u4e49\u89e3\u6790\u7c7b\u578b\n// https://darjun.github.io/2020/01/10/godailylib/flag/\n\n')),(0,i.kt)("h2",{id:"640-embed-\u5305"},"6.40. embed \u5305"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.flysnow.org/2021/02/28/golang-embed-for-web.html"},"https://www.flysnow.org/2021/02/28/golang-embed-for-web.html")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rakyll/statik"},"https://github.com/rakyll/statik")," \u5f00\u6e90\u5305"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/tmc/reactssr"},"https://github.com/tmc/reactssr")," \u670d\u52a1\u7aef\u6e32\u67d3"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/dstotijn/golang-nextjs-portable"},"https://github.com/dstotijn/golang-nextjs-portable")," \u548c nextjs \u7ed3\u5408"),(0,i.kt)("h3",{id:"6401-\u5185\u5d4c-react-\u9875\u9762"},"6.40.1. \u5185\u5d4c react \u9875\u9762"),(0,i.kt)("p",null,"\u65b0\u5efa ui \u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u5c06 ui \u5305\u4e0b build \u6587\u4ef6\u5939\u6dfb\u52a0\u5230 uiFs \u5185\u5d4c\u6587\u4ef6\u7cfb\u7edf\u4e0b\n//go:embed build\nvar uiFs embed.FS\n\n// https://github.com/gin-gonic/gin/issues/1044\n// https://juejin.cn/post/7016538957231947813\n// https://github.com/gin-contrib/static/issues/19\ntype embedFileSystem struct {\n    http.FileSystem\n}\n\n// \u786e\u4fdd \u81ea\u5b9a\u4e49 struct \u5b9e\u73b0 ServeFileSystem\u63a5\u53e3\nvar _ static.ServeFileSystem = embedFileSystem{}\n\nfunc (efs embedFileSystem) Exists(prefix string, path string) bool {\n    _, err := efs.Open(path)\n    return err == nil\n}\n\nfunc NewEmbedFileSystem() static.ServeFileSystem {\n    f, err := fs.Sub(uiFs, "build")\n    if err != nil {\n        logx.Fatal("get embed fs sub failed, err: %v", err)\n    }\n    return embedFileSystem{\n        FileSystem: http.FS(f),\n    }\n}\n\n')),(0,i.kt)("p",null,"\u7136\u540e\u5728 router \u4e2d (\u9700\u8981\u548c gin \u7684 static \u4e2d\u95f4\u4ef6\u914d\u5408)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// \u9759\u6001\u6587\u4ef6\n    r.Use(static.Serve("/", ui.NewEmbedFileSystem()))\n\n')),(0,i.kt)("h2",{id:"641-\u7f16\u8bd1\u65f6\u751f\u6210-\u7f16\u8bd1\u65f6\u7ea6\u675f-go-generate-go-build"},"6.41. \u7f16\u8bd1\u65f6\u751f\u6210 \u7f16\u8bd1\u65f6\u7ea6\u675f go-generate go-build"),(0,i.kt)("p",null,"TODO"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"go:generate\n\ngo:build\n")),(0,i.kt)("h1",{id:"7-\u5de5\u7a0b\u5b9e\u8df5-\u7f16\u7a0b\u601d\u7ef4"},"7. \u5de5\u7a0b\u5b9e\u8df5 \u7f16\u7a0b\u601d\u7ef4"),(0,i.kt)("h2",{id:"71-\u8bbe\u8ba1\u6a21\u5f0f"},"7.1. \u8bbe\u8ba1\u6a21\u5f0f"),(0,i.kt)("h3",{id:"711-\u521b\u5efa\u578b"},"7.1.1. \u521b\u5efa\u578b"),(0,i.kt)("h4",{id:"7111-\u7b80\u5355\u5de5\u5382"},"7.1.1.1. \u7b80\u5355\u5de5\u5382"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// NewXXX \u51fd\u6570\u8fd4\u56de\u63a5\u53e3\u65f6\u5c31\u662f\u7b80\u5355\u5de5\u5382\u6a21\u5f0f\n// Golang\u7684\u4e00\u822c\u63a8\u8350\u505a\u6cd5\u5c31\u662f\u7b80\u5355\u5de5\u5382\u3002\n\n//API is interface\ntype API interface {\n    Say(name string) string\n}\n\n//NewAPI return Api instance by type\nfunc NewAPI(t int) API {\n    if t == 1 {\n        return &hiAPI{} // hiApi \u5b9e\u73b0\u63a5\u53e3\n    } else if t == 2 {\n        return &helloAPI{} // \u5b9e\u73b0\u4e86\u63a5\u53e3\n    }\n    return nil\n}\n")),(0,i.kt)("h4",{id:"7112-\u5355\u4f8b"},"7.1.1.2. \u5355\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'/*\n\u5355\u4f8b\u6a21\u5f0f\u91c7\u7528\u4e86 \u997f\u6c49\u5f0f \u548c \u61d2\u6c49\u5f0f \u4e24\u79cd\u5b9e\u73b0\uff0c\u4e2a\u4eba\u5176\u5b9e\u66f4\u503e\u5411\u4e8e\u997f\u6c49\u5f0f\u7684\u5b9e\u73b0\uff0c\u7b80\u5355\uff0c\u5e76\u4e14\u53ef\u4ee5\u5c06\u95ee\u9898\u53ca\u65e9\u66b4\u9732\uff0c\u61d2\u6c49\u5f0f\u867d\u7136\u652f\u6301\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u4f46\u662f\u8fd9\u53ea\u662f\u628a\u51b7\u542f\u52a8\u65f6\u95f4\u653e\u5230\u4e86\u7b2c\u4e00\u6b21\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5e76\u6ca1\u6709\u672c\u8d28\u4e0a\u89e3\u51b3\u95ee\u9898\uff0c\u5e76\u4e14\u4e3a\u4e86\u5b9e\u73b0\u61d2\u6c49\u5f0f\u8fd8\u4e0d\u53ef\u907f\u514d\u7684\u9700\u8981\u52a0\u9501\u3002\n*/\n// Singleton \u997f\u6c49\u5f0f\u5355\u4f8b\n// \ntype Singleton struct{}\n\nvar singleton *Singleton\n\nfunc init() {\n    singleton = &Singleton{}\n}\n\n// GetInstance \u83b7\u53d6\u5b9e\u4f8b\nfunc GetInstance() *Singleton {\n    return singleton\n}\n\n// =================\n\n// GetLazyInstance \u61d2\u6c49\u5f0f\n// \nimport "sync"\n\nvar (\n    lazySingleton *Singleton\n    once          = &sync.Once{}\n)\n\nfunc GetLazyInstance() *Singleton {\n    if lazySingleton == nil {\n        once.Do(func() {\n            lazySingleton = &Singleton{}\n        })\n    }\n    return lazySingleton\n\n')),(0,i.kt)("h3",{id:"712-\u884c\u4e3a\u578b"},"7.1.2. \u884c\u4e3a\u578b"),(0,i.kt)("h4",{id:"7121-\u89c2\u5bdf\u8005"},"7.1.2.1. \u89c2\u5bdf\u8005"),(0,i.kt)("h5",{id:"71211-\u57fa\u672c\u793a\u4f8b"},"7.1.2.1.1. \u57fa\u672c\u793a\u4f8b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package observer\n\nimport "fmt"\n\n// ISubject subject\ntype ISubject interface {\n    Register(observer IObserver)\n    Remove(observer IObserver)\n    Notify(msg string)\n}\n\n// IObserver \u89c2\u5bdf\u8005\ntype IObserver interface {\n    Update(msg string)\n}\n\n// Subject Subject\ntype Subject struct {\n    observers []IObserver\n}\n\n// Register \u6ce8\u518c\nfunc (sub *Subject) Register(observer IObserver) {\n    sub.observers = append(sub.observers, observer)\n}\n\n// Remove \u79fb\u9664\u89c2\u5bdf\u8005\nfunc (sub *Subject) Remove(observer IObserver) {\n    for i, ob := range sub.observers {\n        if ob == observer {\n            sub.observers = append(sub.observers[:i], sub.observers[i+1:]...)\n        }\n    }\n}\n\n// Notify \u901a\u77e5\nfunc (sub *Subject) Notify(msg string) {\n    for _, o := range sub.observers {\n        o.Update(msg)\n    }\n}\n\n// Observer1 Observer1\ntype Observer1 struct{}\n\n// Update \u5b9e\u73b0\u89c2\u5bdf\u8005\u63a5\u53e3\nfunc (Observer1) Update(msg string) {\n    fmt.Printf("Observer1: %s", msg)\n}\n\n// Observer2 Observer2\ntype Observer2 struct{}\n\n// Update \u5b9e\u73b0\u89c2\u5bdf\u8005\u63a5\u53e3\nfunc (Observer2) Update(msg string) {\n    fmt.Printf("Observer2: %s", msg)\n}\n')),(0,i.kt)("h5",{id:"71212-\u5b9e\u73b0-event-bus"},"7.1.2.1.2. \u5b9e\u73b0 event bus"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u6211\u4eec\u5b9e\u73b0\u4e00\u4e2a\u652f\u6301\u4ee5\u4e0b\u529f\u80fd\u7684\u4e8b\u4ef6\u603b\u7ebf\n\n// \u5f02\u6b65\u4e0d\u963b\u585e\n// \u652f\u6301\u4efb\u610f\u53c2\u6570\u503c\n\n\n// Bus Bus\ntype Bus interface {\n    Subscribe(topic string, handler interface{}) error\n    Publish(topic string, args ...interface{})\n}\n\n// AsyncEventBus \u5f02\u6b65\u4e8b\u4ef6\u603b\u7ebf\ntype AsyncEventBus struct {\n    // \u5b58\u50a8 topic  \u548c function \u7684\u6620\u5c04\n    handlers map[string][]reflect.Value\n    lock     sync.Mutex\n}\n\nfunc NewAsyncEventBus() *AsyncEventBus {\n    return &AsyncEventBus{\n        handlers: map[string][]reflect.Value{},\n        lock:     sync.Mutex{},\n    }\n}\n\n// Subscribe \u8ba2\u9605\nfunc (bus *AsyncEventBus) Subscribe(topic string, f interface{}) error {\n    bus.lock.Lock()\n    defer bus.lock.Unlock()\n\n    v := reflect.ValueOf(f)\n    if v.Type().Kind() != reflect.Func {\n        return fmt.Errorf("handler is not a function")\n    }\n\n    handler, ok := bus.handlers[topic]\n    if !ok {\n        handler = []reflect.Value{}\n    }\n    handler = append(handler, v)\n    bus.handlers[topic] = handler\n\n    return nil\n}\n\n// Publish \u53d1\u5e03\n// \u8fd9\u91cc\u5f02\u6b65\u6267\u884c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u7b49\u5f85\u8fd4\u56de\u7ed3\u679c\nfunc (bus *AsyncEventBus) Publish(topic string, args ...interface{}) {\n    handlers, ok := bus.handlers[topic]\n    if !ok {\n        fmt.Println("not found handlers in topic:", topic)\n        return\n    }\n\n    params := make([]reflect.Value, len(args))\n    for i, arg := range args {\n        params[i] = reflect.ValueOf(arg)\n    }\n\n    for i := range handlers {\n        go handlers[i].Call(params)\n    }\n}\n\n')),(0,i.kt)("h3",{id:"713-\u7ed3\u6784\u578b"},"7.1.3. \u7ed3\u6784\u578b"),(0,i.kt)("h4",{id:"7131-\u4ee3\u7406\u6a21\u5f0f"},"7.1.3.1. \u4ee3\u7406\u6a21\u5f0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u9759\u6001\u4ee3\u7406\n\npackage proxy\n\nimport (\n    "log"\n    "time"\n)\n\n// IUser IUser\ntype IUser interface {\n    Login(username, password string) error\n}\n\n// User \u7528\u6237\ntype User struct {\n}\n\n// Login \u7528\u6237\u767b\u5f55\nfunc (u *User) Login(username, password string) error {\n    // \u4e0d\u5b9e\u73b0\u7ec6\u8282\n    return nil\n}\n\n// UserProxy \u4ee3\u7406\u7c7b\ntype UserProxy struct {\n    user *User\n}\n\n// NewUserProxy NewUserProxy\nfunc NewUserProxy(user *User) *UserProxy {\n    return &UserProxy{\n        user: user,\n    }\n}\n\n// Login \u767b\u5f55\uff0c\u548c user \u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3\nfunc (p *UserProxy) Login(username, password string) error {\n    // before \u8fd9\u91cc\u53ef\u80fd\u4f1a\u6709\u4e00\u4e9b\u7edf\u8ba1\u7684\u903b\u8f91\n    start := time.Now()\n\n    // \u8fd9\u91cc\u662f\u539f\u6709\u7684\u4e1a\u52a1\u903b\u8f91\n    if err := p.user.Login(username, password); err != nil {\n        return err\n    }\n\n    // after \u8fd9\u91cc\u53ef\u80fd\u4e5f\u6709\u4e00\u4e9b\u76d1\u63a7\u7edf\u8ba1\u7684\u903b\u8f91\n    log.Printf("user login cost time: %s", time.Now().Sub(start))\n\n    return nil\n}\n\n\n\n// \u52a8\u6001\u4ee3\u7406\n// \u53ef\u7528 go generate \u5b9e\u73b0\n\n')),(0,i.kt)("h2",{id:"72-\u8c03\u8bd5-debug"},"7.2. \u8c03\u8bd5 debug"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-delve/delve"},"https://github.com/go-delve/delve")),(0,i.kt)("h2",{id:"73-\u6a21\u5757\u62c6\u5206"},"7.3. \u6a21\u5757\u62c6\u5206"),(0,i.kt)("h3",{id:"731-\u6309\u7167-mvc-\u6a21\u5f0f\u62c6\u5206"},"7.3.1. \u6309\u7167 mvc \u6a21\u5f0f\u62c6\u5206"),(0,i.kt)("p",null,"Ruby(ruby on Rails) \u548c Java (springMVc) \u662f\u6309\u7167 mvc \u6a21\u5f0f\u62c6\u5206, \u5c06\u670d\u52a1\u4e2d\u7684\u4e0d\u540c\u7ec4\u4ef6\u5206\u6210\u4e86 Model\u3001View \u548c Controller \u4e09\u5c42"),(0,i.kt)("p",null,"golang \u4e2d, Beego \u6846\u67b6\u5c31\u662f\u6309\u7167 mvc \u6a21\u5f0f\u5212\u5206\u6a21\u5757\u7684"),(0,i.kt)("h3",{id:"732-\u6309\u7167\u804c\u8d23\u5bf9\u8fdb\u884c\u62c6\u5206"},"7.3.2. \u6309\u7167\u804c\u8d23\u5bf9\u8fdb\u884c\u62c6\u5206"),(0,i.kt)("p",null,"\u8fd9\u6837\u6709\u4e00\u4e2a\u5de8\u5927\u7684\u597d\u5904: \u975e\u5e38\u5bb9\u6613\u5bf9\u5fae\u670d\u52a1\u8fdb\u884c\u62c6\u5206\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5c06\u4e00\u4e2a\u8d1f\u8d23\u72ec\u7acb\u529f\u80fd\u7684 package \u62c6\u51fa\u53bb\uff0c\u5bf9\u8fd9\u90e8\u5206\u6027\u80fd\u70ed\u70b9\u5355\u72ec\u8fdb\u884c\u6269\u5bb9\uff1b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u4f8b\u5982\u5bf9\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u5e38\u89c1\u7684\u535a\u5ba2\u7cfb\u7edf, golang \u4f1a\u8fd9\u4e48\u5212\u5206\n$ tree pkg\npkg\n\u251c\u2500\u2500 comment\n\u251c\u2500\u2500 post\n\u2502   \u251c\u2500\u2500 handler.go\n\u2502   \u2514\u2500\u2500 post.go\n\u2514\u2500\u2500 user\n\n# \u5982\u679c\u6211\u4eec\u5728 Go \u8bed\u8a00\u4e2d\u4f7f\u7528 model\u3001view \u548c controller \u6765\u5212\u5206\u5c42\u7ea7\uff0c\u4f60\u4f1a\u5728\u5176\u4ed6\u7684\u6a21\u5757\u4e2d\u770b\u5230\u975e\u5e38\u591a\u7684 model.Post\u3001model.Comment \u548c view.PostView, \u663e\u5f97\u975e\u5e38\u5197\u4f59\n")),(0,i.kt)("h3",{id:"733-\u6309\u4f9d\u8d56\u62c6\u5206"},"7.3.3. \u6309\u4f9d\u8d56\u62c6\u5206"),(0,i.kt)("h2",{id:"74-\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u89c4\u8303"},"7.4. \u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u89c4\u8303"),(0,i.kt)("p",null,"\u53e6\u4e00\u79cd\u5728 Go \u8bed\u8a00\u4e2d\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u5c31\u662f\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u653e\u9879\u76ee\u7684\u4ee3\u7801(\u5e73\u94fa)\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5728\u5f88\u591a\u6846\u67b6\u6216\u8005\u5e93\u4e2d\u975e\u5e38\u5e38\u89c1, \u51cf\u5c11\u4e86\u5f15\u7528\u4f9d\u8d56\u5305 import \u8bed\u53e5\u7684\u957f\u5ea6"),(0,i.kt)("p",null,"\u82e5\u679c\u662f\u5f00\u53d1\u7684\u9876\u5c42\u5e94\u7528, \u5219\u662f\u4e0b\u9762\u8fd9\u79cd\u5e03\u5c40:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# https://github.com/golang-standards/project-layout\n\n\u251c\u2500\u2500 LICENSE.md\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 api         # \u5bf9\u5916\u63d0\u4f9b\u7684\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 API \u63a5\u53e3\u5b9a\u4e49\u6587\u4ef6\n\u251c\u2500\u2500 assets      #\u4e0e\u5b58\u50a8\u5e93\u4e00\u8d77\u4f7f\u7528\u7684\u5176\u4ed6\u8d44\u4ea7(\u56fe\u50cf\u3001\u5fbd\u6807\u7b49)\u3002\n\u251c\u2500\u2500 build       # \u6253\u5305\u548c\u6301\u7eed\u96c6\u6210, \u5c06\u4f60\u7684\u4e91( AMI )\u3001\u5bb9\u5668( Docker )\u3001\u64cd\u4f5c\u7cfb\u7edf( deb\u3001rpm\u3001pkg )\u5305\u914d\u7f6e\u548c\u811a\u672c\u653e\u5728 /build/package \u76ee\u5f55\u4e0b, \u5c06\u4f60\u7684 CI (travis\u3001circle\u3001drone)\u914d\u7f6e\u548c\u811a\u672c\u653e\u5728 /build/ci \u76ee\u5f55\u4e2d\n\u251c\u2500\u2500 cmd         # \u5f53\u524d\u9879\u76ee\u4e2d\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u8be5\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u5b50\u76ee\u5f55\u90fd\u5e94\u8be5\u5305\u542b\u6211\u4eec\u5e0c\u671b\u6709\u7684\u53ef\u6267\u884c\u6587\u4ef6\n\u251c\u2500\u2500 configs     # \u914d\u7f6e\u6587\u4ef6\u6a21\u677f\u6216\u9ed8\u8ba4\u914d\u7f6e\n\u251c\u2500\u2500 deployments # IaaS\u3001PaaS\u3001\u7cfb\u7edf\u548c\u5bb9\u5668\u7f16\u6392\u90e8\u7f72\u914d\u7f6e\u548c\u6a21\u677f(docker-compose\u3001kubernetes/helm\u3001mesos\u3001terraform\u3001bosh)\u3002\u6ce8\u610f\uff0c\u5728\u4e00\u4e9b\u5b58\u50a8\u5e93\u4e2d(\u7279\u522b\u662f\u4f7f\u7528 kubernetes \u90e8\u7f72\u7684\u5e94\u7528\u7a0b\u5e8f)\uff0c\u8fd9\u4e2a\u76ee\u5f55\u88ab\u79f0\u4e3a /deploy\u3002\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 examples\n\u251c\u2500\u2500 githooks\n\u251c\u2500\u2500 init        # System init\uff08systemd\uff0cupstart\uff0csysv\uff09\u548c process manager/supervisor\uff08runit\uff0csupervisor\uff09\u914d\u7f6e\u3002\n\u251c\u2500\u2500 internal    # \u79c1\u6709\u4ee3\u7801 (\u771f\u6b63\u7684\u9879\u76ee\u4ee3\u7801, \u5f53\u6211\u4eec\u5728\u5176\u4ed6\u9879\u76ee\u5f15\u5165\u5305\u542b internal \u7684\u4f9d\u8d56\u65f6\uff0cGo \u8bed\u8a00\u4f1a\u5728\u7f16\u8bd1\u65f6\u62a5\u9519)\n\u251c\u2500\u2500 pkg         # \u9879\u76ee\u4e2d\u53ef\u4ee5\u88ab\u5916\u90e8\u5e94\u7528\u4f7f\u7528\u7684\u4ee3\u7801\u5e93 (\u5176\u4ed6\u7684\u9879\u76ee\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7 import \u5f15\u5165\u8fd9\u91cc\u7684\u4ee3\u7801, \u4e0d\u8fc7\u5982\u679c\u6211\u4eec\u5f00\u53d1\u7684\u662f HTTP \u6216\u8005 RPC \u7684\u63a5\u53e3\u670d\u52a1\u6216\u8005\u516c\u53f8\u7684\u5185\u90e8\u670d\u52a1\uff0c\u5c06\u79c1\u6709\u548c\u516c\u6709\u7684\u4ee3\u7801\u90fd\u653e\u5230 /pkg \u4e2d\u4e5f\u6ca1\u6709\u592a\u591a\u7684\u4e0d\u59a5\uff0c\u56e0\u4e3a\u4f5c\u4e3a\u6700\u9876\u5c42\u7684\u9879\u76ee\u6765\u8bf4\u5f88\u5c11\u4f1a\u88ab\u5176\u4ed6\u5e94\u7528\u76f4\u63a5\u4f9d\u8d56)\n\u251c\u2500\u2500 scripts     # \u811a\u672c\u6587\u4ef6, \u7531 Makefile \u89e6\u53d1, \u6267\u884c\u5404\u79cd\u6784\u5efa\u3001\u5b89\u88c5\u3001\u5206\u6790\u7b49\u64cd\u4f5c\n\u251c\u2500\u2500 test        # \u989d\u5916\u7684\u5916\u90e8\u6d4b\u8bd5\u5e94\u7528\u7a0b\u5e8f\u548c\u6d4b\u8bd5\u6570\u636e\n\u251c\u2500\u2500 third_party\n\u251c\u2500\u2500 tools       #\u8fd9\u4e2a\u9879\u76ee\u7684\u652f\u6301\u5de5\u5177\u3002\u6ce8\u610f\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u4ece /pkg \u548c /internal \u76ee\u5f55\u5bfc\u5165\u4ee3\u7801\n\u251c\u2500\u2500 vendor  # go mod vendor \u751f\u6210\n\u251c\u2500\u2500 web      # \u9759\u6001 Web \u8d44\u4ea7\n\u2514\u2500\u2500 website     # \u5982\u679c\u4f60\u4e0d\u4f7f\u7528 Github \u9875\u9762\uff0c\u5219\u5728\u8fd9\u91cc\u653e\u7f6e\u9879\u76ee\u7684\u7f51\u7ad9\u6570\u636e\n\n")),(0,i.kt)("h2",{id:"75-package-\u5bfc\u5165\u81ea\u5b9a\u4e49\u5305"},"7.5. package \u5bfc\u5165\u81ea\u5b9a\u4e49\u5305"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\npackage main //Programs start running in package main.\n// main \u5305 \u548c main \u51fd\u6570 \u544a\u8bc9 go\u7f16\u8bd1\u5668: \u8fd9\u662f\u4e00\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f, \u9700\u8981\u7f16\u8bd1\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\n\n// \u8fdc\u7a0b\u5305: import "github.com/xiaoyureed/xxx" ; \u4f1a\u5148\u641c\u7d22 gopath, \u5982\u679c\u6ca1\u6709, \u4f1a\u4f7f\u7528 go get github.com/xiaoyureed/xxx \u4e0b\u8f7d\u5230\u672c\u5730\n// \u5305\u91cd\u547d\u540d: import myfmt "mylib/fmt"\n// \u7279\u6b8a\u7684\u91cd\u547d\u540d: import _ "mylib/fmt" \u4e0d\u4f7f\u7528\u8fd9\u4e2a\u5305, \u4f46\u662f\u6267\u884c\u5305\u7684init()\n// import . "fmt" - \u5141\u8bb8\u5305\u5185\u7684\u5185\u5bb9\u4e0d\u52a0fmt\u524d\u7f00\u800c\u88ab\u88ab\u76f4\u63a5\u5f15\u7528\n//\n// import "xxx_package" --------- \u5355\u4e2a\u5305\u5bfc\u5165\nimport (\n    "bytes"\n    "fmt"\n    "io"\n    "math"\n    "math/cmplx" // \u4ee3\u7801\u4e2d\u7528\u5230\u7684\u53ea\u662f cmplx, \u800c\u4e0d\u662f math/cmplx, by convention, package name == last element of "import path"\n    "runtime"\n    "strings"\n    "sync"\n    "time"\n\n    "xiaoyureed.github.io/hello/xx" //go\u4ee3\u7801\u6587\u4ef6\u540d\u6ca1\u6709\u51fa\u73b0, \u76f4\u63a5\u901a\u8fc7\u5305\u540d\u8c03\u7528\u5bfc\u51fa\u7684\u51fd\u6570\n)\n\n// \u6bcf\u4e2apackage \u4e2d\u7684 init() \u603b\u662f\u6700\u5148\u6267\u884c\nfunc init() {\n    fmt.Println("init() executed")\n}\n\n\n// \u7f16\u8bd1\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u540d: main \u51fd\u6570 \u6240\u5728 \u7684go\u6587\u4ef6 \u7684\u540d\u5b57\nfunc main() {\n    fmt.Println("hello", "world")\n    xx.Hello() // \u4f7f\u7528\u81ea\u5b9a\u4e49\u5305\n\n    // beego.Run()\n\n    basicType()\n\n    funcDemo() // \u53d8\u91cfor\u65b9\u6cd5\u90fd\u5fc5\u987b\u5927\u5199\u624d\u80fd\u5728\u5305\u5916\u8bbf\u95ee\n\n}\n\n\n\u5982\u4f55\u5bfc\u5165\u81ea\u5b9a\u4e49\u5305\n\n\u8fd9\u5c31\u8981\u8bf4\u5230\u6a21\u5757\u540d\u79f0\u7684\u4f5c\u7528: \u7528\u6765\u5f15\u7528\u5f53\u524d\u9879\u76ee\u5185\u7684\u5176\u4ed6\u5305, \u5982: \u5728\u9879\u76ee\u4e0b\u65b0\u5efa\u76ee\u5f55 utils\uff0c\u521b\u5efa\u4e00\u4e2autils.go\u6587\u4ef6. \u90a3\u4e48 \u5728 main.go \u4e2d\u5c31\u80fd\u4f7f\u7528 `import "utils"` \u6765\u5f15\u7528 utils \u5305\n\n')),(0,i.kt)("h2",{id:"76-init-\u65b9\u6cd5"},"7.6. init \u65b9\u6cd5"),(0,i.kt)("h3",{id:"761-init\u4f7f\u7528"},"7.6.1. init\u4f7f\u7528"),(0,i.kt)("p",null,"golang \u4e2d, \u5bfc\u5165\u5305\u65f6, \u4f1a\u81ea\u52a8\u6267\u884c init \u65b9\u6cd5, \u4e00\u4e2a\u5305\u5c06\u53ea\u521d\u59cb\u5316\u4e00\u6b21(init \u4ec5\u4ec5\u6267\u884c\u4e00\u6b21)"),(0,i.kt)("p",null,"\u4e0d\u63a8\u8350\u5728 init \u4e2d\u521d\u59cb\u5316\u8d44\u6e90, \u56e0\u4e3a\u8fd9\u662f\u9690\u5f0f\u7684, \u4e0d\u591f\u76f4\u89c2"),(0,i.kt)("p",null,"\u4e00\u4e2a\u5305\u53ef\u4ee5\u6709\u591a\u4e2a init \u51fd\u6570 (\u5728\u5355\u4e2a\u6587\u4ef6\u4e2d\u6216\u5206\u5e03\u5728\u591a\u4e2a\u6587\u4ef6\u4e2d)\uff0c\u5e76\u4e14\u6309\u7167\u5b83\u4eec\u5448\u73b0\u7ed9\u7f16\u8bd1\u5668\u7684\u987a\u5e8f\u88ab\u8c03\u7528"),(0,i.kt)("p",null,"\u4e00\u4e9b\u6846\u67b6\u4f1a\u5728 init \u4e2d\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u4f7f\u7528\u7684\u524d\u7f6e\u6761\u4ef6, \u5982:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func init() {\n    if user == "" {\n        log.Fatal("$USER not set")\n    }\n    if home == "" {\n        home = "/home/" + user\n    }\n    if gopath == "" {\n        gopath = home + "/go"\n    }\n    // gopath may be overridden by --gopath flag on command line.\n    flag.StringVar(&gopath, "gopath", gopath, "override default GOPATH")\n}\n')),(0,i.kt)("h3",{id:"762-\u6267\u884c\u987a\u5e8f"},"7.6.2. \u6267\u884c\u987a\u5e8f"),(0,i.kt)("p",null,"\u521d\u59cb\u5316\u5305\u7684\u987a\u5e8f: import --\x3e const --\x3e var --\x3e init()"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u5982\u679c\u4e00\u4e2a\u5305\u5bfc\u5165\u4e86\u5176\u4ed6\u5305\uff0c\u5219\u9996\u5148\u521d\u59cb\u5316\u5bfc\u5165\u7684\u5305\u3002\n\n\u7136\u540e\u521d\u59cb\u5316\u5f53\u524d\u5305\u7684\u5e38\u91cf\u3002\n\n\u63a5\u4e0b\u6765\u521d\u59cb\u5316\u5f53\u524d\u5305\u7684\u53d8\u91cf\u3002\n\n\u6700\u540e\uff0c\u8c03\u7528\u5f53\u524d\u5305\u7684 init() \u51fd\u6570\u3002\n\n")),(0,i.kt)("h2",{id:"77-go-mod"},"7.7. go mod"),(0,i.kt)("h3",{id:"771-go-mod-\u7b80\u4ecb"},"7.7.1. go mod \u7b80\u4ecb"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://xuanwo.io/2019/05/27/go-modules/"},"https://xuanwo.io/2019/05/27/go-modules/"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://xuanwo.io/2019/08/22/go-modules-migrate/"},"https://xuanwo.io/2019/08/22/go-modules-migrate/"),"\nTODO"),(0,i.kt)("p",null,"\u5305\u7ba1\u7406: Golang\u7684\u5305\u7ba1\u7406\u7ecf\u8fc7\u4e86\u591a\u79cd\u5de5\u5177\u7684\u6f14\u53d8\uff0c\u4ecego vendor\uff0c\u5230 godep\uff0c\u518d\u5230dep. \u4ecego v1.11\u5f00\u59cb\u652f\u6301\u7684go Modules\u3002"),(0,i.kt)("p",null,"\u63a8\u8350 go mod, \u544a\u522b GOPATH"),(0,i.kt)("p",null,"go modules \u597d\u5904:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4e0d\u5fc5\u987b\u5c06\u9879\u76ee\u76ee\u5f55\u653e\u5728GOPATH\u4e2d"),(0,i.kt)("li",{parentName:"ul"},"\u9879\u76ee\u5185\u4f1a\u751f\u6210\u4e00\u4e2ago.mod\u6587\u4ef6\uff0c\u5217\u51fa\u5305\u4f9d\u8d56, \u81ea\u52a8\u4e0b\u8f7d\u4f9d\u8d56\u5305"),(0,i.kt)("li",{parentName:"ul"},"\u4e0d\u4f7f\u7528vendor\u76ee\u5f55\uff0c\u800c\u662f\u7edf\u4e00\u5b89\u88c5\u5230$GOPATH/pkg/mod/cache"),(0,i.kt)("li",{parentName:"ul"},"\u6240\u6709\u5f15\u5165\u8fdb\u6765\u7684\u7b2c\u4e09\u65b9\u5305\u4f1a\u51c6\u786e\u7684\u6307\u5b9a\u7248\u672c\u53f7"),(0,i.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5df2\u7ecf\u8f6c\u79fb\u7684\u5305\uff0c\u53ef\u4ee5\u7528replace \u7533\u660e\u66ff\u6362\uff0c\u4e0d\u9700\u8981\u6539\u4ee3\u7801",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5728\u56fd\u5185\u8bbf\u95eegolang.org/x\u7684\u5404\u4e2a\u5305\u90fd\u9700\u8981\u7ffb\u5899\uff0c\u4f60\u53ef\u4ee5\u5728go.mod\u4e2d\u4f7f\u7528replace\u66ff\u6362\u6210github\u4e0a\u5bf9\u5e94\u7684\u5e93\u3002\u5982 ",(0,i.kt)("inlineCode",{parentName:"li"},"replace golang.org/x/text v0.3.0 => github.com/golang/text v0.3.0")," \u5c06\u5f15\u5165\u6b63\u786e\u7684\u4f9d\u8d56")))),(0,i.kt)("h3",{id:"772-\u4f7f\u7528\u65b9\u6cd5-\u76f8\u5173\u547d\u4ee4"},"7.7.2. \u4f7f\u7528\u65b9\u6cd5 \u76f8\u5173\u547d\u4ee4"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5728 gopath \u5916\u90e8\u65b0\u5efa\u4e00\u4e2a folder \u4f5c\u4e3a\u6a21\u5757\u76ee\u5f55(\u540d\u79f0\u4e0d\u9650, \u4e00\u822c\u6307\u5b9a\u4e3a \u6a21\u5757\u540d\u79f0 \u5982 hello)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u8fdb\u5165\u540e ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod init xiaoyureed.github.io/hello")," (xiaoyureed.github.io \u8868\u793a\u6a21\u5757\u53d1\u5e03\u7684\u8def\u5f84, hello \u8868\u793a\u6a21\u5757\u540d), \u751f\u6210 go.mod \u6587\u4ef6, \u5185\u5bb9\u5305\u542b: module name (\u5373xiaoyureed.github.io/hello), go version, requires, \u7c7b\u6bd4 package.json (\u4e00\u822c\u4e0d\u7528\u624b\u52a8\u4fee\u6539 go.mod)")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u65b0\u5efa main \u6587\u4ef6, \u5f15\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},'import "github.com/astaxie/beego"'),", \u7136\u540e ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod tidy -v"),"(\u6574\u7406\u4f9d\u8d56\u5305\u5230 go.mod), \u53ef\u80fd\u9700\u8981 ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod download"),", \u7136\u540e main \u51fd\u6570\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"beego.Run()"),", \u76f4\u63a5\u8fd0\u884c ",(0,i.kt)("inlineCode",{parentName:"p"},"go run main.go")," "),(0,i.kt)("p",{parentName:"li"},"\u6216\u8005\u5148\u7f16\u8bd1 ",(0,i.kt)("inlineCode",{parentName:"p"},"go build")," (\u53ef\u4ee5 \u5148 ",(0,i.kt)("inlineCode",{parentName:"p"},"go mod tidy")," \u53bb\u9664\u4e0d\u8981\u7684\u4f9d\u8d56), \u751f\u6210 main \u6587\u4ef6, ./main \u6267\u884c (\u540c\u65f6, go build \u540e\u4ea7\u751f\u4e00\u4e2a\u540d\u4e3ago.sum\u7684\u6587\u4ef6, \u7c7b\u6bd4 package.lock)"),(0,i.kt)("p",{parentName:"li"},"\u4f9d\u8d56\u5305\u4f1a\u4e0b\u8f7d\u5230 ",(0,i.kt)("inlineCode",{parentName:"p"},"$GOPATH/pkg/mod")," \u4e0b"))),(0,i.kt)("p",null,"\u4e09\u65b9\u5e93\u7248\u672c\u53f7\u89c4\u5219?  \u5c31\u662f\u5305\u53d1\u5e03\u5230 github \u6807\u8bb0\u7684 tag\uff0c\u683c\u5f0f\u4e3a vn.n.n (n\u4ee3\u8868\u6570\u5b57), \u5728 github \u4ed3\u5e93\u7684release \u53ef\u4ee5\u770b\u5230. \u5982\u679c\u5305\u7684\u4f5c\u8005\u8fd8\u6ca1\u6709\u6807\u8bb0\u7248\u672c\uff0c\u9ed8\u8ba4\u4e3a v0.0.0, \u5728 go.mod \u4e2d\u6307\u5b9a, \u82e5\u6ca1\u6709\u6307\u5b9a, \u9ed8\u8ba4 \u4e3a latest"),(0,i.kt)("p",null,"\u4f9d\u8d56\u5730\u5740\u5931\u6548\u600e\u4e48\u529e: \u5728 go.mod \u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"replace golang.org/x/text => github.com/golang/text latest")," (\u524d\u8005\u8868\u793a\u8981\u66ff\u6362\u7684\u5730\u5740, \u540e\u8005\u8868\u793a\u65b0\u7684\u6709\u6548\u5730\u5740). \u539f\u7406\u5c31\u662f\u4e0b\u8f7d",(0,i.kt)("a",{parentName:"p",href:"http://github.com/golang/text"},"http://github.com/golang/text")," \u7684\u6700\u65b0\u7248\u672c\u5230 $GOPATH/pkg/mod/golang.org/x/text\u4e0b"),(0,i.kt)("p",null,"\u5f15\u5165\u7684\u4f9d\u8d56\u5728\u672c\u5730\u4e0d\u5728 github\u600e\u4e48\u529e? \u540c\u6837\u4f7f\u7528 ",(0,i.kt)("inlineCode",{parentName:"p"},"replace"),", \u9996\u5148\u5728 required \u4e0b\u6b63\u5e38\u5bfc\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},"require xxx/xx v0.0.0"),", \u518d\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"replace xxx/xx => /usr/local/xxx")," \u5373\u53ef"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"module xiaoyureed.github.io/log_collection\n\ngo 1.16\n\nrequire github.com/Shopify/sarama v1.19.0\n\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'\n\n# \u751f\u6210\u6a21\u5757, \u5c31\u662f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e00\u4e2a go.mod\n# go.mod \u6587\u4ef6\u7684\u51fa\u73b0\u5b9a\u4e49\u4e86\u5b83\u6240\u5728\u7684\u76ee\u5f55\u4e3a\u4e00\u4e2a\u6a21\u5757\u3002\u4e00\u4e2a\u9879\u76ee\u4e2d\uff0c\u4e0d\u540c\u6587\u4ef6\u5939\u90fd\u53ef\u4ee5\u6709go.mod \n# \u5305\u62ec mod name, go version\ngo mod init <mod name>\n\n#  \u4e0b\u8f7d\u4f9d\u8d56\u7684module\u5230\u672c\u5730cache\uff08\u9ed8\u8ba4\u4e3a$GOPATH/pkg/mod\u76ee\u5f55\uff09\n# \u4e0b\u8f7dmodules\u5230\u672c\u5730$GOPATH/pkg/mod\u548c \u200b$GOPATH/pkg/sum\ngo mod download\n\n# \u4e0b\u8f7d\u6307\u5b9a mod, \u6ca1\u6709 version \u5c31\u662f\u4e0b\u8f7d\u6700\u65b0\u7248, \n# GO111MODULE="auto" | "off", \u4f1a\u4e0b\u8f7d\u5230 go_path/src \u4e0b\n# GO111MODULE="on"\u4f1a\u5b89\u88c5\u5728GOPATH/pkg/mod/\u4e0b\uff0cimport\u5bfc\u5165\u975e\u6807\u51c6\u5305\u7684\u65f6\u5019\u662f\u4ece\u8fd9\u4e2a\u76ee\u5f55\u641c\u7d22\uff0c\u4e0d\u4f1a\u53bbGOPATH/src\u76ee\u5f55\u4e0b\u627e\u5305\u3002 \u6b64\u65f6\u7b49\u4ef7\u4e8e go mod download\ngo get github.com/gogf/gf@version\n# \u6307\u5b9a\u5206\u652f\ngo get github.com/gogf/gf@master\n\n\n\n# \u7f16\u8f91 go.mod\ngo mod edit\n# \u67e5\u770b\u5e2e\u52a9\ngo help mod edit\n\n# \u9a8c\u8bc1\u4f9d\u8d56\u662f\u5426\u6b63\u786e\ngo mod verify\n# \u4ee5\u6587\u672c\u6a21\u5f0f\u6253\u5370\u6a21\u5757\u4f9d\u8d56\u56fe\ngo mod graph\n# \u4f1a\u68c0\u6d4b\u8be5\u6587\u4ef6\u5939\u76ee\u5f55\u4e0b\u6240\u6709\u5f15\u5165\u7684\u4f9d\u8d56,\u5199\u5165 go.mod \u6587\u4ef6\n# \u6b64\u65f6\u4f9d\u8d56\u8fd8\u662f\u6ca1\u6709\u4e0b\u8f7d\u7684 , \u9700\u8981 go mod download \u624d\u4f1a\u4e0b\u8f7d\n# \u5220\u9664\u9519\u8bef\u6216\u8005\u4e0d\u4f7f\u7528\u7684modules\n# -v \u8868\u793a\u6253\u5370\u8be6\u7ec6\u8fc7\u7a0b\ngo mod tidy [-v]\n# \u751f\u6210vendor\u76ee\u5f55 , \u5c06\u4f9d\u8d56\u590d\u5236\u5230vendor\u4e0b\ngo mod vendor\n\ngo mod verify      \u6821\u9a8c\u4f9d\u8d56\n# \u67e5\u627e\u4f9d\u8d56\n#   \u89e3\u91ca\u4e3a\u4ec0\u4e48\u9700\u8981\u4f9d\u8d56\ngo mod why\n# \u6e05\u7406moudle \u7f13\u5b58\ngo clean -modcache\n\n# \u67e5\u770b\u53ef\u4e0b\u8f7d\u7248\u672c\ngo list -m -versions github.com/gogf/gf\ngo list -m -u all # \u6765\u68c0\u67e5\u53ef\u4ee5\u5347\u7ea7\u7684package\uff0c\ngo get -u <need-upgrade-package> #\u5347\u7ea7\u540e\u4f1a\u5c06\u65b0\u7684\u4f9d\u8d56\u7248\u672c\u66f4\u65b0\u5230go.mod * \ngo get -u #\u5347\u7ea7\u6240\u6709\u4f9d\u8d56\n')),(0,i.kt)("h3",{id:"773-go111module"},"7.7.3. GO111MODULE"),(0,i.kt)("p",null,"\u53ef\u4ee5\u628a\u9879\u76ee\u653e\u5728$GOPATH/src\u4e0b\u5417? \u53ef\u4ee5, go\u4f1a\u6839\u636eGO111MODULE\u7684\u503c\u800c\u91c7\u53d6\u4e0d\u540c\u7684\u5904\u7406\u65b9\u5f0f"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"auto \u81ea\u52a8\u6a21\u5f0f\u4e0b (\u9ed8\u8ba4)\uff0c\u9879\u76ee\u5728$GOPATH/src\u91cc\u4f1a\u4f7f\u7528$GOPATH/src\u7684\u4f9d\u8d56\u5305\uff0c\u5728$GOPATH/src\u5916\uff0c\u5c31\u4f7f\u7528go.mod \u91cc require\u7684\u5305"),(0,i.kt)("li",{parentName:"ul"},"on \u5f00\u542f\u6a21\u5f0f\uff0c1.12\u540e\uff0c\u65e0\u8bba\u5728$GOPATH/src\u91cc\u8fd8\u662f\u5728\u5916\u9762\uff0c\u90fd\u4f1a\u4f7f\u7528go.mod \u91cc require\u7684\u5305"),(0,i.kt)("li",{parentName:"ul"},"off \u5173\u95ed\u6a21\u5f0f\uff0c\u5c31\u662f\u8001\u89c4\u77e9\u3002")),(0,i.kt)("h3",{id:"774-\u4f9d\u8d56-\u95f4\u63a5\u4f9d\u8d56"},"7.7.4. \u4f9d\u8d56 \u95f4\u63a5\u4f9d\u8d56"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/juzipidemimi/article/details/104441398"},"https://blog.csdn.net/juzipidemimi/article/details/104441398")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u88ab\u6dfb\u52a0\u6ce8\u91ca\u7684\u5305\u80af\u5b9a\u662f\u95f4\u63a5\u4f9d\u8d56\u7684\u5305\uff0c\u800c\u6ca1\u6709\u6dfb\u52a0// indirect\u6ce8\u91ca\u7684\u5305\u5219\u662f\u76f4\u63a5\u4f9d\u8d56\u7684\u5305\uff0c\u5373\u660e\u786e\u7684\u51fa\u73b0\u5728\u67d0\u4e2aimport\u8bed\u53e5\u4e2d\n# \n# \u4e3a\u4ec0\u4e48\u9700\u8981\u95f4\u63a5\u4f9d\u8d56: Go module\u9700\u8981\u7cbe\u786e\u5730\u8bb0\u5f55\u8f6f\u4ef6\u7684\u4f9d\u8d56\u60c5\u51b5, \u7531\u4e8eGo \u8bed\u8a00\u4ecev1.11\u7248\u672c\u624d\u63a8\u51famodule\u7684\u7279\u6027\uff0c\u4f17\u591a\u5f00\u6e90\u8f6f\u4ef6\u8fc1\u79fb\u5230go module\u8fd8\u9700\u8981\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u8fc7\u6e21\u671f\u5fc5\u7136\u4f1a\u51fa\u73b0\u95f4\u63a5\u4f9d\u8d56\uff0c\u4f46\u968f\u7740\u65f6\u95f4\u7684\u63a8\u8fdb\uff0c\u5728go.mod\u4e2d\u51fa\u73b0// indirect\u7684\u673a\u7387\u4f1a\u8d8a\u6765\u8d8a\u4f4e\n# \n# \u95f4\u63a5\u4f9d\u8d56\u51fa\u73b0\u5728go.mod\u6587\u4ef6\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u7b26\u5408\u4e0b\u9762\u6240\u5217\u573a\u666f\u7684\u4e00\u79cd\u6216\u591a\u79cd: (\u95f4\u63a5\u4f9d\u8d56\u51fa\u73b0\u5728go.mod\u4e2d\uff0c\u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8bf4\u660e\u4f9d\u8d56\u6709\u7455\u75b5)\n#   \u76f4\u63a5\u4f9d\u8d56\u672a\u542f\u7528 Go module \n#       Module A \u4f9d\u8d56 B\uff0c\u4f46\u662f B \u8fd8\u672a\u5207\u6362\u6210 Module\uff0c\u4e5f\u5373\u6ca1\u6709go.mod\u6587\u4ef6\uff0c\u6b64\u65f6\uff0c\u5f53\u4f7f\u7528go mod tidy\u547d\u4ee4\u66f4\u65b0A\u7684go.mod\u6587\u4ef6\u65f6\uff0cB\u7684\u4e24\u4e2a\u4f9d\u8d56B1\u548cB2\u5c06\u4f1a\u88ab\u6dfb\u52a0\u5230A\u7684go.mod\u6587\u4ef6\u4e2d  \n#   \u76f4\u63a5\u4f9d\u8d56go.mod \u6587\u4ef6\u4e2d\u7f3a\u5931\u90e8\u5206\u4f9d\u8d56\n\n\ngo mod tidy # \u4f1a\u81ea\u52a8\u6574\u7406go.mod \u6587\u4ef6\uff0c\u5982\u679c\u6709\u5fc5\u8981\u4f1a\u5728\u90e8\u5206\u4f9d\u8d56\u5305\u7684\u540e\u9762\u589e\u52a0// indirect\u6ce8\u91ca\n\ngo mod why -m all #\u5219\u53ef\u4ee5\u5206\u6790\u6240\u6709\u4f9d\u8d56\u7684\u4f9d\u8d56\u94fe\ngo mod why -m <pkg> #\u67e5\u770b\u67d0\u4e2a\u95f4\u63a5\u4f9d\u8d56\u662f\u88ab\u54ea\u4e2a\u4f9d\u8d56\u5f15\u5165\u7684\n\n\n")),(0,i.kt)("h2",{id:"78-\u7f16\u7801\u5957\u8def"},"7.8. \u7f16\u7801\u5957\u8def"),(0,i.kt)("h3",{id:"781-\u9762\u5411\u63a5\u53e3\u7f16\u7a0b"},"7.8.1. \u9762\u5411\u63a5\u53e3\u7f16\u7a0b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"//bad\npackage post\nvar client *grpc.ClientConn\nfunc init() {\n    var err error\n    // \u5728 init \u51fd\u6570\u4e2d\u9690\u5f0f\u5730\u521d\u59cb\u5316\u4e86 grpc \u8fde\u63a5\u8fd9\u79cd\u5168\u5c40\u53d8\u91cf, \u4e0d\u597d\n    client, err = grpc.Dial(...\uff09\n    if err != nil {\n        panic(err)\n    }\n}\n// \u6ca1\u6709\u5c06 ListPosts \u901a\u8fc7\u63a5\u53e3\u7684\u65b9\u5f0f\u66b4\u9732\u51fa\u53bb\uff0c\u8fd9\u4f1a\u8ba9\u4f9d\u8d56 ListPosts \u7684\u4e0a\u5c42\u6a21\u5757\u96be\u4ee5\u6d4b\u8bd5\nfunc ListPosts() ([]*Post, error) {\n    posts, err := client.ListPosts(...)\n    if err != nil {\n        return []*Post{}, err\n    }\n    \n    return posts, nil\n}\n\n\n\n// good\n// \u8fd9\u79cd\u4f7f\u7528\u63a5\u53e3\u7ec4\u7ec7\u4ee3\u7801\u7684\u65b9\u5f0f\u5728 Go \u8bed\u8a00\u4e2d\u975e\u5e38\u5e38\u89c1:\n    // \u4f7f\u7528\u5927\u5199\u7684 Service \u5bf9\u5916\u66b4\u9732\u65b9\u6cd5\uff1b\n    // \u4f7f\u7528\u5c0f\u5199\u7684 service \u5b9e\u73b0\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1b\n    // \u901a\u8fc7 NewService \u51fd\u6570\u521d\u59cb\u5316 Service \u63a5\u53e3, \u8fd4\u56de Service \u7684\u6307\u9488\uff1b\npackage post\n// \u901a\u8fc7\u63a5\u53e3 Service \u66b4\u9732\u5bf9\u5916\u7684 ListPosts \u65b9\u6cd5\n// \u7b80\u5355\u70b9, \u4e5f\u53ef\u4ee5\u5427 Service interface \u7701\u6389, \u76f4\u63a5\u4e3a service struct \u5b9e\u73b0\u65b9\u6cd5\ntype Service interface {\n    ListPosts() ([]*Post, error)\n}\ntype service struct {\n    conn *grpc.ClientConn\n}\n// \u4f7f\u7528 NewService \u51fd\u6570\u521d\u59cb\u5316 Service \u63a5\u53e3\u7684\u5b9e\u73b0\u5e76\u901a\u8fc7\u79c1\u6709\u7684\u7ed3\u6784\u4f53 service \u6301\u6709 grpc \u8fde\u63a5\nfunc NewService(conn *grpc.ClientConn) Service {\n    return &service{\n        conn: conn,\n    }\n}\nfunc (s *service) ListPosts() ([]*Post, error) {\n    // ListPosts \u4e0d\u518d\u4f9d\u8d56\u5168\u5c40\u53d8\u91cf\uff0c\u800c\u662f\u4f9d\u8d56\u63a5\u53e3\u4f53 service \u6301\u6709\u7684\u8fde\u63a5\uff1b\n    posts, err := s.conn.ListPosts(...)\n    if err != nil {\n        return []*Post{}, err\n    }\n    \n    return posts, nil\n}\n\n// \u8fd9\u6837\u4f7f\u7528\nfunc main() {\n    conn, err = grpc.Dial(...\uff09\n    if err != nil {\n        panic(err)\n    }\n    // \u663e\u5f0f\u7684\u521d\u59cb\u5316 grpc \u8fde\u63a5\u3001\u521b\u5efa Service \u63a5\u53e3\u7684\u5b9e\u73b0\u5e76\u8c03\u7528 ListPosts \u65b9\u6cd5\n    svc := post.NewService(conn)\n    posts, err := svc.ListPosts()\n    if err != nil {\n        panic(err)\n    }\n    \n    fmt.Println(posts)\n}\n\n")),(0,i.kt)("h3",{id:"782-functional-options-\u6784\u9020\u5bf9\u8c61"},"7.8.2. functional options \u6784\u9020\u5bf9\u8c61"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u7b49\u5f85\u6784\u9020\u7684\u5bf9\u8c61\u7c7b\u578b\ntype Server struct {\n    Addr     string\n    Port     int\n    Protocol string\n    Timeout  time.Duration\n    MaxConns int\n    TLS      *tls.Config\n}\n\n// \u5b9a\u4e49\u6784\u9020\u9009\u9879\ntype Option func(*Server)\n\nfunc Protocol(p string) Option {\n    return func(s *Server) {\n        s.Protocol = p\n    }\n}\nfunc Timeout(timeout time.Duration) Option {\n    return func(s *Server) {\n        s.Timeout = timeout\n    }\n}\nfunc MaxConns(maxconns int) Option {\n    return func(s *Server) {\n        s.MaxConns = maxconns\n    }\n}\nfunc TLS(tls *tls.Config) Option {\n    return func(s *Server) {\n        s.TLS = tls\n    }\n}\n\nfunc NewServer(addr string, port int, options ...func(*Server)) (*Server, error) {\n\n  srv := Server{\n    Addr:     addr,\n    Port:     port,\n    Protocol: "tcp",\n    Timeout:  30 * time.Second,\n    MaxConns: 1000,\n    TLS:      nil,\n  }\n  for _, option := range options {\n    option(&srv)\n  }\n  //...\n  return &srv, nil\n}\n\n// \u4f7f\u7528\ns1, _ := NewServer("localhost", 1024)\ns2, _ := NewServer("localhost", 2048, Protocol("udp"))\ns3, _ := NewServer("0.0.0.0", 8080, Timeout(300*time.Second), MaxConns(1000))\n')),(0,i.kt)("h3",{id:"783-\u63a7\u5236\u53cd\u8f6c"},"7.8.3. \u63a7\u5236\u53cd\u8f6c"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u6709\u8fd9\u6837\u4e00\u4e2a int set\n// \u73b0\u5728\u8981\u4e3a\u4ed6\u52a0\u5165 undo \u529f\u80fd\ntype IntSet struct {\n    data map[int]bool\n}\nfunc NewIntSet() IntSet {\n    return IntSet{make(map[int]bool)}\n}\nfunc (set *IntSet) Add(x int) {\n    set.data[x] = true\n}\nfunc (set *IntSet) Delete(x int) {\n    delete(set.data, x)\n}\nfunc (set *IntSet) Contains(x int) bool {\n    return set.data[x]\n}\n\n\n// ======= \u5b8c\u6574\u5b9e\u73b0\n\n\n// \u5148\u58f0\u660e\u4e00\u79cd\u51fd\u6570\u63a5\u53e3\uff0c\u8868\u73b0\u6211\u4eec\u7684Undo\u63a7\u5236\u53ef\u4ee5\u63a5\u53d7\u7684\u51fd\u6570\u7b7e\u540d\u662f\u4ec0\u4e48\u6837\u7684\n// \n// \u8fd9\u4e2a\u5c31\u662f\u63a7\u5236\u53cd\u8f6c\uff0c\u4e0d\u518d\u7531 \u63a7\u5236\u903b\u8f91 Undo \u6765\u4f9d\u8d56\u4e1a\u52a1\u903b\u8f91 IntSet\uff0c\u800c\u662f\u7531\u4e1a\u52a1\u903b\u8f91 IntSet \u6765\u4f9d\u8d56 Undo \u3002\u5176\u4f9d\u8d56\u7684\u662f\u5176\u5b9e\u662f\u4e00\u4e2a\u534f\u8bae\uff0c\u8fd9\u4e2a\u534f\u8bae\u662f\u4e00\u4e2a\u6ca1\u6709\u53c2\u6570\u7684\u51fd\u6570\u6570\u7ec4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec Undo \u7684\u4ee3\u7801\u5c31\u53ef\u4ee5\u590d\u7528\u4e86\ntype Undo []func()\n\nfunc (undo *Undo) Add(function func()) {\n  *undo = append(*undo, function)\n}\n// undo \u5c31\u662f\u6267\u884c\u6700\u672b\u5c3e\u7684\u4e00\u6b65\u64cd\u4f5c\nfunc (undo *Undo) Undo() error {\n  functions := *undo\n  if len(functions) == 0 {\n    return errors.New("No functions to undo")\n  }\n  index := len(functions) - 1\n  if function := functions[index]; function != nil {\n    function()\n    functions[index] = nil // For garbage collection\n  }\n  *undo = functions[:index]\n  return nil\n}\n\n// IntSet\u91cc\u5d4c\u5165 Undo\uff0c\u7136\u540e\uff0c\u518d\u5728 Add() \u548c Delete() \u91cc\u4f7f\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6210\u529f\u80fd\ntype IntSet struct {\n    data map[int]bool\n    undo Undo\n}\n \nfunc NewIntSet() IntSet {\n    return IntSet{data: make(map[int]bool)}\n}\n\nfunc (set *IntSet) Undo() error {\n    return set.undo.Undo()\n}\n \nfunc (set *IntSet) Contains(x int) bool {\n    return set.data[x]\n}\n\nfunc (set *IntSet) Add(x int) {\n    if !set.Contains(x) {\n        set.data[x] = true\n        set.undo.Add(func() { set.Delete(x) })\n    } else {\n        set.undo.Add(nil)\n    }\n}\n \nfunc (set *IntSet) Delete(x int) {\n    if set.Contains(x) {\n        delete(set.data, x)\n        set.undo.Add(func() { set.Add(x) })\n    } else {\n        set.undo.Add(nil)\n    }\n}\n')),(0,i.kt)("h3",{id:"784-\u4fee\u9970\u5668"},"7.8.4. \u4fee\u9970\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func WithServerHeader(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        log.Println("---\x3eWithServerHeader()")\n        w.Header().Set("Server", "HelloServer v0.0.1")\n        h(w, r)\n    }\n}\nfunc WithAuthCookie(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        log.Println("---\x3eWithAuthCookie()")\n        cookie := &http.Cookie{Name: "Auth", Value: "Pass", Path: "/"}\n        http.SetCookie(w, cookie)\n        h(w, r)\n    }\n}\nfunc WithBasicAuth(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        log.Println("---\x3eWithBasicAuth()")\n        cookie, err := r.Cookie("Auth")\n        if err != nil || cookie.Value != "Pass" {\n            w.WriteHeader(http.StatusForbidden)\n            return\n        }\n        h(w, r)\n    }\n}\nfunc WithDebugLog(h http.HandlerFunc) http.HandlerFunc {\n    return func(w http.ResponseWriter, r *http.Request) {\n        log.Println("---\x3eWithDebugLog")\n        r.ParseForm()\n        log.Println(r.Form)\n        log.Println("path", r.URL.Path)\n        log.Println("scheme", r.URL.Scheme)\n        log.Println(r.Form["url_long"])\n        for k, v := range r.Form {\n            log.Println("key:", k)\n            log.Println("val:", strings.Join(v, ""))\n        }\n        h(w, r)\n    }\n}\nfunc hello(w http.ResponseWriter, r *http.Request) {\n    log.Printf("Recieved Request %s from %s\\n", r.URL.Path, r.RemoteAddr)\n    fmt.Fprintf(w, "Hello, World! "+r.URL.Path)\n}\nfunc main() {\n    http.HandleFunc("/v1/hello", WithServerHeader(WithAuthCookie(hello)))\n    http.HandleFunc("/v2/hello", WithServerHeader(WithBasicAuth(hello)))\n    http.HandleFunc("/v3/hello", WithServerHeader(WithBasicAuth(WithDebugLog(hello))))\n    err := http.ListenAndServe(":8080", nil)\n    if err != nil {\n        log.Fatal("ListenAndServe: ", err)\n    }\n}\n\n// \u6539\u8fdb\n// \u591a\u4e2a\u4fee\u9970\u5668\u7684 Pipeline\ntype HttpHandlerDecorator func(http.HandlerFunc) http.HandlerFunc\nfunc Handler(h http.HandlerFunc, decors ...HttpHandlerDecorator) http.HandlerFunc {\n    for i := range decors {\n        d := decors[len(decors)-1-i] // iterate in reverse\n        h = d(h)\n    }\n    return h\n}\n\n// \u4f7f\u7528\nhttp.HandleFunc("/v4/hello", Handler(hello,\n                WithServerHeader, WithBasicAuth, WithDebugLog))\n')),(0,i.kt)("h3",{id:"785-pipeline-\u6a21\u5f0f"},"7.8.5. pipeline \u6a21\u5f0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u7c7b\u4f3c Unix \u4e2d\u7684\u7ba1\u9053\u64cd\u4f5c, \u5b9e\u9645\u4e0a, \u4e5f\u6b63\u662f\u4f7f\u7528 go channel \u5b9e\u73b0\u7684\n\n// \u9700\u8981\u4e00\u4e2a\u5427\u5e8f\u5217\u8f6c\u4e3a channel \u7684\u65b9\u6cd5\nfunc echo(nums []int) <-chan int {\n  out := make(chan int)\n  go func() {\n    for _, n := range nums {\n      out <- n\n    }\n    close(out)\n  }()\n  return out\n}\n\n// \u6c42\u5e73\u65b9\nfunc sq(in <-chan int) <-chan int {\n  out := make(chan int)\n  go func() {\n    for n := range in {\n      out <- n * n\n    }\n    close(out)\n  }()\n  return out\n}\n\n// \u8fc7\u6ee4\u51fa\u5947\u6570\nfunc odd(in <-chan int) <-chan int {\n  out := make(chan int)\n  go func() {\n    for n := range in {\n      if n%2 != 0 {\n        out <- n\n      }\n    }\n    close(out)\n  }()\n  return out\n}\n\n// \u6c42\u548c\nfunc sum(in <-chan int) <-chan int {\n  out := make(chan int)\n  go func() {\n    var sum = 0\n    for n := range in {\n      sum += n\n    }\n    out <- sum\n    close(out)\n  }()\n  return out\n}\n\n// \u4f7f\u7528\nvar nums = []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}\nfor n := range sum(sq(odd(echo(nums)))) {\n  fmt.Println(n)\n}\n\n\n// \u4e0d\u60f3\u6709\u90a3\u4e48\u591a\u7684\u51fd\u6570\u5d4c\u5957\ntype EchoFunc func ([]int) (<- chan int) \ntype PipeFunc func (<- chan int) (<- chan int) \n\nfunc pipeline(nums []int, echo EchoFunc, pipeFns ... PipeFunc) <- chan int {\n  ch  := echo(nums)\n  for i := range pipeFns {\n    ch = pipeFns[i](ch)\n  }\n  return ch\n}\n")),(0,i.kt)("h3",{id:"786-visitor-\u6a21\u5f0f"},"7.8.6. visitor \u6a21\u5f0f"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"\n// Kubernetes \u7684 kubectl \u547d\u4ee4\u4e2d\u7684\u4f7f\u7528\u5230\u5230\u7684\u4e00\u4e2a\u7f16\u7a0b\u6a21\u5f0f \u2013 Visitor\n// \u662f\u4e00\u79cd\u5c06\u7b97\u6cd5\u4e0e\u64cd\u4f5c\u5bf9\u8c61\u5206\u79bb\u7684\u4e00\u79cd\u65b9\u6cd5, \u80fd\u591f\u5728\u4e0d\u4fee\u6539\u64cd\u4f5c\u5bf9\u8c61\u6dfb\u52a0\u65b0\u64cd\u4f5c\n\ntype Visitor func(shape Shape)\ntype Shape interface {\n    accept(Visitor)\n}\ntype Circle struct {\n    Radius int\n}\nfunc (c Circle) accept(v Visitor) {\n    v(c)\n}\ntype Rectangle struct {\n    Width, Heigh int\n}\nfunc (r Rectangle) accept(v Visitor) {\n    v(r)\n}\n\n\n// \u4f7f\u7528\n// \u5b9e\u73b0\u4e24\u4e2aVisitor\uff0c\u4e00\u4e2a\u662f\u7528\u6765\u505aJSON\u5e8f\u5217\u5316\u7684\uff0c\u53e6\u4e00\u4e2a\u662f\u7528\u6765\u505aXML\u5e8f\u5217\u5316\n// \u64cd\u4f5c\u5bf9\u8c61\u6709\u70b9\u50cf\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u800c\u5404\u4e2aVisitor\u4f1a\u6210\u4e3a\u4e00\u4e2a\u4e2a\u5c0f\u5e94\u7528\nfunc JsonVisitor(shape Shape) {\n    bytes, err := json.Marshal(shape)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(string(bytes))\n}\n\nfunc XmlVisitor(shape Shape) {\n    bytes, err := xml.Marshal(shape)\n    if err != nil {\n        panic(err)\n    }\n    fmt.Println(string(bytes))\n}\n\n// ==============\nfunc main() {\n  c := Circle{10}\n  r :=  Rectangle{100, 200}\n  shapes := []Shape{c, r}\n\n  for _, s := range shapes {\n    s.accept(JsonVisitor)\n    s.accept(XmlVisitor)\n  }\n\n}\n\n")),(0,i.kt)("h3",{id:"787-microkernel-\u67b6\u6784"},"7.8.7. microKernel \u67b6\u6784"),(0,i.kt)("p",null,"\u5fae\u5185\u6838\u6a21\u5f0f"),(0,i.kt)("h2",{id:"79-\u538b\u6d4b-\u538b\u529b\u6d4b\u8bd5"},"7.9. \u538b\u6d4b \u538b\u529b\u6d4b\u8bd5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rakyll/hey"},"https://github.com/rakyll/hey")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/link1st/go-stress-testing#3%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7"},"https://github.com/link1st/go-stress-testing#3%E5%B8%B8%E8%A7%81%E7%9A%84%E5%8E%8B%E6%B5%8B%E5%B7%A5%E5%85%B7")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/myzhan/boomer"},"https://github.com/myzhan/boomer")),(0,i.kt)("h2",{id:"710-\u5355\u5143\u6d4b\u8bd5"},"7.10. \u5355\u5143\u6d4b\u8bd5"),(0,i.kt)("h3",{id:"7101-\u5f00\u6e90\u6d4b\u8bd5\u5e93"},"7.10.1. \u5f00\u6e90\u6d4b\u8bd5\u5e93"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"goconvey, \u4ee3\u66ff testify, GoConvey \u548c\u5176\u4ed6 Stub/Mock \u6846\u67b6\u7684\u517c\u5bb9\u6027\u76f8\u6bd4 Testify \u66f4\u597d\n\n\ntestify \u63d0\u4f9b\u975e\u5e38\u591a\u7684\u65ad\u8a00, \u81ea\u5e26 Mock \u6846\u67b6\uff0c\u4f46\u662f\u7528\u8fd9\u4e2a\u6846\u67b6 Mock \u7c7b\u9700\u8981\u81ea\u5df1\u5199\u3002\u50cf\u8fd9\u6837\u91cd\u590d\u6709\u89c4\u5f8b\u7684\u90e8\u5206\u5728 GoMock \u4e2d\u662f\u4e00\u952e\u81ea\u52a8\u751f\u6210\u7684\n\n\n\n")),(0,i.kt)("h3",{id:"7102-\u901a\u7528-mock"},"7.10.2. \u901a\u7528 mock"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/mock"},"https://github.com/golang/mock"),"  \u6700\u6807\u51c6\u7684\u4e5f\u662f\u6700\u88ab\u9f13\u52b1\u7684\u65b9\u5f0f"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/bouk/monkey"},"https://github.com/bouk/monkey")," \u7334\u5b50\u8865\u4e01, \u80fd\u591f\u901a\u8fc7\u66ff\u6362\u51fd\u6570\u6307\u9488\u7684\u65b9\u5f0f\u4fee\u6539\u4efb\u610f\u51fd\u6570\u7684\u5b9e\u73b0, \u7528\u6765 Mock \u4f9d\u8d56, \u4e07\u80fd\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u53ea\u5728\u4e07\u4e0d\u5f97\u5df2\u65f6\u4f7f\u7528\uff0c\u7c7b\u4f3c\u7684\u4ee3\u7801\u5199\u8d77\u6765\u975e\u5e38\u5197\u957f\u800c\u4e14\u4e0d\u76f4\u89c2, \u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u7684\u4f7f\u7528\u5176\u5b9e\u6709\u4e00\u4e9b\u9650\u5236\uff0c\u7531\u4e8e\u5b83\u662f\u5728\u8fd0\u884c\u65f6\u66ff\u6362\u4e86\u51fd\u6570\u7684\u6307\u9488\uff0c\u6240\u4ee5\u5982\u679c\u9047\u5230\u4e00\u4e9b\u7b80\u5355\u7684\u51fd\u6570\uff0c\u4f8b\u5982rand.Int63n\u548ctime.Now\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u76f4\u63a5\u5c06\u8fd9\u79cd\u51fd\u6570\u5185\u8054\u5230\u8c03\u7528\u5b9e\u9645\u53d1\u751f\u7684\u4ee3\u7801\u5904\u5e76\u4e0d\u4f1a\u8c03\u7528\u539f\u6709\u7684\u65b9\u6cd5\uff0c\u6240\u4ee5\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u5f80\u5f80\u9700\u8981\u6211\u4eec\u5728\u6d4b\u8bd5\u65f6\u989d\u5916\u6307\u5b9a-gcflags=-l\u7981\u6b62\u7f16\u8bd1\u5668\u7684\u5185\u8054\u4f18\u5316 ",(0,i.kt)("inlineCode",{parentName:"p"},"go test -gcflags=-l ./...")),(0,i.kt)("h3",{id:"7103-\u6570\u636e\u5c42-mock\u6d4b\u8bd5"},"7.10.3. \u6570\u636e\u5c42 mock\u6d4b\u8bd5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/DATA-DOG/go-sqlmock"},"https://github.com/DATA-DOG/go-sqlmock")," mock \u6570\u636e\u5e93, \u5904\u7406\u4f9d\u8d56\u7684\u6570\u636e\u5e93"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/alicebob/miniredis"},"https://github.com/alicebob/miniredis")," mock redis"),(0,i.kt)("h3",{id:"7104-web\u5c42\u6d4b\u8bd5"},"7.10.4. web\u5c42\u6d4b\u8bd5"),(0,i.kt)("p",null,"net/http/httptest \u6807\u51c6\u5e93 , \u6d4b\u8bd5\u81ea\u5df1\u7f16\u5199\u7684 api"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/h2non/gock"},"https://github.com/h2non/gock")," mock \u5916\u90e8\u7684\u7b2c\u4e09\u65b9 api"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jarcoal/httpmock"},"https://github.com/jarcoal/httpmock")," HTTP mocking, \u5904\u7406\u4f9d\u8d56\u7684 http \u8bf7\u6c42"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func setupServerPostHandler(t *testing.T) *gin.Engine {\n    engine := gin.New()\n    //engine.Use(middleware.Logger())\n    engine.Use(gin.Recovery())\n    PostDaoMock,issql:= GetPostDAO(t)\n    if !issql {\n        ... mock \u521d\u4f7f\u5316\n        \n    }\n    RedisClient,isTrue:= GetRedisClient(t)\n    if !isTrue {\n        ... mock \u521d\u4f7f\u5316\n        \n    }\n    server := NewServer()\n    // \u552f\u4e00\u4f9d\u8d56\n    server.SetPostService(PostDaoMock,RedisClient)\n    \n    engine.POST("/AddPost", server.GetPosts)\n    return engine\n}\n\nfunc TestPostHandler(t *testing.T) {\n    router := setupServerPostHandler(t)\n    Convey("Post Handler\u63a5\u53e3\u6d4b\u8bd5",t, func() {\n        req_content := &Post{\n            ... \u5185\u5bb9\n        }\n        type Data_resp struct {\n            Post_id int `json:Post_id`\n        }\n        type resp_json struct {\n            Data  Data_resp `json:data`\n            Err_msg  string `json:err_msg`\n            Err_no   int `json:err_no`\n        }\n\n        req_content.Type = "AddPost"\n        Convey("AddPost \u6d4b\u8bd5", func() {\n\n            Convey("AddPost \u6d4b\u8bd51", func() {\n\n                req_new := req_content\n                req_string, _ := json.Marshal(req_new)\n                req := httptest.NewRequest(http.MethodPost, "/AddPost", strings.NewReader(string(req_string)))\n                req.Header[global.HEADER_TRACEID] = []string{"testTrace"}\n                req.Header[global.HEADER_SPANID] = []string{"testSpan"}\n                req.Header[global.HEADER_USER] = []string{"testUser"}\n                req.Header.Set("Content-Type","application/json")\n\n                w := httptest.NewRecorder()\n                router.ServeHTTP(w, req)\n                resp := w.Result()\n                resp_json1 := &resp_json{}\n                _ = json.Unmarshal(w.Body.Bytes(), resp_json1)\n                So(resp_json1.Data.Post_id,ShouldHaveSameTypeAs,1)\n                So(resp.StatusCode,ShouldEqual,http.StatusOK)\n            })\n        })\n    })\n}\n')),(0,i.kt)("h3",{id:"7105-testing-\u5305"},"7.10.5. testing \u5305"),(0,i.kt)("h4",{id:"71051-\u547d\u4ee4\u884c\u57fa\u672c\u4f7f\u7528"},"7.10.5.1. \u547d\u4ee4\u884c\u57fa\u672c\u4f7f\u7528"),(0,i.kt)("p",null,"\u5bf9\u4e8e\u666e\u901atest, ",(0,i.kt)("inlineCode",{parentName:"p"},"go test .")," \u6216\u8005 ",(0,i.kt)("inlineCode",{parentName:"p"},"go test xxx_test.go")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'\u6587\u4ef6\u540d\u4ee5 "_test.go"\u7ed3\u5c3e \uff08\u89c4\u8303\uff0c\u5426\u5219 ',(0,i.kt)("inlineCode",{parentName:"li"},"go test")," \u4e0d\u4f1a\u6267\u884c\u6d4b\u8bd5), \u4e0d\u4f1a\u88ab\u7f16\u8bd1\u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d"),(0,i.kt)("li",{parentName:"ol"},'\u6587\u4ef6\u5fc5\u987b\u5305\u542b\u6d4b\u8bd5\u51fd\u6570, \u6d4b\u8bd5\u51fd\u6570\u540d\u4ee5 "Test"\u5f00\u5934, \u63a5\u53d7\u4e00\u4e2a "*testing.T" \u7c7b\u578b\u7684\u53c2\u6570 (\u5fc5\u987b,\u5426\u5219\u4e0d\u6267\u884c\u8fd9\u4e2a test case), \u6709\u4e09\u79cd\u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5355\u5143\u6d4b\u8bd5\u51fd\u6570\u3001\u57fa\u51c6\u6d4b\u8bd5\u51fd\u6570\u548c\u793a\u4f8b\u51fd\u6570(\u524d\u7f00\u4e3aExample)')),(0,i.kt)("p",null,"\u5bf9\u4e8e benchmark test \u662f\u7279\u6b8a\u7684test, \u7528\u4e8e\u6d4b\u8bd5\u6027\u80fd, ",(0,i.kt)("inlineCode",{parentName:"p"},"go test -bench=.")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'\u51fd\u6570 \u4ee5 "Benchmark" \u5f00\u5934'),(0,i.kt)("li",{parentName:"ol"},"benchmark\u51fd\u6570\u4e00\u822c\u4f1a\u8dd1 b.N \u6b21(\u4e0d\u662f\u786e\u5b9a\u7684), \u4ee5\u6bcf\u6b21\u82b1\u8d39\u7684\u65f6\u95f4\u4ee3\u8868\u6027\u80fd")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"go test <module name>/<package name> // \u7528\u6765\u8fd0\u884c\u67d0\u4e2a package \u5185\u7684\u6240\u6709\u6d4b\u8bd5\u7528\u4f8b\n\ngo test //\u9ed8\u8ba4\u6267\u884c\u5f53\u524d\u76ee\u5f55\u4e0b\u4ee5xxx_test.go\u7684\u6d4b\u8bd5\u6587\u4ef6\n// or\ngo test <current module name>\n// or\ngo test .\n\ngo test -v //\u53ef\u4ee5\u770b\u5230\u8be6\u7ec6\u7684\u8f93\u51fa\u4fe1\u606f\u3002\ngo test -v xxx_test.go //\u6307\u5b9a\u6d4b\u8bd5\u5355\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f\u8be5\u6587\u4ef6\u4e2d\u5982\u679c\u8c03\u7528\u4e86\u5176\u5b83\u6587\u4ef6\u4e2d\u7684\u6a21\u5757\u4f1a\u62a5\u9519\ngo test -v xxx_test.go xxx.go //\u6307\u5b9a\u6d4b\u8bd5\u5355\u4e2a\u6587\u4ef6\u548c\u88ab\u6d4b\u6587\u4ef6\n\ngo test -v -run=Testxxx //\u6307\u5b9a\u67d0\u4e2a\u6d4b\u8bd5\u51fd\u6570\u8fd0\u884c, Testxxx \u4e0d\u5fc5\u6307\u5b9a\u5168\u79f0\ngo test -v -run Testxxx //\u6307\u5b9a\u67d0\u4e2a\u6d4b\u8bd5\u51fd\u6570\u8fd0\u884c, Testxxx \u4e0d\u5fc5\u6307\u5b9a\u5168\u79f0\n\ngo test -v -cover //\u67e5\u770b\u6d4b\u8bd5\u8986\u76d6\u7387\u3002\ngo test -cover -coverprofile=c.out // \u5c06\u8986\u76d6\u7387\u76f8\u5173\u7684\u8bb0\u5f55\u4fe1\u606f\u8f93\u51fa\u5230\u4e00\u4e2a\u6587\u4ef6\ngo tool cover -html=c.out // \u6253\u5f00\u672c\u5730\u7684\u6d4f\u89c8\u5668\u7a97\u53e3\u751f\u6210\u4e00\u4e2aHTML\u62a5\u544a\n\n\n// \u8fd0\u884c\u5b50 package \u5185\u7684\u7528\u4f8b\ngo test <cur_package_name>/<sub_package name> \n// or\ngo test ./<sub_package name>\n// \u9012\u5f52\u6d4b\u8bd5\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7684 package\ngo test ./... \u6216 go test example/...\n\n\n// \u8df3\u8fc7\u5355\u5143\u6d4b\u8bd5\uff0c\u6267\u884c\u6240\u6709benchmark,\u540c\u65f6\u751f\u6210\u4e00\u4e2acpu\u6027\u80fd\u63cf\u8ff0\u6587\u4ef6\n// go test \u547d\u4ee4\u9ed8\u8ba4\u4e0d\u8fd0\u884c benchmark \u7528\u4f8b\u7684\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8fd0\u884c benchmark \u7528\u4f8b\uff0c\u5219\u9700\u8981\u52a0\u4e0a -bench \u53c2\u6570 (\u53ef\u4ee5\u4e0d\u52a0\u7b49\u53f7)\ngo test -run=xxx -bench=. -benchtime=\"3s\" -cpuprofile profile_cpu.out\n// \u652f\u6301\u6b63\u5219\ngo test -bench='Fib$' .\n\n")),(0,i.kt)("h4",{id:"71052-testing-\u901a\u7528\u65b9\u6cd5"},"7.10.5.2. testing \u901a\u7528\u65b9\u6cd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'/*\nT\u7ed3\u6784\u5185\u90e8\u662f\u7ee7\u627f\u81eacommon\u7ed3\u6784\uff0ccommon\u7ed3\u6784\u63d0\u4f9b\u96c6\u4e2d\u65b9\u6cd5\uff0c\u662f\u6211\u4eec\u7ecf\u5e38\u4f1a\u7528\u5230\u7684:\n\n\u9047\u5230\u4e00\u4e2a\u65ad\u8a00\u9519\u8bef\u7684\u65f6\u5019\uff0c\u5224\u65ad\u8fd9\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5931\u8d25:\n    Fail  : case\u5931\u8d25\uff0c\u6d4b\u8bd5\u7528\u4f8b\u7ee7\u7eed\n    FailedNow : case\u5931\u8d25\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u65ad\n\u5e0c\u671b\u65ad\u8a00\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5931\u8d25\uff0c\u6253\u5370\u51fa\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u4f46\u662f\u6d4b\u8bd5\u7528\u4f8b\u7ee7\u7eed:\n    Error : Log + Fail\n\u5e0c\u671b\u65ad\u8a00\u5931\u8d25\u7684\u65f6\u5019\uff0c\u6d4b\u8bd5\u7528\u4f8b\u5931\u8d25\uff0c\u6253\u5370\u51fa\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e2d\u65ad:\n    Fatal : Log + FailNow\n\u9047\u5230\u4e00\u4e2a\u65ad\u8a00\u9519\u8bef\uff0c\u53ea\u5e0c\u671b\u8df3\u8fc7\u8fd9\u4e2a\u9519\u8bef\uff0c\u4f46\u662f\u4e0d\u5e0c\u671b\u6807\u793a\u6d4b\u8bd5\u7528\u4f8b\u5931\u8d25\n    SkipNow : case\u8df3\u8fc7\uff0c\u6d4b\u8bd5\u7528\u4f8b\u4e0d\u7ee7\u7eed\n    Skip : Log + SkipNow\n*/\npackage main\n\nimport (\n  "fmt"\n  "testing" // \u6d4b\u8bd5\u5305\n)\n\n\n// \u53ef\u4ee5\u901a\u8fc7 TestMain\u505a\u4e00\u4e9b\u521d\u59cb\u5316\u5de5\u4f5c, \u6570\u636e\u5e93\u8fde\u63a5, \u6587\u4ef6\u6253\u5f00, restful\u767b\u9646...\n// TestMain \u4e0d\u662f\u5fc5\u987b\u7684\nfunc TestMain(m *testing.M) {\n\n  fmt.Println("TestMain \u6700\u5148\u6267\u884c")\n  m.Run() // \u5fc5\u987b\u8c03\u7528, \u5426\u5219\u5176\u4ed6test\u4e0d\u4f1a\u6267\u884c\n}\n\nfunc  TestAdd(t *testing.T) {\n    s:=Add(1,2)\n    if s!=3{\n        t.Error("Expected 3, got ", s)\n    }\n    \n}\n\n// \u8df3\u8fc7\u67d0\u4e9b\u6d4b\u8bd5\n// \nfunc TestTimeConsuming(t *testing.T) {\n    // go test -short \u5219\u8fd9\u91cc\u7684 short() \u8fd4\u56de true\n    if testing.Short() {\n        t.Skip("short\u6a21\u5f0f\u4e0b\u4f1a\u8df3\u8fc7\u8be5\u6d4b\u8bd5\u7528\u4f8b")\n                // or\n            // t.SkipNow// \u8df3\u8fc7\u5f53\u524d \u65b9\u6cd5, \u5fc5\u987b\u5728\u7b2c    \u4e00\u884c\n\n    }\n    ...\n}\n\n\n\n// \u65b9\u6cd5\u540d\u5fc5\u987b\u5927\u5199, \u4ee5 Test\u5f00\u5934\n//      sub test\nfunc TestXxx(t *testing.T) {\n\n  // \u53ef\u4ee5\u4fdd\u8bc1 test \u7684\u987a\u5e8f\n  t.Run("sub test1", func(t *testing.T) {\n    fmt.Println("sub test1")\n  })\n  t.Run("sub test2", func(t *testing.T) {\n    fmt.Println("sub test2")\n  })\n\n  if false {\n    t.Errorf("stm goes wrong")\n  }\n}\n\n// \u5c0f\u5199\u4e0d\u4f1a\u6267\u884c\n// \u5c0f\u5199\u7684test\u4e00\u822c\u4f5c\u4e3a sub test\nfunc testXxx(t *testing.T) {\n  t.Errorf("testXxx \u6ca1\u6267\u884c")\n}\n\n\n// \u5e76\u884c\u6d4b\u8bd5\n// \n// \u904d\u5386\u6d4b\u8bd5\u7528\u4f8b\n    for _, tt := range tests {\n        tt := tt  // \u6ce8\u610f\u8fd9\u91cc\u91cd\u65b0\u58f0\u660ett\u53d8\u91cf\uff08\u907f\u514d\u591a\u4e2agoroutine\u4e2d\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u53d8\u91cf\uff09\n        t.Run(tt.name, func(t *testing.T) { // \u4f7f\u7528t.Run()\u6267\u884c\u5b50\u6d4b\u8bd5\n            t.Parallel()  // \u5c06\u6bcf\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6807\u8bb0\u4e3a\u80fd\u591f\u5f7c\u6b64\u5e76\u884c\u8fd0\u884c\n            got := Split(tt.input, tt.sep)\n            if !reflect.DeepEqual(got, tt.want) {\n                t.Errorf("expected:%#v, got:%#v", tt.want, got)\n            }\n        })\n    }\n\n\n// -------------- \u57fa\u51c6\u6d4b\u8bd5 -------------\n\n// \u5f85 \u6027\u80fd\u6d4b\u8bd5\u7684\u51fd\u6570\nfunc btest() int {\n  xx := 20 + 30\n  return xx\n}\n\n// benchmark \u6027\u80fd\u6d4b\u8bd5\nfunc BenchmarkXxx(b *testing.B) {\n    time.Sleep(time.Second * 3) // \u6a21\u62df\u8017\u65f6\u51c6\u5907\u4efb\u52a1\n    b.ResetTimer() // \u91cd\u7f6e\u5b9a\u65f6\u5668, \u8ba1\u65f6\u6e05\u96f6\u4ece\u65b0\u5f00\u59cb\n                // \u5176\u4ed6\u8fd8\u6709:\n                // b.StopTimer() \u505c\u6b62\u8ba1\u65f6\n                // b.StartTimer() \u91cd\u65b0\u5f00\u59cb\u8ba1\u65f6\n\n    b.ReportAllocs() // \u5728report\u4e2d\u5305\u542b\u5185\u5b58\u5206\u914d\u4fe1\u606f\n\n  for n := 0; n < b.N; n++ { // b.N \u4e3a\u9ed8\u8ba4\u63d0\u4f9b\u7684\u6570\u503c \u4e0d\u662f\u5b9a\u503c, \u4f1a\u6839\u636e\u6d4b\u8bd5\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u52a8\u6001\u8c03\u6574\u76f4\u5230\u6267\u884c\u65f6\u95f4\u8fbe\u5230\u7a33\u6001, \u6700\u540e\u6253\u5370\u51fa\u7684\u5b9e\u8df5\u662f\u6bcf\u6b21\u6267\u884c\u7684\u5e73\u5747\u65f6\u95f4\n    btest() // \u6d4b\u8bd5\u4ee3\u7801\u7684\u6267\u884c\u65f6\u95f4\u5fc5\u987b\u80fd\u591f\u8fbe\u5230\u7a33\u6001, \u5426\u5219benchmark\u4f1a\u6c38\u8fdc\u6267\u884c\u4e0d\u5b8c\n  }\n}\n\n\n')),(0,i.kt)("h4",{id:"71053-\u8868\u683c\u6d4b\u8bd5-http\u6d4b\u8bd5"},"7.10.5.3. \u8868\u683c\u6d4b\u8bd5 http\u6d4b\u8bd5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cweill/gotests"},"https://github.com/cweill/gotests")," \u751f\u6210\u8868\u683c\u6d4b\u8bd5\u6a21\u677f\u4ee3\u7801"),(0,i.kt)("p",null,"net/http/httptest \u6807\u51c6\u5e93, \u7f51\u7edc http\u6d4b\u8bd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n\nfunc main() {\n    http.HandleFunc("/double", doubleHandler)\n    log.Fatalln(http.ListenAndServe(":4000", nil))\n}\n\nfunc doubleHandler(w http.ResponseWriter, r *http.Request) {\n    text := r.FormValue("v")\n\n    if text == "" {\n        http.Error(w, "missing value", http.StatusBadRequest)\n        return\n    }\n\n    v, err := strconv.Atoi(text)\n    if err != nil {\n        http.Error(w, "not a number: "+text, http.StatusBadRequest)\n        return\n    }\n\n    if _, err = fmt.Fprintln(w, v*2); err != nil {\n        http.Error(w, "cannot write to response", http.StatusBadRequest)\n        return\n    }\n\n}\n\n\n// \u7b26\u5408Go\u8bed\u8a00\u5355\u5143\u6d4b\u8bd5\u98ce\u683c\u7684\u8868\u683c\u6d4b\u8bd5\nfunc TestDoubleHandler(t *testing.T) {\n\n    testCases := []struct {\n        name   string\n        input  string\n        result int\n        status int\n        err    string\n    }{\n        {name: "double of two", input: "2", result: 4, status: http.StatusOK, err: ""},\n        {name: "double of nine", input: "9", result: 18, status: http.StatusOK, err: ""},\n        {name: "double of nil", input: "", status: http.StatusBadRequest, err: "missing value"},\n    }\n\n    for _, testCase := range testCases {\n        testCase := testCase\n        t.Run(testCase.name, func(t *testing.T) {\n            req, err := http.NewRequest(http.MethodGet, "localhost:4000/double?v="+testCase.input, nil)\n            if err != nil {\n                t.Fatalf("could not create a new request: %v, err: %v", req, err)\n            }\n\n            rec := httptest.NewRecorder()\n            doubleHandler(rec, req) // \u5f85\u6d4b\u8bd5\u51fd\u6570\n            res := rec.Result()\n\n            if res.StatusCode != testCase.status {\n                t.Errorf("received status code %d, expect %d", res.StatusCode, testCase.status)\n                return\n            }\n\n            respBytes, err := io.ReadAll(res.Body)\n            if err != nil {\n                t.Fatalf("cannot read all from the response body, err: %v", err)\n            }\n            defer res.Body.Close()\n\n            trimedResult := strings.TrimSpace(string(respBytes))\n\n            if res.StatusCode != http.StatusOK {\n                // check the error message\n                if trimedResult != testCase.err {\n                    t.Errorf("received error message %s, expect %s", trimedResult, testCase.err)\n                }\n                return\n            }\n\n            // compare the returned value\n            doubleVal, err := strconv.Atoi(trimedResult)\n            if err != nil {\n                t.Errorf("cannot convert response body to int, err: %v", err)\n                return\n            }\n\n            if doubleVal != testCase.result {\n                t.Errorf("received result %d, expected %d", doubleVal, testCase.result)\n            }\n        })\n    }\n}\n')),(0,i.kt)("h2",{id:"711-\u9519\u8bef\u5904\u7406"},"7.11. \u9519\u8bef\u5904\u7406"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://mytechshares.com/2021/11/22/go-error-best-practice/"},"https://mytechshares.com/2021/11/22/go-error-best-practice/"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://xuanwo.io/2020/05-go-error-handling/"},"https://xuanwo.io/2020/05-go-error-handling/"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://coolshell.cn/articles/21140.html#%E5%8C%85%E8%A3%85%E9%94%99%E8%AF%AF"},"https://coolshell.cn/articles/21140.html#%E5%8C%85%E8%A3%85%E9%94%99%E8%AF%AF"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://lailin.xyz/post/go-training-03.html"},"https://lailin.xyz/post/go-training-03.html"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://go.dev/blog/error-handling-and-go"},"https://go.dev/blog/error-handling-and-go")),(0,i.kt)("p",null,"\u867d\u7136 Go \u8bed\u8a00\u4e2d\u4e5f\u6709\u7c7b\u4f3c Java \u6216\u8005 Ruby try/catch \u5173\u952e\u5b57\uff0c\u4f46\u662f\u5f88\u5c11\u6709\u4eba\u4f1a\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528 panic \u548c recover \u6765\u5b9e\u73b0\u9519\u8bef\u548c\u5f02\u5e38\u7684\u5904\u7406"),(0,i.kt)("h3",{id:"7111-\u4ee5\u95ed\u5305\u7684\u5f62\u5f0f\u5c01\u88c5\u9519\u8bef\u68c0\u6d4b"},"7.11.1. \u4ee5\u95ed\u5305\u7684\u5f62\u5f0f\u5c01\u88c5\u9519\u8bef\u68c0\u6d4b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func httpRequestHandler(w http.ResponseWriter, req *http.Request) {\n    err := func () error {\n        if req.Method != "GET" {\n            return errors.New("expected GET")\n        }\n        if input := parseInput(req); input != "command" {\n            return errors.New("malformed command")\n        }\n        // \u53ef\u4ee5\u5728\u6b64\u8fdb\u884c\u5176\u4ed6\u7684\u9519\u8bef\u68c0\u6d4b\n    } ()\n\n        if err != nil {\n            w.WriteHeader(400)\n            io.WriteString(w, err)\n            return\n        }\n        doSomething() ...\n')),(0,i.kt)("h3",{id:"7112-panic-recover-\u673a\u5236"},"7.11.2. panic recover \u673a\u5236"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// panic \u7a0b\u5e8f\u9000\u51fa, \u7528\u4e8e\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef, \u9000\u51fa\u524d\u4f1a\u6267\u884c defer \u5185\u5bb9\n// os.exit \u4e5f\u4f1a\u9000\u51fa, \u4e0d\u4f1a\u6267\u884c defer, \u4e0d\u4f1a\u8f93\u51fa\u8c03\u7528\u6808\u4fe1\u606f\n\n// err := recover() \u4f1a\u6355\u83b7\u5f02\u5e38\n// \u4f46\u662f\u4e0d\u8981\u8fd9\u6837\u505a, \u56e0\u4e3a\u8fd9\u6837\u5f3a\u884c\u4e0d\u8ba9\u7a0b\u5e8f crash, \u4f46\u662f\u5b9e\u9645\u5f15\u8d77 error \u7684\u539f\u56e0\u8fd8\u662f\u5b58\u5728, \u4e5f\u5c31\u662f \u7a0b\u5e8f\u597d\u5b58\u6d3b\u7740, \u4f46\u662f\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c, \u5176\u4ed6\u7684\u5065\u5eb7\u68c0\u67e5\u4e00\u770b\u7a0b\u5e8f\u8fd8\u6d3b\u7740, \u4e5f\u4e0d\u4f1a\u62a5\u8b66\n\ndefer func() {\n    if err := recover(); err != nil {\n        log.error(err)\n    }\n}()\n\n")),(0,i.kt)("h3",{id:"7113-\u5bf9\u9519\u8bef\u8fdb\u884c\u6bd4\u8f83"},"7.11.3. \u5bf9\u9519\u8bef\u8fdb\u884c\u6bd4\u8f83"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u9519\u8bef\u7684 error\u6bd4\u8f83\u65b9\u6cd5\nfunc TestA(t *testing.T) {\n    _, err := doSth("a1")\n    if err != nil {\n        if err == errors.New("flag is not a") {\n            println(">>> \u76f8\u540c")\n        } else {\n            // \u4ee3\u7801\u4f1a\u8d70\u8fd9\u91cc\n            // errors.new(xx) \u8fd4\u56de\u7684\u662f\u6307\u9488, \u4e24\u4e2a\u6307\u9488\u6bd4\u8f83, \u603b\u662f\u4f1a\u4e0d\u7b49\n            //\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u8bbe\u8ba1? \u9632\u6b62\u9519\u8bef\u5b57\u7b26\u4e32\u76f8\u7b49\u5c31\u5224\u65ad\u4e24\u4e2a\u9519\u8bef\u76f8\u7b49\n            println(">>> \u4e0d\u540c")\n        }\n    }\n}\nfunc doSth(flag string) (string, error) {\n    if flag != "a" {\n        return "hello", errors.New("flag is not a")\n    }\n    return flag, nil\n}\n\n//////////////////////////\n\n// \u6b63\u786e\u7684\u65b9\u5f0f\u662f\u63d0\u524d\u5b9a\u4e49\u597derror\u53d8\u91cf\nvar flagErr = errors.New("flag error")\n\nfunc TestA(t *testing.T) {\n    _, err := doSth("a1")\n    if err != nil {\n        if err == flagErr {\n            //\u8fd9\u6b21\u5c31\u597d\u4e86, \u8d70\u8fd9\u91cc\u4e86\n            println(">>> \u76f8\u540c")\n        } else {\n            println(">>> \u4e0d\u540c")\n        }\n    }\n}\n\n\n')),(0,i.kt)("h3",{id:"7114-\u5bf9\u9519\u8bef\u8fdb\u884c\u5305\u88c5-erros\u5305-is-as-unwrap-\u81ea\u5b9a\u4e49\u9519\u8bef"},"7.11.4. \u5bf9\u9519\u8bef\u8fdb\u884c\u5305\u88c5 erros\u5305 Is As Unwrap \u81ea\u5b9a\u4e49\u9519\u8bef"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'\n// Is\n\n\nvar flagErr = errors.New("flag error")\n\nfunc TestA(t *testing.T) {\n    err := parentMethod("a1")\n    //Is() \u9519\u8bef\u503c\u6bd4\u8f83, \u53ef\u4ee5\u5224\u65ad err \u7684\u9519\u8bef\u94fe\u6761\u662f\u5426\u5b58\u5728 \u76ee\u6807\u9519\u8bef\n    //\u5b83\u9012\u5f52\u8c03\u7528 Unwrap \u5e76\u5224\u65ad\u6bcf\u4e00\u5c42\u7684 err \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u6709\u4efb\u4f55\u4e00\u5c42 err \u548c\u4f20\u5165\u7684\u76ee\u6807\u9519\u8bef\u76f8\u7b49\uff0c\u5219\u8fd4\u56de true, \u5982\u679c\u4e00\u76f4\u5230\u5e95\u90fd\u4e0d\u884c\u5c31\u8fd4\u56de false\n    //\n    if errors.Is(err, flagErr) {\n        fmt.Printf("err: %v\\n", err)\n        //print\n        //error of parent method, orginal err: error of flag\n        // \u53ef\u89c1, \u6253\u5370\u987a\u5e8f\u662f\u4ece\u5916\u5c42\u5230\u5185\u5c42\n    }\n}\n\n\nfunc parentMethod(flag string) error {\n    _, err := doSth(flag)\n    if err != nil {\n        //\u5305\u88c5\u9519\u8bef\u65f6, \u4f7f\u7528 %w\n        return fmt.Errorf("error of parent method, orginal err: %w", err)\n    }\n    return nil\n}\n\nfunc doSth(flag string) (string, error) {\n    if flag != "a" {\n        return "hello", flagErr\n    }\n    return flag, nil\n}\n\n\n///////////////////\n// As\n// \n//\u5728Go 1.13\u4e4b\u524d\u6ca1\u6709wrapping error\u7684\u65f6\u5019\uff0c\u6211\u4eec\u8981\u628aerror\u8f6c\u4e3a\u53e6\u5916\u4e00\u4e2aerror\uff0c\u4e00\u822c\u90fd\u662f\u4f7f\u7528type assertion \u6216\u8005 type switch\uff0c\u5176\u5b9e\u4e5f\u5c31\u662f\u7c7b\u578b\u65ad\u8a00\n// \n// \u904d\u5386err\u5d4c\u5957\u94fe\uff0c\u4ece\u91cc\u9762\u627e\u5230\u7c7b\u578b\u7b26\u5408\u7684error\uff0c\u7136\u540e\u628a\u8fd9\u4e2aerror\u8d4b\u4e88target,\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u8f6c\u6362\u540e\u7684target\u4e86\uff0c\u8fd9\u91cc\u6709\u503c\u5f97\u8d4b\u4e88\uff0c\u6240\u4ee5target\u5fc5\u987b\u662f\u4e00\u4e2a\u6307\u9488\n\nfunc TestA(t *testing.T) {\n    err := grandParentMethod("a1")\n    var e flagErr\n    // As \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u7528\u6765\u5b58\u653e\u63d0\u53d6\u51fa\u6765\u7684 err \u7684\u6307\u9488\n    // \u4f1a\u628a\u6700\u5185\u5c42\u7684 error \u63d0\u53d6\u51fa\u6765\n    if errors.As(err, &e) {\n        fmt.Printf("err: %v, e: %v\\n", err, e)\n        //print\n        //err: error of grand parent method, orginal: error of parent method, orginal err: error of flag, e: error of flag\n\n        // \u89e3\u5f00\u5305\u88c5\n        err := errors.Unwrap(err)\n        fmt.Printf("unwrap1: %v\\n", err)\n        //unwrap1: error of parent method, orginal err: error of flag\n        err = errors.Unwrap(err)\n        fmt.Printf("unwrap2: %v\\n", err)\n        //unwrap2: error of flag\n        err = errors.Unwrap(err)\n        fmt.Printf("unwrap3: %v\\n", err)\n        // unwrap3: <nil>\n    }\n}\n\n\ntype flagErr struct {\n    Msg string\n}\n\nfunc (e flagErr) Error() string {\n    return e.Msg\n}\n\nfunc grandParentMethod(flag string) error {\n    err := parentMethod(flag)\n    if err != nil {\n        err := fmt.Errorf("error of grand parent method, orginal: %w", err)\n        fmt.Printf("grandParentMethod: type: %T, value: %v\\n", err, err)\n        //print\n        //grandParentMethod: type: *fmt.wrapError, value: error off grand parent method, orginal: error of parent method, orginal err: error of flag\n        return err\n    }\n    return nil\n}\n\nfunc parentMethod(flag string) error {\n    _, err := doSth(flag)\n    if err != nil {\n        //\u5305\u88c5\u9519\u8bef\u65f6, \u4f7f\u7528 %w\n        err := fmt.Errorf("error of parent method, orginal err: %w", err)\n        fmt.Printf("parentMethod: type: %T, value: %v\\n", err, err)\n        //print\n        //parentMethod: type: *fmt.wrapError, value: error of parent method, orginal err: error of flag\n        return err\n    }\n    return nil\n}\n\nfunc doSth(flag string) (string, error) {\n    if flag != "a" {\n        err := flagErr{"error of flag"}\n        fmt.Printf("doSth: type: %T, value: %v\\n", err, err)\n        //print\n        //doSth: type: main.flagErr, value: error of flag\n        return "hello", err\n    }\n    return flag, nil\n}\n\n')),(0,i.kt)("h3",{id:"7115-if-err\u9519\u8bef\u5904\u7406\u4f18\u5316\u5957\u8def"},"7.11.5. if err\u9519\u8bef\u5904\u7406\u4f18\u5316\u5957\u8def"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5957\u8def 1: \u5728\u5b9a\u4e49\u7684 struct \u5185\u90e8\u58f0\u660e\u4e00\u4e2a\u5b57\u6bb5\u7528\u6765\u4fdd\u5b58\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\n// \u53c2\u8003 bufio.Scanner()\n\n\n// \u6587\u4ef6\u8bfb\u5199\u4f8b\u5b50\ntype errWriter struct {\n    io.Writer\n    err error\n}\nfunc (e *errWriter) Write(buf []byte) (int, error) {\n    if e.err != nil {\n        return 0, e.err\n    }\n    var n int\n    n, e.err = e.Writer.Write(buf)\n    return n, nil\n}\nfunc WriteResponse(w io.Writer, st Status, headers []Header, body io.Reader) error {\n    ew := &errWriter{Writer: w}\n    fmt.Fprintf(ew, "HTTP/1.1 %d %s\\r\\n", st.Code, st.Reason)\n\n    for _, h := range headers {\n        fmt.Fprintf(ew, "%s: %s\\r\\n", h.Key, h.Value)\n    }\n\n    fmt.Fprint(ew, "\\r\\n")\n    io.Copy(ew, body)\n    return ew.err\n}\n')),(0,i.kt)("h3",{id:"7116-\u4f7f\u7528-pkg-errors\u5e93"},"7.11.6. \u4f7f\u7528 pkg-errors\u5e93"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u8981\u65b0\u751f\u6210\u4e00\u4e2a\u9519\u8bef\nfunc New(message string) error\n\n//\u53ea\u9644\u52a0\u65b0\u7684\u4fe1\u606f\nfunc WithMessage(err error, message string) error\n\n//\u53ea\u9644\u52a0\u8c03\u7528\u5806\u6808\u4fe1\u606f\nfunc WithStack(err error) error\n\n//\u540c\u65f6\u9644\u52a0\u5806\u6808\u548c\u4fe1\u606f\nfunc Wrap(err error, message string) error\n\n// \u627e\u5230\u6700\u5185\u5c42\u9519\u8bef\nfunc Cause(err) error\n\n\n%s,%v //\u529f\u80fd\u4e00\u6837\uff0c\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\uff0c\u4e0d\u5305\u542b\u5806\u6808\n%q //\u8f93\u51fa\u7684\u9519\u8bef\u4fe1\u606f\u5e26\u5f15\u53f7\uff0c\u4e0d\u5305\u542b\u5806\u6808\n%+v //\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u548c\u5806\u6808\nfmt.Printf("%+v\\n", err)\n\n\n// \u5b9e\u4f8b\nfunc main() {\n    _, err := ReadConfig()\n    if err != nil {\n        fmt.Printf("original error: %T %v\\n", errors.Cause(err), errors.Cause(err))\n        fmt.Printf("stack trace:\\n%+v\\n", err)\n        os.Exit(1)\n    }\n}\n/*\noriginal error: *os.PathError open /Users/dfc/.settings.xml: no such file or directory\nstack trace:\nopen /Users/dfc/.settings.xml: no such file or directory\nopen failed\nmain.ReadFile\n        /Users/dfc/devel/practical-go/src/errors/readfile2.go:16\nmain.ReadConfig\n        /Users/dfc/devel/practical-go/src/errors/readfile2.go:29\nmain.main\n        /Users/dfc/devel/practical-go/src/errors/readfile2.go:35\nruntime.main\n        /Users/dfc/go/src/runtime/proc.go:201\nruntime.goexit\n        /Users/dfc/go/src/runtime/asm_amd64.s:1333\ncould not read config\n*/\n')),(0,i.kt)("h2",{id:"712-\u65e5\u5fd7"},"7.12. \u65e5\u5fd7"),(0,i.kt)("h3",{id:"7121-\u81ea\u5e26\u65e5\u5fd7\u5305"},"7.12.1. \u81ea\u5e26\u65e5\u5fd7\u5305"),(0,i.kt)("p",null,"\u6ca1\u6709\u7ea7\u522b\u529f\u80fd, \u9700\u8981\u81ea\u5df1\u5c01\u88c5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "io"\n    "log"\n    "os"\n    "sync/atomic"\n)\n\n// log level\nconst (\n    LDEBUG = iota + 1 // 1\n    LWARN             // 2\n    LINFO             // 3\n    LERROR            // 4\n    LFATAL            // 5\n)\n\ntype myLogger struct {\n    level       int64\n    w           io.Writer\n    debugLogger *log.Logger\n    warnLogger  *log.Logger\n    infoLogger  *log.Logger\n    errLogger   *log.Logger\n    fatalLogger *log.Logger\n}\n\nfunc New(w io.Writer, level int64, flag int) *myLogger {\n    if w == nil {\n        w = os.Stderr\n    }\n\n    if flag <= 0 {\n        flag = log.LstdFlags\n    }\n\n    return &myLogger{\n        w:           w,\n        level:       level,\n        debugLogger: log.New(w, "[DEBUG] ", flag|log.Lmsgprefix),\n        warnLogger:  log.New(w, "[WARN] ", flag|log.Lmsgprefix),\n        infoLogger:  log.New(w, "[INFO] ", flag|log.Lmsgprefix),\n        errLogger:   log.New(w, "[ERROR] ", flag|log.Lmsgprefix),\n        fatalLogger: log.New(w, "[FATAL] ", flag|log.Lmsgprefix),\n    }\n}\n\nfunc (l *myLogger) SetLevel(level int64) {\n    if level < LDEBUG || level > LFATAL {\n        return\n    }\n\n    atomic.StoreInt64(&l.level, level)\n}\n\nfunc (l *myLogger) Debugln(v ...interface{}) {\n    if atomic.LoadInt64(&l.level) > LDEBUG {\n        return\n    }\n    l.debugLogger.Println(v...)\n}\n\nfunc (l *myLogger) Debugf(format string, v ...interface{}) {\n    if atomic.LoadInt64(&l.level) > LDEBUG {\n        return\n    }\n    l.debugLogger.Printf(format, v...)\n}\n\nfunc (l *myLogger) Infoln(v ...interface{}) {\n    if atomic.LoadInt64(&l.level) > LINFO {\n        return\n    }\n    l.infoLogger.Println(v...)\n}\n\nfunc (l *myLogger) Infof(format string, v ...interface{}) {\n    if atomic.LoadInt64(&l.level) > LINFO {\n        return\n    }\n    l.infoLogger.Printf(format, v...)\n}\n\nfunc main() {\n    logger := New(nil, LWARN, 0)\n    logger.Infoln("info level log demo")\n    logger.Debugln("debug level log demo")\n}\n\n\n')),(0,i.kt)("h3",{id:"7122-\u65e5\u5fd7\u5207\u5206"},"7.12.2. \u65e5\u5fd7\u5207\u5206"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/natefinch/lumberjack"},"https://github.com/natefinch/lumberjack")," \u63a8\u8350"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/lestrrat-go/file-rotatelogs"},"https://github.com/lestrrat-go/file-rotatelogs")),(0,i.kt)("h3",{id:"7123-\u65e5\u5fd7\u5168\u5c40\u914d\u7f6e"},"7.12.3. \u65e5\u5fd7\u5168\u5c40\u914d\u7f6e"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/30257622/golang-logrus-how-to-do-a-centralized-configuration"},"https://stackoverflow.com/questions/30257622/golang-logrus-how-to-do-a-centralized-configuration")," \u65e5\u5fd7\u5168\u5c40\u5316\u914d\u7f6e\n",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/29538668/logging-globally-across-packages"},"https://stackoverflow.com/questions/29538668/logging-globally-across-packages")),(0,i.kt)("h3",{id:"7124-zerolog"},"7.12.4. zerolog"),(0,i.kt)("h3",{id:"7125-zap"},"7.12.5. zap"),(0,i.kt)("p",null,"\u63a8\u8350"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/uber-go/zap"},"https://github.com/uber-go/zap")),(0,i.kt)("h3",{id:"7126-logrus"},"7.12.6. logrus"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// logrus\n// https://github.com/Sirupsen/logrus\n// \u6709\u5927\u91cf\u53cd\u5c04, \u6027\u80fd\u76f8\u5bf9\u4f4e, \u63a8\u8350 zerolog, zap\nfunc main() {\n   customFormatter := new(logrus.TextFormatter)\n   customFormatter.FullTimestamp = true                    // \u663e\u793a\u5b8c\u6574\u65f6\u95f4\n   customFormatter.TimestampFormat = "2006-01-02 15:04:05" // \u65f6\u95f4\u683c\u5f0f\n   customFormatter.DisableTimestamp = false                // \u7981\u6b62\u663e\u793a\u65f6\u95f4\n   customFormatter.DisableColors = false                   // \u7981\u6b62\u989c\u8272\u663e\u793a\n \n   logrus.SetFormatter(customFormatter)\n   logrus.SetOutput(os.Stdout)\n   logrus.SetLevel(logrus.DebugLevel)\n \n   logrus.Debug("Debug\u65e5\u5fd7")\n   logrus.Info("Info\u65e5\u5fd7")\n   logrus.Warn("Warn\u65e5\u5fd7")\n   logrus.Error("Error\u65e5\u5fd7")\n   logrus.Fatal("Fatal\u65e5\u5fd7") //log\u4e4b\u540e\u4f1a\u8c03\u7528os.Exit(1)\n   logrus.Panic("Panic\u65e5\u5fd7") //log\u4e4b\u540e\u4f1apanic()\n}\n\n\n')),(0,i.kt)("h3",{id:"7127-\u65e5\u5fd7\u6587\u4ef6\u5207\u5206"},"7.12.7. \u65e5\u5fd7\u6587\u4ef6\u5207\u5206"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/natefinch/lumberjack"},"https://github.com/natefinch/lumberjack")),(0,i.kt)("h2",{id:"713-\u4f9d\u8d56\u6ce8\u5165"},"7.13. \u4f9d\u8d56\u6ce8\u5165"),(0,i.kt)("p",null,"\u5b9e\u9645\u4e0a\u662f\u5426\u9700\u8981\u4f9d\u8d56\u6ce8\u5165\uff0c\u53d6\u51b3\u4e8e\u7f16\u7a0b\u98ce\u683c\u3002\u4f9d\u8d56\u6ce8\u5165\u662f\u4e00\u79cd\u7f16\u7a0b\u6a21\u5f0f\u3002\u6bd4\u8f83\u9002\u5408\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff0c\u5728\u51fd\u6570\u5f0f\u7f16\u7a0b\u4e2d\u5219\u4e0d\u9700\u8981"),(0,i.kt)("p",null,"uber \u5f00\u6e90\u7684 dig (",(0,i.kt)("a",{parentName:"p",href:"https://pkg.go.dev/go.uber.org/dig"},"https://pkg.go.dev/go.uber.org/dig"),") "),(0,i.kt)("p",null,",elliotchance \u5f00\u6e90\u7684 dingo\u3001sarulabs \u5f00\u6e90\u7684 di\u3001google \u5f00\u6e90\u7684 wire \u548c facebook \u5f00\u6e90\u7684 inject (\u6700\u53d7\u6b22\u8fce\u7684\u662f dig \u548c wire)"),(0,i.kt)("p",null," ",(0,i.kt)("a",{parentName:"p",href:"https://juejin.cn/post/6898514836100120590"},"https://juejin.cn/post/6898514836100120590")),(0,i.kt)("p",null,' "Go\u8bed\u8a00\u7684\u63a5\u53e3\u53ef\u4ee5\u8fdf\u4e8estruct\u5b9e\u73b0\u6765\u5b9a\u4e49\u8fd9\u4e00\u72ec\u4e00\u65e0\u4e8c\u7684\u8bed\u8a00\u7279\u6027\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65f6\u53ef\u4ee5\u5148\u65b9\u4fbf\u7684\u6ce8\u5165\u5177\u4f53\u7c7b\u578b\uff1b\u800c\u5728\u540e\u7eed\u9700\u8981\u6269\u5c55\u4e3a\u201c\u63a5\u53e3\u201d\uff0c\u63d0\u4f9b\u591a\u4e2a\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u65e0\u9700\u4fee\u6539\u6a21\u5757\u4ee3\u7801\u3002 \u53ef\u4ee5\u8bf4\uff0cgo\u8bed\u8a00\u4e0e\u4f9d\u8d56\u6ce8\u5165\u8303\u5f0f\u662f\u76f8\u5f53\u7edd\u5999\u7684\u642d\u914d"'),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://lailin.xyz/post/go-training-week4-wire.html"},"https://lailin.xyz/post/go-training-week4-wire.html"),"\nTODO"),(0,i.kt)("h1",{id:"8-\u6027\u80fd\u4f18\u5316\u8c03\u4f18"},"8. \u6027\u80fd\u4f18\u5316\u8c03\u4f18"),(0,i.kt)("h2",{id:"81-\u8ba1\u7b97\u5185\u5b58\u5360\u7528"},"8.1. \u8ba1\u7b97\u5185\u5b58\u5360\u7528"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// \u4f7f\u7528 unsafe.Sizeof \u8ba1\u7b97\u51fa\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u5b9e\u4f8b\u9700\u8981\u5360\u7528\u7684\u5b57\u8282\u6570\n")),(0,i.kt)("h2",{id:"82-\u5185\u5b58\u5bf9\u9f50\u5bf9\u6027\u80fd\u5f71\u54cd"},"8.2. \u5185\u5b58\u5bf9\u9f50\u5bf9\u6027\u80fd\u5f71\u54cd"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\u4e3a\u4ec0\u4e48\u9700\u8981\u5185\u5b58\u5bf9\u9f50 (https://geektutu.com/post/hpg-struct-alignment.html)\nCPU \u8bbf\u95ee\u5185\u5b58\u65f6\uff0c\u5e76\u4e0d\u662f\u9010\u4e2a\u5b57\u8282\u8bbf\u95ee\uff0c\u800c\u662f\u4ee5\u5b57\u957f\uff08word size\uff09\u4e3a\u5355\u4f4d\u8bbf\u95ee\u3002\u6bd4\u5982 32 \u4f4d\u7684 CPU \uff0c\u5b57\u957f\u4e3a 4 \u5b57\u8282\uff0c\u90a3\u4e48 CPU \u8bbf\u95ee\u5185\u5b58\u7684\u5355\u4f4d\u4e5f\u662f 4 \u5b57\u8282, \u8fd9\u4e48\u8bbe\u8ba1\u7684\u76ee\u7684\uff0c\u662f\u51cf\u5c11 CPU \u8bbf\u95ee\u5185\u5b58\u7684\u6b21\u6570\n\n*/\n\n// \u4e00\u4e2a\u7ed3\u6784\u4f53\u5b9e\u4f8b\u6240\u5360\u636e\u7684\u7a7a\u95f4\u7b49\u4e8e\u5404\u5b57\u6bb5\u5360\u636e\u7a7a\u95f4\u4e4b\u548c\uff0c\u518d\u52a0\u4e0a\u5185\u5b58\u5bf9\u9f50\u7684\u7a7a\u95f4\u5927\u5c0f\ntype Args struct {\n    num1 int\n    num2 int\n}\n\ntype Flag struct {\n    num1 int16\n    num2 int32\n}\n\nfunc main() {\n    fmt.Println(unsafe.Sizeof(Args{})) // 16\n                        // Args \u7531 2 \u4e2a int \u7c7b\u578b\u7684\u5b57\u6bb5\u6784\u6210\uff0c\u5728 64\u4f4d\u673a\u5668\u4e0a\uff0c\u4e00\u4e2a int \u5360 8 \u5b57\u8282\uff0c\u56e0\u6b64\u5b58\u50a8\u4e00\u4e2a Args \u5b9e\u4f8b\u9700\u8981 16 \u5b57\u8282\u3002\n    fmt.Println(unsafe.Sizeof(Flag{})) //8\n                        // Flag \u7531\u4e00\u4e2a int32 \u548c \u4e00\u4e2a int16 \u7684\u5b57\u6bb5\u6784\u6210\uff0c\u6210\u5458\u53d8\u91cf\u5360\u636e\u7684\u5b57\u8282\u6570\u4e3a 4+2 = 6\uff0c\u4f46\u662f unsafe.Sizeof \u8fd4\u56de\u7684\u7ed3\u679c\u4e3a 8 \u5b57\u8282\uff0c\u591a\u51fa\u6765\u7684 2 \u5b57\u8282\u662f\u5185\u5b58\u5bf9\u9f50\u7684\u7ed3\u679c\n}\n")),(0,i.kt)("h2",{id:"83-\u901a\u8fc7\u76f8\u5173\u5de5\u5177\u67e5\u770b\u6027\u80fd\u74f6\u9888"},"8.3. \u901a\u8fc7\u76f8\u5173\u5de5\u5177\u67e5\u770b\u6027\u80fd\u74f6\u9888"),(0,i.kt)("p",null,"go \u81ea\u5e26\u4e86 pprof \u5de5\u5177/\u5305"),(0,i.kt)("p",null,"\u6b64\u5916\u8fd8\u6709 Graphviz \u751f\u6210\u706b\u7130\u56fe, go-torch \u4e5f\u662f\u751f\u6210\u706b\u7130\u56fe"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# cpu\ngo tool pprof cpu.pprof\n# \u5185\u5b58\ngo tool pprof mem.pprof\n\n\n# \u8c03\u7528\u56fe\n# \u706b\u7130\u56fe\n\n\n\n")),(0,i.kt)("p",null,"\u65b9\u6cd5 1: \u76f4\u63a5\u5728\u4ee3\u7801 \u672c\u5730\u751f\u6210 prof \u6587\u4ef6, \u5206\u6790\u7c92\u5ea6\u66f4\u7ec6, \u9002\u5408\u5728\u672c\u5730\u5206\u6790"),(0,i.kt)("p",null,"\u65b9\u6cd5 2: \u901a\u8fc7 http \u8f93\u51fa profile, \u9002\u5408\u7ebf\u4e0a\u6301\u7eed\u8fd0\u884c\u7684\u7a0b\u5e8f, \u4e3b\u51fd\u6570\u4e2d\u5bfc\u5165 ",(0,i.kt)("inlineCode",{parentName:"p"},'import _ "net/http/pprof"')," \u7136\u540e\u542f\u52a8 http server \u5373\u53ef, \u7136\u540e\u8bbf\u95ee ",(0,i.kt)("inlineCode",{parentName:"p"},"http://ip:port/dubug/pprof")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"go tool pprof _http://ip:port/debug/pprof/profile?seconds=10"),"(\u9ed8\u8ba4\u91c7\u6837\u65f6\u95f4\u95f4\u9694\u4e3a 30s)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u5148\u770b\u65b9\u6cd5 1:\n// \u9664\u6b64\u4e4b\u5916, go test -bench=. -cpuprofile=cpu.prof \u4e5f\u80fd\u8f93\u51fa prof \u6587\u4ef6\nconst (\n    row = 10000\n    col = 10000\n)\n\n//\u586b\u5145\u77e9\u9635\nfunc fillMatrix(m *[row][col]int) {\n    r := rand.New(rand.NewSource(time.Now().UnixNano()))\n    for i := 0; i < row; i++ {\n        for j := 0; j < col; j++ {\n            m[i][j] = r.Intn(100000)\n        }\n    }\n}\n\n//\u6a21\u62df\u8017\u65f6\u8ba1\u7b97\nfunc calculate(m *[row][col]int) {\n    for i := 0; i < row; i++ {\n        tmp := 0\n        for j := 0; j < col; j++ {\n            tmp += m[i][j]\n        }\n    }\n}\nfunc main() {\n    f, _ := os.Create("cpu.prof")\n    defer f.Close()\n    pprof.StartCPUProfile(f)\n    defer pprof.StopCPUProfile()\n\n    i := [row][col]int{}\n    fillMatrix(&i)\n    calculate(&i)\n\n    memProf, _ := os.Create("mem.prof")\n    defer memProf.Close()\n    // \u5148\u56de\u6536\u4e00\u4e2a\u518d dump \u5185\u5b58\u5feb\u7167\n    //runtime.GC()\n    pprof.WriteHeapProfile(memProf)\n\n    goroutineProf, _ := os.Create("goroutine.prof")\n    defer goroutineProf.Close()\n    lookup := pprof.Lookup("goroutine") // lookup \u53ef\u4ee5\u8bb0\u5f55\u4e0d\u540c tag, "goroutine"\u662f\u4ee3\u8868\u534f\u7a0b\u4fe1\u606f\u7684 tag\n    if lookup != nil {\n        lookup.WriteTo(goroutineProf, 0)\n    }\n\n}\n/*\n# \u8fdb\u5165\u4ea4\u4e92\u7a97\u53e3\ngo tool pprof cpu.prof\n    #\u63a5\u7740\u8f93\u5165, \u67e5\u770b cpu \u5360\u7528\u72b6\u6001\n    top [-cum]\n    #\u8f93\u51fa\u4f9d\u6b21\u662f:\n    \u51fd\u6570\u672c\u8eab\u6267\u884c\u65f6\u95f4  \u6240\u5360\u6bd4\u4f8b [sum%\u5b58\u7591]  \u51fd\u6570\u672c\u8eab\u65f6\u95f4+\u8c03\u7528\u7684\u5b50\u51fd\u6570\u6267\u884c\u65f6\u95f4(cumulation)   \u6240\u5360\u6bd4\u4f8b\n      flat  flat%   sum%        cum   cum%\n     1.91s 97.95% 97.95%      1.91s 97.95%  main.fillMatrix\n     0.02s  1.03% 98.97%      0.03s  1.54%  main.calculate (inline)\n\n    # \u67e5\u770b\u6307\u5b9a\u65b9\u6cd5\u6bcf\u4e00\u884c\u7684\u8be6\u7ec6\u8017\u65f6\u4fe1\u606f (\u4e0d\u5fc5\u6307\u5b9a\u5168\u540d, \u4f1a\u81ea\u52a8\u505a\u6700\u5927\u7a0b\u5ea6\u7684\u5339\u914d)\n    list fillMatrix\n\n */\n')),(0,i.kt)("h2",{id:"84-\u7f16\u8bd1\u4f18\u5316"},"8.4. \u7f16\u8bd1\u4f18\u5316"),(0,i.kt)("h3",{id:"841-\u4f18\u5316\u7f16\u8bd1\u4f53\u79ef"},"8.4.1. \u4f18\u5316\u7f16\u8bd1\u4f53\u79ef"),(0,i.kt)("h3",{id:"842-\u9003\u9038\u5206\u6790\u53cb\u597d\u7684\u4ee3\u7801"},"8.4.2. \u9003\u9038\u5206\u6790\u53cb\u597d\u7684\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"/*\n\u53d8\u91cf\u4f1a\u5b58\u50a8\u5728\u4e24\u4e2a\u5730\u65b9\n- \u5168\u5c40\u7684\u5806(heap)\u7a7a\u95f4\u7528\u6765\u52a8\u6001\u5206\u914d\u5185\u5b58\uff0c\u51fd\u6570\u6267\u884c\u7ed3\u675f\u65f6\u81ea\u52a8\u56de\u6536\n- \u53e6\u4e00\u4e2a\u662f\u6bcf\u4e2a goroutine \u7684\u6808(stack)\u7a7a\u95f4 , \u51fd\u6570\u7ed3\u675f\u540e\u8fd8\u4f1a\u7559\u5b58\u4e00\u6bb5\u65f6\u95f4, \u7ecf\u8fc7 GC \u7b97\u6cd5\u5206\u6790, \u67d0\u4e2a\u65f6\u95f4\u70b9\u8fdb\u884c\u5783\u573e\u56de\u6536\n\n\u9003\u9038\u5206\u6790:\n\u7f16\u8bd1\u5668\u51b3\u5b9a\u5185\u5b58\u5206\u914d\u4f4d\u7f6e\u7684\u65b9\u5f0f\uff0c\u5c31\u79f0\u4e4b\u4e3a\u9003\u9038\u5206\u6790(escape analysis)\u3002\u9003\u9038\u5206\u6790\u7531\u7f16\u8bd1\u5668\u5b8c\u6210\uff0c\u4f5c\u7528\u4e8e\u7f16\u8bd1\u9636\u6bb5\n\u901a\u8fc7 go build -gcflags=-m main_pointer.go  \u67e5\u770b\u9003\u9038\u60c5\u51b5\n\n\u9003\u9038\u7684\u5206\u7c7b\n\n\u6307\u9488\u9003\u9038: \u5373\u5728\u51fd\u6570\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd4\u56de\u4e86\u8fd9\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u51fd\u6570\u867d\u7136\u9000\u51fa\u4e86\uff0c\u4f46\u662f\u56e0\u4e3a\u6307\u9488\u7684\u5b58\u5728\uff0c\u5bf9\u8c61\u7684\u5185\u5b58\u4e0d\u80fd\u968f\u7740\u51fd\u6570\u7ed3\u675f\u800c\u56de\u6536\uff0c\u56e0\u6b64\u53ea\u80fd\u5206\u914d\u5728\u5806\u4e0a\u3002\n\ninterface{} \u52a8\u6001\u7c7b\u578b\u9003\u9038:\u5982\u679c\u51fd\u6570\u53c2\u6570\u4e3a interface{}\uff0c\u7f16\u8bd1\u671f\u95f4\u5f88\u96be\u786e\u5b9a\u5176\u53c2\u6570\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u4e5f\u4f1a\u53d1\u751f\u9003\u9038\n\n\u95ed\u5305\u9020\u6210\u7684\u9003\u9038: \u95ed\u5305\u51fd\u6570\u8bbf\u95ee\u4e86\u5916\u90e8\u53d8\u91cf n\uff0c\u90a3\u53d8\u91cf n \u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u76f4\u5230 in \u88ab\u9500\u6bc1\u3002\u5f88\u663e\u7136\uff0c\u53d8\u91cf n \u5360\u7528\u7684\u5185\u5b58\u4e0d\u80fd\u968f\u7740\u51fd\u6570 Increase() \u7684\u9000\u51fa\u800c\u56de\u6536\uff0c\u56e0\u6b64\u5c06\u4f1a\u9003\u9038\u5230\u5806\u4e0a\u3002\n*/\n\n\n")),(0,i.kt)("h2",{id:"85-\u7f16\u7a0b\u5b9e\u8df5"},"8.5. \u7f16\u7a0b\u5b9e\u8df5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u4f7f\u7528 strconv.Itoa() \u4f1a\u6bd4 fmt.Sprintf() \u8981\u5feb\u4e00\u500d\u5de6\u53f3\n\n\u4f7f\u7528StringBuffer \u6216\u662fStringBuild \u6765\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u4f1a\u6bd4\u4f7f\u7528 + \u6216 += \u6027\u80fd\u9ad8\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\n\n\u5c3d\u53ef\u80fd\u5730\u907f\u514d\u628aString\u8f6c\u6210[]Byte\n\n\u5728\u4f7f\u7528map\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u6574\u578b\u7684key\u4f1a\u6bd4\u5b57\u7b26\u4e32\u7684\u8981\u5feb\uff0c\u56e0\u4e3a\u6574\u578b\u6bd4\u8f83\u6bd4\u5b57\u7b26\u4e32\u6bd4\u8f83\u8981\u5feb\n\n\u907f\u514d\u5728\u70ed\u4ee3\u7801\u4e2d\u8fdb\u884c\u5185\u5b58\u5206\u914d\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4gc\u5f88\u5fd9\u3002\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528 sync.Pool \u6765\u91cd\u7528\u5bf9\u8c61\u3002\n\n\u5982\u679c\u5728for-loop\u91cc\u5bf9\u67d0\u4e2aslice \u4f7f\u7528 append()\u8bf7\u5148\u628a slice\u7684\u5bb9\u91cf\u5f88\u6269\u5145\u5230\u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5185\u5b58\u91cd\u65b0\u5206\u4eab\u4ee5\u53ca\u7cfb\u7edf\u81ea\u52a8\u63092\u7684N\u6b21\u65b9\u5e42\u8fdb\u884c\u6269\u5c55\u4f46\u53c8\u7528\u4e0d\u5230\uff0c\u4ece\u800c\u6d6a\u8d39\u5185\u5b58\u3002\n\n\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528\u5e76\u53d1\u7684 go routine\uff0c\u7136\u540e\u4f7f\u7528 sync.WaitGroup \u6765\u540c\u6b65\u5206\u7247\u64cd\u4f5c\n\n\u907f\u514d\u4f7f\u7528 mutex\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528 sync/Atomic\u5305(\u65e0\u9501\u7f16\u7a0b)\u3002\n\n\u4f7f\u7528 I/O\u7f13\u51b2\uff0cI/O\u662f\u4e2a\u975e\u5e38\u975e\u5e38\u6162\u7684\u64cd\u4f5c\uff0c\u4f7f\u7528 bufio.NewWrite() \u548c bufio.NewReader() \u53ef\u4ee5\u5e26\u6765\u66f4\u9ad8\u7684\u6027\u80fd\n\n\u9891\u7e41\u4f7f\u7528\u7684\u56fa\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528 regexp.Compile() \u7f16\u8bd1\u518d\u4f7f\u7528\u3002\u6027\u80fd\u4f1a\u5f97\u5347\u4e24\u4e2a\u6570\u91cf\u7ea7\u3002\n")),(0,i.kt)("h1",{id:"9-gc"},"9. GC"),(0,i.kt)("h2",{id:"91-gc-\u7b97\u6cd5"},"9.1. gc \u7b97\u6cd5"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u6807\u8bb0\u6e05\u9664\u7b97\u6cd5\uff0c\u5e76\u4e14\u5728\u6b64\u57fa\u7840\u4e0a\u4f7f\u7528\u4e86\u4e09\u8272\u6807\u8bb0\u6cd5\u548c\u5199\u5c4f\u969c\u6280\u672f\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\n")),(0,i.kt)("h2",{id:"92-gc-\u5206\u6790"},"9.2. gc \u5206\u6790"),(0,i.kt)("p",null,"\u65b9\u6cd5 1: \u5e26\u4e0a\u73af\u5883\u53d8\u91cf ",(0,i.kt)("inlineCode",{parentName:"p"},"GODEBUG=gctrace=1 go test/run ....")," , \u8fd0\u884c\u4f1a\u8f93\u51fa gc \u6b21\u6570, \u5185\u5b58\u53d8\u5316\u4fe1\u606f"),(0,i.kt)("p",null,"\u65b9\u6cd5 2: \u4f7f\u7528 go tool trace; \u5305\u62ec\u5728\u4ee3\u7801\u4e2d ",(0,i.kt)("inlineCode",{parentName:"p"},"tarce.start(f), tarce.stop()"),", \u6216\u8005\u5728\u6d4b\u8bd5\u7a0b\u5e8f\u4e2d\u8f93\u51fa ",(0,i.kt)("inlineCode",{parentName:"p"},"go test -trace trace.out"),", \u6700\u540e\u901a\u8fc7 ",(0,i.kt)("inlineCode",{parentName:"p"},"go tool trace xxx.out")," \u53ef\u89c6\u5316\u8f93\u51fa"),(0,i.kt)("h2",{id:"93-\u5199gc-\u53cb\u597d\u4ee3\u7801\u7684\u539f\u5219"},"9.3. \u5199GC \u53cb\u597d\u4ee3\u7801\u7684\u539f\u5219"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u907f\u514d\u5185\u5b58\u5206\u914d(\u4e5f\u5c31\u51cf\u5c11\u4e86 gc \u8d1f\u62c5), "),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u6bd4\u5982\u4f7f\u7528\u6307\u9488\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570, \u907f\u514d\u62f7\u8d1d"),(0,i.kt)("li",{parentName:"ul"},"\u4e3a slice, map \u521d\u59cb\u5316\u5408\u9002\u7684\u5927\u5c0f, \u907f\u514d\u6269\u5bb9"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"\u590d\u7528\u5185\u5b58"))),(0,i.kt)("h1",{id:"10-golang-runtime-\u8fd0\u884c\u65f6"},"10. golang runtime \u8fd0\u884c\u65f6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/gTb9p0WpJ37M5_k9e6xUiQ"},"https://mp.weixin.qq.com/s/gTb9p0WpJ37M5_k9e6xUiQ")),(0,i.kt)("p",null,"TODO"),(0,i.kt)("h1",{id:"11-golang-\u547d\u4ee4\u5de5\u5177\u4f7f\u7528"},"11. golang \u547d\u4ee4\u5de5\u5177\u4f7f\u7528"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://hyper0x.github.io/go_command_tutorial/#/0.13"},"https://hyper0x.github.io/go_command_tutorial/#/0.13")),(0,i.kt)("h2",{id:"111-\u6709\u54ea\u4e9b\u547d\u4ee4"},"11.1. \u6709\u54ea\u4e9b\u547d\u4ee4"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"go <cmd> <args>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'# \u7f16\u8bd1\u5f53\u524d\u76ee\u5f55 (\u4f1a\u81ea\u52a8\u67e5\u627e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 main \u65b9\u6cd5\u4f5c\u4e3a\u5f85\u7f16\u8bd1\u6587\u4ef6)\n# \u8f93\u51fa\u7269\u540d\u79f0\u4e3a\u76ee\u5f55\u540d\u79f0\ngo build\n# or\ngo build .\n# -o \u6307\u5b9a\u8f93\u51fa\u7269\u540d\u5b57\ngo build -o xxx \n# \u7f16\u8bd1\u6307\u5b9a\u6587\u4ef6, \u540c\u65f6\u6307\u5b9a\u8f93\u51fa\u540d\u5b57, \u82e5\u4e0d\u6307\u5b9a, \u9ed8\u8ba4\u4f7f\u7528\u6587\u4ef6\u540d\ngo build -o xxx aaa/bb.go\n\ngo build hello.go\ngo build github.com/xiaoyureed/stringutil\n\ngo env # \u73af\u5883\u53d8\u91cf GOARCH=amd64 GOOS=windows ...\n\n# \u8de8\u5e73\u53f0\u7f16\u8bd1\u9700\u8981\u5148\u8bbe\u5b9a env \u503c\nenv GOOS=linux GOARCH=amd64 go build\n\ngo clean # \u6e05\u9664\u7f16\u8bd1\u6587\u4ef6... \u7528\u6cd5\u7c7b\u4f3c go build\n\ngo run main.go  # \u8fd0\u884c, \u5fc5\u987b\u662f package main, \u6709 main \u51fd\u6570\n\ngo install  # \u7f16\u8bd1\u540c\u65f6\u5b89\u88c5\u5230 gopath \u4e0b\u7684 bin, \u914d\u5408 export PATH="$PATH:$(go env GOPATH)/bin" \u4f7f\u7528\ngo install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26\n\n# \u4e0b\u8f7dgithub\u7b2c\u4e09\u65b9\u5305\u5230 gopath, \u672b\u5c3e\u4e0d\u5e26\u7248\u672c\u53f7\u5219\u4f7f\u7528\u6700\u65b0, \u9ed8\u8ba4 master \u5206\u652f\u4e0a\u7684\u4ee3\u7801, -u \u66f4\u65b0 -v \u663e\u793a\u8fdb\u5ea6\ngo get -u github.com/xiaoyureed/xxx \n\ngo fmt  # \u683c\u5f0f\u5316 \u7528\u6cd5\u7c7b\u4f3c go build\ngo vet  # \u9519\u8bef\u68c0\u67e5 \u7528\u6cd5\u7c7b\u4f3c go build\ngo test # \u5355\u5143\u6d4b\u8bd5 \u7528\u6cd5\u7c7b\u4f3c go build\uff1b -v \u540c\u65f6\u6253\u5370\u4fe1\u606f\n\n')),(0,i.kt)("h2",{id:"112-\u4ea4\u53c9\u7f16\u8bd1"},"11.2. \u4ea4\u53c9\u7f16\u8bd1"),(0,i.kt)("p",null," (ref: ",(0,i.kt)("a",{parentName:"p",href:"https://studygolang.com/articles/13760"},"https://studygolang.com/articles/13760"),")"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u4e09\u4e2a\u53c2\u6570\nGOOS\uff1a\u76ee\u6807\u5e73\u53f0\u7684\u64cd\u4f5c\u7cfb\u7edf\uff08darwin\u3001freebsd\u3001linux\u3001windows\uff09 \nGOARCH\uff1a\u76ee\u6807\u5e73\u53f0\u7684\u4f53\u7cfb\u67b6\u6784\uff08386\u3001amd64\u3001arm\uff09 \nCGO_ENABLED=0 \u4ea4\u53c9\u7f16\u8bd1\u4e0d\u652f\u6301 CGO \u6240\u4ee5\u8981\u7981\u7528\u5b83\n\n# Windows \u4e0b\u7f16\u8bd1 Mac \u548c Linux 64\u4f4d\u53ef\u6267\u884c\u7a0b\u5e8f\nSET CGO_ENABLED=0\nSET GOOS=darwin\nSET GOARCH=amd64\ngo build main.go\n \nSET CGO_ENABLED=0\nSET GOOS=linux\nSET GOARCH=amd64\ngo build main.go\n\n\n# Linux \u4e0b\u7f16\u8bd1 Mac \u548c Windows 64\u4f4d\u53ef\u6267\u884c\u7a0b\u5e8f\nCGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build main.go\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go\n\n# Mac \u4e0b\u7f16\u8bd1 Linux \u548c Windows 64\u4f4d\u53ef\u6267\u884c\u7a0b\u5e8f\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build main.go\nCGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build main.go\n\n")),(0,i.kt)("h2",{id:"cgo"},"cgo"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'go\u8bed\u8a00\u81ea\u5e26\u7684\u4e00\u4e2a\u5de5\u5177/\u7279\u6027\uff0c\u7528\u6765\u652f\u6301C\u8bed\u8a00\u51fd\u6570\u8c03\u7528\uff0c\u540c\u65f6\u53ef\u4ee5\u628ago\u8bed\u8a00\u5bfc\u51faC\u52a8\u6001\u5e93\u7ed9\u5176\u4ed6\u8bed\u8a00\u4f7f\u7528\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0bcgo\u662f\u542f\u7528\u7684\n\nCGO\u5728\u4f7f\u7528C/C++\u8d44\u6e90\u7684\u65f6\u5019\u4e09\u79cd\u5f62\u5f0f\uff1a\n\n  \u6e90\u7801\uff1b\u4f7f\u7528\u6e90\u7801\u5c31\u662f\u76f4\u63a5\u5728\u6e90\u7801\u4e2d\u5199C\u4ee3\u7801\u6216\u8005\u5305\u542bC\u6e90\u6587\u4ef6\u3002\n  \n  \u9759\u6001\u94fe\u63a5\u5e93\uff0c([\u5f3a\u5236\u9759\u6001\u94fe\u63a5](https://blog.csdn.net/yjf_victor/article/details/119961863))\n\n    \u4f18\u52bf\uff1a\u751f\u6210\u7684\u7a0b\u5e8f\u4e0d\u4f1a\u4ea7\u751f\u989d\u5916\u7684\u8fd0\u884c\u65f6\u4f9d\u8d56\n    \u7f3a\u70b9\uff1a\u9759\u6001\u5e93\u5305\u542b\u4e86\u5168\u90e8\u4ee3\u7801\u548c\u7b26\u53f7\u4fe1\u606f\uff0c\u4e0d\u540c\u9759\u6001\u5e93\u53ef\u80fd\u51fa\u73b0\u7b26\u53f7\u51b2\u7a81\u5bfc\u81f4\u8fde\u63a5\u5931\u8d25\n  \n  \u52a8\u6001\u94fe\u63a5\u5e93\u3002(\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6709\u52a8\u6001\u5e93\u6709\u9759\u6001\u5e93\uff0c\u4f1a\u9009\u62e9\u52a8\u6001\u8fde\u63a5, \u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u5f3a\u5236\u9759\u6001\u8fde\u63a5\uff1aCGO_ENABLED=1 go build --ldflags \'-extldflags "-static"\' xxx)\n\n    \u4f18\u70b9\uff1a\u8282\u7701\u5185\u5b58\u548c\u78c1\u76d8\uff0c\u9694\u79bb\u4e0d\u540c\u52a8\u6001\u5e93\u51cf\u5c11\u7b26\u53f7\u51b2\u7a81\n    \u7f3a\u70b9\uff1a\u8fd0\u884c\u65f6\u4f9d\u8d56\u5bf9\u5e94\u7684\u52a8\u6001\u5e93\n\n\ninternal link\n\nexternal link\n\n# \u5f3a\u5236\u9759\u6001\u7f16\u8bd1\n# CGO_ENABLED \u8fd9\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a1\uff0c\u5f00\u542fCGO\u3002\u9700\u8981\u6307\u5b9a\u4e3a0\u6765\u5173\u95ed\uff0c\u56e0\u4e3aCGO\u4e0d\u652f\u6301\u4ea4\u53c9\u7f16\u8bd1\u3002\n# -s -w \u53bb\u6389\u8c03\u8bd5\u4fe1\u606f\uff0c\u53ef\u4ee5\u51cf\u5c0f\u6784\u5efa\u540e\u6587\u4ef6\u4f53\u79ef\n# -a is use to force to update the required lib\n# -v verbose info\n# --extldflags "-static -fpic" \u5b8c\u5168\u9759\u6001\u7f16\u8bd1\uff0c\u8fd9\u6837\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\u5c31\u53ef\u4ee5\u4efb\u610f\u653e\u5230\u6307\u5b9a\u5e73\u53f0\u4e0b\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u8fd0\u884c\u73af\u5883\u914d\u7f6e\u3002\nCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags \'-s -w --extldflags "-static -fpic"\' main.go\n\n\n# \u5982\u679c\u662fmac \u7535\u8111, \u5e76\u4e14\u9700\u8981\u652f\u6301 cgo \u4ea4\u53c9\u7f16\u8bd1\nbrew install FiloSottile/musl-cross/musl-cross # https://github.com/FiloSottile/homebrew-musl-cross\n# \u901a\u8fc7CC=x86_64-linux-musl-gcc \u6765\u6307\u5b9aGCC\u7f16\u8bd1\u5668\u3002\u800cCGO_LDFLAGS="-static"\u6765\u6307\u5b9aCGO\u90e8\u5206\u7684\u7f16\u8bd1\u4e3a\u9759\u6001\u7f16\u8bd1\nCGO_ENABLED=1 GOOS=linux GOARCH=amd64 CC=x86_64-linux-musl-gcc CGO_LDFLAGS="-static" go build -a -v\n\n\n')),(0,i.kt)("h1",{id:"12-\u5f00\u6e90\u81ea\u5df1\u7684\u7c7b\u5e93"},"12. \u5f00\u6e90\u81ea\u5df1\u7684\u7c7b\u5e93"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/354147069"},"https://zhuanlan.zhihu.com/p/354147069")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"# \u5148\u521b\u5efagithub \u4ed3\u5e93 https://github.com/vsixz/common-go.git\ngit clone https://github.com/vsixz/common-go.git\ncd common-go\n# module\u540d\u79f0\u9700\u8981\u4e0egithub\u4ed3\u5e93\u4e00\u81f4\ngo mod init github.com/vsixz/common-go\n...\n\n# \u53d1\u884c\u7248\u672c\n# \u6700\u4f73\u5b9e\u8df5\u662f\u521b\u5efa\u5bf9\u5e94\u7684\u7248\u672c\u53d1\u5e03\u5206\u652f\uff0c\u7136\u540e\u4f7f\u7528\u53d1\u5e03\u5206\u652f\u521b\u5efatag\ngit checkout -b release/v1.x\ngit push -u origin release/v1.x\ngit tag v1.0.0 \ngit push --tags # \u6b64\u65f6\uff0c\u5728github\u4ed3\u5e93release\u4e2d\u53ef\u4ee5\u770b\u5230\u53d1\u5e03\u7684\u7248\u672c\n\n\n\n")),(0,i.kt)("h1",{id:"13-\u5f00\u53d1restful-api"},"13. \u5f00\u53d1restful api"),(0,i.kt)("h2",{id:"131-\u9879\u76ee\u7ed3\u6784"},"13.1. \u9879\u76ee\u7ed3\u6784"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 conf                    #\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 config.toml         #\u5927\u5bb6\u53ef\u4ee5\u9009\u62e9\u81ea\u5df1\u719f\u6089\u7684\u914d\u7f6e\u6587\u4ef6\u7ba1\u7406\u5de5\u5177\u5305\u4f8b\u5982\uff1atoml\u3001xml\u3001ini\u7b49\u7b49\n\u251c\u2500\u2500 requests                #\u5b9a\u4e49\u5165\u53c2\u5373\u5165\u53c2\u6821\u9a8c\u89c4\u5219\n\u2502   \u2514\u2500\u2500 user_request.go\n\u2502   \u2514\u2500\u2500 food_request.go\n\u251c\u2500\u2500 responses                #\u5b9a\u4e49\u54cd\u5e94\u7684\u6570\u636e\n\u2502   \u2514\u2500\u2500 user_response.go\n\u2502   \u2514\u2500\u2500 food_response.go\n\u251c\u2500\u2500 services                #\u670d\u52a1\u5b9a\u4e49\u76ee\u5f55\n|   \u2514\u2500\u2500 v1                  #\u670d\u52a1v1\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user_service.go\n\u2502   |   \u2514\u2500\u2500 food_service.go\n|   \u2514\u2500\u2500 v2                  #\u670d\u52a1v2\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user_service.go\n\u2502   |   \u2514\u2500\u2500 food_service.go\n\u251c\u2500\u2500 api                     #api\u76ee\u5f55\uff0c\u6309\u6a21\u5757\u5b58\u653e\u63a7\u5236\u5668\uff08\u6216\u8005\u53eb\u63a7\u5236\u5668\u51fd\u6570\uff09\uff0c\u5fc5\u8981\u7684\u65f6\u5019\u53ef\u4ee5\u7ee7\u7eed\u5212\u5206\u5b50\u76ee\u5f55\u3002\n\u2502   \u2514\u2500\u2500 v1                  #apiv1\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user.go\n\u2502   |   \u2514\u2500\u2500 food.go\n\u2502   \u2514\u2500\u2500 v2                  #apiv2\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user.go\n\u2502   |   \u2514\u2500\u2500 food.go\n\u251c\u2500\u2500 router                  #\u8def\u7531\u76ee\u5f55\n\u2502   \u2514\u2500\u2500 v1                  #\u8def\u7531v1\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user.go\n\u2502   |   \u2514\u2500\u2500 food.go\n\u2502   \u2514\u2500\u2500 v2                  #\u8def\u7531v2\u7248\u672c\n\u2502   |   \u2514\u2500\u2500 user.go\n\u2502   |   \u2514\u2500\u2500 food.go\n\u251c\u2500\u2500 init.go                 #\u8def\u7531\u521d\u59cb\u5316\n\u251c\u2500\u2500 pkg                     #\u81ea\u5b9a\u4e49\u7684\u5de5\u5177\u7c7b\u7b49\n\u2502   \u2514\u2500\u2500 e                   #\u9879\u76ee\u7edf\u4e00\u7684\u54cd\u5e94\u5b9a\u4e49\uff0c\u5982\u9519\u8bef\u7801\uff0c\u901a\u7528\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u54cd\u5e94\u7684\u7ed3\u6784\u4f53\n\u2502   \u2514\u2500\u2500 util                #\u5de5\u5177\u7c7b\u76ee\u5f55\n\u251c\u2500\u2500 models                  #\u6a21\u578b\u76ee\u5f55\uff0c\u8d1f\u8d23\u9879\u76ee\u7684\u6570\u636e\u5b58\u50a8\u90e8\u5206\uff0c\u4f8b\u5982\u5404\u4e2a\u6a21\u5757\u7684Mysql\u8868\u7684\u8bfb\u5199\u6a21\u578b\u3002\n\u2502   \u251c\u2500\u2500 food.go\n\u2502   \u251c\u2500\u2500 user.go\n\u2502   \u2514\u2500\u2500 init.go             #\u6a21\u578b\u521d\u59cb\u5316\n\u251c\u2500\u2500 repositories            #\u6570\u636e\u64cd\u4f5c\u5c42\uff0c\u5b9a\u4e49\u5404\u79cd\u6570\u636e\u64cd\u4f5c\u3002\n\u2502   \u2514\u2500\u2500 user_repository.go\n\u2502   \u2514\u2500\u2500 food_repository.go\n\u251c\u2500\u2500 logs                    #\u65e5\u5fd7\u6587\u4ef6\u76ee\u5f55\uff0c\u4e3b\u8981\u4fdd\u5b58\u9879\u76ee\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u65e5\u5fd7\u3002\n\u251c\u2500\u2500 main.go                 #\u9879\u76ee\u5165\u53e3\uff0c\u8fd9\u91cc\u8d1f\u8d23Gin\u6846\u67b6\u7684\u521d\u59cb\u5316\uff0c\u6ce8\u518c\u8def\u7531\u4fe1\u606f\uff0c\u5173\u8054\u63a7\u5236\u5668\u51fd\u6570\u7b49\u3002\n")),(0,i.kt)("h2",{id:"132-fiber"},"13.2. fiber"),(0,i.kt)("h2",{id:"133-gen"},"13.3. gen"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/smallnest/gen"},"https://github.com/smallnest/gen")," \u751f\u6210 rest api"),(0,i.kt)("h2",{id:"134-gin-\u548c\u539f\u751f-http-\u5bf9\u6bd4"},"13.4. gin \u548c\u539f\u751f http \u5bf9\u6bd4"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/baidu_32452525/article/details/117138171"},"https://blog.csdn.net/baidu_32452525/article/details/117138171")),(0,i.kt)("h2",{id:"135-gin-\u4e2d\u7684-json"},"13.5. gin \u4e2d\u7684 json"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.flysnow.org/2019/12/29/golang-gin-json-rendering.html"},"https://www.flysnow.org/2019/12/29/golang-gin-json-rendering.html"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.flysnow.org/2019/12/29/golang-gin-json-rendering.html"},"https://www.flysnow.org/2019/12/29/golang-gin-json-rendering.html")),(0,i.kt)("h2",{id:"136-\u4e2d\u95f4\u4ef6"},"13.6. \u4e2d\u95f4\u4ef6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'// \u8de8\u57df\nfunc Cors() gin.HandlerFunc {\n    config := cors.DefaultConfig()\n    config.AllowAllOrigins = true\n    config.AllowHeaders = append(config.AllowHeaders, "Authorization")\n    return cors.New(config)\n}\n\n\n\n// \u9519\u8bef\u5904\u7406\n\nfunc AppErrorJsonReporter() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        c.Next()\n\n        collectedErrors := c.Errors.ByType(gin.ErrorTypeAny)\n        if len(collectedErrors) > 0 {\n            var errResp AppError\n\n            err := collectedErrors[0].Err\n            switch errTyped := err.(type) {\n            case AppError:\n                errResp = errTyped\n            default:\n                errResp = AppError{\n                    Code: http.StatusInternalServerError,\n                    Msg:  err.Error(),\n                }\n            }\n            c.AbortWithStatusJSON(errResp.Code, errResp)\n        }\n    }\n}\n\ntype AppError struct {\n    Code int\n    Msg  string\n}\n\nvar _ error = (*AppError)(nil)\n\nfunc (a AppError) Error() string {\n    return fmt.Sprintf("%d: %s", a.Code, a.Msg)\n}\n\n\n\n// ============\n\n// api \u5c42\u65e5\u5fd7\u8bb0\u5f55\n\nfunc HttpApiLogRecord() gin.HandlerFunc {\n    return func(c *gin.Context) {\n        start := time.Now()\n\n        c.Next()\n\n        elapse := time.Now().Sub(start)\n        reqMethod := c.Request.Method\n        reqUri := c.Request.RequestURI\n        reqAgent := c.Request.UserAgent()\n        respStatusCode := c.Writer.Status()\n        reqIp := c.ClientIP()\n        logx.Info("elapse: %v, reqMethod: %v, reqUri: %v, reqIp: %v, reqAgent: %v, respCode: %v",\n            elapse.Milliseconds(), reqMethod, reqUri, reqIp, reqAgent, respStatusCode)\n    }\n}\n\n\n')),(0,i.kt)("h2",{id:"goframe-gf\u6846\u67b6"},"goframe gf\u6846\u67b6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gogf/gf"},"https://github.com/gogf/gf")),(0,i.kt)("h1",{id:"14-\u5f00\u53d1\u5355\u4f53app"},"14. \u5f00\u53d1\u5355\u4f53app"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sipin/gorazor"},"https://github.com/sipin/gorazor")," \u89c6\u56fe\u5f15\u64ce\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/mjibson/esc"},"https://github.com/mjibson/esc")," \u9759\u6001\u8d44\u6e90\u5185\u5d4c"),(0,i.kt)("h1",{id:"15-\u5f00\u53d1\u5fae\u670d\u52a1-microservice"},"15. \u5f00\u53d1\u5fae\u670d\u52a1 microservice"),(0,i.kt)("h2",{id:"151-\u670d\u52a1\u4e4b\u95f4\u901a\u4fe1"},"15.1. \u670d\u52a1\u4e4b\u95f4\u901a\u4fe1"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Twirp grpc \u53d6\u820d https://taoshu.in/twirp.html\n\nhttps://ghz.sh/ \u538b\u6d4b\u5de5\u5177\nhttps://github.com/crossoverJie/ptg/\n\n")),(0,i.kt)("h2",{id:"152-\u5fae\u670d\u52a1\u6846\u67b6\u9009\u578b"},"15.2. \u5fae\u670d\u52a1\u6846\u67b6\u9009\u578b"),(0,i.kt)("p",null,"\u7b2c\u4e09\u4ee3\u5fae\u670d\u52a1\u76f4\u63a5\u7528 k8s \u505a\u8d1f\u8f7d\u5747\u8861\uff0ck8s etcd \u505a\u6ce8\u518c\u4e2d\u5fc3\uff0ck8s configmap \u505a\u914d\u7f6e\u4e2d\u5fc3\n",(0,i.kt)("a",{parentName:"p",href:"https://jishuin.proginn.com/p/763bfbd6b81b"},"https://jishuin.proginn.com/p/763bfbd6b81b")),(0,i.kt)("p",null,"kratos \u8bbe\u8ba1\u7406\u5ff5\u4e0d\u9519, b \u7ad9"),(0,i.kt)("p",null,"\u817e\u8baf tars-go"),(0,i.kt)("p",null,"\u963f\u91cc dubbo-go"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/asim/go-micro"},"https://github.com/asim/go-micro")," go-micro"),(0,i.kt)("p",null,"go-kit"),(0,i.kt)("p",null,"kite,\nkitex \u5b57\u8282"),(0,i.kt)("p",null,"Gizmo \u7684\u4f7f\u7528\u573a\u666f\u5728\u4e8e Go Micro \u548c Go Kit \u4e2d\u95f4\u3002\u5b83\u4e0d\u50cf Go Micro \u90a3\u6837\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u300e\u9ed1\u5323\u5b50\u300f\u3002\u540c\u65f6\uff0c\u5b83\u4e5f\u4e0d\u50cf Go Kit \u90a3\u6837\u539f\u59cb"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.csdn.net/qq2942713658/article/details/112721577"},"https://blog.csdn.net/qq2942713658/article/details/112721577")),(0,i.kt)("h2",{id:"153-go-micro"},"15.3. go-micro"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"micro api")),(0,i.kt)("h2",{id:"154-\u7f51\u5173"},"15.4. \u7f51\u5173"),(0,i.kt)("p",null,"traefik"),(0,i.kt)("h1",{id:"16-\u5f00\u6e90\u5e93"},"16. \u5f00\u6e90\u5e93"),(0,i.kt)("h2",{id:"\u5de5\u4e1a\u7269\u8054\u7f51"},"\u5de5\u4e1a\u7269\u8054\u7f51"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/Edgenesis/shifu"},"https://github.com/Edgenesis/shifu")),(0,i.kt)("h2",{id:"161-\u5f02\u6b65\u961f\u5217"},"16.1. \u5f02\u6b65\u961f\u5217"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/hibiken/asynq"},"https://github.com/hibiken/asynq")),(0,i.kt)("h2",{id:"162-\u76d1\u542c\u6587\u4ef6\u6539\u52a8"},"16.2. \u76d1\u542c\u6587\u4ef6\u6539\u52a8"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/fsnotify/fsnotify"},"https://github.com/fsnotify/fsnotify"),"\nfsnotify \u7684\u4e00\u70b9\u4e0d\u8db3\u5728\u4e8e\u4fa6\u542c\u6587\u4ef6\u5939\u5e76\u4e0d\u4f1a\u9012\u5f52\u8fdb\u884c\uff0c \u4e5f\u5c31\u662f\u5f53\u4f7f\u7528\u5b83\u4fa6\u542c\u4e86\u67d0\u4e00\u6587\u4ef6\u5939\u65f6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5b50\u76ee\u5f55\u4e0b\u7684\u4fee\u6539\u5e76\u4e0d\u4f1a\u88ab\u6355\u6349\u5230\uff0c\u56e0\u6b64\u6211\u4eec\u5fc5\u987b\u624b\u52a8\u5b8c\u6210\u8fd9\u4e00\u5de5\u4f5c\u3002"),(0,i.kt)("h2",{id:"163-python-\u89e3\u91ca\u5668"},"16.3. Python \u89e3\u91ca\u5668"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sbinet/go-python"},"https://github.com/sbinet/go-python")),(0,i.kt)("h2",{id:"164-\u6743\u9650\u7ba1\u7406"},"16.4. \u6743\u9650\u7ba1\u7406"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"casbin\n")),(0,i.kt)("h2",{id:"165-\u7f51\u7edc"},"16.5. \u7f51\u7edc"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\nhttps://github.com/valyala/fasthttp \u6bd4\u6807\u51c6\u5e93\u66f4\u5feb http client\n\n\nhttps://github.com/panjf2000/gnet \u5e95\u5c42\u7f51\u7edc\u6846\u67b6, \u6bd4\u6807\u51c6\u5e93 net \u66f4\u597d\u7528\n\ntcp \u670d\u52a1\u5668\u6846\u67b6 https://github.com/aceld/zinx\n\n")),(0,i.kt)("h2",{id:"166-\u70ed\u52a0\u8f7d-live-reloading-hot-reload"},"16.6. \u70ed\u52a0\u8f7d live-reloading hot reload"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/cosmtrek/air"},"https://github.com/cosmtrek/air")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/codegangsta/gin"},"https://github.com/codegangsta/gin")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gravityblast/fresh"},"https://github.com/gravityblast/fresh")),(0,i.kt)("h2",{id:"167-\u5bb9\u5668"},"16.7. \u5bb9\u5668"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/wagoodman/dive \u67e5\u9605\u955c\u50cf\u6bcf\u5c42\u7684\u5185\u5bb9, \u4f18\u5316...\n")),(0,i.kt)("h2",{id:"168-\u6570\u636e\u5e93"},"16.8. \u6570\u636e\u5e93"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-gorm/gorm"},"https://github.com/go-gorm/gorm")," orm \u6846\u67b6, \u7c7b\u6bd4 hibernate"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ent/ent"},"https://github.com/ent/ent")," \u66f4\u63a8\u8350"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/uptrace/bun"},"https://github.com/uptrace/bun")," SQL-first Golang ORM"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kyleconroy/sqlc"},"https://github.com/kyleconroy/sqlc")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jmoiron/sqlx"},"https://github.com/jmoiron/sqlx")," \u7b80\u5316 SQL \u64cd\u4f5c, \u7c7b\u6bd4 mybatis"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-sql-driver/mysql"},"https://github.com/go-sql-driver/mysql")," \u9a71\u52a8, \u914d\u5408 database/sql \u4f7f\u7528"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/hashicorp/go-memdb"},"https://github.com/hashicorp/go-memdb")," \u5185\u5b58\u6570\u636e\u5e93\u652f\u6301\u4e8b\u52a1"),(0,i.kt)("h2",{id:"169-\u7f13\u5b58"},"16.9. \u7f13\u5b58"),(0,i.kt)("p",null,"go-redis"),(0,i.kt)("p",null,"golang/groupcache"),(0,i.kt)("p",null,"golang.org/x/sync/singleflight \u9632\u6b62\u7f13\u5b58\u51fb\u7a7f  (",(0,i.kt)("a",{parentName:"p",href:"https://www.huolg.net/backend/702"},"https://www.huolg.net/backend/702"),")"),(0,i.kt)("h2",{id:"1610-\u89e3\u6790\u5e93"},"16.10. \u89e3\u6790\u5e93"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\nhttps://github.com/spf13/cobra \u547d\u4ee4\u884c\u89e3\u6790\n\n\nhttps://github.com/pelletier/go-toml  \u914d\u7f6e\u6587\u4ef6\u89e3\u6790\ngithub.com/go-ini/ini\n\nhttps://github.com/spf13/viper \u5904\u7406\u914d\u7f6e\u6587\u4ef6, \u652f\u6301\u591a\u683c\u5f0f, \u4e5f\u80fd\u5904\u7406\u73af\u5883\u53d8\u91cf\n\nhttps://github.com/kelseyhightower/envconfig \u73af\u5883\u53d8\u91cf\u89e3\u6790\ngithub.com/joho/godotenv\n")),(0,i.kt)("h2",{id:"1611-\u989c\u8272"},"16.11. \u989c\u8272"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/fatih/color"},"https://github.com/fatih/color")),(0,i.kt)("h2",{id:"1612-\u597d\u7684\u7f16\u7a0b\u4f53\u9a8c"},"16.12. \u597d\u7684\u7f16\u7a0b\u4f53\u9a8c"),(0,i.kt)("h3",{id:"16121-\u6570\u636e\u5e93\u8868\u8f6c-struct"},"16.12.1. \u6570\u636e\u5e93\u8868\u8f6c struct"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gohouse/converter"},"https://github.com/gohouse/converter")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/hantmac/fuckdb"},"https://github.com/hantmac/fuckdb")," \u751f\u6210 struct tag"),(0,i.kt)("h3",{id:"16122-struct-\u89e3\u6790"},"16.12.2. struct \u89e3\u6790"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/fatih/structs"},"https://github.com/fatih/structs")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/fatih/structtag"},"https://github.com/fatih/structtag")," tag\u89e3\u6790"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/mitchellh/mapstructure"},"https://github.com/mitchellh/mapstructure")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jinzhu/copier"},"https://github.com/jinzhu/copier")," \u514b\u9686\u590d\u5236"),(0,i.kt)("h3",{id:"16123-\u683c\u5f0f\u5316\u65e5\u671f"},"16.12.3. \u683c\u5f0f\u5316\u65e5\u671f"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/dustin/go-humanize"},"https://github.com/dustin/go-humanize")," \u4eba\u7c7b\u53cb\u597d\u7684\u683c\u5f0f\u5316\u5e93(\u6bd4\u5982\u683c\u5f0f\u5316\u6210 xxx hours ago ...)"),(0,i.kt)("h3",{id:"16124-\u6d41\u5f0f\u5904\u7406-\u6d41\u5f0f\u7f16\u7a0b"},"16.12.4. \u6d41\u5f0f\u5904\u7406 \u6d41\u5f0f\u7f16\u7a0b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/reugn/go-streams"},"https://github.com/reugn/go-streams")," \u6d41\u5f0f\u5904\u7406 \u6d41\u5f0f\u7f16\u7a0b \u9644\u5e26\u6ed1\u52a8\u7a97\u53e3\u5b9e\u73b0"),(0,i.kt)("h3",{id:"16125-\u6c60"},"16.12.5. \u6c60"),(0,i.kt)("p",null,"goroutine \u6c60 ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/panjf2000/ants"},"https://github.com/panjf2000/ants")),(0,i.kt)("h3",{id:"16126-\u4f9d\u8d56\u6ce8\u5165"},"16.12.6. \u4f9d\u8d56\u6ce8\u5165"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\nhttps://github.com/google/wire \u7f16\u8bd1\u65f6\u6ce8\u5165(\u4f7f\u7528\u4ee3\u7801\u751f\u6210\u5b9e\u73b0)\n\n\n \u4f9d\u8d56\u53cd\u5c04\u5b9e\u73b0\u7684\u8fd0\u884c\u65f6\u4f9d\u8d56\u6ce8\u5165\uff1ainject\u3001uber\u3001dig\n\n")),(0,i.kt)("h2",{id:"1613-\u5b9a\u65f6\u4efb\u52a1"},"16.13. \u5b9a\u65f6\u4efb\u52a1"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/robfig/cron"},"https://github.com/robfig/cron")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'package main\n\nimport (\n    "github.com/robfig/cron/v3"\n    "log"\n    "time"\n)\n\nfunc main() {\n    c := cron.New()\n    entryId, _ := c.AddFunc("@every 1s", func() {\n        log.Println("hello")\n    })\n    c.Start()\n    after := time.After(time.Second * 3)\n    <-after\n    c.Remove(entryId)\n    select {\n    }\n}\n\n')),(0,i.kt)("h2",{id:"1614-api-\u548c\u6587\u6863"},"16.14. api \u548c\u6587\u6863"),(0,i.kt)("p",null,"gin, \u4f46\u662f\u66f4\u63a8\u8350 echo (\u7c7b\u4f3c /xxx/:id \u8fd9\u6837\u7684 wildcard \u4f1a\u51fa\u73b0\u6b67\u4e49, \u548c /xxx/yyy \u51b2\u7a81, echo \u6ca1\u8fd9\u4e2a\u95ee\u9898, \u82e5\u4e00\u5b9a\u8981\u7528 gin, \u63a8\u8350 /xxx/-/:id \u4e2d\u95f4\u52a0\u4e00\u4e2a\u7b26\u5408\u6d88\u9664\u6b67\u4e49)"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/go-swagger/go-swagger"},"https://github.com/go-swagger/go-swagger")),(0,i.kt)("p",null,"\u53c2\u6570\u6821\u9a8c github.com/go-playground/validator/v10"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gogf/gf"},"https://github.com/gogf/gf")," goframe"),(0,i.kt)("h2",{id:"1615-\u7cfb\u7edf\u4fe1\u606f-\u8fd0\u7ef4"},"16.15. \u7cfb\u7edf\u4fe1\u606f \u8fd0\u7ef4"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\nhttps://github.com/shirou/gopsutil psutil \u7684 golang \u7248\u672c\n\nhttps://github.com/yudai/gotty \u66b4\u9732 terminal \u6210\u4e3a web \u670d\u52a1\n")),(0,i.kt)("h2",{id:"\u76d1\u63a7-\u65f6\u5e8f\u6570\u636e\u5e93"},"\u76d1\u63a7 \u65f6\u5e8f\u6570\u636e\u5e93"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/VictoriaMetrics/VictoriaMetrics"},"https://github.com/VictoriaMetrics/VictoriaMetrics")),(0,i.kt)("h2",{id:"1616-\u65f6\u95f4\u5de5\u5177"},"16.16. \u65f6\u95f4\u5de5\u5177"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/jinzhu/now\n")),(0,i.kt)("h2",{id:"1617-\u6301\u7eed\u8ffd\u8e2a\u8bfb\u53d6\u65e5\u5fd7"},"16.17. \u6301\u7eed\u8ffd\u8e2a\u8bfb\u53d6\u65e5\u5fd7"),(0,i.kt)("p",null,"github.com/hpcloud/tail \u65e5\u5fd7\u6587\u4ef6\u8bfb\u53d6"),(0,i.kt)("h2",{id:"1618-\u5206\u5e03\u5f0f"},"16.18. \u5206\u5e03\u5f0f"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yedf/dtm"},"https://github.com/yedf/dtm")," \u5206\u5e03\u5f0f\u4e8b\u52a1\u7ba1\u7406"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kelseyhightower/confd"},"https://github.com/kelseyhightower/confd")," \u914d\u7f6e\u6587\u4ef6\u7ba1\u7406"),(0,i.kt)("h2",{id:"1619-\u5b9e\u73b0\u63d2\u4ef6\u673a\u5236"},"16.19. \u5b9e\u73b0\u63d2\u4ef6\u673a\u5236"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://wangbjun.site/2021/coding/golang/go-rpc-plugin.html"},"https://wangbjun.site/2021/coding/golang/go-rpc-plugin.html"),"\nTODO"),(0,i.kt)("h2",{id:"1620-\u548c\u5176\u4ed6\u8bed\u8a00\u4ea4\u4e92"},"16.20. \u548c\u5176\u4ed6\u8bed\u8a00\u4ea4\u4e92"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/rogchap/v8go \u6267\u884c js \u811a\u672c\nhttps://github.com/kuoruan/v8go-polyfills\n\nhttps://github.com/robertkrimen/otto\n\nhttps://github.com/gopherjs/gopherjs\n\n\n\n\n")),(0,i.kt)("h2",{id:"1621-\u97f3\u9891\u89c6\u9891\u56fe\u7247\u5904\u7406"},"16.21. \u97f3\u9891\u89c6\u9891\u56fe\u7247\u5904\u7406"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/h2non/bimg \u56fe\u7247\n")),(0,i.kt)("h2",{id:"1622-\u5e38\u7528\u5de5\u5177\u5e93"},"16.22. \u5e38\u7528\u5de5\u5177\u5e93"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"https://github.com/kakuilan/kgo\nhttps://github.com/samber/lo \u652f\u6301\u6cdb\u578b\n")),(0,i.kt)("h2",{id:"1623-\u6ce8\u89e3\u7f16\u7a0b"},"16.23. \u6ce8\u89e3\u7f16\u7a0b"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/MarcGrol/golangAnnotations"},"https://github.com/MarcGrol/golangAnnotations")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/u2takey/go-annotation"},"https://github.com/u2takey/go-annotation")),(0,i.kt)("h2",{id:"1624-\u751f\u6210\u5047\u6570\u636e"},"16.24. \u751f\u6210\u5047\u6570\u636e"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/aszhc/go-faker-cn"},"https://github.com/aszhc/go-faker-cn")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/bxcodec/faker"},"https://github.com/bxcodec/faker")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/brianvoe/gofakeit"},"https://github.com/brianvoe/gofakeit")),(0,i.kt)("h2",{id:"1625-\u7f51\u7edc\u6293\u5305"},"16.25. \u7f51\u7edc\u6293\u5305"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/google/gopacket"},"https://github.com/google/gopacket")),(0,i.kt)("h2",{id:"1626-gui\u6846\u67b6"},"16.26. gui\u6846\u67b6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/fyne-io/fyne"},"https://github.com/fyne-io/fyne")),(0,i.kt)("h1",{id:"17-\u53c2\u8003\u94fe\u63a5"},"17. \u53c2\u8003\u94fe\u63a5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/chai2010/advanced-go-programming-book"},"https://github.com/chai2010/advanced-go-programming-book")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/search?q=algorithm+language%3Ago&type=Repositories"},"https://github.com/search?q=algorithm+language%3Ago&type=Repositories")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kylesliu/awesome-golang-algorithm"},"https://github.com/kylesliu/awesome-golang-algorithm"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/0xAX/go-algorithms"},"https://github.com/0xAX/go-algorithms"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/KeKe-Li/data-structures-questions"},"https://github.com/KeKe-Li/data-structures-questions"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hustcc/JS-Sorting-Algorithm"},"https://github.com/hustcc/JS-Sorting-Algorithm")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/xxjwxc/uber_go_guide_cn"},"https://github.com/xxjwxc/uber_go_guide_cn")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/369863905/answer/2444168149"},"https://www.zhihu.com/question/369863905/answer/2444168149")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/zehuamama/tinyrpc"},"https://github.com/zehuamama/tinyrpc")," High performance RPC framework based on protobuf"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/LearnGolang/LearnGolang"},"https://github.com/LearnGolang/LearnGolang")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/shockerli/go-awesome"},"https://github.com/shockerli/go-awesome")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang-design/Go-Questions"},"https://github.com/golang-design/Go-Questions")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.geekclub.cc/2020/06/1160"},"https://www.geekclub.cc/2020/06/1160")," \u6280\u672f\u6808"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/overnote/over-golang"},"https://github.com/overnote/over-golang")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/0voice/Introduction-to-Golang"},"https://github.com/0voice/Introduction-to-Golang")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://blog.51cto.com/u_13283759/3187086"},"https://blog.51cto.com/u_13283759/3187086")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang101/golang101"},"https://github.com/golang101/golang101")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yongxinz/gopher"},"https://github.com/yongxinz/gopher")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/kirintang/go-read-recommend"},"https://github.com/kirintang/go-read-recommend")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/shockerli/go-awesome"},"https://github.com/shockerli/go-awesome")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/wh211212?after=Y3Vyc29yOnYyOpK5MjAxOS0wOS0wN1QxMjoyODowOSswODowMM4LDi9E&tab=stars"},"https://github.com/wh211212?after=Y3Vyc29yOnYyOpK5MjAxOS0wOS0wN1QxMjoyODowOSswODowMM4LDi9E&tab=stars")," \u661f\u661f\u8fd8\u884c\n",(0,i.kt)("a",{parentName:"p",href:"https://cloud.tencent.com/developer/article/1904240?from=article.detail.1196581"},"https://cloud.tencent.com/developer/article/1904240?from=article.detail.1196581")," \u817e\u8baf\u5de5\u7a0b\u90e8\u5165\u95e8\u597d\u6587\u7ae0"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://go.dev/doc/faq"},"https://go.dev/doc/faq")," go faq \u5b98\u65b9\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/Articles"},"https://github.com/golang/go/wiki/Articles")," \u7cbe\u534e\u6587\u7ae0\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/Blogs"},"https://github.com/golang/go/wiki/Blogs")," \u535a\u5ba2\u96c6\u5408\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/GoTalks"},"https://github.com/golang/go/wiki/GoTalks")," \u8bbf\u8c08"),(0,i.kt)("p",null,"\u4ee3\u7801\u89c4\u8303\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/golang/go/wiki/CodeReviewComments"},"https://github.com/golang/go/wiki/CodeReviewComments"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://go.dev/doc/effective_go"},"https://go.dev/doc/effective_go")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/eachain/Gotchas"},"https://github.com/eachain/Gotchas")," \u5c0f\u6280\u5de7\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/eachain"},"https://github.com/eachain")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/wangbjun"},"https://github.com/wangbjun")," \u5c0f\u5de5\u5177 \u5b66\u4e60"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://draveness.me/golang-101/"},"https://draveness.me/golang-101/")," golang \u5de5\u7a0b\u5316\u5b9e\u8df5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://talkgo.org/"},"https://talkgo.org/")," golang \u591c\u8bfb"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/yifhao?tab=stars"},"https://github.com/yifhao?tab=stars")," golang java \u5927\u725b\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/yifhao/share"},"https://github.com/yifhao/share")," \u5927\u725b\u5206\u4eab"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://dave.cheney.net/practical-go/presentations/qcon-china.html"},"https://dave.cheney.net/practical-go/presentations/qcon-china.html")," \u6700\u4f73\u5b9e\u8df5\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/llitfkitfk/go-best-practice"},"https://github.com/llitfkitfk/go-best-practice")," \u7ffb\u8bd1"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gocn"},"https://github.com/gocn")," \u4e2d\u6587\u793e\u533a\u7ec4\u7ec7\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/gocn/translator"},"https://github.com/gocn/translator")," \u7ffb\u8bd1\u7684\u82f1\u6587\u6587\u7ae0"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/gwuhaolin/blog/issues/12"},"https://github.com/gwuhaolin/blog/issues/12")," \u6559\u4f60\u5199 shadowsocks"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/ma6254/FictionDown"},"https://github.com/ma6254/FictionDown")," \u7b14\u8da3\u9601\u5c0f\u8bf4\u722c\u53d6\u6e05\u6d17"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/jiujuan/go-collection"},"https://github.com/jiujuan/go-collection")," \u8d44\u6599\u641c\u96c6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/halfrost/LeetCode-Go"},"https://github.com/halfrost/LeetCode-Go")," \u7b97\u6cd5"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/hackstoic/golang-open-source-projects"},"https://github.com/hackstoic/golang-open-source-projects"),"  \u4e2d\u6587\u7248awesome-go\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/avelino/awesome-go"},"https://github.com/avelino/awesome-go"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jobbole/awesome-go-cn"},"https://github.com/jobbole/awesome-go-cn")),(0,i.kt)("p",null,"official doc: ",(0,i.kt)("a",{parentName:"p",href:"http://docs.studygolang.com/doc/"},"http://docs.studygolang.com/doc/"),"\n\u4e2d\u6587 ",(0,i.kt)("a",{parentName:"p",href:"http://docscn.studygolang.com/"},"http://docscn.studygolang.com/")),(0,i.kt)("p",null,"dev web app by golang: ",(0,i.kt)("a",{parentName:"p",href:"https://slides.com/akshaydeo/writing-web-apps-in-golang"},"https://slides.com/akshaydeo/writing-web-apps-in-golang")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/unknwon/the-way-to-go_ZH_CN"},"https://github.com/unknwon/the-way-to-go_ZH_CN")),(0,i.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684 video server : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/xiaoyureed/video_server"},"https://github.com/xiaoyureed/video_server")),(0,i.kt)("p",null,"tips: ",(0,i.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/27518650"},"https://zhuanlan.zhihu.com/p/27518650"),", ",(0,i.kt)("a",{parentName:"p",href:"https://blog.gaobinzhan.com/category/22/"},"https://blog.gaobinzhan.com/category/22/")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/astaxie/build-web-application-with-golang"},"https://github.com/astaxie/build-web-application-with-golang")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/wyh267/FalconEngine"},"https://github.com/wyh267/FalconEngine")," \u7b80\u5355\u641c\u7d22\u5f15\u64ce"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/TimothyYe"},"https://github.com/TimothyYe")," \u5c0f\u5de5\u5177"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/geektutu/7days-golang"},"https://github.com/geektutu/7days-golang")," \u624b\u5199\u4e2d\u95f4\u4ef6"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://awesome-go.com/"},"https://awesome-go.com/")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/geektutu/high-performance-go%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90"},"https://github.com/geektutu/high-performance-go\u6027\u80fd\u5206\u6790")))}g.isMDXComponent=!0}}]);