"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6099],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return p}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=d(t),p=l,f=c["".concat(s,".").concat(p)]||c[p]||m[p]||r;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function p(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=c;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var d=2;d<r;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},81357:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return m}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),o=["components"],i={title:"Extjs \u7b14\u8bb0",date:new Date("2017-08-03T11:56:34.000Z"),tags:["extJs"],toc_min_heading_level:2,toc_max_heading_level:5},s=void 0,d={unversionedId:"extjs-note",id:"extjs-note",title:"Extjs \u7b14\u8bb0",description:"\u7f51\u4e0a\u5173\u4e8eExtJS\u7684\u6559\u7a0b\u591a\u4e0d\u662f\u6700\u65b0\u7684ExtJS6, \u800c\u4e14\u96f6\u96f6\u6563\u6563, \u505a\u4e2a\u6574\u7406\u5907\u67e5.",source:"@site/docs/extjs-note.md",sourceDirName:".",slug:"/extjs-note",permalink:"/docs/extjs-note",draft:!1,tags:[{label:"extJs",permalink:"/docs/tags/ext-js"}],version:"current",frontMatter:{title:"Extjs \u7b14\u8bb0",date:"2017-08-03T11:56:34.000Z",tags:["extJs"],toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"\u82f1\u8bed\u5b66\u4e60\ud83d\udd25",permalink:"/docs/english-note"},next:{title:"flutter",permalink:"/docs/flutter"}},u={},m=[{value:"cmd \u80fd\u505a\u7684\u4e8b",id:"cmd-\u80fd\u505a\u7684\u4e8b",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u4e00\u4e9b\u91cd\u8981\u7684\u65b9\u6cd5",id:"\u4e00\u4e9b\u91cd\u8981\u7684\u65b9\u6cd5",level:2},{value:"\u91cd\u8981\u7684\u7c7b",id:"\u91cd\u8981\u7684\u7c7b",level:2},{value:"define class",id:"define-class",level:2},{value:"define constructor",id:"define-constructor",level:2},{value:"define private member",id:"define-private-member",level:2},{value:"define static member",id:"define-static-member",level:2},{value:"\u5b9a\u4e49\u4e00\u4e2aModel",id:"\u5b9a\u4e49\u4e00\u4e2amodel",level:2},{value:"\u81ea\u5b9a\u4e49field type",id:"\u81ea\u5b9a\u4e49field-type",level:2},{value:"association between Model",id:"association-between-model",level:2},{value:"one to one",id:"one-to-one",level:3},{value:"one to many",id:"one-to-many",level:3},{value:"many to many",id:"many-to-many",level:3},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:2},{value:"MVVM\u67b6\u6784\u4e2d",id:"mvvm\u67b6\u6784\u4e2d",level:2},{value:"links",id:"links",level:2},{value:"\u5728form\u4e2d",id:"\u5728form\u4e2d",level:2},{value:"\u5728Grid\u4e2d",id:"\u5728grid\u4e2d",level:2}],c={toc:m};function p(e){var n=e.components,t=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{align:"center"},"\u7f51\u4e0a\u5173\u4e8eExtJS\u7684\u6559\u7a0b\u591a\u4e0d\u662f\u6700\u65b0\u7684ExtJS6, \u800c\u4e14\u96f6\u96f6\u6563\u6563, \u505a\u4e2a\u6574\u7406\u5907\u67e5. reference: [1](http://www.extjs-tutorial.com/), [2](http://www.extjs-tutorial.com/extjs-examples/extjs6-demo), [3](http://docs.sencha.com/extjs/6.5.1/modern/Ext.html), [4](https://www.tutorialspoint.com/extjs/index.htm)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extjs-%E4%BB%8B%E7%BB%8D"},"Extjs \u4ecb\u7ecd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83"},"\u914d\u7f6e\u73af\u5883")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%B8%AE%E5%8A%A9%E6%96%87%E6%A1%A3"},"\u5e2e\u52a9\u6587\u6863")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sencha-cmd"},"Sencha Cmd"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#cmd-%E8%83%BD%E5%81%9A%E7%9A%84%E4%BA%8B"},"cmd \u80fd\u505a\u7684\u4e8b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%AE%89%E8%A3%85"},"\u5b89\u88c5")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#first-app"},"first APP")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#app%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84"},"APP\u76ee\u5f55\u7ed3\u6784")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83"},"\u547d\u540d\u89c4\u8303")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extjs-%E7%B1%BB%E7%B3%BB%E7%BB%9F"},"extjs \u7c7b\u7cfb\u7edf"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E4%B8%80%E4%BA%9B%E9%87%8D%E8%A6%81%E7%9A%84%E6%96%B9%E6%B3%95"},"\u4e00\u4e9b\u91cd\u8981\u7684\u65b9\u6cd5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E9%87%8D%E8%A6%81%E7%9A%84%E7%B1%BB"},"\u91cd\u8981\u7684\u7c7b")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#component"},"component")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#container"},"container")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#layout"},"layout")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#define"},"define"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#define-class"},"define class")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#define-constructor"},"define constructor")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#define-private-member"},"define private member")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#define-static-member"},"define static member")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extend-%E7%BB%A7%E6%89%BF"},"extend \u7ee7\u627f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#mixins"},"mixins")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#config"},"config")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6"},"\u81ea\u5b9a\u4e49\u4e8b\u4ef6")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E4%BD%BF%E7%94%A8dom-%E8%B7%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E9%97%AE%E9%A2%98"},"\u4f7f\u7528DOM \u8de8\u6d4f\u89c8\u5668\u95ee\u9898")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extcomponentquery"},"Ext.ComponentQuery")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#messagebox"},"MessageBox")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#mvvm%E6%9E%B6%E6%9E%84"},"MVVM\u67b6\u6784")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extdatamodel"},"Ext.data.Model"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AAmodel"},"\u5b9a\u4e49\u4e00\u4e2aModel")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E8%87%AA%E5%AE%9A%E4%B9%89field-type"},"\u81ea\u5b9a\u4e49field type")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#association-between-model"},"association between Model"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#one-to-one"},"one to one")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#one-to-many"},"one to many")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#many-to-many"},"many to many")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extappviewmodel"},"Ext.app.ViewModel"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B"},"\u7b80\u5355\u793a\u4f8b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#mvvm%E6%9E%B6%E6%9E%84%E4%B8%AD"},"MVVM\u67b6\u6784\u4e2d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#links"},"links")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extappviewcontroller"},"Ext.app.ViewController")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extajax"},"Ext.Ajax")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extdatasession"},"Ext.data.Session")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#extdatachainedstore-extdatastore"},"Ext.data.ChainedStore, Ext.data.Store")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#crud%E4%BE%8B%E5%AD%90"},"CRUD\u4f8b\u5b50"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%9C%A8form%E4%B8%AD"},"\u5728form\u4e2d")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#%E5%9C%A8grid%E4%B8%AD"},"\u5728Grid\u4e2d")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sync"},"sync\uff08\uff09")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#grid%E4%B8%AD%E7%9A%84%E5%88%86%E9%A1%B5"},"Grid\u4e2d\u7684\u5206\u9875"))),(0,r.kt)("h1",{id:"extjs-\u4ecb\u7ecd"},"Extjs \u4ecb\u7ecd"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u57fa\u4e8eJavaScript\u7684\u524d\u7aef\u5f00\u53d1\u6846\u67b6  "),(0,r.kt)("li",{parentName:"ul"},"\u5f00\u53d1\u4f01\u4e1a\u5e94\u7528\u524d\u53f0\u7684\u7edd\u4f73\u5229\u5668  "),(0,r.kt)("li",{parentName:"ul"},"\u5206\u6536\u8d39\u7248\u548c\u514d\u8d39\u7248\uff08Ext JS is a per-seat/per-server commercial license framework and open-source under GPL licence by Sencha.\uff09  "),(0,r.kt)("li",{parentName:"ul"},"\u5c4f\u853d\u4e86\u5927\u90e8\u5206HTML\u548cCSS\u7684\u4ee3\u7801  "),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301MVC/MVVM\u67b6\u6784    ")),(0,r.kt)("p",null,"\u548cAngularJS\u7684\u5bf9\u6bd4\uff1a  "),(0,r.kt)("h1",{id:"\u914d\u7f6e\u73af\u5883"},"\u914d\u7f6e\u73af\u5883"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Extjs SDK: GPL \u7248\u672c\u7684ExtJS6 ",(0,r.kt)("a",{parentName:"li",href:"https://www.sencha.com/legal/gpl/"},"https://www.sencha.com/legal/gpl/")),(0,r.kt)("li",{parentName:"ul"},"sencha cmd: ALM\u5de5\u5177\uff0c",(0,r.kt)("a",{parentName:"li",href:"https://www.sencha.com/products/sencha-cmd/"},"https://www.sencha.com/products/sencha-cmd/")," ",(0,r.kt)("inlineCode",{parentName:"li"},"Win10\u4e0b\u9700\u8981\u624b\u52a8\u52a0\u5165\u73af\u5883\u53d8\u91cf")),(0,r.kt)("li",{parentName:"ul"},"IDE: Eclipse, necessary plugin: spket ",(0,r.kt)("a",{parentName:"li",href:"http://www.agpad.com/update/"},"http://www.agpad.com/update/"))),(0,r.kt)("h1",{id:"\u5e2e\u52a9\u6587\u6863"},"\u5e2e\u52a9\u6587\u6863"),(0,r.kt)("p",null,"API: ",(0,r.kt)("a",{parentName:"p",href:"http://docs.sencha.com/extjs/6.5.1/modern/Ext.html"},"http://docs.sencha.com/extjs/6.5.1/modern/Ext.html"),"\nEXMPLE: ",(0,r.kt)("a",{parentName:"p",href:"http://examples.sencha.com/extjs/"},"http://examples.sencha.com/extjs/"),"\nextjs\u5728\u7ebf\u7f16\u8f91\u5668\uff1a",(0,r.kt)("a",{parentName:"p",href:"https://fiddle.sencha.com/#view/editor"},"https://fiddle.sencha.com/#view/editor")),(0,r.kt)("h1",{id:"sencha-cmd"},"Sencha Cmd"),(0,r.kt)("h2",{id:"cmd-\u80fd\u505a\u7684\u4e8b"},"cmd \u80fd\u505a\u7684\u4e8b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u81ea\u52a8\u751f\u6210\u7a0b\u5e8f\u9aa8\u67b6"),(0,r.kt)("li",{parentName:"ul"},"\u8f7b\u91cf\u7ea7\u7684web server"),(0,r.kt)("li",{parentName:"ul"},"\u6784\u5efa&\u90e8\u7f72\u5de5\u5177")),(0,r.kt)("h2",{id:"\u5b89\u88c5"},"\u5b89\u88c5"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"jdk or jre"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://rubyinstaller.org/downloads/"},"Ruby"),", \u5b89\u88c5\u5b8c\u9a8c\u8bc1\uff1aruby -v"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.sencha.com/products/sencha-cmd/"},"sencha cmd"),", \u9a8c\u8bc1\uff1asencha"),(0,r.kt)("li",{parentName:"ul"},"\u547d\u4ee4\u793a\u4f8b\uff1a",(0,r.kt)("inlineCode",{parentName:"li"},"sencha -sdk pathToSenchaSDK generate app appName pathToAppFolder"),"\u751f\u6210APP\u9aa8\u67b6\uff0cappName\u548cfolder\u8981\u76f8\u540c")),(0,r.kt)("h1",{id:"first-app"},"first APP"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u751f\u6210\u9aa8\u67b6")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"sencha -sdk pathToSenchaSDK generate app appName pathToAppFolder"),"\u751f\u6210APP\u9aa8\u67b6\uff0cappName\u548cpathToAppFolder\u8981\u76f8\u540c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u90e8\u7f72\u3001\u8bbf\u95ee")),(0,r.kt)("p",null,"cmd\u4e5f\u53ef\u505a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684web server\uff0c\u5728APP\u76ee\u5f55\u4e0b",(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"sencha web \u2013port xxxx start")," xxx\u8868\u793a\u7aef\u53e3\u53f7  "),(0,r.kt)("p",null,"\u8bbf\u95ee\uff1ahttp://localhost:xxxx"),(0,r.kt)("h1",{id:"app\u76ee\u5f55\u7ed3\u6784"},"APP\u76ee\u5f55\u7ed3\u6784"),(0,r.kt)("h1",{id:"\u547d\u540d\u89c4\u8303"},"\u547d\u540d\u89c4\u8303"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9075\u5faaCamelCase\u7684\u5199\u6cd5\uff0c\u5e38\u91cf\u5927\u5199,\u9759\u6001\u5c5e\u6027\u5927\u5199\uff0c\u79c1\u6709\u53d8\u91cf\u4ee5\u2018_\u2019\u5f00\u5934"),(0,r.kt)("li",{parentName:"ul"},"class name \u81f3\u5c11\u8981\u6709\u4e00\u4e2anamespace\uff0ceg:TopLevelNamespace.MyClassName"),(0,r.kt)("li",{parentName:"ul"},"\u9876\u7ea7namespace \u548cclass name \u8981\u7b26\u5408CamelCase,\u5176\u4ed6\u8981\u5c0f\u5199\uff0ceg\uff1aTopNamespace.middnamespace.CustomClass"),(0,r.kt)("li",{parentName:"ul"},"classname\u6620\u5c04class\u6587\u4ef6\u7684\u8def\u5f84\uff0ceg\uff1aExt.util.Observable\u5b58\u50a8\u5728\u8def\u5f84/\u5230/ src / Ext / util / Observable.js\uff1bMyTopLevelNamespace.util.JsonToXml\u88ab\u5b58\u50a8\u5728\u8def\u5f84/\u5230/ src / MyTopLevelNamespace / util / JsonToXml.js\u4e2d"),(0,r.kt)("li",{parentName:"ul"},"alias \u547d\u540d\u89c4\u8303\uff1amvvm\u4e2d\uff0cview\u7684\u522b\u540d\u7528widget.XX \uff0c controller\u7684\u522b\u540d\u7528'controller.XX\uff0c viewmodel\u7684\u522b\u540d\u7528viewmodel.XX   ")),(0,r.kt)("h1",{id:"extjs-\u7c7b\u7cfb\u7edf"},"extjs \u7c7b\u7cfb\u7edf"),(0,r.kt)("h2",{id:"\u4e00\u4e9b\u91cd\u8981\u7684\u65b9\u6cd5"},"\u4e00\u4e9b\u91cd\u8981\u7684\u65b9\u6cd5"),(0,r.kt)("p",null,"Ext.application()  :Loads Ext.app.Application class and starts it up with given configuration after the page is ready.\nExt.apply(obj,{a:'', b:''})  :Copies all the properties of config to the specified object.\nExt.define()",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.override()",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.create()",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.getCmp()  "),(0,r.kt)("h2",{id:"\u91cd\u8981\u7684\u7c7b"},"\u91cd\u8981\u7684\u7c7b"),(0,r.kt)("p",null,"Ext: \u5c01\u88c5\u4e86\u6240\u6709\u7684\u7c7b\u548c\u5b9e\u7528\u65b9\u6cd5",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.Base\uff1aExt.define()\u521b\u5efa\u51fa\u7684\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\uff0cExt\u4e2d\u6240\u6709\u7c7b\u7ee7\u627f\u81ea\u5b83",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.ClassManager: \u7ba1\u7406\u6240\u6709\u7c7b\uff1b\u5904\u7406\u7c7b\u540d\u5230\u7c7b\u5bf9\u8c61\u7684\u6620\u5c04",(0,r.kt)("br",{parentName:"p"}),"\n","Ext.Loader: \u52a8\u6001\u52a0\u8f7d\u76f8\u5173  "),(0,r.kt)("h1",{id:"component"},"component"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ee7\u627f\u5173\u7cfb\uff08\u5b50\u7c7b","\u21d2","\u7236\u7c7b\uff09\uff1a\u6240\u6709component\uff0cExt.Component\uff0cExt.Base",(0,r.kt)("br",{parentName:"p"}),"\n","\u751f\u547d\u5468\u671f\uff1a\u521d\u59cb\u5316","\u21d2"," \u6e32\u67d3","\u21d2"," \u9500\u6bc1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.onReady(function () {\n\n    Ext.create('Ext.Component', {\n        id:'myComponent',//\u6240\u6709component\u4f1a\u6ce8\u518c\u5230Ext.ComponentManager\uff0c\u901a\u8fc7id\u83b7\u53d6Ext.getCmp('myComponent')\n        renderTo: Ext.getBody(),\n        html:'Hello World!'\n    });\n\n});\n")),(0,r.kt)("h1",{id:"container"},"container"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"container\u4e5f\u662fcomponent\uff0c\u53ea\u662f\u5b83\u80fd\u5bb9\u7eb3\u5176\u4ed6component\uff0c\u800c\u4e14\u6709\u4e0d\u540c\u7684layout\n\u6240\u6709container\u7ee7\u627f\u81eaExt.container.Container")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.onReady(function () {\n    var comp1 = Ext.create('Ext.Component', {\n        html:'Component 1'\n    });\n          \n    var comp2 = Ext.create('Ext.Component', {\n        html: 'Component 2'\n    });\n\n    var comp3 = Ext.create('Ext.Component', {\n        html: 'Component 3'\n    });\n\n    var comp4 = Ext.create('Ext.Component', {\n        html: 'Component 4'\n    });\n\n    var container1 = Ext.create('Ext.container.Container', {\n        style: { borderColor: 'Red', borderStyle: 'solid', borderWidth: '1px' },\n        width: '50%',\n        padding: '5 5 5 5',\n        items: [comp3, comp4]\n    });\n\n    // adding compoents into container using items config\n    var container2 = Ext.create('Ext.container.Container', {\n        renderTo: Ext.getBody(),\n        title: 'Container',\n        border: 1,\n        width: '50%',\n        padding:'5 5 5 5',\n        style: { borderColor: '#000000', borderStyle: 'solid', borderWidth: '1px' },\n        items: [comp1, comp2]\n    });\n\n    // adding container into container \n    container2.add(container1);\n});\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u91cd\u8981\u7684container\u5217\u51fa\u5982\u4e0b\uff1a")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ext.container.Viewport\uff1a\u4e00\u4e2a\u4e13\u95e8\u7684container\uff0c\u4e00\u4e2aAPP\u4f1a\u6709\u4e00\u4e2a\uff0c\u4ee3\u8868APP\u7684\u53ef\u89c6\u533a\u57df\uff0c\u5b9a\u4e49\u4e1c\u5357\u897f\u5317"),(0,r.kt)("li",{parentName:"ul"},"Ext.container.Container\uff1a \u6700\u8f7b\u7684\u5bb9\u5668\uff0c\u5982\u679c\u53ea\u662f\u6dfb\u52a0\u5143\u7d20\u8fdb\u53bb\uff0c\u6392\u5217\uff0c\u5219\u4f7f\u7528"),(0,r.kt)("li",{parentName:"ul"},"Ext.panel.Panel\uff1a\u8f83\u91cd\u7684\u5bb9\u5668\uff0c\u76f8\u8f83\u4e8eExt.container.Container\u4f1a\u6709\u4e00\u4e9b\u989d\u5916\u529f\u80fd\uff0c\u5982\uff1a\u6807\u9898\uff0c\u5de5\u5177\u680f"),(0,r.kt)("li",{parentName:"ul"},"Ext.form.Panel"),(0,r.kt)("li",{parentName:"ul"},"Ext.form.FieldContainer"),(0,r.kt)("li",{parentName:"ul"},"Ext.form.FieldSet"),(0,r.kt)("li",{parentName:"ul"},"Ext.grid.Panel"),(0,r.kt)("li",{parentName:"ul"},"Ext.container.ButtonGroup\t"),(0,r.kt)("li",{parentName:"ul"},"Ext.tab.Panel"),(0,r.kt)("li",{parentName:"ul"},"Ext.tree.Panel"),(0,r.kt)("li",{parentName:"ul"},"Ext.menu.Menu"),(0,r.kt)("li",{parentName:"ul"},"Ext.toolbar.Toolbar")),(0,r.kt)("h1",{id:"layout"},"layout"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7528\u4e8econtainer\u4e2d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"layout: 'auto'\n\n//or\n\nlayout: { \n    type: 'auto'\n}\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5e38\u89c1\u5e03\u5c40\u5982\u4e0b\uff1a")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Anchor\uff1a\u6839\u636e\u5bb9\u5668\u7684\u5c3a\u5bf8\u6210\u6bd4\u4f8b\u7684\u6539\u53d8\u5143\u7d20\u5c3a\u5bf8"),(0,r.kt)("li",{parentName:"ul"},"Absolute\uff1a\u7ee7\u627f\u81eaAnchor\u5e03\u5c40\uff0c\u53ef\u4ee5\u6839\u636ex\uff0cy\u7cbe\u786e\u6807\u5b9a\u5143\u7d20\u4f4d\u7f6e"),(0,r.kt)("li",{parentName:"ul"},"Accordion\uff1a\u4e00\u7ec4\u53ef\u6298\u53e0\u7684panel"),(0,r.kt)("li",{parentName:"ul"},"border :\u5c06\u5bb9\u5668\u5206\u4e3a\u4e94\u4e2a\u533a\u57df:east,south,west,north,center"),(0,r.kt)("li",{parentName:"ul"},"card: \u5728\u540c\u4e00\u65f6\u95f4\uff0c\u53ea\u80fd\u6709\u4e00\u4e2achild component\u53ef\u89c1\uff0c\u5982\uff1atab panel\u3001Wizard\u5411\u5bfc\u9875"),(0,r.kt)("li",{parentName:"ul"},"column\uff1a\u628a\u6574\u4e2a\u5bb9\u5668\u770b\u6210\u4e00\u5217,\u7136\u540e\u5411\u5bb9\u5668\u653e\u5165\u5b50\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},"form\uff1a\u662f\u4e00\u79cd\u4e13\u95e8\u7528\u4e8e\u7ba1\u7406\u8868\u5355\u4e2d\u8f93\u5165\u5b57\u6bb5\u7684\u5e03\u5c40\uff0c\u7eb5\u5411\u4f9d\u6b21\u6392\u5217"),(0,r.kt)("li",{parentName:"ul"},"fit\uff1a\u4e00\u4e2a\u5b50\u5143\u7d20\u5c06\u5145\u6ee1\u6574\u4e2a\u5bb9\u5668\uff08\u5982\u679c\u591a\u4e2a\u5b50\u5143\u7d20\u5219\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u5145\u6ee1\u6574\u4e2a\u5bb9\u5668\uff09"),(0,r.kt)("li",{parentName:"ul"},"table\uff1a\u6309\u7167\u666e\u901a\u8868\u683c\u7684\u65b9\u6cd5\u5e03\u5c40\u5b50\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},"VBox\uff1a\u7eb5\u5411\u5145\u6ee1"),(0,r.kt)("li",{parentName:"ul"},"hbox\uff1a\u6a2a\u5411\u5145\u6ee1")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.onReady(function() {   \n    var panel1 = new Ext.Panel({   \n            title: \"panel1\",  \n            height: 100,   \n        anchor: '-50',    \n        html: \"\u9ad8\u5ea6\u7b49\u4e8e100\uff0c\u5bbd\u5ea6=\u5bb9\u5668\u5bbd\u5ea6-50\"    \n    });\n    var panel2 = new Ext.Panel({\n            title: \"panel2\",\n            height: 100,\n            anchor: '50%',   \n            html: \"\u9ad8\u5ea6\u7b49\u4e8e100,\u5bbd\u5ea6=\u5bb9\u5668\u5bbd\u5ea6\u768450%\"   \n    });      \n    var panel3 = new Ext.Panel({   \n        title: \"panel3\",   \n        anchor: '-10, -250',   \n        html: \"\u5bbd\u5ea6=\u5bb9\u5668\u5bbd\u5ea6-10,\u9ad8\u5ea6=\u5bb9\u5668\u5bbd\u5ea6-250\"   \n    });    \n});\n\n\nlayout: 'absolute',\nitems:[{\n    title: 'Panel 1',\n    x: 50,\n    y: 50,\n    html: 'Positioned at x:50, y:50'\n}]\n\n\nlayout:'border',\ndefaults: {\n    collapsible: true,\n    split: true,\n    bodyStyle: 'padding:15px'\n},\nitems: [{\n    title: 'Footer',\n    region: 'south',\n    height: 150,\n    minSize: 75,\n    maxSize: 250,\n    cmargins: '5 0 0 0'\n},{\n    title: 'Navigation',\n    region:'west',\n    margins: '5 0 0 0',\n    cmargins: '5 5 0 0',\n    width: 175,\n    minSize: 100,\n    maxSize: 250\n},{\n    title: 'Main Content',\n    collapsible: false,\n    region:'center',\n    margins: '5 0 0 0'\n}]\n\n\nlayout: {\n    type: 'vbox'\n    align : 'stretch',\n    pack  : 'start',\n},\nitems: [\n    {html:'panel 1', flex:1},\n    {html:'panel 2', height:150},\n    {html:'panel 3', flex:2}\n]\n\nlayout: {\n    type: 'hbox',\n    pack: 'start',\n    align: 'stretch'\n},\nitems: [\n    {html:'panel 1', flex:1},\n    {html:'panel 2', width:150},\n    {html:'panel 3', flex:2}\n]\n\n")),(0,r.kt)("h1",{id:"define"},"define"),(0,r.kt)("h2",{id:"define-class"},"define class"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"//\u8bed\u6cd5\nExt.define((String) className, (Object) classMembers, (Optional Function) onClassCreatedCallback);\n\n//\u793a\u4f8b\nExt.define('Aaaa.bbbb.Student', \n{\n    name : 'unnamed',\n    getName : function(){\n        return \"Student name is\" + this.name;\n    }\n}, function(){\n    alert('Student object created');\n});\n\nvar studentObj = Ext.create('Aaaa.bbbb.Student');\nstudentObj.getName();\n\n")),(0,r.kt)("h2",{id:"define-constructor"},"define constructor"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Student', {\n    name : 'unnamed',\n    getName : function(){\n        return 'Student name is ' + this.name;\n    },\n    constructor : function(studentName){\n        if(studentName)\n            this.name = studentName;\n    }\n});\n\nvar studentObj = Ext.create('Student','XYZ');\n//or\nvar studentObj = new Student('XYZ');\nvar name = studentObj.getName();\nconsole.log(name);\n//output: Student name is XYZ\n")),(0,r.kt)("h2",{id:"define-private-member"},"define private member"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Student', function(){\n    var name = 'unnamed';\n    \n    return {\n        constructor : function(name){\n            this.name = name;\n        },\n        getName : function(){\n            alert('Student name is' + this.name);\n        }\n    };\n});\n\n//create an object of Student class\nvar studentObj = Ext.create('Student','XYZ');\nstudentObj.getName();//\u53ea\u80fd\u8fd9\u6837\u83b7\u53d6\n//You cannot access name directly as it is a private member. Use getName() method on student object to access name.\n")),(0,r.kt)("h2",{id:"define-static-member"},"define static member"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Student', \n{\n    name : 'unnamed',\n    getName : function(){\n        alert('Student name is ' + this.name);\n    },\n    constructor : function(studentName){\n        if(studentName)\n            this.name = studentName;\n    },\n    \n  statics : \n    {\n        getSchoolName : function(){\n            return \"XYZ\";\n        }\n    }  \n});\n\n//call static method\nalert(Student.getSchoolName());\n")),(0,r.kt)("h1",{id:"extend-\u7ee7\u627f"},"extend \u7ee7\u627f"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"extend \u4f1a\u7ecf\u5e38\u4f7f\u7528\uff0c\u65b9\u4fbf\u4f7f\u7528\u5404\u4e2acomponent\u7684\u9ed8\u8ba4\u529f\u80fd\uff0c\u540c\u4e8b\u589e\u52a0\u6211\u4eec\u81ea\u5df1\u7684\u529f\u80fd\uff08Most of the time you will have to extend Ext JS components in your application to use default functionality of the component and add custom functionality.\uff09")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Person', \n{\n    name : 'Unknown',\n \n    constructor : function(name){\n        if(name){\n            this.name = name;\n        }\n    },\n \n    getName : function(){\n        alert(\"My name is \" + this.name);\n    }\n});\n\nExt.define('Student', \n{\n    extend : 'Person',\n    schoolName : 'Unknown',\n \n    constructor : function(name, schoolName){\n        this.schoolName = schoolName || 'Unknown';\n        \n        //call \u7236\u7c7b\u7684constructor\n        this.callParent(arguments);\n    },\n \n    getSchoolName : function(){\n        alert(\"My school name is \" + this.schoolName);\n    }\n});\n\nvar newStudent = new Student('XYZ', 'ABC School');\nnewStudent.getName(); //output: XYZ\nnewStudent.getSchoolName(); //output: ABC School\n")),(0,r.kt)("h1",{id:"mixins"},"mixins"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728\u5f53\u524d\u7c7b\u4e2d\u60f3\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7c7b\u4e2d\u7684function\u800c\u4e0d\u4f7f\u7528\u7ee7\u627f\uff08Mixins allows us to use functions of one class as a function of another class without inheritance.\uff09")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Person', {\n    name: 'Unknown',\n\n    constructor: function(name) {\n        if (name) {\n            this.name = name;\n        }\n    },\n\n    getName: function() {\n        alert(\"My name is \" + this.name);\n    },\n\n    eat: function(foodType) {\n        alert(\"I'm eating \" + foodType);\n    }\n\n});\n\nExt.define('Student', {\n    schoolName: '',\n\n    constructor: function(schoolName) {\n        this.schoolName = schoolName || 'Unknown'\n    },\n\n    mixins: {\n        eat: 'Person'//key\uff1afunction\u540d\u79f0\uff0c\u4e0d\u5e26\u5f15\u53f7\uff0c\u76f8\u5f53\u4e8e\u5728\u672c\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u65b9\u6cd5\uff0cvalue\uff1aclass\u540d\u79f0\n    },\n\n    getSchoolName: function() {\n        alert(\"I am a student of \" + this.schoolName);\n    }\n\n});\n\nvar studentObj = new Ext.create('Student', 'XYZ');\nstudentObj.eat('Sandwich');\n")),(0,r.kt)("h1",{id:"config"},"config"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u901a\u8fc7config\u58f0\u660e\u7684\u5c5e\u6027\u90fd\u662fpublic\u7684\uff0c\u8fd9\u4e9b\u5c5e\u6027\u80fd\u4ee5\u4e00\u4e2ajson object\u7684\u5f62\u5f0f\u88ab\u8d4b\u503c\uff0c\u8fd9\u4e9b\u5c5e\u6027\u81ea\u52a8\u62e5\u6709getter\u548csetter\u65b9\u6cd5\uff0c\u5373\u4f7f\u6211\u4eec\u6ca1\u6709\u81ea\u5df1\u5b9a\u4e49")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Student', {\n    config : \n    {\n        name : 'unnamed',\n        schoolName : 'Unknown'\n    },\n    constructor : function(config){\n        this.initConfig(config);//\u521d\u59cb\u5316config properties\uff0c\u540c\u65f6\u81ea\u52a8\u751f\u6210getter\u548csetter\n    },\n\n    //\u5728config property \u201cname\u201d\u8d4b\u503c\u524dcall\n    applyName : function(name){\n        return Ext.String.capitalize(name);//\u83b7\u53d6name\u524d\uff0c\u4f7fname\u53d8\u4e3a\u5927\u5199\n    },\n   \n    //\u5728config property \u201cname\u201d\u8d4b\u503c\u540ecall\n    updateName : function(newValue, oldValue){\n        alert('New value: ' + newValue + ', Old value: ' + oldValue);\n    }\n});\n\nvar newStudent = Ext.create('Student', { name: 'XYZ', schoolName: 'ABC School' });\n\nnewStudent.getName();//output: XYZ\nnewStudent.getSchoolName();//output: ABC School\n\nnewStudent.setName('John');\nnewStudent.setSchoolName('New School');\n\nnewStudent.getName();//output: John\nnewStudent.getSchoolName();//output: New School\n\nnewStudent.name = 'Steve'; //Not valid.\u65e0\u6548\uff0c\u4f1a\u521b\u9020\u4e00\u4e2a\u666e\u901a\u5c5e\u6027name\nnewStudent.setName('Steve');//Valid\n")),(0,r.kt)("h1",{id:"\u81ea\u5b9a\u4e49\u4e8b\u4ef6"},"\u81ea\u5b9a\u4e49\u4e8b\u4ef6"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7ed1\u5b9a\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u8981\u7528\u5230 mixins")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"Ext.define('Student', {\n    config : {\n        name : ''\n    },\n    mixins : \n    {\n        observable : 'Ext.util.Observable'\n    },\n    constructor : function(config){\n        this.mixins.observable.constructor.call(this, config);\n    },\n    updateName : function(newValue, oldValue){\n        this.fireEvent('studentNameChanged', newValue);//\u58f0\u660e\u81ea\u5b9a\u4e49\u4e8b\u4ef6\n    }\n});\n\nvar newStudent = Ext.create('Student', { name: 'xyz' });\n\nnewStudent.on('studentNameChanged', function(name){//\u6ce8\u518c\u81ea\u5b9a\u4e49\u4e8b\u4ef6\n    alert('student Name ' + name + 'has been Chaged.');\n});\n\nnewStudent.setName('John');\n")),(0,r.kt)("h1",{id:"\u4f7f\u7528dom-\u8de8\u6d4f\u89c8\u5668\u95ee\u9898"},"\u4f7f\u7528DOM \u8de8\u6d4f\u89c8\u5668\u95ee\u9898"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u4e3a\u4e86\u89e3\u51b3\u8de8\u6d4f\u89c8\u5668\u95ee\u9898\uff0cextjs\u6709\u5982\u4e0b\u7c7b\u6765\u64cd\u4f5cdom\u5143\u7d20")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ext.dom.Element\uff1aDOM\u5143\u7d20\u5728extjs\u4e2d\u7684\u5305\u88c5"),(0,r.kt)("li",{parentName:"ul"},"Ext.dom.CompositeElement\uff1a\u8868\u793a\u4e00\u7ec4Ext.dom.Element"),(0,r.kt)("li",{parentName:"ul"},"Ext.dom.Helper\uff1a\u5305\u542b\u4e00\u4e9b\u65b9\u6cd5\uff0c\u4f7f\u7528\u6307\u5b9a\u7684\u5c5e\u6027\uff0c\u521b\u5efaDOM\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},"Ext.dom.Query\uff1a\u7528\u4e8e\u67e5\u627eDOM\u5143\u7d20")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"<script>\n    Ext.onReady(function () {\n        // get Ext.dom.Element object\n        var txtFirst = Ext.get(\"txtFirstName\");//\u6839\u636eID\u83b7\u53d6DOM\u5143\u7d20\n        txtFirst.set({ 'value': 'Steve' });\n\n        Ext.fly('txtLastName').set({ 'value': 'Jobs' });//\u6548\u679c\u76f8\u540c\uff0c\u66f4\u7701\u5185\u5b58\n\n        console.log(txtFirst.$className);\n\n        // get all input elements and set their bgcolor to yellow\n        var inputElements = Ext.select(\"input\"); //inputElements\u662f\u4e00\u4e2aExt.dom.CompositeElement\n        \n        inputElements.set({ 'style': 'background-color:yellow' });//\u5904\u7406inputElements\u4e2d\u7684\u6240\u6709Ext.dom.Element\n\n        var dh = Ext.DomHelper; // ExtJS DomHelper Utility Class \n            var listItems = {\n                id: 'dhlist',\n                tag: 'ul',\n                children: [{\n                    tag: 'li',\n                    html: 'item 1'\n                }, {\n                    tag: 'li',\n                    html: 'item 2'\n                }, {\n                    tag: 'li',\n                    html: 'item 3'\n                }]\n            }\n\n            dh.append(\"div1\", listItems);\n        \n    });\n<\/script>\n<body>\n  First Name: <input type=\"text\" id=\"txtFirstName\" class=\"myclass\"/> <br /><br />\n  Last Name:  <input type=\"text\" id=\"txtLastName\" class=\"myclass\" /> \n  <div id=\"div1\">\n  </div>\n</body>\n")),(0,r.kt)("h1",{id:"extcomponentquery"},"Ext.ComponentQuery"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7528CSS selector\u7684\u8bed\u6cd5\u6765\u83b7\u53d6component")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.onReady(function () {\n\n    Ext.create('Ext.container.Container', {\n        id:'myContainer',\n        renderTo: Ext.getBody(),\n        padding: '5 5 5 5',\n        layout: { type: 'vbox' },\n        items: [\n            {\n                xtype: 'textfield',\n                fieldLabel:'First Name'\n            },\n            {\n                xtype: 'textfield',\n                fieldLabel: 'Last Name'\n            },\n            {\n                xtype: 'panel',\n                layout:'vbox',\n                items: [\n                    {\n                        xtype: 'datefield',\n                        fieldLabel: 'Date of Birth'\n                    },\n                    {\n                        xtype: 'container',\n                        items: [\n                            {\n                                xtype: 'textfield',\n                                fieldLabel: 'email',\n                                itemId:'email'\n                            }\n                        ]\n                    }\n                ]\n            }\n                    \n        ]\n\n    });\n\n    //\u641c\u7d22\u6240\u6709\u7684datefield\u5728\u6240\u6709container\u4e2d\n    var dateFields = Ext.ComponentQuery.query('container datefield');\n    console.log('DateField in Containers: ');\n    console.log(dateFields);\n    //\u641c\u7d22panel\u7684\u76f4\u63a5\u5b50\u5143\u7d20datefield\n    var dateFieldsInPanels = Ext.ComponentQuery.query('panel > datefield');\n    console.log('Child DateField in Panel: ' );\n    console.log(dateFieldsInPanels);\n    //\u6839\u636eID\n    var emailInMyContainer = Ext.ComponentQuery.query('#myContainer > #email');\n    console.log('#email inside #myContainer');\n    console.log(emailInMyContainer);\n});\n")),(0,r.kt)("h1",{id:"messagebox"},"MessageBox"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u548cjs\u4e2dalert()\u4e0d\u540c\uff0cmessage box \u4e0d\u4f1a\u963b\u65ad\u4ee3\u7801\u7684\u8fd0\u884c\uff0c\u5982\u679c\u60f3\u963b\u65ad\u4ee3\u7801\u8fd0\u884c\uff0c\u9700\u8981\u6307\u5b9a callback function\nExt.Msg is a singleton class,\u5982\u679c\u540c\u65f6\u5b9a\u4e49\u591a\u4e2amessage box \u53ea\u4f1a\u663e\u793a\u6700\u540e\u7684\u4e00\u4e2a")),(0,r.kt)("p",null,"\u56db\u79cd\u7c7b\u578b\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"alert"),(0,r.kt)("li",{parentName:"ul"},"confirm"),(0,r.kt)("li",{parentName:"ul"},"prompt"),(0,r.kt)("li",{parentName:"ul"},"custom")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.Msg.alert('Status', 'This is Ext JS message box.'); \n//or\nvar msg = Ext.create('Ext.window.MessageBox');\nmsg.alert('Status', 'This is Ext JS message box.');\n\nExt.Msg.confirm(\"Confirmation\", \"Do you want to Save changes?\", function(btnText){\n                if(btnText === \"no\"){\n                    Ext.Msg.alert(\"Alert\", \"You have confirmed 'No'.\");\n                }\n                else if(btnText === \"yes\"){\n                    Ext.Msg.alert(\"Alert\", \"You have confirmed 'Yes'.\");\n                }\n            }, this);\n\nExt.Msg.prompt(\"Ext JS Tutorials\", \"Please enter your Sencha Id:\", function(btnText, sInput){\n                if(btnText === 'ok'){\n                    Ext.Msg.alert(\"Status\", \"You entered:\" + sInput);\n                }\n            }, this);\n\nExt.Msg.show({\n    title : 'Save',\n    msg : 'Do you want to Save the changes? ',\n    width : 300,\n    closable : false,\n    buttons : Ext.Msg.YESNOCANCEL,\n    buttonText : \n    {\n        yes : 'Yes & Continue',\n        no : 'No & Continue',\n        cancel : 'Discard'\n    },\n    multiline : false,\n    fn : function(buttonValue, inputText, showConfig){\n        Ext.Msg.alert('Status', buttonValue);\n    },\n    icon : Ext.Msg.QUESTION\n});\n\n")),(0,r.kt)("h1",{id:"mvvm\u67b6\u6784"},"MVVM\u67b6\u6784"),(0,r.kt)("p",null,"\u4eceextjs5\u8d77\u5f00\u59cb\u652f\u6301mvvm\u67b6\u6784  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"view: \u4efb\u4f55\u7c7b\u578b\u7684\u7ec4\u4ef6\uff0c\u5c06\u4fe1\u606f\u8f93\u51fa\u5230\u6d4f\u89c8\u5668\uff08View is any type of components that output information on to your browser, i.e. Container, Form, Grid, Chart.\uff09"),(0,r.kt)("li",{parentName:"ul"},"model\uff1a\u63d0\u4f9b\u6570\u636e\u6a21\u578b\uff0c\u5b9a\u4e49\u6570\u636e\u5b57\u6bb5,\u4e00\u822c\u548cstore\u4e00\u8d77\u7528,\u4e3aGrid\u7b49\u63d0\u4f9b\u6570\u636e\uff1b\u8fd9\u91cc\u4e5f\u662f\u6570\u636e\u6821\u9a8c\uff0c\u8f6c\u6362\u7684\u597d\u5730\u65b9\uff08validation, conversion\uff09"),(0,r.kt)("li",{parentName:"ul"},"viewController\uff1a\u9644\u52a0\u7ed9\u7279\u5b9aview\uff0c\u5904\u7406view\u7684\u6240\u6709\u4e8b\u4ef6"),(0,r.kt)("li",{parentName:"ul"},"viewModel: \u6570\u636e\u4e2d\u5fc3\uff0c\u7ba1\u7406\u7279\u5b9aview\u7684\u6570\u636e\uff0c\u5176\u4ed6\u7ec4\u4ef6\u53ef\u4ee5\u4e0e\u4e4b\u7ed1\u5b9a\uff0c\u4e0eviewModel\u4e2d\u7684\u6570\u636e\u540c\u6b65\u53d8\u5316")),(0,r.kt)("h1",{id:"extdatamodel"},"Ext.data.Model"),(0,r.kt)("h2",{id:"\u5b9a\u4e49\u4e00\u4e2amodel"},"\u5b9a\u4e49\u4e00\u4e2aModel"),(0,r.kt)("p",null,"\u4eceserver \u4fdd\u5b58\u548c\u63a5\u53d7\u6570\u636e\u7684\u76f8\u5173\u7c7b\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Model (Ext.data.Model)"),(0,r.kt)("li",{parentName:"ul"},"Store (Ext.data.Store)"),(0,r.kt)("li",{parentName:"ul"},"Proxy (Ext.data.proxy.Proxy) \u6ce8\u610f\uff1aProxy\u80fd\u548cstore\u5173\u8054\u4e5f\u80fd\u548cModel\u5173\u8054"),(0,r.kt)("li",{parentName:"ul"},"Session (Ext.data.Session)")),(0,r.kt)("p",null,"Model\u5305\u62ec\uff1afields, validations and methods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('Student', {\n    extend: 'Ext.data.Model',\n    idProperty:'Id',\n    fields: [\n        { name: 'Id', type: 'int' },//type\u53d6\u503c\uff1aauto, int, string, float, Boolean and date\n        'firstName',//\u6ca1\u6709type\uff0c\u9ed8\u8ba4\u662fstring\n        'lastName'\n    ],\n    validators: {\n        firstName: 'presence',\n        lastName: { type: 'length', min: 2 }\n    }\n\n});\n\nvar studentRecord = Ext.create('Student',{\n    firstName:'',\n    lastName: 'J'\n});\n\nif (!studentRecord.isValid())//\u9a8c\u8bc1\u662f\u5426\u901a\u8fc7\u6821\u9a8c\u5668\n{\n    var validation = studentRecord.getValidation();\n    console.log('First Name: ' + validation.get('firstName'));\n    console.log('Last Name: ' + validation.get('lastName'));\n}\n")),(0,r.kt)("p",null,"\u5e38\u89c1\u6821\u9a8c\u5668\uff1a"),(0,r.kt)("h2",{id:"\u81ea\u5b9a\u4e49field-type"},"\u81ea\u5b9a\u4e49field type"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('Gender', {\n    extend: 'Ext.data.field.String',\n    alias: 'data.field.gender',\n    validators: {\n            type: 'inclusion',\n            list: [ 'female', 'male' ]\n    }\n}); \n\nExt.define('Student', {\n    extend: 'Ext.data.Model',\n    idProperty:'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'firstName',\n        'lastName',\n        { name:'gender', type:'gender'} // Uses custom field\n    ] \n});\nvar studentRecord = Ext.create('Student',{\n    firstName:'James',\n    lastName: 'Bond',\n    gender:'TEST'\n});\n\nif (!studentRecord.isValid())\n{\n    var validation = studentRecord.getValidation();\n\n    console.log('Gender: ' + validation.get('gender'));\n}\n")),(0,r.kt)("h2",{id:"association-between-model"},"association between Model"),(0,r.kt)("h3",{id:"one-to-one"},"one to one"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('Address', {\n    extend: 'Ext.data.Model',\n\n    fields: [\n        { name: 'addressId', type: 'int' },\n        'address',\n        'city',\n        'state'\n    ],\n    identifier: {\n        type: 'negative'\n    }\n\n});\n\nExt.define('Student', {\n    extend: 'Ext.data.Model',\n    \n    idProperty:'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'firstName',\n        'lastName',\n        { name:'addressId', reference:'Address', unique: true}\n    ],\n    identifier: {\n        type: 'negative'\n    }\n\n});\n\nvar studentRecord = Ext.create('Student',{\n    firstName:'James',\n    lastName: 'Bond'\n});\n\n\nvar address = Ext.create('Address', {\n    address: 'Y Street'\n})\n\nstudentRecord.address = address;\n")),(0,r.kt)("h3",{id:"one-to-many"},"one to many"),(0,r.kt)("p",null,"hasMany\u914d\u7f6e\u9879",(0,r.kt)("br",{parentName:"p"}),"\n","\u8fd8\u53ef\u4ee5\u901a\u8fc7reference\u914d\u7f6e\u9879"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('Student', {\n    extend: 'Ext.data.Model',\n    \n    idProperty:'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'firstName',\n        'lastName'\n    ],\n    identifier: {\n        type: 'negative'\n    },\n\n    hasMany: {\n        name: 'Courses',\n        model:'Course'\n    }\n});\n\nExt.define('Course', {\n    extend: 'Ext.data.Model',\n    idProperty: 'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'courseName'\n    ],\n    identifier: {\n        type: 'negative'\n    }\n});\n\nvar course1 = Ext.create('Course', {\n    courseName: 'Ext JS 4'\n})\n\nvar course2 = Ext.create('Course', {\n    courseName: 'Ext JS 5'\n})\nvar studentRecord = Ext.create('Student',{\n    firstName:'James',\n    lastName: 'Bond'\n});\n\nvar courses = studentRecord.Courses();\ncourses.add(course1);\ncourses.add(course2);\n")),(0,r.kt)("h3",{id:"many-to-many"},"many to many"),(0,r.kt)("p",null,"\u901a\u8fc7manaToMany\u914d\u7f6e\u9879  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('Student', {\n    extend: 'Ext.data.Model',\n    \n    idProperty:'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'firstName',\n        'lastName'\n    ],\n    identifier: {\n        type: 'negative'\n    },\n    manyToMany: 'Course' \n});\n\nExt.define('Course', {\n    extend: 'Ext.data.Model',\n    idProperty: 'Id',\n    fields: [\n        { name: 'Id', type: 'int' },\n        'courseName'\n    ],\n    identifier: {\n        type: 'negative'\n    }\n});\n\n\n\nvar course1 = Ext.create('Course', {\n    courseName: 'ExtJS 4'\n});\n\nvar course2 = Ext.create('Course', {\n    courseName: 'ExtJS 5'\n});\n\nvar course3 = Ext.create('Course', {\n    courseName: 'ExtJS 6'\n});\n\nvar student1 = Ext.create('Student', {\n    firstName: 'Bob',\n    lastName: 'Friss'\n});\n\nvar student2 = Ext.create('Student', {\n    firstName: 'James',\n    lastName: 'Bond'\n});\n\nvar student3 = Ext.create('Student', {\n    firstName: 'Sachin',\n    lastName: 'Tendulkar'\n});\n\nvar courses = student1.courses();\ncourses.add(course1);\ncourses.add(course2);\n\nvar students = course3.students();\nstudents.add(student2);\nstudents.add(student3);\n")),(0,r.kt)("h1",{id:"extappviewmodel"},"Ext.app.ViewModel"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"viewModel\u7528\u6765\u4e3a\u7279\u5b9a\u7684component\u7ba1\u7406\u6570\u636e\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u6570\u636e\u5bb9\u5668"),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e0eview\u7684\u53cc\u5411\u6570\u636e\u7ed1\u5b9a\uff0cview\u548cviewmodel\u4e2d\u7684\u6570\u636e\u4f1a\u4fdd\u6301\u4e00\u81f4"),(0,r.kt)("li",{parentName:"ul"},"\u548cmodel\u4e0d\u540c\uff0cviewmodel\u4e2d\u4e0d\u80fd\u6709Proxy\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u4eceserver\u83b7\u53d6\u6570\u636e")),(0,r.kt)("h2",{id:"\u7b80\u5355\u793a\u4f8b"},"\u7b80\u5355\u793a\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('MyApp.view.TestViewModel', {\n    extend: 'Ext.app.ViewModel',\n\n    alias: 'viewmodel.test',\n\n    data: {\n        id: 1,\n        name: 'Steve'\n    }\n});\n\nExt.create('Ext.Component', {\n\n    viewModel:{\n        type:'test'\n    },\n\n    bind:{\n        html:'{id} - {name}'\n    },\n\n    renderTo:Ext.getBody()\n});\n")),(0,r.kt)("h2",{id:"mvvm\u67b6\u6784\u4e2d"},"MVVM\u67b6\u6784\u4e2d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('MyExtJSApp.StudentViewModel', {\n    extend: 'Ext.app.ViewModel',\n    alias:'viewmodel.studentviewmodel',\n    \n    data: {\n        firstName: 'James',\n        lastName:'Bond'\n    },\n\n    formulas: {\n        //\u5b9a\u4e49\u952e\u503c\u5bf9\uff0c\u503c\u6709function\u8fd4\u56de\uff0c\u548cdata\u4e2d\u5b9a\u4e49\u7684\u952e\u503c\u5bf9\u5730\u4f4d\u4e00\u6837\uff0c\u53ef\u4ee5\u5728component\u4e2d\u83b7\u53d6\n        fullName: function(get){\n            return get('firstName') + ' ' + get('lastName');\n        }\n    }\n});\n\nExt.application({\n    name: 'SchoolApp',\n    requires: ['SchoolApp.StudentViewModel'],\n\n    launch: function() {//APP\u5728launch\u65f6\u5019\u8c03\u7528\u6b64\u51fd\u6570\n        Ext.create('Ext.container.Viewport', {\n\n            items: [{\n                xtype: 'form',\n                layout:'form',\n                bodyPadding: '5',\n                buttonAlign: 'center',\n\n                viewModel: {\n                    type: 'StudentViewModel'\n                },\n                \n                items: [{\n                    xtype: 'textfield',\n                    fieldLabel: 'First Name',\n                    bind: {\n                        value: '{firstName}'\n                    }\n                }, {\n                    xtype: 'textfield',\n                    fieldLabel: 'Last Name',\n                    bind: {\n                        value: '{lastName}'\n                    }\n                }, {\n                    xtype: 'displayfield',\n                    fieldLabel: 'Full Name',\n                    bind: {\n                        value: '{fullName}'\n                    }\n                }],\n                buttons: [{\n                    text: 'Save'\n                }, {\n                    text: 'Reset'\n                }]\n\n            }]\n\n        })\n    }\n});\n")),(0,r.kt)("h2",{id:"links"},"links"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"viewmodel\u4e2d\u53ef\u4f7f\u7528links\u94fe\u63a5\u6307\u5b9a\u7684record\u4e3a\u6211\u6240\u7528")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('SchoolApp.view.student.StudentViewModel', {\n    extend: 'Ext.app.ViewModel',\n    alias:'viewmodel.StudentViewModel',\n    \n    formulas: {\n        fullName: function(get){\n            return get('theStudent.firstName') + ' ' + get('theStudent.lastName');\n        }\n    },\n    links: {\n        theStudent: {//\u7ed9ID\u4e3a5\u7684student\u547d\u540d\u4e3atheStudent\n            type: 'Student',//\u8fd9\u91cc\u662fModel\uff0cModel\u4e2d\u53ef\u5b9a\u4e49Proxy\uff0c\u4eceserver\u4e2d\u83b7\u53d6\u6570\u636e\n            id:5\n        }\n    }\n});\n")),(0,r.kt)("h1",{id:"extappviewcontroller"},"Ext.app.ViewController"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5229\u7528CSS-like selectors\u6765\u5904\u7406component\u7684\u4e8b\u4ef6"),(0,r.kt)("li",{parentName:"ul"},"APP\u4e2dViewController\u548cview\u4e00\u822c\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u5939\u4e0b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('SchoolApp.view.student.StudentMaster', {\n    extend: 'Ext.form.Panel',\n    alias: 'widget.StudentMaster',\n    \n    config: {},\n    requires: ['SchoolApp.view.student.StudentViewController'],\n    title: 'Student Information',\n\n    constructor: function (config) {\n        return this.callParent(arguments);\n    },\n\n    controller: 'StudentViewController',\n\n    initComponent: function () {\n\n        Ext.apply(this, {\n\n            resizable: false,\n            collapsible: true,\n            bodyPadding: '5',\n            buttonAlign: 'center',\n            border: false,\n            layout: 'anchor',\n            defaults: {\n                anchor: '100%'\n            },\n            items: [{\n                xtype: 'textfield',\n                fieldLabel: 'First Name',\n                reference: 'firstName'// controller\u4e2d\uff1athis.lookupReference('firstName').setValue('Steve');\n                //\u6216\u8005\u8fd9\u6837\u7528\uff1athis.getRreferences().firstName\n            },\n            {\n                xtype: 'textfield',\n                fieldLabel: 'Last Name',\n                reference: 'lastName'\n            }\n            ],\n            buttons: [{\n                        text: 'Read', itemID: 'btnRead',\n                        listeners: {\n                            click: 'onReadClick'//\u5355\u51fb\u4e8b\u4ef6\u540d\n                        }\n                },\n                {\n                    text: 'Save', itemID: 'btnSave',\n                    listeners: {\n                        click: 'onSaveClick'\n                    }\n                },\n                {\n                    text: 'Reset',\n                    listeners: {\n                        click: 'onResetClick'\n                    }\n                },\n                {\n                    text: 'Exit',\n                    listeners: {\n                        click: 'onExitClick'\n                    }\n                }\n\n            ]\n\n        });\n\n        this.callParent(arguments);\n    }\n});\n\nExt.define('SchoolApp.view.student.StudentViewController', {\n    extend: 'Ext.app.ViewController',\n    alias: 'controller.StudentViewController',\n\n    init: function (view) {\n\n    },\n\n    onReadClick: function () {\n        this.lookupReference('firstName').setValue('Steve');\n        this.lookupReference('lastName').setValue('Jobs');\n\n        Ext.Msg.alert('Status', 'Read button clicked.');\n    },\n\n    onSaveClick: function () {\n        Ext.Msg.alert('Status', 'Save button clicked.');\n\n    },\n\n    onResetClick: function () {\n        this.lookupReference('firstName').setValue('');\n        this.lookupReference('lastName').setValue('');\n\n        Ext.Msg.alert('Status', 'Reset button clicked.');\n    },\n\n    onExitClick: function () {\n        Ext.Msg.alert('Status', 'Exit button clicked.');\n        this.getView().destroy();//\u9500\u6bc1view\n    }\n\n});\n")),(0,r.kt)("h1",{id:"extajax"},"Ext.Ajax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.Ajax.request({\n    url: '/api/students',\n    method: 'GET',\n    timeout: 60000,\n    params:\n    {\n        id: 1 // loads student whose Id is 1\n    },\n    headers:\n    {\n        'Content-Type': 'application/json'\n    },\n    success: function (response) {\n    \n    },\n    failure: function (response) {\n        Ext.Msg.alert('Status', 'Request Failed.');\n\n    }\n});\n")),(0,r.kt)("h1",{id:"extdatasession"},"Ext.data.Session"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"session \u53ef\u4ee5\u548c\u4efb\u610f\u7684view\uff0cviewmodel\uff0cstore\u5173\u8054"),(0,r.kt)("li",{parentName:"ul"},"\u6570\u636e\u52a0\u8f7d\u8fdbsession\u540e\uff0c\u53ef\u4ee5\u88ab\u4ed6\u7ba1\u7406\uff0c\u5904\u7406crud\u64cd\u4f5c"),(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6eview\u4e0bsession : true\uff0c\u521b\u5efa\u65b0\u7684session\u5e76\u4e0e\u4e4b\u5efa\u7acb\u8054\u7cfb\uff0c\u6240\u6709\u5b50\u5143\u7d20\u90fd\u4ece\u8fd9\u4e2asession\u751f\u6210")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//\u4e24\u4e2a\u53ef\u7f16\u8f91\u7684Grid\nExt.application({\n    name: 'SchoolApp',\n    autoCreateViewport: false,\n    views: ['SchoolApp.view.student.StudentList', 'SchoolApp.view.student.StateList'],\n    requires: ['SchoolApp.view.student.StudentViewModel'],\n\n    launch: function () {\n\n        Ext.create('Ext.container.Viewport', {\n            layout: 'border',\n            dock: 'top',\n            viewModel: {\n                type: 'StudentViewModel'\n            },\n            session: true,\n            items: [\n                {\n                    region: 'north',\n                    xtype: 'toolbar',\n                    items: [{\n                        text: 'Save Batch',\n                        handler: function () {\n                            try {\n                                var viewport = this.up().up();\n                                var ses = viewport.getSession();\n\n                                var batch = ses.getSaveBatch();\n\n                                batch.on({\n                                    complete: function () {\n                                        Ext.Msg.alert('Status', 'Data Saved Successfully!');\n                                    },\n                                    exception: function () {\n                                        Ext.Msg.alert('Error', 'Error occurred');\n                                    }\n                                });\n\n                                batch.start();\n                            }\n                            catch (ex) {\n                                Ext.Msg.alert('Error', ex.message);\n                            }\n                        }\n                    },\n                    {\n                        text: 'Show Changes',\n                        handler: function () {\n                            var viewport = this.up().up();\n                            var ses = viewport.getViewModel().getSession();\n                            var changes = ses.getChanges();//a list of record which have changed\n\n                            if (!changes) {\n                                Ext.Msg.alert('Status', 'No Changes');\n                                return;\n                            }\n                            //submit changed records to the remote server\n                            if (changes.State && changes.State.U) // if state updated\n                            {\n                                var changedStateNames = \"Changed State Names: \";\n                                for (var i = 0; i < changes.State.U.length ; i++) {\n                                    changedStateNames += changes.State.U[i].name + \", \";\n                                }\n\n                                Ext.Msg.alert('Status', changedStateNames);\n                            }\n\n                            if (changes.Student && changes.Student.U) { // if student updated\n                                var changedStudentNames = \"Changed Student Names: \";\n                                for (var i = 0; i < changes.Student.U.length ; i++) {\n                                    changedStudentNames += changes.Student.U[i].firstName + \", \";\n                                }\n\n                                Ext.Msg.alert('Status', changedStudentNames);\n                            }\n                        }\n                    }]\n                },\n                {\n                    region: 'center',\n                    xtype: 'StudentList',\n                    bind: { store: '{students}' },\n                    flex: 1\n                },\n                {\n                    xtype: 'StateList',\n                    region: 'south',\n                    bind: { store: '{states}' },\n                    flex: 1\n                }]\n        });\n    }\n});\n\nExt.define('SchoolApp.view.student.StudentViewModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.StudentViewModel',\n\n    stores: {\n        students: {\n            model: 'SchoolApp.model.Student',\n            session: true,\n            autoLoad: true,\n            sorters: [{\n                property: 'firstName',\n                direction:'DESC'\n            }]\n        },\n        states: {\n            model: 'SchoolApp.model.State',\n            session: true,\n            autoLoad: true,\n            sorters: [{\n                property: 'name',\n                direction: 'ASC'\n            }]\n        }\n    }\n});\n")),(0,r.kt)("h1",{id:"extdatachainedstore-extdatastore"},"Ext.data.ChainedStore, Ext.data.Store"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"chained store\u94fe\u63a5\u5230store\uff0crecord\u4e5f\u662f\u6765\u81eastore"),(0,r.kt)("li",{parentName:"ul"},"chained store\u80fd\u5b9a\u4e49\u81ea\u5df1\u7684sorters\uff0c filters\uff0c\u4ee5\u4e0d\u540c\u7684\u89c4\u5219\u5c55\u793a\u539f\u6765\u7684record"),(0,r.kt)("li",{parentName:"ul"},"chained store\u80fd\u5b9a\u4e49\u5728\u5355\u72ec\u7684js\u6587\u4ef6\u4e2d\uff0c\u4e5f\u80fd\u5b9a\u4e49\u5728viewmodel\u4e2d")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('SchoolApp.store.Student', {\n    extend: 'Ext.data.Store',\n    model: 'SchoolApp.model.Student',\n   \n    autoLoad: true,\n    sorters: [{\n        property: 'firstName',\n        direction: 'ASC'\n    }]\n\n}); \n\nExt.define('SchoolApp.store.StudentChainedStore', {\n    extend: 'Ext.data.ChainedStore',\n    source:'SchoolApp.store.Student',//source store\n    sorters: [{//\u5728\u8fd9\u91cc\u8bbe\u7f6e\u53e6\u5916\u7684sorters\n        property: 'firstName',\n        direction: 'desc'\n    }]\n\n});\n")),(0,r.kt)("h1",{id:"crud\u4f8b\u5b50"},"CRUD\u4f8b\u5b50"),(0,r.kt)("h2",{id:"\u5728form\u4e2d"},"\u5728form\u4e2d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('MyApp.model.Student', {\n    \n    extend: 'Ext.data.Model',\n    idProperty:'Id',//\u6bcf\u4e2amodel\u90fd\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a\u2018id\u2019 field\uff0c\u4e0d\u8bba\u662f\u5426\u663e\u5f0f\u6307\u5b9a\uff1bidProperty\u88ab\u6307\u5b9a\uff0c\u5c06\u4ee3\u66ffid\u4e3aId\n    schema: {\n        namespace: 'School.model'\n    },\n    fields: [\n        { name: 'Id', type: 'int', defaultValue: 0},//\u6b64\u65f6\uff0cStudent.getFields()\u91cc\u9762\u6ca1\u6709id\u4e86\uff0c\u88abId\u66ff\u6362\u4e86\n        { name: 'firstName', type: 'string' },\n        { name: 'middleName', type: 'string' },\n        { name: 'lastName', type: 'string' },\n        { name: 'birthDate', type: 'date' },\n        { name: 'address1', type: 'string' },\n        { name: 'address2', type: 'string' },\n        { name: 'city', type: 'string' },\n        { name: 'state', type: 'string' }\n    ],\n    \n    validations: [{\n        type: 'presence',\n        field: 'firstName'\n    }]\n\n});\n\nExt.define('MyApp.view.student.Student', {\n    extend: 'Ext.form.Panel',\n\n    xtype: 'studentForm',\n    title: 'Student Entry Form',\n    requires: [\n        'MyApp.view.student.StudentController'\n    ],\n\n    controller: 'student',\n    initComponent: function () {//APP launch\u65f6\u89e6\u53d1\n        Ext.apply(this,//\u5c06\u5982\u4e0b\u5c5e\u6027\u52a0\u5165\u5f53\u524d\u5bf9\u8c61\n        {\n            //\u8868\u793aCUD \u64cd\u4f5c\u5c06\u4f7f\u7528form.Submit()\n            jsonSubmit: true,\n            url: '/api/student',\n            resizable: false,\n            collapsible: false,\n            bodyPadding: '5',\n            buttonAlign: 'center',\n            border: false,\n            trackResetOnLoad: true,\n            layout:\n            {\n                type: 'vbox'\n            },\n            fieldDefaults:\n            {\n                xtype: 'textfield',\n                msgTarget: 'side',\n                labelAlign: 'top',\n                labelStyle: 'font-weight:bold'\n            },\n            defaultType: 'textfield',\n            items: [{\n                    xtype: 'fieldcontainer',\n                    layout: 'hbox',\n                    defaultType: 'textfield',\n                    width: '100%',\n                    fieldDefaults:\n                    {\n                        labelAlign: 'top',\n                        labelStyle: 'font-weight:bold'\n                    },\n                    items: [{\n                        fieldLabel: 'Id',\n                        name: 'Id',\n                        readOnly: true,\n                        width: 55\n                    },\n                    {\n                        fieldLabel: 'First Name',\n                        flex: 1,\n                        name: 'firstName',\n                        margin: '0 0 0 5',\n                        allowBlank: false\n                    },\n                        {\n                            name: 'middleName',\n                            width: 150,\n                            margin: '0 0 0 5',\n                            fieldLabel: 'Middle Name:'\n                        },\n                        {\n                            fieldLabel: 'Last Name',\n                            flex: 1,\n                            margin: '0 0 0 5',\n                            name: 'lastName'\n                        }]\n                },\n                    {\n                        xtype: 'datefield',\n                        fieldLabel: 'Date of Birth',\n                        name: 'birthDate'\n                    },\n                    {\n                        xtype: 'textfield',\n                        fieldLabel: 'Address',\n                        width: '100%',\n                        name: 'address1'\n                    },\n                    {\n                        xtype: 'textfield',\n                        hideLabel: true,\n                        name: 'address2',\n                        width: '100%',\n                        fieldLabel: 'address2'\n\n                    },\n                    {\n                        xtype: 'textfield',\n                        fieldLabel: 'City',\n                        width: '100%',\n                        name: 'city'\n                    },\n                    {\n                        xtype: 'textfield',\n                        fieldLabel: 'state',\n                        width: '100%',\n                        name: 'state'\n                    }\n            ],\n            buttons: [{\n                text: 'Create',\n                itemId: 'btnCreate',\n                formBind: true,\n                handler: 'onCreateClick'\n            },\n            {\n                text: 'Read',\n                itemId: 'btnLoad',\n                handler: 'onReadClick'\n            },\n\n            {\n                text: 'Update',\n                itemId: 'btnUpdate',\n                formBind: true,\n                handler: 'onUpdateClick'\n            },\n            {\n                text: 'Delete',\n                itemId: 'btnDelete',\n                formBind: true,\n                handler: 'onDeleteClick'\n            },\n            {\n                text: 'Reset',\n                itemId: 'btnReset',\n                handler: 'onResetClick'\n            },\n            {\n                text: 'Clear',\n                itemId: 'btnClear',\n                handler: 'onClearClick'\n            }]\n        });\n\n        this.callParent(arguments);//call\u7236\u7c7b\u7684constructor\n\n    },\n    clearForm: function () {\n        this.getForm().getFields().each(function (field) {\n            field.validateOnChange = false;\n            field.setValue('');\n            field.resetOriginalValue();\n        });\n    }\n});\n\nExt.define('MyApp.view.student.StudentController', {\n    extend: 'Ext.app.ViewController',\n\n    alias: 'controller.student',\n\n    onCreateClick: function (sender, record) {\n        var studentForm = this.getView().getForm();\n\n        if (!studentForm.isDirty()) {\n            Ext.Msg.alert('Status', 'No new data to create.');\n            return;\n        }\n        else if (!studentForm.isValid()) {\n            Ext.Msg.alert('Status', 'Invalid data.');\n            return;\n        }\n\n        //submit()\u6267\u884cCUD\uff0c\u8fd9\u91cc\u662f\u589e\uff0cPOST\u8bf7\u6c42\n        // Submit the Ajax request and handle the response\n        studentForm.submit({\n            url: '/api/student',//=>http://localhost/api/student\n            waitMsg: 'Saving..',\n            headers:\n            {\n                'Content-Type': 'application/json'\n            },\n            clientValidation: true,\n            submitEmptyText: true,\n            success: function (form, action) {\n\n                var student = Ext.create('School.model.Student');\n                var resp = Ext.decode(action.response.responseText);\n\n                if (resp.data[0]) {\n                    // addstudent returns student model with Id so we can re-load model into form so form will have isDirty false\n                    student.set(resp.data[0]);\n                    studentForm.loadRecord(student);\n                }\n\n                Ext.Msg.alert('Status', 'Saved successfully.');\n\n            },\n            failure: function (form, action) {\n                if (action.failureType === Ext.form.action.Action.CLIENT_INVALID) {\n                    Ext.Msg.alert('CLIENT_INVALID', 'Something has been missed. Please check and try again.');\n                }\n                if (action.failureType === Ext.form.action.Action.CONNECT_FAILURE) {\n                    Ext.Msg.alert('CONNECT_FAILURE', 'Status: ' + action.response.status + ': ' + action.response.statusText);\n                }\n                if (action.failureType === Ext.form.action.Action.SERVER_INVALID) {\n                    Ext.Msg.alert('SERVER_INVALID', action.result.message);\n                }\n            }\n        });\n    },\n\n    onReadClick: function (sender, record) {\n        var studentForm = this.getView().getForm();\n\n        //load()\u53d1\u51faget\u8bf7\u6c42\uff0c\u8bfb\u53d6\u6570\u636e\n        //result should contain success=true and data property otherwise it will go to failure even if there is no failure\n        studentForm.load({\n            waitMsg: 'Loading...',\n            method: 'GET',\n            params:\n            {\n                id: 1\n            },\n            success: function (form, action) {\n                try {\n                    var resp = Ext.decode(action.response.responseText);\n\n                    if (resp.data.length > 0) {\n                        // addstudent returns student model with Id so we can re-load model into form so form will have isDirty false\n                        var student = Ext.create('School.model.Student');\n                        student.set(resp.data[0]);\n                        studentForm.loadRecord(student);\n                    }\n                }\n                catch (ex) {\n                    Ext.Msg.alert('Status', 'Exception: ' + ex.Message);\n\n                }\n            },\n            failure: function (form, action) {\n                Ext.Msg.alert(\"Load failed\", action.result.errorMessage);\n            }\n        });\n    },\n\n    onUpdateClick: function (sender, record) {\n        var studentForm = this.getView().getForm();\n\n        if (!studentForm.isDirty()) {\n            Ext.Msg.alert('Status', 'No pending changes to save.');\n            return;\n        }\n        else if (!studentForm.isValid()) {\n            Ext.Msg.alert('Status', 'Invalid data.');\n            return;\n        }\n\n        studentForm.submit({\n            url: '/api/student',\n            waitMsg: 'Updating..',\n            method: 'PUT',\n            headers:\n            {\n                'Content-Type': 'application/json'\n            },\n            clientValidation: true,\n            success: function (form, action) {\n                try {\n                    var student = Ext.create('School.model.Student');\n                    var resp = Ext.decode(action.response.responseText);\n\n                    if (resp.data.length > 0) {\n                        // addstudent returns student model with Id so we can re-load model into form so form will have isDirty false\n                        student.set(resp.data[0]);\n                        studentForm.loadRecord(student);\n                    }\n\n                    Ext.Msg.alert('Status', 'Saved successfully.');\n                }\n                catch (ex) {\n                    Ext.Msg.alert('Status', 'Exception: ' + ex.Message);\n\n                }\n            },\n            failure: function (form, action) {\n                if (action.failureType === Ext.form.action.Action.CLIENT_INVALID) {\n                    Ext.Msg.alert('CLIENT_INVALID', 'Something has been missed. Please check and try again.');\n                }\n                if (action.failureType === Ext.form.action.Action.CONNECT_FAILURE) {\n                    Ext.Msg.alert('CONNECT_FAILURE', 'Status: ' + action.response.status + ': ' + action.response.statusText);\n                }\n                if (action.failureType === Ext.form.action.Action.SERVER_INVALID) {\n                    Ext.Msg.alert('SERVER_INVALID', action.result.message);\n                }\n            }\n        });\n    },\n    onDeleteClick: function (sender, record) {\n        var me = this,\n            studentForm = me.getView();\n\n        if (!studentForm.getValues(false, false, false, true).Id) {\n            Ext.Msg.alert('Status', 'Invalid or No data to delete.');\n            return;\n        }\n\n        var student = Ext.create('School.model.Student'), data;\n\n        student.set(studentForm.getValues());\n        data = student.getData();\n\n        Ext.Msg.show({\n            title: 'Delete',\n            msg: 'Do you want to delete this record? ',\n            width: 300,\n            closable: false,\n            buttons: Ext.Msg.YESNO,\n            icon: Ext.Msg.QUESTION,\n            fn: function (buttonValue, inputText, showConfig) {\n                if (buttonValue === 'yes') {\n\n                    studentForm.submit({\n                        url: '/api/student',\n                        method: 'DELETE',\n                        clientValidation: true,\n                        waitMsg: 'Deleting..',\n                        headers:\n                        {\n                            'Content-Type': 'application/json'\n                        },\n\n                        success: function (form, action) {\n                            try {\n                                var resp = Ext.decode(action.response.responseText);\n                                studentForm.clearForm();\n\n                                Ext.Msg.alert('Success', resp.message);\n                            }\n                            catch (ex) {\n                                Ext.Msg.alert('Status', 'Exception: ' + ex.Message);\n\n                            }\n                        },\n                        failure: function (form, action) {\n                            if (action.failureType === Ext.form.action.Action.CLIENT_INVALID) {\n                                Ext.Msg.alert('CLIENT_INVALID', 'Something has been missed. Please check and try again.');\n                            }\n                            if (action.failureType === Ext.form.action.Action.CONNECT_FAILURE) {\n                                Ext.Msg.alert('CONNECT_FAILURE', 'Status: ' + action.response.status + ': ' + action.response.statusText);\n                            }\n                            if (action.failureType === Ext.form.action.Action.SERVER_INVALID) {\n                                Ext.Msg.alert('SERVER_INVALID', action.result.message);\n                            }\n                        }\n                    });\n                }\n            }\n\n        });\n    },\n    onResetClick: function (sender, record) {\n        this.getView().getForm().reset();\n    },\n    onClearClick: function (sender, record) {\n        this.getView().clearForm();\n    },\n\n});\n")),(0,r.kt)("h2",{id:"\u5728grid\u4e2d"},"\u5728Grid\u4e2d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"//model\u7528\u4e0a\u4e2a\u4f8b\u5b50\u7684\uff0c\u6ca1\u53d8\n\nExt.define('MyApp.viewmodel.StudentViewModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.studentviewmodel',\n    stores: {\n        StudentListStore: {\n            model: 'MyApp.model.Student',\n            autoLoad: true,//grid will display data as soon as it load records \n            autoSync: true,//\u5f53\u7528\u6237\u5728Grid\u8fdb\u884c\u4e86\u64cd\u4f5c\uff0cStudentListStore\u4e5f\u4f1a\u76f8\u5e94\u7684update or delete\n            //\u5982\u679cautoSync\uff1afalse\uff0cstore\u4e0d\u4f1a\u81ea\u52a8\u66f4\u65b0\u53d8\u5316\uff0c\u9700\u8981xxxStore.sync({xxx}),\u89c1\u4e0b\u8282\n            proxy:\n            {\n                type: 'rest',\n                reader:\n                {\n                    rootProperty: 'data',\n                    type: 'json'\n                },\n                url: '/api/student',\n                writer: {\n                    type: 'json',\n                    dateFormat: 'd/m/Y',\n                    writeAllFields: true\n                }\n            }\n        }\n\n    }\n});\n\nExt.define('MyApp.view.studentlist.StudentList', {\n    extend: 'Ext.grid.Panel',\n    xtype: 'studentList',\n    requires: [\n        'MyApp.view.studentlist.StudentListController',\n        'MyApp.viewmodel.StudentViewModel'\n    ],\n    title: 'Student List',\n\n    controller: 'student-list',\n    viewModel: { type: 'studentviewmodel' },//\u5305\u542b\u6b64view\u7684store\n    reference:'studentlistgrid',\n    selType: 'rowmodel',\n    selModel:\n    {\n        mode: 'SINGLE'\n    },\n    viewConfig:\n    {\n        stripeRows: true\n    },\n    listeners: {\n        selectionchange: 'onSelectionChange'\n    },\n    bind: {\n        store: '{StudentListStore}'//\u7ed1\u5b9aviewmodel\u4e2d\u7684StudentListStore\n    },\n    initComponent: function () {\n        Ext.apply(this,\n        {\n            plugins: [Ext.create('Ext.grid.plugin.RowEditing',//\u53ef\u4ee5\u8fdb\u884c\u884c\u7f16\u8f91\n            {\n                clicksToEdit: 2\n            })],\n\n            columns: [{\n                text: \"Id\",\n                dataIndex: 'Id',\n                hidden: false,\n                width: 35\n            },\n            {\n                text: \"First Name\",\n                flex: 1,\n                dataIndex: 'firstName',\n                editor:\n                {\n                    // defaults to textfield if no xtype is supplied\n                    allowBlank: false\n                }\n            },\n            {\n                text: \"Middle Name\",\n                flex: 1,\n                dataIndex: 'middleName',\n                editor:\n                {\n                    allowBlank: true\n                }\n            },\n            {\n                text: \"Last Name\",\n                flex: 1,\n                dataIndex: 'lastName',\n                editor:\n                {\n                    allowBlank: true\n                }\n            },\n            {\n                xtype: 'datecolumn',\n                header: \"Birth Date\",\n                width: 135,\n                dataIndex: 'birthDate',\n                editor:\n                {\n                    xtype: 'datefield',\n                    allowBlank: true\n                },\n                renderer: Ext.util.Format.dateRenderer('d/m/Y')\n            },\n            {\n                text: \"City\",\n                flex: 1,\n                dataIndex: 'city',\n                editor:\n                {\n                    allowBlank: true\n                }\n            },\n            {\n                text: \"State\",\n                flex: 1,\n                dataIndex: 'state',\n                editor:\n                {\n                    allowBlank: true\n                }\n            }],\n            tbar: [{\n                text: 'Add Student',\n                iconCls: 'fa-plus',\n                handler: 'onAddClick'\n            }, {\n                itemId: 'removeStudent',\n                text: 'Remove Student',\n                iconCls: 'fa-times',\n                reference: 'btnRemoveStudent',\n                handler: 'onRemoveClick',\n                disabled: true\n            }]\n        });\n\n        this.callParent(arguments);\n    }\n});\n\nExt.define('MyApp.view.studentlist.StudentListController', {\n    extend: 'Ext.app.ViewController',\n\n    alias: 'controller.student-list',\n\n    onAddClick: function (sender, record) {\n\n        \n        var studentGrid = this.getView();\n        var studentStore = studentGrid.getStore();\n\n        //adding dummy student\u5047\u6570\u636e\n        var studentModel = Ext.create('School.model.Student');\n        studentModel.set(\"Id\", 0);\n        studentModel.set(\"firstName\", \"New Student\");\n        studentModel.set(\"middleName\", \"\");\n        studentModel.set(\"lastName\", \"\");\n        studentModel.set(\"birthDate\", \"\");\n        studentModel.set(\"city\", \"\");\n        studentModel.set(\"state\", \"\");\n\n        studentStore.insert(0,studentModel);\n    },\n\n    onLoadClick: function (sender, record) {\n        var studentStore = this.getView().getStore();\n        studentStore.load();\n    },\n\n    onRemoveClick: function (sender, record) {\n        var studentGrid = this.getView();\n        var studentStore = studentGrid.getStore();\n\n        //delete selected rows if selModel is checkboxmodel\n        var selectedRows = studentGrid.getSelectionModel().getSelection();\n\n        studentStore.remove(selectedRows);\n    },\n\n    onSelectionChange: function (sender, record, isSelected) {\n        var removeBtn = this.lookupReference('btnRemoveStudent');\n        if(record.length)\n            removeBtn.setDisabled(false);\n        else\n            removeBtn.setDisabled(true);\n    }\n});\n\n")),(0,r.kt)("h1",{id:"sync"},"sync\uff08\uff09"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sync() \u53ef\u4ee5\u5bf9\u591a\u4e2arecord\u6267\u884cCRUD\u64cd\u4f5c")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'//fires create, update and delete request when calling sync and commit changes in the store when autoSync=false\n        studentStore.sync({\n            \n            success : function(batch, opt){\n                Ext.Msg.alert(\'Status\', \'Changes saved successfully.\');\n            },\n            failure : function(batch, opt){\n                var msg = \'\';\n                \n                if(batch.hasException){\n                    \n                    for(var i = 0; i < batch.exceptions.length; i ++ ){\n                        switch(batch.exceptions[i].action){\n                            case "destroy" : \n                                msg = msg + batch.exceptions[i].records.length + " Delete, ";\n                                break;\n                            case "update" : \n                                msg = msg + batch.exceptions[i].records.length + " Update, ";\n                                break;\n                            case "create" : \n                                msg = msg + batch.exceptions[i].records.length + " Create, ";\n                                break;\n                        }\n                    }\n                    \n                    Ext.Msg.alert("Status", msg + " operation failed!");\n                }\n                else\n                    Ext.Msg.alert(\'Status\', \'Changes failed.\');\n            }\n        });\n')),(0,r.kt)("h1",{id:"grid\u4e2d\u7684\u5206\u9875"},"Grid\u4e2d\u7684\u5206\u9875"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"Ext.define('School.model.Student', {\n    \n    extend: 'Ext.data.Model',\n    idProperty:'Id',\n    schema: {\n        namespace: 'School.model'\n    },\n    fields: [\n        { name: 'Id', type: 'int', defaultValue: 0},\n        { name: 'firstName', type: 'string' },\n        { name: 'middleName', type: 'string' },\n        { name: 'lastName', type: 'string' },\n        { name: 'birthDate', type: 'date' },\n        { name: 'address1', type: 'string' },\n        { name: 'address2', type: 'string' },\n        { name: 'city', type: 'string' },\n        { name: 'state', type: 'string' }\n    ]\n\n});\n\nExt.define('School.view.student.StudentViewModel', {\n    extend: 'Ext.app.ViewModel',\n    alias: 'viewmodel.studentviewmodel',\n    stores: {\n        StudentListPagingStore: {\n            model: 'School.model.Student',\n            autoLoad: true,//load data when view loads\n            pageSize: 5,\n            proxy:\n            {\n                type: 'rest',\n                url: '/api/student'\n                reader:\n                {\n                    type: 'json',\n                    rootProperty: 'Students',\n                    totalProperty: 'TotalCount'//\u6709\u591a\u5c11\u6761record\n                }\n            }\n        }\n\n    }\n});\n\nExt.define('School.view.student.StudentListPaging', {\n    extend: 'Ext.grid.Panel',\n    xtype: 'studentListPaging',\n\n    title: 'Student List - Paging Demo',\n\n    viewModel: { type: 'studentviewmodel' },\n    selType: 'rowmodel',\n    selModel:\n    {\n        mode: 'SINGLE'\n    },\n    viewConfig:\n    {\n        stripeRows: true\n    },\n    listeners: {\n        selectionchange: 'onSelectionChange'\n    },\n    bind: {\n        store: '{StudentListPagingStore}'\n    },\n    initComponent: function () {\n        Ext.apply(this,\n        {\n            columns: [{\n                text: \"Id\",\n                dataIndex: 'Id',\n                width: 35\n            },\n            {\n                text: \"First Name\",\n                flex: 1,\n                dataIndex: 'firstName'\n            },\n            {\n                text: \"Middle Name\",\n                flex: 1,\n                dataIndex: 'middleName'\n            },\n            {\n                text: \"Last Name\",\n                flex: 1,\n                dataIndex: 'lastName'\n            },\n            {\n                xtype: 'datecolumn',\n                header: \"Birth Date\",\n                width: 135,\n                dataIndex: 'birthDate',\n                renderer: Ext.util.Format.dateRenderer('d/m/Y')\n            },\n            {\n                text: \"City\",\n                flex: 1,\n                dataIndex: 'city'\n            },\n            {\n                text: \"State\",\n                flex: 1,\n                dataIndex: 'state'\n            }],\n            bbar: [{\n                xtype: 'pagingtoolbar',\n                bind:{\n                    store: '{StudentListPagingStore}'\n                },\n                displayInfo: true,\n                displayMsg: 'Displaying {0} to {1} of {2} &nbsp;records ',\n                emptyMsg: \"No records to display&nbsp;\"\n            }]\n\n        });\n\n        this.callParent(arguments);\n    }\n});\n")))}p.isMDXComponent=!0}}]);