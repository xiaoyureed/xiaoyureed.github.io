"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4778],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(67294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=l,k=m["".concat(s,".").concat(d)]||m[d]||c[d]||r;return t?a.createElement(k,i(i({ref:n},u),{},{components:t})):a.createElement(k,i({ref:n},u))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},16921:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=t(83117),l=t(80102),r=(t(67294),t(3905)),i=["components"],o={title:"Java Core \u7b14\u8bb0",tags:["java"],date:new Date("2014-04-02T21:08:53.000Z"),toc_min_heading_level:2,toc_max_heading_level:5},s=void 0,p={unversionedId:"java-note",id:"java-note",title:"Java Core \u7b14\u8bb0",description:"https://github.com/remkop/picocli \u547d\u4ee4\u884c\u5f00\u53d1",source:"@site/docs/java-note.md",sourceDirName:".",slug:"/java-note",permalink:"/docs/java-note",draft:!1,tags:[{label:"java",permalink:"/docs/tags/java"}],version:"current",frontMatter:{title:"Java Core \u7b14\u8bb0",tags:["java"],date:"2014-04-02T21:08:53.000Z",toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"JMM and GC\ud83c\udf08",permalink:"/docs/java-memory-model-jmm-jvm"},next:{title:"JQuery notes",permalink:"/docs/jquery-note"}},u={},c=[{value:"3.1. \u53cd\u5c04\u7684 api",id:"31-\u53cd\u5c04\u7684-api",level:2},{value:"3.2. \u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236",id:"32-\u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236",level:2},{value:"5.1. \u96c6\u5408\u7684\u4f53\u7cfb",id:"51-\u96c6\u5408\u7684\u4f53\u7cfb",level:2},{value:"5.2. \u8bfb\u6e90\u7801",id:"52-\u8bfb\u6e90\u7801",level:2},{value:"5.2.1. \u6570\u7ec4\u548c\u94fe\u8868\u533a\u522b",id:"521-\u6570\u7ec4\u548c\u94fe\u8868\u533a\u522b",level:3},{value:"5.2.2. \u5355\u94fe\u8868\u548c\u53cc\u94fe\u8868\u533a\u522b",id:"522-\u5355\u94fe\u8868\u548c\u53cc\u94fe\u8868\u533a\u522b",level:3},{value:"5.2.3. HashMap",id:"523-hashmap",level:3},{value:"5.2.4. HashSet",id:"524-hashset",level:3},{value:"5.2.5. HashTable",id:"525-hashtable",level:3},{value:"5.2.6. LinkedHashMap",id:"526-linkedhashmap",level:3},{value:"5.2.7. TreeMap",id:"527-treemap",level:3},{value:"5.2.8. LindedHashSet",id:"528-lindedhashset",level:3},{value:"5.2.9. ArrayList \u548c Vector",id:"529-arraylist-\u548c-vector",level:3},{value:"5.2.10. LinkedList",id:"5210-linkedlist",level:3},{value:"5.2.11. ConcurrentHashMap",id:"5211-concurrenthashmap",level:3},{value:"5.3. Collections \u548c Arrays \u5de5\u5177\u7c7b",id:"53-collections-\u548c-arrays-\u5de5\u5177\u7c7b",level:2},{value:"5.4. \u96c6\u5408\u6392\u5e8f",id:"54-\u96c6\u5408\u6392\u5e8f",level:2},{value:"6.1. \u6cdb\u578b\u65b9\u6cd5-\u6cdb\u578b\u7c7b-\u6cdb\u578b\u63a5\u53e3",id:"61-\u6cdb\u578b\u65b9\u6cd5-\u6cdb\u578b\u7c7b-\u6cdb\u578b\u63a5\u53e3",level:2},{value:"6.2. \u6cdb\u578b\u53cd\u5c04",id:"62-\u6cdb\u578b\u53cd\u5c04",level:2},{value:"6.2.1. \u6cdb\u578b\u53cd\u5c04 api",id:"621-\u6cdb\u578b\u53cd\u5c04-api",level:3},{value:"6.2.2. \u6848\u4f8b-\u4f18\u5316 BaseDao",id:"622-\u6848\u4f8b-\u4f18\u5316-basedao",level:3},{value:"7.1. \u8bed\u6cd5",id:"71-\u8bed\u6cd5",level:2},{value:"7.2. \u5143\u6ce8\u89e3",id:"72-\u5143\u6ce8\u89e3",level:2},{value:"7.3. \u6ce8\u89e3\u53cd\u5c04",id:"73-\u6ce8\u89e3\u53cd\u5c04",level:2},{value:"7.4. \u770b\u4e00\u4e2a\u4f8b\u5b50(\u4f18\u5316 dao-\u89e3\u51b3\u5b57\u6bb5\u548c\u5c5e\u6027\u4e0d\u4e00\u81f4)",id:"74-\u770b\u4e00\u4e2a\u4f8b\u5b50\u4f18\u5316-dao-\u89e3\u51b3\u5b57\u6bb5\u548c\u5c5e\u6027\u4e0d\u4e00\u81f4",level:2},{value:"7.4.1. \u901a\u8fc7\u6ce8\u89e3\u4f18\u5316 JavaBean",id:"741-\u901a\u8fc7\u6ce8\u89e3\u4f18\u5316-javabean",level:3},{value:"7.4.2. \u6cdb\u578b\u53cd\u5c04\u4f18\u5316 BaseDao",id:"742-\u6cdb\u578b\u53cd\u5c04\u4f18\u5316-basedao",level:3},{value:"7.4.3. \u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6 handler",id:"743-\u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6-handler",level:3},{value:"8.1. io\u603b\u7ed3",id:"81-io\u603b\u7ed3",level:2},{value:"8.2. socket \u7f51\u7edc\u7f16\u7a0b",id:"82-socket-\u7f51\u7edc\u7f16\u7a0b",level:2},{value:"8.3. \u963b\u585e io",id:"83-\u963b\u585e-io",level:2},{value:"8.3.1. \u4ec0\u4e48\u662f\u963b\u585e io",id:"831-\u4ec0\u4e48\u662f\u963b\u585e-io",level:3},{value:"8.3.2. io \u4f53\u7cfb\u7684\u6574\u4e2a\u6982\u89c8",id:"832-io-\u4f53\u7cfb\u7684\u6574\u4e2a\u6982\u89c8",level:3},{value:"8.3.3. Paths \u548c Files \u76f8\u5173 api",id:"833-paths-\u548c-files-\u76f8\u5173-api",level:3},{value:"8.3.3.1. Paths \u7684\u83b7\u53d6\u8f6c\u5316",id:"8331-paths-\u7684\u83b7\u53d6\u8f6c\u5316",level:4},{value:"8.3.3.2. \u901a\u8fc7 Files Paths \u8bfb\u53d6\u5199\u5165",id:"8332-\u901a\u8fc7-files-paths-\u8bfb\u53d6\u5199\u5165",level:4},{value:"8.3.3.3. \u904d\u5386\u6587\u4ef6\u5939",id:"8333-\u904d\u5386\u6587\u4ef6\u5939",level:4},{value:"8.3.3.4. \u901a\u8fc7 files \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027",id:"8334-\u901a\u8fc7-files-\u83b7\u53d6\u6587\u4ef6\u5c5e\u6027",level:4},{value:"8.3.4. bio tcp \u5b9e\u73b0\u901a\u4fe1",id:"834-bio-tcp-\u5b9e\u73b0\u901a\u4fe1",level:3},{value:"8.4. \u975e\u963b\u585e io",id:"84-\u975e\u963b\u585e-io",level:2},{value:"8.4.1. \u4ec0\u4e48\u662f\u975e\u963b\u585e io",id:"841-\u4ec0\u4e48\u662f\u975e\u963b\u585e-io",level:3},{value:"8.4.2. \u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e",id:"842-\u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e",level:3},{value:"8.4.2.1. \u540c\u6b65\u4e0e\u5f02\u6b65",id:"8421-\u540c\u6b65\u4e0e\u5f02\u6b65",level:4},{value:"8.4.2.2. \u963b\u585e\u4e0e\u975e\u963b\u585e",id:"8422-\u963b\u585e\u4e0e\u975e\u963b\u585e",level:4},{value:"8.4.2.3. \u56db\u79cd\u7ec4\u5408",id:"8423-\u56db\u79cd\u7ec4\u5408",level:4},{value:"8.5. \u591a\u8def\u590d\u7528 IO \u5373 java nio",id:"85-\u591a\u8def\u590d\u7528-io-\u5373-java-nio",level:2},{value:"8.5.1. \u89e3\u91ca\u591a\u8def\u590d\u7528",id:"851-\u89e3\u91ca\u591a\u8def\u590d\u7528",level:3},{value:"8.5.2. nio \u548c io \u533a\u522b",id:"852-nio-\u548c-io-\u533a\u522b",level:3},{value:"8.5.3. Linux \u4e2d\u7684\u591a\u8def\u590d\u7528\u652f\u6301",id:"853-linux-\u4e2d\u7684\u591a\u8def\u590d\u7528\u652f\u6301",level:3},{value:"8.5.4. \u6838\u5fc3\u7ec4\u4ef6",id:"854-\u6838\u5fc3\u7ec4\u4ef6",level:3},{value:"8.5.4.1. \u7406\u89e3",id:"8541-\u7406\u89e3",level:4},{value:"8.5.4.2. Channels",id:"8542-channels",level:4},{value:"8.5.4.3. Buffers",id:"8543-buffers",level:4},{value:"8.5.4.4. Selectors",id:"8544-selectors",level:4},{value:"8.5.5. nio \u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1",id:"855-nio-\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1",level:3},{value:"8.6. java aio",id:"86-java-aio",level:2},{value:"8.7. \u65ad\u70b9\u7eed\u4f20",id:"87-\u65ad\u70b9\u7eed\u4f20",level:2},{value:"11.1. \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5(FP)",id:"111-\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5fp",level:2},{value:"11.2. Java8 \u6dfb\u52a0\u7684\u65b0\u7279\u6027",id:"112-java8-\u6dfb\u52a0\u7684\u65b0\u7279\u6027",level:2},{value:"11.2.1. \u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5",id:"1121-\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5",level:3},{value:"11.2.2. @FunctionalInterface-\u51fd\u6570\u63a5\u53e3",id:"1122-functionalinterface-\u51fd\u6570\u63a5\u53e3",level:3},{value:"11.2.3. \u65b9\u6cd5\u7684\u5f15\u7528",id:"1123-\u65b9\u6cd5\u7684\u5f15\u7528",level:3},{value:"11.2.4. Lambda \u8868\u8fbe\u5f0f",id:"1124-lambda-\u8868\u8fbe\u5f0f",level:3},{value:"11.2.4.1. lambda \u4ecb\u7ecd",id:"11241-lambda-\u4ecb\u7ecd",level:4},{value:"11.2.4.2. Lambda \u4f5c\u7528\u57df\u95ee\u9898",id:"11242-lambda-\u4f5c\u7528\u57df\u95ee\u9898",level:4},{value:"11.2.4.2.1. \u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf",id:"112421-\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf",level:5},{value:"11.2.4.2.2. \u8bbf\u95ee\u6210\u5458\u53d8\u91cf",id:"112422-\u8bbf\u95ee\u6210\u5458\u53d8\u91cf",level:5},{value:"11.2.4.2.3. \u8bbf\u95ee\u9ed8\u8ba4\u63a5\u53e3\u65b9\u6cd5",id:"112423-\u8bbf\u95ee\u9ed8\u8ba4\u63a5\u53e3\u65b9\u6cd5",level:5},{value:"11.3. java8 \u4e2d\u7684\u5e76\u884c\u6d41",id:"113-java8-\u4e2d\u7684\u5e76\u884c\u6d41",level:2},{value:"11.3.1. \u4f7f\u7528\u5e76\u884c\u8fc7\u6ee4\u6570\u636e",id:"1131-\u4f7f\u7528\u5e76\u884c\u8fc7\u6ee4\u6570\u636e",level:3},{value:"11.3.2. \u4ece\u96c6\u5408\u5f97\u5230\u5e76\u884c\u6d41",id:"1132-\u4ece\u96c6\u5408\u5f97\u5230\u5e76\u884c\u6d41",level:3},{value:"11.3.3. \u5e76\u884c\u6392\u5e8f-\u7ed9\u6570\u7ec4\u8d4b\u503c",id:"1133-\u5e76\u884c\u6392\u5e8f-\u7ed9\u6570\u7ec4\u8d4b\u503c",level:3},{value:"11.4. CompletableFuture \u63a5\u53e3-\u589e\u5f3a\u7684 Future",id:"114-completablefuture-\u63a5\u53e3-\u589e\u5f3a\u7684-future",level:2},{value:"11.4.1. java \u5f02\u6b65\u7f16\u7a0b",id:"1141-java-\u5f02\u6b65\u7f16\u7a0b",level:3},{value:"11.4.2. \u539f\u7406\u4ecb\u7ecd",id:"1142-\u539f\u7406\u4ecb\u7ecd",level:3},{value:"11.4.3. completablefuture api",id:"1143-completablefuture-api",level:3},{value:"11.4.4. \u5b8c\u6210\u4e86\u5c31\u901a\u77e5\u6211-\u624b\u52a8\u586b\u5145\u7ed3\u679c",id:"1144-\u5b8c\u6210\u4e86\u5c31\u901a\u77e5\u6211-\u624b\u52a8\u586b\u5145\u7ed3\u679c",level:3},{value:"11.4.5. \u5f02\u6b65\u6267\u884c\u4efb\u52a1",id:"1145-\u5f02\u6b65\u6267\u884c\u4efb\u52a1",level:3},{value:"11.4.6. \u6d41\u5f0f\u8c03\u7528\u7ec4\u5408\u591a\u4e2a function \u548c \u5f02\u5e38\u5904\u7406",id:"1146-\u6d41\u5f0f\u8c03\u7528\u7ec4\u5408\u591a\u4e2a-function-\u548c-\u5f02\u5e38\u5904\u7406",level:3},{value:"11.4.7. \u7ec4\u5408\u591a\u4e2a CompletableFuture",id:"1147-\u7ec4\u5408\u591a\u4e2a-completablefuture",level:3},{value:"11.5. StampedLock-\u8bfb\u5199\u9501\u7684\u6539\u8fdb",id:"115-stampedlock-\u8bfb\u5199\u9501\u7684\u6539\u8fdb",level:2},{value:"11.6. LongAdder-\u539f\u5b50\u7c7b\u7684\u589e\u5f3a",id:"116-longadder-\u539f\u5b50\u7c7b\u7684\u589e\u5f3a",level:2},{value:"11.7. java8 \u5185\u7f6e\u51fd\u6570\u5f0f\u63a5\u53e3",id:"117-java8-\u5185\u7f6e\u51fd\u6570\u5f0f\u63a5\u53e3",level:2},{value:"11.7.1. Predicates(\u8c13\u8bcd, \u65ad\u5b9a)",id:"1171-predicates\u8c13\u8bcd-\u65ad\u5b9a",level:3},{value:"11.7.2. Functions(\u51fd\u6570)",id:"1172-functions\u51fd\u6570",level:3},{value:"11.7.3. Suppliers(\u751f\u4ea7\u8005)",id:"1173-suppliers\u751f\u4ea7\u8005",level:3},{value:"11.7.4. Consumers(\u6d88\u8d39\u8005)",id:"1174-consumers\u6d88\u8d39\u8005",level:3},{value:"11.7.5. Comparators(\u6bd4\u8f83\u5668)",id:"1175-comparators\u6bd4\u8f83\u5668",level:3},{value:"11.7.6. Optional",id:"1176-optional",level:3},{value:"11.8. Streams(\u7ba1\u9053)",id:"118-streams\u7ba1\u9053",level:2},{value:"11.8.1. stream \u4ecb\u7ecd",id:"1181-stream-\u4ecb\u7ecd",level:3},{value:"11.8.2. \u91cd\u590d\u4f7f\u7528 stream",id:"1182-\u91cd\u590d\u4f7f\u7528-stream",level:3},{value:"11.8.3. map \u548c flatMap",id:"1183-map-\u548c-flatmap",level:3},{value:"11.8.4. \u53bb\u91cd",id:"1184-\u53bb\u91cd",level:3},{value:"11.8.5. collect\u65b9\u6cd5 \u5982\u4f55\u6536\u96c6\u5904\u7406\u540e\u7684\u5143\u7d20 \u5206\u7ec4 \u53bb\u91cd",id:"1185-collect\u65b9\u6cd5-\u5982\u4f55\u6536\u96c6\u5904\u7406\u540e\u7684\u5143\u7d20-\u5206\u7ec4-\u53bb\u91cd",level:3},{value:"11.8.6. stream \u4e2d\u5f02\u5e38\u5904\u7406",id:"1186-stream-\u4e2d\u5f02\u5e38\u5904\u7406",level:3},{value:"11.9. date \u65f6\u95f4\u65e5\u671f\u65b0\u7684 api",id:"119-date-\u65f6\u95f4\u65e5\u671f\u65b0\u7684-api",level:2},{value:"11.9.1. \u4ecb\u7ecd-\u4e3a\u4ec0\u4e48\u4f7f\u7528",id:"1191-\u4ecb\u7ecd-\u4e3a\u4ec0\u4e48\u4f7f\u7528",level:3},{value:"11.9.2. \u4f7f\u7528\u65b0\u7684\u65f6\u95f4\u65e5\u671f api",id:"1192-\u4f7f\u7528\u65b0\u7684\u65f6\u95f4\u65e5\u671f-api",level:3},{value:"11.9.3. \u7edf\u8ba1\u4ee3\u7801\u8017\u65f6",id:"1193-\u7edf\u8ba1\u4ee3\u7801\u8017\u65f6",level:3},{value:"11.10. \u53ef\u91cd\u590d\u7684 Annotations",id:"1110-\u53ef\u91cd\u590d\u7684-annotations",level:2},{value:"11.11. base64 \u7f16\u7801",id:"1111-base64-\u7f16\u7801",level:2},{value:"11.12. map \u6620\u5c04\u7684\u65b0\u65b9\u6cd5",id:"1112-map-\u6620\u5c04\u7684\u65b0\u65b9\u6cd5",level:2},{value:"12.1. java module",id:"121-java-module",level:2},{value:"12.2. jshell",id:"122-jshell",level:2},{value:"12.3. var \u7c7b\u578b\u63a8\u65ad",id:"123-var-\u7c7b\u578b\u63a8\u65ad",level:2},{value:"12.4. jdk api enhencement",id:"124-jdk-api-enhencement",level:2},{value:"12.5. \u6539\u8fdb java \u7a0b\u5e8f\u5728 docker \u4e2d\u7684\u8868\u73b0",id:"125-\u6539\u8fdb-java-\u7a0b\u5e8f\u5728-docker-\u4e2d\u7684\u8868\u73b0",level:2},{value:"12.6. \u65b0\u7684\u5783\u573e\u56de\u6536\u5668",id:"126-\u65b0\u7684\u5783\u573e\u56de\u6536\u5668",level:2},{value:"13.1. classloader \u7684\u6982\u5ff5",id:"131-classloader-\u7684\u6982\u5ff5",level:2},{value:"13.2. \u5c42\u7ea7\u7ed3\u6784",id:"132-\u5c42\u7ea7\u7ed3\u6784",level:2},{value:"13.3. \u5de5\u4f5c\u8fc7\u7a0b and \u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f",id:"133-\u5de5\u4f5c\u8fc7\u7a0b-and-\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f",level:2},{value:"13.4. \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668-\u6253\u4e71\u5c42\u7ea7\u7ed3\u6784",id:"134-\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668-\u6253\u4e71\u5c42\u7ea7\u7ed3\u6784",level:2},{value:"13.5. \u501f\u52a9 classloader \u5b9e\u73b0\u7c7b\u9694\u79bb",id:"135-\u501f\u52a9-classloader-\u5b9e\u73b0\u7c7b\u9694\u79bb",level:2},{value:"13.6. \u7c7b\u52a0\u8f7d\u76f8\u5173\u7684\u5f02\u5e38",id:"136-\u7c7b\u52a0\u8f7d\u76f8\u5173\u7684\u5f02\u5e38",level:2},{value:"13.7. \u81ea\u5b9a\u4e49 classloader(\u52a0\u8f7d\u7f51\u7edc\u4e0a\u7684 class)",id:"137-\u81ea\u5b9a\u4e49-classloader\u52a0\u8f7d\u7f51\u7edc\u4e0a\u7684-class",level:2},{value:"14.1. \u83b7\u53d6 classpath \u548c \u7cfb\u7edf\u5c5e\u6027 \u73af\u5883\u53d8\u91cf",id:"141-\u83b7\u53d6-classpath-\u548c-\u7cfb\u7edf\u5c5e\u6027-\u73af\u5883\u53d8\u91cf",level:2},{value:"15.1. \u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u8303\u56f4",id:"151-\u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u8303\u56f4",level:2},{value:"15.2. double \u7c7b\u578b\u7684\u52a0\u51cf\u4e58\u9664",id:"152-double-\u7c7b\u578b\u7684\u52a0\u51cf\u4e58\u9664",level:2},{value:"16.1. \u6253 jar \u5305",id:"161-\u6253-jar-\u5305",level:2},{value:"16.2. \u751f\u6210\u6ce8\u91ca\u6587\u6863 javadoc",id:"162-\u751f\u6210\u6ce8\u91ca\u6587\u6863-javadoc",level:2},{value:"16.3. \u7f16\u8bd1\u548c\u53cd\u7f16\u8bd1",id:"163-\u7f16\u8bd1\u548c\u53cd\u7f16\u8bd1",level:2},{value:"17.1. Object",id:"171-object",level:2},{value:"17.2. String",id:"172-string",level:2},{value:"18.1. javassist",id:"181-javassist",level:2},{value:"19.1. graalvm",id:"191-graalvm",level:2},{value:"19.2. vertx",id:"192-vertx",level:2},{value:"19.3. Micronaut",id:"193-micronaut",level:2},{value:"19.4. Quarkus",id:"194-quarkus",level:2},{value:"20.1. \u6b63\u5219\u8868\u8fbe\u5f0f regex",id:"201-\u6b63\u5219\u8868\u8fbe\u5f0f-regex",level:2},{value:"20.2. \u9759\u6001\u7ed1\u5b9a\u548c\u52a8\u6001\u7ed1\u5b9a",id:"202-\u9759\u6001\u7ed1\u5b9a\u548c\u52a8\u6001\u7ed1\u5b9a",level:2},{value:"20.3. \u91cd\u8f7d and \u91cd\u5199",id:"203-\u91cd\u8f7d-and-\u91cd\u5199",level:2},{value:"20.4. java \u503c\u4f20\u9012 or \u5f15\u7528\u4f20\u9012",id:"204-java-\u503c\u4f20\u9012-or-\u5f15\u7528\u4f20\u9012",level:2},{value:"20.5. \u8bbf\u95ee\u4fee\u9970\u7b26 public-protect-default-private",id:"205-\u8bbf\u95ee\u4fee\u9970\u7b26-public-protect-default-private",level:2},{value:"20.6. getcontextclassloader&amp;getclassloader \u533a\u522b",id:"206-getcontextclassloadergetclassloader-\u533a\u522b",level:2},{value:"20.7. getter \u548c setter \u5b58\u5728\u7684\u610f\u4e49",id:"207-getter-\u548c-setter-\u5b58\u5728\u7684\u610f\u4e49",level:2},{value:"20.8. \u4e3a\u4ec0\u4e48 service \u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e5f\u9700\u8981\u4e00\u4e2a\u63a5\u53e3",id:"208-\u4e3a\u4ec0\u4e48-service-\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e5f\u9700\u8981\u4e00\u4e2a\u63a5\u53e3",level:2},{value:"20.9. static \u5173\u952e\u5b57",id:"209-static-\u5173\u952e\u5b57",level:2},{value:"20.10. \u5185\u90e8\u7c7b or \u9759\u6001\u5185\u90e8\u7c7b",id:"2010-\u5185\u90e8\u7c7b-or-\u9759\u6001\u5185\u90e8\u7c7b",level:2},{value:"20.10.1. \u5185\u90e8\u7c7b",id:"20101-\u5185\u90e8\u7c7b",level:3},{value:"20.10.2. \u9759\u6001\u5185\u90e8\u7c7b",id:"20102-\u9759\u6001\u5185\u90e8\u7c7b",level:3},{value:"20.11. Java \u7c7b\u521d\u59cb\u5316\u987a\u5e8f",id:"2011-java-\u7c7b\u521d\u59cb\u5316\u987a\u5e8f",level:2},{value:"20.12. Random-\u968f\u673a\u6570",id:"2012-random-\u968f\u673a\u6570",level:2},{value:"20.13. \u4f4d\u8fd0\u7b97",id:"2013-\u4f4d\u8fd0\u7b97",level:2},{value:"20.14. \u4e3a\u4ec0\u4e48\u5305\u540d\u90fd\u5c0f\u5199",id:"2014-\u4e3a\u4ec0\u4e48\u5305\u540d\u90fd\u5c0f\u5199",level:2},{value:"20.15. \u5904\u7406 unicode \u7f16\u7801\u95ee\u9898",id:"2015-\u5904\u7406-unicode-\u7f16\u7801\u95ee\u9898",level:2},{value:"20.16. \u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u518d\u6b21\u8d4b\u503c\u7ed9\u5c40\u90e8\u53d8\u91cf",id:"2016-\u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u518d\u6b21\u8d4b\u503c\u7ed9\u5c40\u90e8\u53d8\u91cf",level:2},{value:"20.17. \u4e3a\u4ec0\u4e48\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u4e0d\u7528\u8d4b\u503c\u800c\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c",id:"2017-\u4e3a\u4ec0\u4e48\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u4e0d\u7528\u8d4b\u503c\u800c\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c",level:2},{value:"21.1. \u535a\u5ba2 cms \u7cfb\u7edf",id:"211-\u535a\u5ba2-cms-\u7cfb\u7edf",level:2}],m={toc:c};function d(e){var n=e.components,t=(0,l.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/remkop/picocli"},"https://github.com/remkop/picocli")," \u547d\u4ee4\u884c\u5f00\u53d1"),(0,r.kt)("p",null," sentry grafana prometheus youtrack"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/akullpp/awesome-java"},"https://github.com/akullpp/awesome-java"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CodingDocs/awesome-java"},"https://github.com/CodingDocs/awesome-java")," \u4e2d\u6587\u7248"),(0,r.kt)("p",null,"Java core note.\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/tutorial/"},"https://docs.oracle.com/javase/tutorial/"),"\njdk 8u192 \u662f\u6700\u540e\u7684\u514d\u8d39\u7248\u672c, \u4e4b\u540e\u7684\u90fd\u8981\u6536\u8d39\u4e86"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/a06aa86c6b27"},"https://www.jianshu.com/p/a06aa86c6b27")," (Jodconvert , \u662f\u4e00\u4e2a java \u7684\u6587\u6863\u8f6c\u6362\u5668, \u5229\u7528 openoffice \u6216 libreOffice \u6765\u8fdb\u884c\u6587\u6863\u683c\u5f0f\u8f6c\u6362.)"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://godbolt.org/"},"https://godbolt.org/")," - \u5728\u7ebf\u673a\u5668\u7801\u8f6c\u6362"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/qiurunze123"},"https://github.com/qiurunze123")," - \u9ad8\u5e76\u53d1"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Snailclimb/awesome-java#%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F"},"https://github.com/Snailclimb/awesome-java#%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F")," awesome java"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1-%E5%90%84%E4%B8%AA%E7%89%88%E6%9C%AC"},"1. \u5404\u4e2a\u7248\u672c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2-%E6%B3%A8%E9%87%8A"},"2. \u6ce8\u91ca")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#3-%E5%8F%8D%E5%B0%84reflect"},"3. \u53cd\u5c04reflect"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#31-%E5%8F%8D%E5%B0%84%E7%9A%84-api"},"3.1. \u53cd\u5c04\u7684 api")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#32-%E5%AE%9E%E7%8E%B0%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%9C%BA%E5%88%B6"},"3.2. \u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#4-java-%E5%B9%B6%E5%8F%91-%E5%A4%9A%E7%BA%BF%E7%A8%8B"},"4. java \u5e76\u53d1-\u591a\u7ebf\u7a0b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#5-%E9%9B%86%E5%90%88"},"5. \u96c6\u5408"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#51-%E9%9B%86%E5%90%88%E7%9A%84%E4%BD%93%E7%B3%BB"},"5.1. \u96c6\u5408\u7684\u4f53\u7cfb")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#52-%E8%AF%BB%E6%BA%90%E7%A0%81"},"5.2. \u8bfb\u6e90\u7801"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#521-%E6%95%B0%E7%BB%84%E5%92%8C%E9%93%BE%E8%A1%A8%E5%8C%BA%E5%88%AB"},"5.2.1. \u6570\u7ec4\u548c\u94fe\u8868\u533a\u522b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#522-%E5%8D%95%E9%93%BE%E8%A1%A8%E5%92%8C%E5%8F%8C%E9%93%BE%E8%A1%A8%E5%8C%BA%E5%88%AB"},"5.2.2. \u5355\u94fe\u8868\u548c\u53cc\u94fe\u8868\u533a\u522b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#523-hashmap"},"5.2.3. HashMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#524-hashset"},"5.2.4. HashSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#525-hashtable"},"5.2.5. HashTable")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#526-linkedhashmap"},"5.2.6. LinkedHashMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#527-treemap"},"5.2.7. TreeMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#528-lindedhashset"},"5.2.8. LindedHashSet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#529-arraylist-%E5%92%8C-vector"},"5.2.9. ArrayList \u548c Vector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#5210-linkedlist"},"5.2.10. LinkedList")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#5211-concurrenthashmap"},"5.2.11. ConcurrentHashMap")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#53-collections-%E5%92%8C-arrays-%E5%B7%A5%E5%85%B7%E7%B1%BB"},"5.3. Collections \u548c Arrays \u5de5\u5177\u7c7b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#54-%E9%9B%86%E5%90%88%E6%8E%92%E5%BA%8F"},"5.4. \u96c6\u5408\u6392\u5e8f")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#6-%E6%B3%9B%E5%9E%8B"},"6. \u6cdb\u578b"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#61-%E6%B3%9B%E5%9E%8B%E6%96%B9%E6%B3%95-%E6%B3%9B%E5%9E%8B%E7%B1%BB-%E6%B3%9B%E5%9E%8B%E6%8E%A5%E5%8F%A3"},"6.1. \u6cdb\u578b\u65b9\u6cd5-\u6cdb\u578b\u7c7b-\u6cdb\u578b\u63a5\u53e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#62-%E6%B3%9B%E5%9E%8B%E5%8F%8D%E5%B0%84"},"6.2. \u6cdb\u578b\u53cd\u5c04"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#621-%E6%B3%9B%E5%9E%8B%E5%8F%8D%E5%B0%84-api"},"6.2.1. \u6cdb\u578b\u53cd\u5c04 api")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#622-%E6%A1%88%E4%BE%8B-%E4%BC%98%E5%8C%96-basedao"},"6.2.2. \u6848\u4f8b-\u4f18\u5316 BaseDao")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#7-%E6%B3%A8%E8%A7%A3"},"7. \u6ce8\u89e3"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#71-%E8%AF%AD%E6%B3%95"},"7.1. \u8bed\u6cd5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#72-%E5%85%83%E6%B3%A8%E8%A7%A3"},"7.2. \u5143\u6ce8\u89e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#73-%E6%B3%A8%E8%A7%A3%E5%8F%8D%E5%B0%84"},"7.3. \u6ce8\u89e3\u53cd\u5c04")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#74-%E7%9C%8B%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%E4%BC%98%E5%8C%96-dao-%E8%A7%A3%E5%86%B3%E5%AD%97%E6%AE%B5%E5%92%8C%E5%B1%9E%E6%80%A7%E4%B8%8D%E4%B8%80%E8%87%B4"},"7.4. \u770b\u4e00\u4e2a\u4f8b\u5b50\u4f18\u5316 dao-\u89e3\u51b3\u5b57\u6bb5\u548c\u5c5e\u6027\u4e0d\u4e00\u81f4"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#741-%E9%80%9A%E8%BF%87%E6%B3%A8%E8%A7%A3%E4%BC%98%E5%8C%96-javabean"},"7.4.1. \u901a\u8fc7\u6ce8\u89e3\u4f18\u5316 JavaBean")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#742-%E6%B3%9B%E5%9E%8B%E5%8F%8D%E5%B0%84%E4%BC%98%E5%8C%96-basedao"},"7.4.2. \u6cdb\u578b\u53cd\u5c04\u4f18\u5316 BaseDao")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#743-%E8%87%AA%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%9C%E9%9B%86-handler"},"7.4.3. \u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6 handler")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8-io"},"8. io"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#81-io%E6%80%BB%E7%BB%93"},"8.1. io\u603b\u7ed3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#82-socket-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B"},"8.2. socket \u7f51\u7edc\u7f16\u7a0b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#83-%E9%98%BB%E5%A1%9E-io"},"8.3. \u963b\u585e io"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#831-%E4%BB%80%E4%B9%88%E6%98%AF%E9%98%BB%E5%A1%9E-io"},"8.3.1. \u4ec0\u4e48\u662f\u963b\u585e io")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#832-io-%E4%BD%93%E7%B3%BB%E7%9A%84%E6%95%B4%E4%B8%AA%E6%A6%82%E8%A7%88"},"8.3.2. io \u4f53\u7cfb\u7684\u6574\u4e2a\u6982\u89c8")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#833-paths-%E5%92%8C-files-%E7%9B%B8%E5%85%B3-api"},"8.3.3. Paths \u548c Files \u76f8\u5173 api"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8331-paths-%E7%9A%84%E8%8E%B7%E5%8F%96%E8%BD%AC%E5%8C%96"},"8.3.3.1. Paths \u7684\u83b7\u53d6\u8f6c\u5316")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8332-%E9%80%9A%E8%BF%87-files-paths-%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5"},"8.3.3.2. \u901a\u8fc7 Files Paths \u8bfb\u53d6\u5199\u5165")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8333-%E9%81%8D%E5%8E%86%E6%96%87%E4%BB%B6%E5%A4%B9"},"8.3.3.3. \u904d\u5386\u6587\u4ef6\u5939")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8334-%E9%80%9A%E8%BF%87-files-%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7"},"8.3.3.4. \u901a\u8fc7 files \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#834-bio-tcp-%E5%AE%9E%E7%8E%B0%E9%80%9A%E4%BF%A1"},"8.3.4. bio tcp \u5b9e\u73b0\u901a\u4fe1")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#84-%E9%9D%9E%E9%98%BB%E5%A1%9E-io"},"8.4. \u975e\u963b\u585e io"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#841-%E4%BB%80%E4%B9%88%E6%98%AF%E9%9D%9E%E9%98%BB%E5%A1%9E-io"},"8.4.1. \u4ec0\u4e48\u662f\u975e\u963b\u585e io")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#842-%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5%E5%92%8C%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E"},"8.4.2. \u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8421-%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5"},"8.4.2.1. \u540c\u6b65\u4e0e\u5f02\u6b65")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8422-%E9%98%BB%E5%A1%9E%E4%B8%8E%E9%9D%9E%E9%98%BB%E5%A1%9E"},"8.4.2.2. \u963b\u585e\u4e0e\u975e\u963b\u585e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8423-%E5%9B%9B%E7%A7%8D%E7%BB%84%E5%90%88"},"8.4.2.3. \u56db\u79cd\u7ec4\u5408")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#85-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8-io-%E5%8D%B3-java-nio"},"8.5. \u591a\u8def\u590d\u7528 IO \u5373 java nio"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#851-%E8%A7%A3%E9%87%8A%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8"},"8.5.1. \u89e3\u91ca\u591a\u8def\u590d\u7528")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#852-nio-%E5%92%8C-io-%E5%8C%BA%E5%88%AB"},"8.5.2. nio \u548c io \u533a\u522b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#853-linux-%E4%B8%AD%E7%9A%84%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8%E6%94%AF%E6%8C%81"},"8.5.3. Linux \u4e2d\u7684\u591a\u8def\u590d\u7528\u652f\u6301")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#854-%E6%A0%B8%E5%BF%83%E7%BB%84%E4%BB%B6"},"8.5.4. \u6838\u5fc3\u7ec4\u4ef6"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8541-%E7%90%86%E8%A7%A3"},"8.5.4.1. \u7406\u89e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8542-channels"},"8.5.4.2. Channels")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8543-buffers"},"8.5.4.3. Buffers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#8544-selectors"},"8.5.4.4. Selectors")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#855-nio-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1"},"8.5.5. nio \u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#86-java-aio"},"8.6. java aio")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#87-%E6%96%AD%E7%82%B9%E7%BB%AD%E4%BC%A0"},"8.7. \u65ad\u70b9\u7eed\u4f20")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#9-%E4%BB%A3%E7%90%86"},"9. \u4ee3\u7406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#10-java-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B"},"10. Java \u5185\u5b58\u6a21\u578b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#11-java8"},"11. java8"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#111-%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E7%9A%84%E6%A6%82%E5%BF%B5fp"},"11.1. \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5FP")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#112-java8-%E6%B7%BB%E5%8A%A0%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7"},"11.2. Java8 \u6dfb\u52a0\u7684\u65b0\u7279\u6027"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1121-%E6%8E%A5%E5%8F%A3%E9%BB%98%E8%AE%A4%E6%96%B9%E6%B3%95"},"11.2.1. \u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1122-functionalinterface-%E5%87%BD%E6%95%B0%E6%8E%A5%E5%8F%A3"},"11.2.2. @FunctionalInterface-\u51fd\u6570\u63a5\u53e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1123-%E6%96%B9%E6%B3%95%E7%9A%84%E5%BC%95%E7%94%A8"},"11.2.3. \u65b9\u6cd5\u7684\u5f15\u7528")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1124-lambda-%E8%A1%A8%E8%BE%BE%E5%BC%8F"},"11.2.4. Lambda \u8868\u8fbe\u5f0f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#11241-lambda-%E4%BB%8B%E7%BB%8D"},"11.2.4.1. lambda \u4ecb\u7ecd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#11242-lambda-%E4%BD%9C%E7%94%A8%E5%9F%9F%E9%97%AE%E9%A2%98"},"11.2.4.2. Lambda \u4f5c\u7528\u57df\u95ee\u9898"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#112421-%E8%AE%BF%E9%97%AE%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F"},"11.2.4.2.1. \u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#112422-%E8%AE%BF%E9%97%AE%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F"},"11.2.4.2.2. \u8bbf\u95ee\u6210\u5458\u53d8\u91cf")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#112423-%E8%AE%BF%E9%97%AE%E9%BB%98%E8%AE%A4%E6%8E%A5%E5%8F%A3%E6%96%B9%E6%B3%95"},"11.2.4.2.3. \u8bbf\u95ee\u9ed8\u8ba4\u63a5\u53e3\u65b9\u6cd5")))))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#113-java8-%E4%B8%AD%E7%9A%84%E5%B9%B6%E8%A1%8C%E6%B5%81"},"11.3. java8 \u4e2d\u7684\u5e76\u884c\u6d41"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1131-%E4%BD%BF%E7%94%A8%E5%B9%B6%E8%A1%8C%E8%BF%87%E6%BB%A4%E6%95%B0%E6%8D%AE"},"11.3.1. \u4f7f\u7528\u5e76\u884c\u8fc7\u6ee4\u6570\u636e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1132-%E4%BB%8E%E9%9B%86%E5%90%88%E5%BE%97%E5%88%B0%E5%B9%B6%E8%A1%8C%E6%B5%81"},"11.3.2. \u4ece\u96c6\u5408\u5f97\u5230\u5e76\u884c\u6d41")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1133-%E5%B9%B6%E8%A1%8C%E6%8E%92%E5%BA%8F-%E7%BB%99%E6%95%B0%E7%BB%84%E8%B5%8B%E5%80%BC"},"11.3.3. \u5e76\u884c\u6392\u5e8f-\u7ed9\u6570\u7ec4\u8d4b\u503c")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#114-completablefuture-%E6%8E%A5%E5%8F%A3-%E5%A2%9E%E5%BC%BA%E7%9A%84-future"},"11.4. CompletableFuture \u63a5\u53e3-\u589e\u5f3a\u7684 Future"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1141-java-%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B"},"11.4.1. java \u5f02\u6b65\u7f16\u7a0b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1142-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D"},"11.4.2. \u539f\u7406\u4ecb\u7ecd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1143-completablefuture-api"},"11.4.3. completablefuture api")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1144-%E5%AE%8C%E6%88%90%E4%BA%86%E5%B0%B1%E9%80%9A%E7%9F%A5%E6%88%91-%E6%89%8B%E5%8A%A8%E5%A1%AB%E5%85%85%E7%BB%93%E6%9E%9C"},"11.4.4. \u5b8c\u6210\u4e86\u5c31\u901a\u77e5\u6211-\u624b\u52a8\u586b\u5145\u7ed3\u679c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1145-%E5%BC%82%E6%AD%A5%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1"},"11.4.5. \u5f02\u6b65\u6267\u884c\u4efb\u52a1")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1146-%E6%B5%81%E5%BC%8F%E8%B0%83%E7%94%A8%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA-function-%E5%92%8C-%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86"},"11.4.6. \u6d41\u5f0f\u8c03\u7528\u7ec4\u5408\u591a\u4e2a function \u548c \u5f02\u5e38\u5904\u7406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1147-%E7%BB%84%E5%90%88%E5%A4%9A%E4%B8%AA-completablefuture"},"11.4.7. \u7ec4\u5408\u591a\u4e2a CompletableFuture")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#115-stampedlock-%E8%AF%BB%E5%86%99%E9%94%81%E7%9A%84%E6%94%B9%E8%BF%9B"},"11.5. StampedLock-\u8bfb\u5199\u9501\u7684\u6539\u8fdb")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#116-longadder-%E5%8E%9F%E5%AD%90%E7%B1%BB%E7%9A%84%E5%A2%9E%E5%BC%BA"},"11.6. LongAdder-\u539f\u5b50\u7c7b\u7684\u589e\u5f3a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#117-java8-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3"},"11.7. java8 \u5185\u7f6e\u51fd\u6570\u5f0f\u63a5\u53e3"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1171-predicates%E8%B0%93%E8%AF%8D-%E6%96%AD%E5%AE%9A"},"11.7.1. Predicates\u8c13\u8bcd, \u65ad\u5b9a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1172-functions%E5%87%BD%E6%95%B0"},"11.7.2. Functions\u51fd\u6570")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1173-suppliers%E7%94%9F%E4%BA%A7%E8%80%85"},"11.7.3. Suppliers\u751f\u4ea7\u8005")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1174-consumers%E6%B6%88%E8%B4%B9%E8%80%85"},"11.7.4. Consumers\u6d88\u8d39\u8005")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1175-comparators%E6%AF%94%E8%BE%83%E5%99%A8"},"11.7.5. Comparators\u6bd4\u8f83\u5668")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1176-optional"},"11.7.6. Optional")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#118-streams%E7%AE%A1%E9%81%93"},"11.8. Streams\u7ba1\u9053"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1181-stream-%E4%BB%8B%E7%BB%8D"},"11.8.1. stream \u4ecb\u7ecd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1182-%E9%87%8D%E5%A4%8D%E4%BD%BF%E7%94%A8-stream"},"11.8.2. \u91cd\u590d\u4f7f\u7528 stream")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1183-map-%E5%92%8C-flatmap"},"11.8.3. map \u548c flatMap")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1184-%E5%8E%BB%E9%87%8D"},"11.8.4. \u53bb\u91cd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1185-collect%E6%96%B9%E6%B3%95-%E5%A6%82%E4%BD%95%E6%94%B6%E9%9B%86%E5%A4%84%E7%90%86%E5%90%8E%E7%9A%84%E5%85%83%E7%B4%A0-%E5%88%86%E7%BB%84-%E5%8E%BB%E9%87%8D"},"11.8.5. collect\u65b9\u6cd5 \u5982\u4f55\u6536\u96c6\u5904\u7406\u540e\u7684\u5143\u7d20 \u5206\u7ec4 \u53bb\u91cd")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1186-stream-%E4%B8%AD%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86"},"11.8.6. stream \u4e2d\u5f02\u5e38\u5904\u7406")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#119-date-%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F%E6%96%B0%E7%9A%84-api"},"11.9. date \u65f6\u95f4\u65e5\u671f\u65b0\u7684 api"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1191-%E4%BB%8B%E7%BB%8D-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8"},"11.9.1. \u4ecb\u7ecd-\u4e3a\u4ec0\u4e48\u4f7f\u7528")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1192-%E4%BD%BF%E7%94%A8%E6%96%B0%E7%9A%84%E6%97%B6%E9%97%B4%E6%97%A5%E6%9C%9F-api"},"11.9.2. \u4f7f\u7528\u65b0\u7684\u65f6\u95f4\u65e5\u671f api")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1193-%E7%BB%9F%E8%AE%A1%E4%BB%A3%E7%A0%81%E8%80%97%E6%97%B6"},"11.9.3. \u7edf\u8ba1\u4ee3\u7801\u8017\u65f6")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1110-%E5%8F%AF%E9%87%8D%E5%A4%8D%E7%9A%84-annotations"},"11.10. \u53ef\u91cd\u590d\u7684 Annotations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1111-base64-%E7%BC%96%E7%A0%81"},"11.11. base64 \u7f16\u7801")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#1112-map-%E6%98%A0%E5%B0%84%E7%9A%84%E6%96%B0%E6%96%B9%E6%B3%95"},"11.12. map \u6620\u5c04\u7684\u65b0\u65b9\u6cd5")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#12-java11"},"12. java11"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#121-java-module"},"12.1. java module")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#122-jshell"},"12.2. jshell")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#123-var-%E7%B1%BB%E5%9E%8B%E6%8E%A8%E6%96%AD"},"12.3. var \u7c7b\u578b\u63a8\u65ad")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#124-jdk-api-enhencement"},"12.4. jdk api enhencement")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#125-%E6%94%B9%E8%BF%9B-java-%E7%A8%8B%E5%BA%8F%E5%9C%A8-docker-%E4%B8%AD%E7%9A%84%E8%A1%A8%E7%8E%B0"},"12.5. \u6539\u8fdb java \u7a0b\u5e8f\u5728 docker \u4e2d\u7684\u8868\u73b0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#126-%E6%96%B0%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8"},"12.6. \u65b0\u7684\u5783\u573e\u56de\u6536\u5668")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#13-classloader-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8"},"13. classloader \u7c7b\u52a0\u8f7d\u5668"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#131-classloader-%E7%9A%84%E6%A6%82%E5%BF%B5"},"13.1. classloader \u7684\u6982\u5ff5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#132-%E5%B1%82%E7%BA%A7%E7%BB%93%E6%9E%84"},"13.2. \u5c42\u7ea7\u7ed3\u6784")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#133-%E5%B7%A5%E4%BD%9C%E8%BF%87%E7%A8%8B-and-%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%BC%8F"},"13.3. \u5de5\u4f5c\u8fc7\u7a0b and \u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#134-%E7%BA%BF%E7%A8%8B%E4%B8%8A%E4%B8%8B%E6%96%87%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8-%E6%89%93%E4%B9%B1%E5%B1%82%E7%BA%A7%E7%BB%93%E6%9E%84"},"13.4. \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668-\u6253\u4e71\u5c42\u7ea7\u7ed3\u6784")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#135-%E5%80%9F%E5%8A%A9-classloader-%E5%AE%9E%E7%8E%B0%E7%B1%BB%E9%9A%94%E7%A6%BB"},"13.5. \u501f\u52a9 classloader \u5b9e\u73b0\u7c7b\u9694\u79bb")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#136-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BC%82%E5%B8%B8"},"13.6. \u7c7b\u52a0\u8f7d\u76f8\u5173\u7684\u5f02\u5e38")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#137-%E8%87%AA%E5%AE%9A%E4%B9%89-classloader%E5%8A%A0%E8%BD%BD%E7%BD%91%E7%BB%9C%E4%B8%8A%E7%9A%84-class"},"13.7. \u81ea\u5b9a\u4e49 classloader\u52a0\u8f7d\u7f51\u7edc\u4e0a\u7684 class")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#14-%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98"},"14. \u8def\u5f84\u95ee\u9898"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#141-%E8%8E%B7%E5%8F%96-classpath-%E5%92%8C-%E7%B3%BB%E7%BB%9F%E5%B1%9E%E6%80%A7-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"},"14.1. \u83b7\u53d6 classpath \u548c \u7cfb\u7edf\u5c5e\u6027 \u73af\u5883\u53d8\u91cf")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#15-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"},"15. \u6570\u636e\u7c7b\u578b"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#151-%E5%90%84%E4%B8%AA%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%8C%83%E5%9B%B4"},"15.1. \u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u8303\u56f4")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#152-double-%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4"},"15.2. double \u7c7b\u578b\u7684\u52a0\u51cf\u4e58\u9664")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#16-%E6%8E%A7%E5%88%B6%E5%8F%B0%E5%91%BD%E4%BB%A4"},"16. \u63a7\u5236\u53f0\u547d\u4ee4"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#161-%E6%89%93-jar-%E5%8C%85"},"16.1. \u6253 jar \u5305")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#162-%E7%94%9F%E6%88%90%E6%B3%A8%E9%87%8A%E6%96%87%E6%A1%A3-javadoc"},"16.2. \u751f\u6210\u6ce8\u91ca\u6587\u6863 javadoc")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#163-%E7%BC%96%E8%AF%91%E5%92%8C%E5%8F%8D%E7%BC%96%E8%AF%91"},"16.3. \u7f16\u8bd1\u548c\u53cd\u7f16\u8bd1")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#17-%E9%87%8D%E8%A6%81%E7%9A%84%E5%AF%B9%E8%B1%A1"},"17. \u91cd\u8981\u7684\u5bf9\u8c61"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#171-object"},"17.1. Object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#172-string"},"17.2. String")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#18-%E5%AD%97%E8%8A%82%E7%A0%81%E7%BC%96%E8%BE%91%E6%8A%80%E6%9C%AF"},"18. \u5b57\u8282\u7801\u7f16\u8f91\u6280\u672f"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#181-javassist"},"18.1. javassist")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#19-%E5%89%8D%E6%B2%BF"},"19. \u524d\u6cbf"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#191-graalvm"},"19.1. graalvm")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#192-vertx"},"19.2. vertx")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#193-micronaut"},"19.3. Micronaut")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#194-quarkus"},"19.4. Quarkus")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#20-%E6%8B%BE%E9%81%97"},"20. \u62fe\u9057"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#201-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-regex"},"20.1. \u6b63\u5219\u8868\u8fbe\u5f0f regex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#202-%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A%E5%92%8C%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A"},"20.2. \u9759\u6001\u7ed1\u5b9a\u548c\u52a8\u6001\u7ed1\u5b9a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#203-%E9%87%8D%E8%BD%BD-and-%E9%87%8D%E5%86%99"},"20.3. \u91cd\u8f7d and \u91cd\u5199")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#204-java-%E5%80%BC%E4%BC%A0%E9%80%92-or-%E5%BC%95%E7%94%A8%E4%BC%A0%E9%80%92"},"20.4. java \u503c\u4f20\u9012 or \u5f15\u7528\u4f20\u9012")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#205-%E8%AE%BF%E9%97%AE%E4%BF%AE%E9%A5%B0%E7%AC%A6-public-protect-default-private"},"20.5. \u8bbf\u95ee\u4fee\u9970\u7b26 public-protect-default-private")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#206-getcontextclassloadergetclassloader-%E5%8C%BA%E5%88%AB"},"20.6. getcontextclassloader&getclassloader \u533a\u522b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#207-getter-%E5%92%8C-setter-%E5%AD%98%E5%9C%A8%E7%9A%84%E6%84%8F%E4%B9%89"},"20.7. getter \u548c setter \u5b58\u5728\u7684\u610f\u4e49")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#208-%E4%B8%BA%E4%BB%80%E4%B9%88-service-%E5%8F%AA%E6%9C%89%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%8E%B0%E4%B9%9F%E9%9C%80%E8%A6%81%E4%B8%80%E4%B8%AA%E6%8E%A5%E5%8F%A3"},"20.8. \u4e3a\u4ec0\u4e48 service \u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e5f\u9700\u8981\u4e00\u4e2a\u63a5\u53e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#209-static-%E5%85%B3%E9%94%AE%E5%AD%97"},"20.9. static \u5173\u952e\u5b57")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2010-%E5%86%85%E9%83%A8%E7%B1%BB-or-%E9%9D%99%E6%80%81%E5%86%85%E9%83%A8%E7%B1%BB"},"20.10. \u5185\u90e8\u7c7b or \u9759\u6001\u5185\u90e8\u7c7b"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#20101-%E5%86%85%E9%83%A8%E7%B1%BB"},"20.10.1. \u5185\u90e8\u7c7b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#20102-%E9%9D%99%E6%80%81%E5%86%85%E9%83%A8%E7%B1%BB"},"20.10.2. \u9759\u6001\u5185\u90e8\u7c7b")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2011-java-%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E9%A1%BA%E5%BA%8F"},"20.11. Java \u7c7b\u521d\u59cb\u5316\u987a\u5e8f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2012-random-%E9%9A%8F%E6%9C%BA%E6%95%B0"},"20.12. Random-\u968f\u673a\u6570")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2013-%E4%BD%8D%E8%BF%90%E7%AE%97"},"20.13. \u4f4d\u8fd0\u7b97")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2014-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8C%85%E5%90%8D%E9%83%BD%E5%B0%8F%E5%86%99"},"20.14. \u4e3a\u4ec0\u4e48\u5305\u540d\u90fd\u5c0f\u5199")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2015-%E5%A4%84%E7%90%86-unicode-%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98"},"20.15. \u5904\u7406 unicode \u7f16\u7801\u95ee\u9898")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2016-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%86%8D%E6%AC%A1%E8%B5%8B%E5%80%BC%E7%BB%99%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F"},"20.16. \u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u518d\u6b21\u8d4b\u503c\u7ed9\u5c40\u90e8\u53d8\u91cf")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#2017-%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AE%9A%E4%B9%89%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E4%B8%8D%E7%94%A8%E8%B5%8B%E5%80%BC%E8%80%8C%E5%AE%9A%E4%B9%89%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E5%BF%85%E9%A1%BB%E8%B5%8B%E5%80%BC"},"20.17. \u4e3a\u4ec0\u4e48\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u4e0d\u7528\u8d4b\u503c\u800c\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#21-%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE"},"21. \u5f00\u6e90\u9879\u76ee"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#211-%E5%8D%9A%E5%AE%A2-cms-%E7%B3%BB%E7%BB%9F"},"21.1. \u535a\u5ba2 cms \u7cfb\u7edf")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#22-java-agent"},"22. java agent"))),(0,r.kt)("h1",{id:"1-\u5404\u4e2a\u7248\u672c"},"1. \u5404\u4e2a\u7248\u672c"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'jdk5: \u81ea\u52a8\u88c5\u7bb1/\u62c6\u7bb1, \u679a\u4e3e, \u9759\u6001\u5bfc\u5165(\u4e0d\u5b9e\u7528), \u53ef\u53d8\u957f\u53c2\u6570("String... params"), \u6cdb\u578b, for-each \u5faa\u73af, \u5e76\u53d1\u5e93(Concurrent)')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"jdk6: compiler api(\u52a8\u6001\u7f16\u8bd1\u8fd0\u884c\u6587\u672c\u5f62\u5f0f\u7684 Java \u4ee3\u7801), console \u589e\u5f3a(\u7f16\u5199\u547d\u4ee4\u884c\u7a0b\u5e8f, \u4e0d\u5b9e\u7528), Desktop \u7c7b(\u6253\u5f00\u6d4f\u89c8\u5668, \u6587\u4ef6\u7b49\u7b49\u65b9\u6cd5)\u548c SystemTray \u7c7b, Http server api, script engine")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'jdk7: switch \u5bf9 String \u652f\u6301(\u679a\u4e3e\u4e5f\u652f\u6301), \u521b\u5efa\u6cdb\u578b\u65f6\u7684\u7c7b\u578b\u63a8\u65ad(\u4ece\u5b9a\u4e49\u7684\u53d8\u91cf\u63a8\u65ad\u6784\u9020\u51fd\u6570\u4e2d\u7684\u6cdb\u578b), \u6355\u83b7\u591a\u79cd\u5f02\u5e38(... catch (IOException | SQLException e) ...), \u6570\u503c\u7c7b\u578b\u652f\u6301"',"_",'"(\u5982\u5b9a\u4e49 10s, \u4f46\u662f\u5355\u4f4d\u662f\u6beb\u79d2: int mills = 10_000), try_auto_close_resource')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"jdk8: lambda express/\u51fd\u6570\u5f0f\u63a5\u53e3(@FunctionalInterface), \u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5, \u63a5\u53e3\u9759\u6001\u65b9\u6cd5, base64 \u589e\u5f3a, Datetime \u589e\u5f3a, Optional(\u9632 null), Stream,"))),(0,r.kt)("p",null,"long-term support: jdk8, 11, 17"),(0,r.kt)("h1",{id:"2-\u6ce8\u91ca"},"2. \u6ce8\u91ca"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'main() {\n    // \u4e0b\u9762\u8fd9\u884c\u4f1a\u88ab\u6267\u884c\n    // \\u000d sysout("hehe")\n}\n\n\n')),(0,r.kt)("h1",{id:"3-\u53cd\u5c04reflect"},"3. \u53cd\u5c04(reflect)"),(0,r.kt)("h2",{id:"31-\u53cd\u5c04\u7684-api"},"3.1. \u53cd\u5c04\u7684 api"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Class clazz1 = Class.forName("cn.itcast.reflect.Person");\nClass clazz2 = Person.class;\nClass clazz3 = new Person(110,"\u72d7\u5a03").getClass();\n\nConstructor[] constructors = clazz.getConstructors();// \u83b7\u53d6\u516c\u5f00\u7684\nConstructor[] constructors =  clazz.getDeclaredConstructors(); // \u83b7\u53d6\u6240\u6709\nConstructor constructor = clazz.getConstructor(int.class,String.class);// \u6307\u5b9a\nconstructor.setAccessible(true);\nPerson p = (Person) constructor.newInstance(999,"xiaoyu");\n\nMethod[] methods = clazz.getMethods();//\u516c\u5f00\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4e0d\u5305\u542b\u7236\u7c7b\u7684\u65b9\u6cd5, \u6ca1\u65b9\u6cd5, \u5219\u8fd4\u56de\u4e00\u4e2a\u957f\u5ea6\u4e3a 0 \u7684\u6570\u7ec4\nMethod m =clazz.getDeclaredMethod("sleep",int.class);// \u6240\u6709\nMethod m = clazz.getMethod("eat", int.class);//\u83b7\u53d6\u6307\u5b9a\nm.setAccessible(true);\nm.invoke(null, 6);\nMethod m = clazz.getMethod("sum", int[].class);\nm.invoke(p,new int[]{12,5,9});\n\nField[] fields = clazz.getDeclaredFields();// \u6240\u6709\nField field = clazz.getDeclaredField("id");// \u6307\u5b9a\nfield.setAccessible(true);\nfield.set(p, 110);\n\ngetDeclaredAnnotation //getDeclaredAnnotation\uff08s\uff09\uff1a\u8fd4\u56de\u76f4\u63a5\u5b58\u5728\u4e8e\u6b64\u5143\u7d20\u4e0a\u7684\u6240\u6709\u6ce8\u91ca, \u5ffd\u7565\u7ee7\u627f\u7684\u6ce8\u91ca\ngetAnnotation\uff08s\uff09\uff1a\u8fd4\u56de\u6b64\u5143\u7d20\u4e0a\u5b58\u5728\u7684\u6240\u6709\u6ce8\u91ca\n\n')),(0,r.kt)("h2",{id:"32-\u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236"},"3.2. \u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n/*\u4e8b\u4ef6\u5904\u7406\u7c7b*/\npublic class EventHandler {\n    //\u4e8b\u4ef6\u6e90\n    private Object sender;\n    //\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u540d\u79f0\uff08\u7528\u4e8e\u53cd\u5c04\uff09\n    private String callback;\n    \n    public EventHandler(Object sender, String callback){\n        this.sender = sender;\n        this.callback = callback;\n    }\n    \n    //\u4e8b\u4ef6\u89e6\u53d1\n    public void emit(){\n    Class senderType = this.sender.getClass();\n    try {\n        //\u83b7\u53d6\u5e76\u8c03\u7528\u4e8b\u4ef6\u6e90sender\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\n        Method method = senderType.getMethod(this.callback);\n        method.invoke(this.sender);\n        } catch (Exception e2) {\n            e2.printStackTrace();\n        }\n    }\n}\n\n\n/*\u4e8b\u4ef6\u6e90*/\npublic class Button(){\n    /*\u53ef\u4ee5\u5728\u6b64\u8bbe\u7f6eButton\u7c7b\u7684\u76f8\u5173\u5c5e\u6027\uff0c\u6bd4\u5982\u540d\u5b57\u7b49*/\n    private String name;\n    ...\n    \n    \n    //\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\n    public void onClick(){\n        System.out.println("you just clicked me!");\n    }\n}\n    \n    \n/*\u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8\u673a\u5236*/\nButton b = new Button();\nif(/*\u6536\u5230\u6309\u94ae\u70b9\u51fb\u4fe1\u53f7*/){\n    EventHandler e = new EventHandler(b, "onClick");\n    e.emit();\n}\n')),(0,r.kt)("p",null,"\u8fd8\u6709\u4e00\u79cd\u65b9\u5f0f: \u89c2\u5bdf\u8005\u6a21\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/*\u4e8b\u4ef6\u7c7b*/\npublic Event {\n    //\u4e0e\u4e8b\u4ef6\u76f8\u5173\u7684\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\n    public ArrayList<Callback> callbackList;\n    \n    //\u4e8b\u4ef6\u89e6\u53d1\u51fd\u6570\n    public void emit(){\n        for(Callback cb : callbackList){\n            cb.run();\n        }\n    }\n    \n    //\u6ce8\u518c\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\n    public registerCallback(Callback cb){\n        callbackList.add(cb);\n    }\n}\n\n/*\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u7c7b*/\npublic interface Callback {\n    void run();\n}\n\npublic OnClick implements Callback {\n    //\u51fd\u6570\n    public void run(){\n        System.out.println("you just clicked me!");\n    }\n    \n    \n/*\u5b9e\u73b0\u4e8b\u4ef6\u9a71\u52a8*/\nEvent e = new Event();  \n//\u5c06OnClick\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u6ce8\u518c\u5230\u4e8b\u4ef6\u4e2d\ne.registerCallback(new OnClick()); \n//\u89e6\u53d1\u4e8b\u4ef6\ne.emit();\n')),(0,r.kt)("h1",{id:"4-java-\u5e76\u53d1-\u591a\u7ebf\u7a0b"},"4. java \u5e76\u53d1-\u591a\u7ebf\u7a0b"),(0,r.kt)("p",null,"{% post_link java-concurrent \ud83d\udcda java-concurrent-reading-note %}"),(0,r.kt)("p",null,"(\u89c1 java-concurrent)"),(0,r.kt)("h1",{id:"5-\u96c6\u5408"},"5. \u96c6\u5408"),(0,r.kt)("h2",{id:"51-\u96c6\u5408\u7684\u4f53\u7cfb"},"5.1. \u96c6\u5408\u7684\u4f53\u7cfb"),(0,r.kt)("p",null,"(\u6ce8: \u96c6\u5408\u548c\u6570\u7ec4\u4e2d\u5b58\u653e\u7684\u90fd\u662f\u5bf9\u8c61\u7684\u5f15\u7528\u800c\u975e\u5bf9\u8c61\u672c\u8eab;; \u4ece\u96c6\u5408\u4e2d\u53d6\u51fa\u5143\u7d20\u662f\u4f5c\u4e3a Object \u53d6\u51fa, \u9664\u975e\u6cdb\u578b\u6307\u5b9a\u4e86\u7c7b\u578b)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Collection \u5355\u5217\u96c6\u5408\u7684\u6839\u63a5\u53e3"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"List \u5982\u679c\u662f\u5b9e\u73b0\u4e86 List \u63a5\u53e3\u7684\u96c6\u5408\u7c7b\uff0c \u5177\u5907\u7684\u7279\u70b9\uff1a\u6709\u5e8f\uff0c\u91cd\u590d\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ArraryList \u5e95\u5c42 \u662f\u4f7f\u7528\u4e86 Object \u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u7279\u70b9\uff1a \u67e5\u8be2\u901f\u5ea6\u5feb\uff0c\u589e\u5220\u6162\u3002(\u56e0\u4e3a\u589e\u5220\u65f6\u5019\u4f1a\u6d89\u53ca\u5230\u6570\u7ec4\u6269\u5bb9, \u62f7\u8d1d\u5143\u7d20\u6240\u4ee5\u589e\u5220\u6162; \u6570\u7ec4\u53ef\u4ee5\u6309\u7167 index \u67e5\u627e\u5143\u7d20, \u6240\u4ee5\u67e5\u627e\u5feb)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"LinkedList \u5e95\u5c42\u662f\u4f7f\u7528\u4e86\u53cc\u5411\u94fe\u8868\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u7684\uff0c \u7279\u70b9\uff1a \u67e5\u8be2\u901f\u5ea6\u6162\uff0c\u589e\u5220\u5feb\u3002(\u589e\u5220\u53ea\u9700\u8981\u6539\u53d8\u67d0\u4e00\u4e2a\u5143\u7d20\u7684 next \u5f15\u7528\u4f7f\u5176\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20, \u6240\u4ee5\u589e\u5220\u5feb; \u67e5\u8be2\u65f6\u5019\u9700\u8981\u4e00\u4e2a\u4e2a\u904d\u5386, \u6240\u4ee5\u67e5\u8be2\u6162)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Vector \u5b9e\u73b0\u4e0e ArrayList \u662f\u4e00\u81f4\uff0c\u4f46\u662f\u662f\u7ebf\u7a0b\u5b89\u5168 \u7684\uff0c\u64cd\u4f5c\u6548\u7387\u4f4e\u3002")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Set \u5982\u679c\u662f\u5b9e\u73b0\u4e86 Set \u63a5\u53e3\u7684\u96c6\u5408\u7c7b\uff0c\u5177\u5907\u7684\u7279\u70b9\uff1a\u65e0\u5e8f\uff0c\u4e0d\u53ef\u91cd\u590d\u3002"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"HashSet \u5e95\u5c42\u662f\u57fa\u4e8e HashMap \u5b9e\u73b0 (\u54c8\u5e0c\u8868)\uff0c \u7279\u70b9\uff1a\u5b58\u53d6\u901f\u5ea6\u5feb\u3002\u3010","*","\u3011\u6dfb\u52a0\u5143\u7d20\u539f\u7406: \u8c03\u7528\u5143\u7d20\u7684 hashcode() \u5f97\u5230\u54c8\u5e0c\u7801, \u8fdb\u800c\u8fd0\u7b97\u5f97\u5230\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e. ","[\u4e24\u79cd\u60c5\u51b5]"," \u5982\u679c\u8be5\u4f4d\u7f6e\u8fd8\u6ca1\u6709\u5b58\u4efb\u4f55\u5143\u7d20, \u90a3\u4e48\u76f4\u63a5\u5b58\u50a8; \u5982\u679c\u8be5\u4f4d\u7f6e\u6709\u5143\u7d20\u4e86\u5219\u8c03\u7528\u5143\u7d20\u7684 equals() \u548c\u76ee\u6807\u5143\u7d20\u6bd4\u5bf9, ","[\u53c8\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5]",": \u5982\u679c\u76f8\u540c, \u4e0d\u5141\u8bb8\u5b58\u50a8; \u5982\u679c\u4e0d\u540c, \u5c31\u53ef\u4ee5\u5b58\u50a8"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"LinkedHashSet \u5185\u90e8\u4f7f\u7528 LindedHashMap, \u6709\u5e8f, \u4e0d\u548c\u91cd\u590d"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"TreeSet \u5e95\u5c42\u662f\u4f7f\u7528\u4e86\u7ea2\u9ed1\u6811\uff08\u4e8c\u53c9\u6811\uff09\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u7684\u3002 \u7279\u70b9\uff1a \u5bf9\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u5b58\u50a8. \u5143\u7d20\u5fc5\u987b\u662f\u53ef\u6bd4\u8f83\u7684, \u5982\u679c\u4e0d\u53ef\u6bd4\u8f83, \u9700\u8981\u5b9e\u73b0 Comparable \u63a5\u53e3(\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u5728\u521b\u5efa Treeset \u5bf9\u8c61\u7684\u65f6\u5019\u4f20\u5165\u6bd4\u8f83\u5668(\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u5b9e\u73b0 COmparator \u63a5\u53e3), \u63a8\u8350, \u56e0\u4e3a\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u590d\u7528)")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Queue FIFO-\u5148\u8fdb\u5148\u51fa"),(0,r.kt)("p",{parentName:"li"},"\u5e38\u7528\u65b9\u6cd5:"),(0,r.kt)("p",{parentName:"li"},"\ud83d\udccc add \u589e\u52a0\u4e00\u4e2a\u5143\u7d22 \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u629b\u51fa\u4e00\u4e2a IIIegaISlabEepeplian \u5f02\u5e38\n\ud83d\udccc remove \u79fb\u9664\u5e76\u8fd4\u56de\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u629b\u51fa\u4e00\u4e2a NoSuchElementException \u5f02\u5e38\n\ud83d\udccc element \u8fd4\u56de\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u629b\u51fa\u4e00\u4e2a NoSuchElementException \u5f02"),(0,r.kt)("p",{parentName:"li"},"\ud83d\udccc offer \u5c06\u5143\u7d20\u8ffd\u52a0\u5230\u961f\u5217\u672b\u5c3e\u5e76\u8fd4\u56de true \u5982\u679c\u961f\u5217\u5df2\u6ee1\uff0c\u5219\u8fd4\u56de false\n\ud83d\udccc poll \u5220\u9664\u5e76\u8fd4\u95ee\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de null\n\ud83d\udccc peek \u8fd4\u56de\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20\u4e0d\u5220\u9664 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de nul"),(0,r.kt)("p",{parentName:"li"},"\ud83d\udccc put \u6dfb\u52a0\u4e00\u4e2a\u5143\u7d20 \u5982\u679c\u961f\u5217\u6ee1\uff0c\u5219\u963b\u585e\n\ud83d\udccc take \u79fb\u9664\u5e76\u8fd4\u56de\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20 \u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u963b\u585e"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"  - Deque \u53cc\u5411\u961f\u5217, \u5b50\u63a5\u53e3, \u5934\u5c3e\u90fd\u53ef\u4ee5poll, offer; \u5982\u679c\u5c06Deque\u9650\u5236\u4e3a\u53ea\u80fd\u4ece\u4e00\u7aef\u5165\u961f\u548c\u51fa\u961f\uff0c\u5219\u53ef\u5b9e\u73b0\u6808\u7684\u6570\u636e\u7ed3\u6784\n\n  - BlockingQueue \u963b\u585e\u961f\u5217; \u8fdb\u51fa\u4e24\u7aef\u7684thread\u4f1a\u901a\u8fc7\u963b\u585e\u6765\u5b9e\u73b0\u5e73\u8861, \u51cf\u5c11\u4e24\u8fb9\u7684\u5904\u7406\u901f\u5ea6\u5dee\u8ddd\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Map key \u552f\u4e00\u4e0d\u53ef\u91cd\u590d, value \u53ef\u91cd\u590d"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"HashMap \ud83d\udccc \u5e95\u5c42\u662f\u4e00\u4e2a Entry \u6570\u7ec4, \u6bcf\u4e2a entry \u662f\u4e00\u4e2a\u94fe\u8868, \u5b58\u50a8\u65f6, \u4f1a\u6839\u636e hashCode() \u6765\u51b3\u5b9a\u5728\u6570\u7ec4\u4e2d\u7684 index, \u6839\u636e equals() \u51b3\u5b9a \u5728\u8be5\u4f4d\u7f6e\u4e0a\u94fe\u8868\u4e2d\u7684\u4f4d\u7f6e; \ud83d\udccc \u7ebf\u7a0b\u4e0d\u540c\u6b65, \u89e3\u51b3\u65b9\u6848\u6709 Hashtable \u6216\u8005 Collections.synchronizedMap(hashMap)\uff0c\u8fd9\u4e24\u79cd\u65b9\u5f0f\u57fa\u672c\u90fd\u662f\u5bf9\u6574\u4e2a hash \u8868\u7ed3\u6784\u505a\u9501\u5b9a\u64cd\u4f5c\u7684\uff0c\u8fd9\u6837\u5728\u9501\u8868\u7684\u671f\u95f4\uff0c\u522b\u7684\u7ebf\u7a0b\u5c31\u9700\u8981\u7b49\u5f85\u4e86\uff0c\u65e0\u7591\u6027\u80fd\u4e0d\u9ad8\u3002; \ud83d\udccc Key \u548c value \u53ef\u4ee5\u4e3a null;"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"LinkedHashMap \u57fa\u4e8e\u54c8\u5e0c\u8868\u4f46\u662f\u5185\u90e8\u4e5f\u7ef4\u6301\u4e86\u4e00\u4e2a\u53cc\u5411\u94fe\u8868,\u53ef\u4ee5\u4fdd\u6301\u987a\u5e8f(\u4fdd\u7559\u4e86\u63d2\u5165\u987a\u5e8f, \u6240\u4ee5\u8f93\u51fa\u987a\u5e8f\u548c\u8f93\u5165\u987a\u5e8f\u76f8\u540c)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"TreeMap \u5e95\u5c42\u4f7f\u7528\u4e8c\u53c9\u6811\u5b9e\u73b0 \u53ef\u4ee5\u6839\u636e\u952e\u6392\u5e8f(\u9ed8\u8ba4\u5347\u5e8f) \u3010","*","\u3011")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"HashTable \u5b58\u50a8\u7684\u5185\u5bb9\u662f\u952e\u503c\u5bf9(key-value)\u6620\u5c04\u3002\u5b83\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002\u5b83\u7684 key\u3001value \u90fd\u4e0d\u53ef\u4ee5\u4e3a null"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Properties \u952e\u503c\u5bf9 String--String \u5982\u679c\u4f7f\u7528\u4e86\u4e2d\u6587, \u53ea\u80fd\u4f7f\u7528\u5b57\u7b26\u6d41, \u4e0d\u80fd\u4f7f\u7528\u5b57\u8282\u6d41(\u56e0\u4e3a\u5b57\u8282\u6d41\u4f7f\u7528 iso8859-1 \u7f16\u7801)")))))),(0,r.kt)("h2",{id:"52-\u8bfb\u6e90\u7801"},"5.2. \u8bfb\u6e90\u7801"),(0,r.kt)("p",null,"references: ",(0,r.kt)("a",{parentName:"p",href:"http://wiki.jikexueyuan.com/project/java-collection/hashmap.html"},"http://wiki.jikexueyuan.com/project/java-collection/hashmap.html")),(0,r.kt)("h3",{id:"521-\u6570\u7ec4\u548c\u94fe\u8868\u533a\u522b"},"5.2.1. \u6570\u7ec4\u548c\u94fe\u8868\u533a\u522b"),(0,r.kt)("p",null,"\u6570\u7ec4\u9759\u6001\u5206\u914d\u5185\u5b58(\u5373, \u6570\u7ec4\u4e00\u65e6\u5b9a\u4e49\u5c31\u5185\u5b58\u4e0d\u53ef\u53d8\u52a8, \u8981\u4fee\u6539\u5c31\u5fc5\u987b\u6d89\u53ca\u5230\u6570\u7ec4\u7684\u590d\u5236)\uff0c\u94fe\u8868\u52a8\u6001\u5206\u914d\u5185\u5b58\uff1b"),(0,r.kt)("p",null,"\u6570\u7ec4\u5728\u5185\u5b58\u4e2d\u8fde\u7eed\uff0c\u94fe\u8868\u4e0d\u8fde\u7eed\uff1b"),(0,r.kt)("p",null,"\u6570\u7ec4\u5229\u7528\u4e0b\u6807\u5b9a\u4f4d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u94fe\u8868\u901a\u8fc7\u904d\u5386\u5b9a\u4f4d, \u5b9a\u4f4d\u5143\u7d20\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\uff1b"),(0,r.kt)("p",null,"\u6570\u7ec4\u63d2\u5165\u6216\u5220\u9664\u5143\u7d20\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(n)\uff0c\u94fe\u8868\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u3002"),(0,r.kt)("h3",{id:"522-\u5355\u94fe\u8868\u548c\u53cc\u94fe\u8868\u533a\u522b"},"5.2.2. \u5355\u94fe\u8868\u548c\u53cc\u94fe\u8868\u533a\u522b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u76ee\u524d\u5e02\u573a\u5e94\u7528\u4e0a\u5355\u94fe\u8868\u7684\u5e94\u7528\u8981\u6bd4\u53cc\u94fe\u8868\u7684\u5e94\u7528\u8981\u5e7f\u6cdb\u7684\u591a\u5462\uff1f \u53cc\u94fe\u8868\u8282\u70b9\u9700\u8981\u591a\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'\u5b58\u50a8\u6548\u7387: \u5355\u94fe\u8868\u662f "\u65f6\u95f4\u6362\u7a7a\u95f4", \u53cc\u94fe\u8868"\u7a7a\u95f4\u6362\u65f6\u95f4", \u6bd4\u5982: \u8003\u8651\u94fe\u8868\u7684 delete \u64cd\u4f5c:'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5bf9\u4e8e\u5355\u94fe\u8868, \u5148\u5b9a\u4f4d\u5f85\u5220\u9664 node, \u5f97\u5230\u5f85\u5220\u9664 node \u7684 pre_node, \u4fee\u6539 pre_node \u7684 next \u6307\u9488;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u800c\u5f97\u5230 pre_node y \u6709\u4e24\u79cd\u65b9\u6cd5: \ud83d\udccc \u5b9a\u4f4d node_to_delete \u65f6\u5019\u4e00\u8def\u4fdd\u5b58\u5b83\u7684\u524d\u4e00\u4e2a node; \ud83d\udccc \u5b9a\u4f4d\u5230 node_to_delete \u540e\u91cd\u65b0\u904d\u5386\u94fe\u8868\u627e\u5230 \u8fd9\u4e2a pre_node; \u5b9e\u9645\u4e0a \u8fd9\u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u7387\u662f\u4e00\u6837\u7684\uff0c\u6307\u9488\u7684\u603b\u7684\u79fb\u52a8\u64cd\u4f5c\u90fd\u4f1a\u6709 2","*","i \u6b21\u3002\u800c\u5982\u679c\u7528\u53cc\u5411\u94fe\u8868\uff0c\u5219\u4e0d\u9700\u8981\u5b9a\u4f4d pre_node\u3002\u56e0\u6b64\u6307\u9488\u603b\u7684\u79fb\u52a8\u64cd\u4f5c\u4e3a i \u6b21")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u518d\u8003\u8651 find \u64cd\u4f5c: \u53ef\u4ee5\u501f\u7528\u4e8c\u5206\u6cd5\u7684\u601d\u8def\uff0c\u4ece head\uff08\u9996\u8282\u70b9\uff09\u5411\u540e\u67e5\u627e\u64cd\u4f5c\u548c last\uff08\u5c3e\u8282\u70b9\uff09\u5411\u524d\u67e5\u627e\u64cd\u4f5c\u540c\u6b65\u8fdb\u884c\uff0c\u8fd9\u6837\u53cc\u94fe\u8868\u7684\u6548\u7387\u53ef\u4ee5\u63d0\u9ad8\u4e00\u500d"))),(0,r.kt)("h3",{id:"523-hashmap"},"5.2.3. HashMap"),(0,r.kt)("p",null,"HashMap\u5bf9\u8c61\u7684key\u3001value\u503c\u5747\u53ef\u4e3anull\u3002 HahTable\u5bf9\u8c61\u7684key\u3001value\u503c\u5747\u4e0d\u53ef\u4e3anull\u3002"),(0,r.kt)("p",null,"\u7ebf\u7a0b\u4e0d\u5b89\u5168\u4f53\u73b0\u5728\u54ea\u91cc? ",(0,r.kt)("a",{parentName:"p",href:"https://www.zhihu.com/question/28516433"},"https://www.zhihu.com/question/28516433")),(0,r.kt)("p",null,"TODO"),(0,r.kt)("p",null,"jdk1.7 \u793a\u610f\u56fe: (",(0,r.kt)("a",{parentName:"p",href:"https://www.draw.io/?lightbox=1&highlight=0000ff&edit=_blank&layers=1&nav=1&title=Untitled%20Diagram.xml#R3Vrfb9s2EP5rCGwPDURRkqlHyVbWhxUo0AHbngbFYm2tsmjIdOL0r98df1hSJMdOaztZgCAmT8fj3XffHUUnhE1Xu9%2BafL38JAtREd8rdoTNiO%2FTwI%2FgAyWPRsKpZwSLpiysUiv4Un4XVujUtmUhNj1FJWWlynVfOJd1LeaqJ8ubRj701b7Kqr%2FrOl%2BIgeDLPK%2BG0j%2FLQi1tFP6klX8U5WLpdqZRbJ6scqdsI9ks80I%2BdEQsI2zaSKnMaLWbigrBc7iYdbcHnu4da0StTlngMnGfV1sbnHVMPbpoH5alEl%2FW%2BRznD5BRwtKlWlUwozCEENb4ZLVbYLZv7vJNOb%2BZV3Jb%2FAOQwaeye4hGid1BR%2Bk%2BfOCNkCuhmkdQsQtCLzRLLGUYswg%2BtAmIrWjZwT6ystymfLG33KICAwvMAZDCq4DE0pW8z%2B%2B0RVzTiE35vTuXKledOVSV6M5FUXanlvwdyRnSALDf9BNBPTZIBPXjYSYmwRkycTwRjdzWhUB9D0I%2BkpYzIEIdER0x%2BZCY1L8QM2kwiF8U0KrsVDZqKReyzquslaZ9hDpoiF2p%2FkIxpNjM%2FrZK%2FwqlHm0fzrdKgqi1%2FbuU6x6e6MLzaILHctvMrZYlkMqbhXBabBz0RlS5Ku%2F75n8GQfb2GAW97vUYFbw9PNjkNSvMOw7IT5TcZQuLDwsrvlJd8ZfwiF6nU%2Ft9HvmTIY%2F4CI3Cc9DohJPrzdIoHunPB6A%2BO4%2Fi%2FwGPvCvyiL59PGhwRTxOuL%2B82bqiYy8%2B4ZUKi77ozec6TPInP9ahWXgGPE645L06Hid2mrPgMey8WY02wpSEswE0EKTqx9%2B9vmJZrWVZK%2B2QscBSrKiNKS5ckFflooZxJb6iKUSuhLtxYsUKqy3dAN5lvfhDl96H4Dw4h4z1cGZBNMA5HMHZP0MHm5zQwOoiwW%2BtYDav8s2mnD%2B5t2FezMUtYtwJ8O5GbzzfzT%2BLpgTvRGPzcXrP6vYnPg7kEaCc7OQuZnf4jJzpnDSHbgLOhOmudpXf%2BdrrmCH2xJAJeWBIJ3Mf9mlfWQxP7Bpr5V0VEA1oH89w2KiCCxWQK5h3DbDPj3eoiwE8fFO4286%2FiXcG8b6ZuNdYf8jhSx0Co6dAVCECRXkPw4XSQRoRhF872cd8s%2FwErx7gRRaSNCFxqAeUcJ9kMeET%2FMkmJA5IwkkWkJQTiNQMkgQW9o51eBKhjdTDRWlKeKAlM5KEetEtjmGHZEZijo94rO2BzhTHuFWCq3zvm3j8YCIy3iW3JAUF%2BA2aU%2B0mGGHoJq4FHfAIDNKO%2FRDjeNbxnm2OkSdUuwPuR%2B1uFjvIRBe%2BjngE6CPYa1%2BmGC46nul9JziArTG4jPBwGIrYe91D6olkCXl12TDYw%2FKIpEwbzPSmIdrHGEPEL%2BFjqTNozVrT%2BAio4GsPp6jvTx2GkSYNGMnQIAZ169I%2BI1wbgQHsbsymSb0FGqMfnMQm9SlaR1Zk1umneexk%2F8l%2Bl8oQ1653Pd5HDFABX7BMqFYK0W%2BA%2BbnQ90DGyF1IMioD6fgvpiv%2B2poHS7g0QmNQf8hOMM%2BeIQe%2BkWl%2BjJADsuxrJnvDvUcSfcjSgWxfBH1DCK7LYobdoYXGMMYUfGQ148gpDDOil6SjoevWk6QuofoR9ineSb9zoN0aiklXCUoSknidLQYGXwbOezoVqdc%2FFYNo5FRkI8fiD3z5DtP2L9%2FmVbv9%2FwGW%2FQc%3D"},"online"),")"),(0,r.kt)("p",null,"\u5f53 Hash \u78b0\u649e\u4e25\u91cd\u65f6\uff0c\u5728 bucket \u4e0a\u5f62\u6210\u7684\u94fe\u8868\u4f1a\u53d8\u7684\u8d8a\u6765\u8d8a\u957f\uff0c\u8fd9\u6837\u5728\u67e5\u8be2\u65f6\u7684\u6548\u7387\u5c31\u4f1a\u8d8a\u6765\u8d8a\u4f4e\uff1b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(N), 1.8 \u5c06 bucket \u7531\u539f\u6765\u7684\u5355\u7eaf LinkedList \u52a0\u5165\u4e86 \u7ea2\u9ed1\u6811 \u7684\u5b9e\u73b0"),(0,r.kt)("p",null,"jdk1.8 \u793a\u610f\u56fe:"),(0,r.kt)("p",null,"\u521d\u59cb\u5bb9\u91cf"),(0,r.kt)("p",null,"\u52a0\u8f7d\u56e0\u5b50(Float loadFactor): \u7ed9\u5b9a\u7684\u9ed8\u8ba4\u5bb9\u91cf\u4e3a 16\uff0c\u8d1f\u8f7d\u56e0\u5b50\u4e3a 0.75\u3002Map \u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u4e0d\u65ad\u7684\u5f80\u91cc\u9762\u5b58\u653e\u6570\u636e\uff0c\u5f53\u6570\u91cf\u8fbe\u5230\u4e86 16 ","*"," 0.75 = 12 \u5c31\u9700\u8981\u5c06\u5f53\u524d 16 \u7684\u5bb9\u91cf\u8fdb\u884c\u6269\u5bb9\uff0c\u800c\u6269\u5bb9\u8fd9\u4e2a\u8fc7\u7a0b\u6d89\u53ca\u5230 rehash\u3001\u590d\u5236\u6570\u636e\u7b49\u64cd\u4f5c\uff0c\u6240\u4ee5\u975e\u5e38\u6d88\u8017\u6027\u80fd"),(0,r.kt)("p",null,"Fail-Fast \u673a\u5236"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n- HashMap\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u201c\u94fe\u8868\u6563\u5217\u201d\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5373\u6570\u7ec4\u548c\u94fe\u8868\u7684\u7ed3\u5408\u4f53; HashMap \u5e95\u5c42\u5c31\u662f\u4e00\u4e2a\u6570\u7ec4\u7ed3\u6784\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u9879\u53c8\u662f\u4e00\u4e2a\u94fe\u8868\n\n- HashMap \u5e95\u5c42\u91c7\u7528\u4e00\u4e2a Entry[] \u6570\u7ec4\u6765\u4fdd\u5b58\u6240\u6709\u7684 key-value \u5bf9\uff0c\u5f53\u9700\u8981\u5b58\u50a8\u4e00\u4e2a Entry \u5bf9\u8c61\u65f6\uff0c\u4f1a\u8ba1\u7b97\u5f85\u5b58\u50a8entry \u7684 key \u7684 hash \u6765\u51b3\u5b9a\u5176\u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15, \u5982\u679c\u8be5\u4f4d\u7f6e\u4e3anull\u5219\u76f4\u63a5\u5b58\u50a8\uff0c\u5982\u679c\u4e0d\u4e3anull, \u5c31\u904d\u5386\u8be5\u4f4d\u7f6e\u7684\u94fe\u8868(bucket), \u518d\u6bd4\u8f83\u5f85\u5b58\u50a8 entry\u7684 key \u548c \u94fe\u8868\u4e2d\u7684 entry\u7684 key(\u901a\u8fc7 equals \u65b9\u6cd5), \u5982\u679c\u76f8\u7b49, \u5219\u8986\u76d6, \u904d\u5386\u5230\u94fe\u8868\u672b\u5c3e\u8fd8\u4e0d\u7b49\u5219\u6dfb\u52a0\u5230\u672b\u5c3e\n\n- \u6269\u5bb9: \u5f53 HashMap \u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u8d85\u8fc7\u6570\u7ec4\u5927\u5c0f *loadFactor(\u9ed8\u8ba40.75)\u65f6\uff0c\u5c31\u4f1a\u8fdb\u884c\u6570\u7ec4\u6269\u5bb9; int threshold = (int)(capacity * loadFactor);\n\n    - \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6570\u7ec4\u5927\u5c0f\u4e3a 16\uff0c\u90a3\u4e48\u5f53 HashMap \u4e2d\u5143\u7d20\u4e2a\u6570\u8d85\u8fc7 16*0.75=12 \u7684\u65f6\u5019\uff0c\u5c31\u628a\u6570\u7ec4\u7684\u5927\u5c0f\u6269\u5c55\u4e3a 2*16=32\uff0c\u5373\u6269\u5927\u4e00\u500d; \u6240\u4ee5\u521b\u5efa HashMap \u6700\u597d\u6307\u5b9a\u5bb9\u91cf\n\n    - \u8d1f\u8f7d\u56e0\u5b50 loadFactor \u8861\u91cf\u7684\u662f\u4e00\u4e2a\u6563\u5217\u8868\u7684\u7a7a\u95f4\u7684\u4f7f\u7528\u7a0b\u5ea6\uff0c\u8d1f\u8f7d\u56e0\u5b50\u8d8a\u5927\u8868\u793a\u6563\u5217\u8868(\u5373\u6570\u7ec4)\u7684\u88c5\u586b\u7a0b\u5ea6\u8d8a\u9ad8\n\n- fail-fast \u673a\u5236\u662f java \u96c6\u5408(Collection)\u4e2d\u7684\u4e00\u79cd\u9519\u8bef\u673a\u5236\u3002 \u5f53\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u96c6\u5408\u7684\u5185\u5bb9\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u5c31\u53ef\u80fd\u4f1a\u4ea7\u751ffail-fast \u4e8b\u4ef6\n\n    - \u4f8b\u5982\uff1a\u5f53\u67d0\u4e00\u4e2a\u7ebf\u7a0b A \u901a\u8fc7 iterator\u53bb\u904d\u5386\u67d0\u96c6\u5408\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82e5\u8be5\u96c6\u5408\u7684\u5185\u5bb9\u88ab\u5176\u4ed6\u7ebf\u7a0b\u6240\u6539\u53d8\u4e86\uff1b\u90a3\u4e48\u7ebf\u7a0b A \u8bbf\u95ee\u96c6\u5408\u65f6\uff0c\u5c31\u4f1a\u629b\u51fa ConcurrentModificationException \u5f02\u5e38\uff0c\u4ea7\u751f fail-fast \u4e8b\u4ef6\n\n    - \u539f\u7406: \u8fd9\u4e00\u7b56\u7565\u5728\u6e90\u7801\u4e2d\u7684\u5b9e\u73b0\u662f\u901a\u8fc7 modCount \u57df(`transient int modCount;`) \u5728\u8fed\u4ee3\u5668\u521d\u59cb\u5316\u8fc7\u7a0b\u4e2d\u4f1a\u5c06\u8fd9\u4e2a\u503c\u8d4b\u7ed9\u8fed\u4ee3\u5668\u7684 expectedModCount; \u5728\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u5224\u65ad modCount \u8ddf expectedModCount \u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u4e0d\u76f8\u7b49\u5c31\u8868\u793a\u5df2\u7ecf\u6709\u5176\u4ed6\u7ebf\u7a0b\u4fee\u6539\u4e86 Map\n*/\n\n// \u6784\u9020\u51fd\u6570\n\npublic HashMap(int initialCapacity, float loadFactor) {\n    if (initialCapacity < 0)\n        throw new IllegalArgumentException("Illegal initial capacity: " +\n                                            initialCapacity);\n    if (initialCapacity > MAXIMUM_CAPACITY)\n        initialCapacity = MAXIMUM_CAPACITY;\n    if (loadFactor <= 0 || Float.isNaN(loadFactor))\n        throw new IllegalArgumentException("Illegal load factor: " +\n                                            loadFactor);\n\n    // Find a power of 2 >= initialCapacity\n    int capacity = 1;\n    while (capacity < initialCapacity)\n        capacity <<= 1;\n\n    this.loadFactor = loadFactor;\n    threshold = (int)Math.min(capacity * loadFactor, MAXIMUM_CAPACITY + 1);\n    table = new Entry[capacity]; // \u521b\u5efa\u4e00\u4e2a Entry \u6570\u7ec4; \u6bcf\u4e2a Entry \u5176\u5b9e\u5c31\u662f\u4e00\u4e2a key-value \u5bf9\uff0c\u5b83\u6301\u6709\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff0c\u8fd9\u5c31\u6784\u6210\u4e86\u94fe\u8868\n    useAltHashing = sun.misc.VM.isBooted() &&\n            (capacity >= Holder.ALTERNATIVE_HASHING_THRESHOLD);\n    init();\n}\n\n// \u5b58\u50a8\n\npublic V put(K key, V value) {\n    //\u5176\u5141\u8bb8\u5b58\u653e null \u7684 key \u548c null \u7684 value\uff0c\u5f53\u5176 key \u4e3a null \u65f6\uff0c\u8c03\u7528putForNullKey\u65b9\u6cd5\uff0c\u653e\u5165\u5230table[0]\u7684\u8fd9\u4e2a\u4f4d\u7f6e\n    if (key == null)\n        return putForNullKey(value);\n    //\u5f97\u5230key\u7684 hashcode \uff0c\u5176\u76ee\u7684\u662f\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7684\u8ba9\u952e\u503c\u5bf9\u53ef\u4ee5\u5206\u5e03\u5230\u4e0d\u540c\u7684\u6876\u4e2d\n    int hash = hash(key);\n    //\u6839\u636e\u4e0a\u4e00\u6b65\u9aa4\u4e2d\u6c42\u51fa\u7684hash\u5f97\u5230\u5728\u6570\u7ec4\u4e2d\u662f\u7d22\u5f15i\n    int i = indexFor(hash, table.length);\n    //\u5982\u679ci\u5904\u7684Entry\u4e0d\u4e3anull\uff0c\u5219\u901a\u8fc7\u5176next\u6307\u9488\u4e0d\u65ad\u904d\u5386e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002, \u5982\u679c\u627e\u5230\u4e00\u4e2a entry, \u4ed6\u7684 hash \u5339\u914d, key \u4e5f\u76f8\u540c(equals), \u66ff\u6362 oldValue\n    for (Entry<K,V> e = table[i]; e != null; e = e.next) {\n        Object k;\n        if (e.hash == hash && ((k = e.key) == key || key.equals(k))) { // \u5982\u679c key \u5b58\u5728\u4e86\n            V oldValue = e.value;\n            e.value = value; // \u65b0\u7684value\u66ff\u4ee3 oldValue\n            e.recordAccess(this);\n            return oldValue;\n        }\n    }\n\n    // \u5982\u679c i \u5904\u7684 entry==null, \u6216\u8005 bucket\u904d\u5386\u5b8c\u4e86\u4e5f\u6ca1\u6709\u627e\u5230\u76f8\u540c key \u7684 entry, \u76f4\u63a5\u6dfb\u52a0\n    modCount++; // \u8fd9\u4e2a\u53d8\u91cf\u8bb0\u5f55 map \u4fee\u6539\u6b21\u6570, \u5b9e\u73b0 fail-fast \u673a\u5236\n    addEntry(hash, key, value, i);\n    return null;\n}\n\nvoid addEntry(int hash, K key, V value, int bucketIndex) {\n    // \u8fd9\u91cc\u5b8c\u5168\u6ca1\u6709\u8003\u8651 Entry \u4e2d\u7684 value\uff0c\u4ec5\u4ec5\u53ea\u662f\u6839\u636e key \u6765\u8ba1\u7b97\u5e76\u51b3\u5b9a\u6bcf\u4e2a Entry \u7684\u5b58\u50a8\u4f4d\u7f6e\n    // \u5f53\u7cfb\u7edf\u51b3\u5b9a\u4e86 key \u7684\u5b58\u50a8\u4f4d\u7f6e\u4e4b\u540e\uff0cvalue \u968f\u4e4b\u4fdd\u5b58\u5728\u90a3\u91cc\u5373\u53ef\u3002\n    if ((size >= threshold) && (null != table[bucketIndex])) {\n        resize(2 * table.length);  // \u6269\u5bb9\n        hash = (null != key) ? hash(key) : 0;\n        bucketIndex = indexFor(hash, table.length);\n    }\n\n    createEntry(hash, key, value, bucketIndex);\n}\nvoid createEntry(int hash, K key, V value, int bucketIndex) {\n        // \u83b7\u53d6\u6307\u5b9a bucketIndex \u7d22\u5f15\u5904\u7684 Entry\n        Entry<K,V> e = table[bucketIndex];\n        // \u5c06\u65b0\u521b\u5efa\u7684 Entry \u653e\u5165 bucketIndex \u7d22\u5f15\u5904\uff0c\u5e76\u8ba9\u65b0\u7684 Entry \u6307\u5411\u539f\u6765\u7684 Entry\n        table[bucketIndex] = new Entry<>(hash, key, value, e);\n        size++;\n}\n\n// \u83b7\u53d6\n\npublic V get(Object key) {\n    if (key == null)\n        return getForNullKey();\n    Entry<K,V> entry = getEntry(key);\n\n    return null == entry ? null : entry.getValue();\n}\nfinal Entry<K,V> getEntry(Object key) {\n    int hash = (key == null) ? 0 : hash(key); // calculate hashCode according to key.\n    for (Entry<K,V> e = table[indexFor(hash, table.length)]; // find element, traverse the bucket.\n            e != null;\n            e = e.next) {\n        Object k;\n        if (e.hash == hash &&\n            ((k = e.key) == key || (key != null && key.equals(k))))\n            return e;\n    }\n    return null;\n}\n\n')),(0,r.kt)("h3",{id:"524-hashset"},"5.2.4. HashSet"),(0,r.kt)("p",null,"\u51e0\u4e4e\u5168\u90e8\u501f\u52a9\u4e8e HashMap \u6765\u5b9e\u73b0"),(0,r.kt)("p",null,"\u6240\u4ee5\u4e5f\u8981\u91cd\u5199 hashCode(), equals() \u4ee5\u786e\u4fdd\u5143\u7d20\u552f\u4e00\u6027"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n/**\n- HashSet\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u5c31\u662f\u4e00\u4e2a HashMap\uff0c\u5176\u65b9\u6cd5\u7684\u5185\u90e8\u51e0\u4e4e\u5c31\u662f\u5728\u8c03\u7528 HashMap \u7684\u65b9\u6cd5\n*/\n///////////////////// field\n\nprivate transient HashMap<E,Object> map;\n// \u6240\u6709\u5199\u5165 map \u7684 value \u503c, key \u5219\u662f Hashset \u4e2d\u5b58\u50a8\u7684\u503c\nprivate static final Object PRESENT = new Object();\n\n////////////////////////////////////////// \u6784\u9020\u51fd\u6570\n /**\n * \u9ed8\u8ba4\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashSet\u3002\n * \u5b9e\u9645\u5e95\u5c42\u4f1a\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684HashMap\uff0c\u5e76\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u4e3a16\u548c\u52a0\u8f7d\u56e0\u5b500.75\u3002\n */\npublic HashSet() {\n    map = new HashMap<E,Object>();\n}\npublic HashSet(int initialCapacity, float loadFactor) {\n    map = new HashMap<>(initialCapacity, loadFactor);\n}\n/**\n * \u6784\u9020\u4e00\u4e2a\u5305\u542b\u6307\u5b9a collection \u4e2d\u7684\u5143\u7d20\u7684\u65b0set\u3002\n * \u5b9e\u9645\u5e95\u5c42\u4f7f\u7528\u9ed8\u8ba4\u7684\u52a0\u8f7d\u56e0\u5b500.75\u548c\u8db3\u4ee5\u5305\u542b\u6307\u5b9a collection \u4e2d\u6240\u6709\u5143\u7d20\u7684\u521d\u59cb\u5bb9\u91cf\u6765\u521b\u5efa\u4e00\u4e2aH ashMap\u3002\n * @param c \u5176\u4e2d\u7684\u5143\u7d20\u5c06\u5b58\u653e\u5728\u6b64 set \u4e2d\u7684collection\u3002\n */\npublic HashSet(Collection<? extends E> c) {\n    map = new HashMap<E,Object>(Math.max((int) (c.size()/.75f) + 1, 16));\n    addAll(c);\n}\n/**\n * \u4ee5\u6307\u5b9a\u7684initialCapacity \u548c loadFactor \u6784\u9020\u4e00\u4e2a\u7a7a\u7684 HashSet\u3002\n *\n * \u5b9e\u9645\u5e95\u5c42\u4ee5\u76f8\u5e94\u7684\u53c2\u6570\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashMap\u3002\n * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002\n * @param loadFactor \u52a0\u8f7d\u56e0\u5b50\u3002\n */\npublic HashSet(int initialCapacity, float loadFactor) {\n    map = new HashMap<E,Object>(initialCapacity, loadFactor);\n}\n/**\n * \u4ee5\u6307\u5b9a\u7684 initialCapacity \u6784\u9020\u4e00\u4e2a\u7a7a\u7684 HashSet\u3002\n *\n * \u5b9e\u9645\u5e95\u5c42\u4ee5\u76f8\u5e94\u7684\u53c2\u6570\u53ca\u52a0\u8f7d\u56e0\u5b50loadFactor\u4e3a0.75\u6784\u9020\u4e00\u4e2a\u7a7a\u7684HashMap\u3002\n * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002\n */\npublic HashSet(int initialCapacity) {\n    map = new HashMap<E,Object>(initialCapacity);\n}\n/**\n * \u4ee5\u6307\u5b9a\u7684initialCapacity\u548cloadFactor\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u7a7a\u94fe\u63a5\u54c8\u5e0c\u96c6\u5408\u3002\u6b64\u6784\u9020\u51fd\u6570\u4e3a\u5305\u8bbf\u95ee\u6743\u9650\uff0c\u4e0d\u5bf9\u5916\u516c\u5f00\uff0c\n * \u5b9e\u9645\u53ea\u662f\u662f\u5bf9LinkedHashSet\u7684\u652f\u6301\u3002\n *\n * \u5b9e\u9645\u5e95\u5c42\u4f1a\u4ee5\u6307\u5b9a\u7684\u53c2\u6570\u6784\u9020\u4e00\u4e2a\u7a7aLinkedHashMap\u5b9e\u4f8b\u6765\u5b9e\u73b0\u3002\n * @param initialCapacity \u521d\u59cb\u5bb9\u91cf\u3002\n * @param loadFactor \u52a0\u8f7d\u56e0\u5b50\u3002\n * @param dummy \u6807\u8bb0\u3002\n */\nHashSet(int initialCapacity, float loadFactor, boolean dummy) {\n    map = new LinkedHashMap<E,Object>(initialCapacity, loadFactor);\n}\n\n////////////////////////////////// \u6dfb\u52a0\u65b9\u6cd5\n\n/**\n\u7531\u4e8e HashMap \u7684 put() \u65b9\u6cd5\u6dfb\u52a0 key-value \u5bf9\u65f6\uff0c\u5f53\u65b0\u653e\u5165 HashMap \u7684 key \u4e0e\u539f\u6709 key \u76f8\u540c\uff08hashCode()\u8fd4\u56de\u503c\u76f8\u7b49\uff0c\u901a\u8fc7 equals \u6bd4\u8f83\u4e5f\u8fd4\u56de true\uff09\uff0c\u65b0\u6dfb\u52a0\u7684 Entry \u7684 value \u5c06\u8986\u76d6\u539f\u6765 Entry \u7684 value\uff08\u4e5f\u5c31\u662f HashSet \u4e2d\u7684 value , \u90fd\u662fPRESENT\uff09\uff0c\u4f46 key \u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\uff0c\n\n\u56e0\u6b64\u5982\u679c\u5411 HashSet \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u65f6\uff0c\u65b0\u6dfb\u52a0\u7684\u96c6\u5408\u5143\u7d20\u5c06\u4e0d\u4f1a\u88ab\u653e\u5165 HashMap\u4e2d\uff0c\u539f\u6765\u7684\u5143\u7d20\u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u6539\u53d8\uff0c\u8fd9\u4e5f\u5c31\u6ee1\u8db3\u4e86 Set \u4e2d\u5143\u7d20\u4e0d\u91cd\u590d\u7684\u7279\u6027\u3002\n\n * @param e \u5c06\u6dfb\u52a0\u5230\u6b64set\u4e2d\u7684\u5143\u7d20\u3002\n * @return \u5982\u679c\u6b64set\u5c1a\u672a\u5305\u542b\u6307\u5b9a\u5143\u7d20\uff0c\u5219\u8fd4\u56detrue\u3002\n */\npublic boolean add(E e) {\n    //\u5c06\u5b58\u653e\u7684\u5bf9\u8c61\u5f53\u505a\u4e86 HashMap \u7684\u5065\uff0cvalue \u90fd\u662f\u76f8\u540c\u7684 PRESENT \u3002\n    //\u7531\u4e8e HashMap \u7684 key \u662f\u4e0d\u80fd\u91cd\u590d\u7684\uff0c\u6240\u4ee5\u6bcf\u5f53\u6709\u91cd\u590d\u7684\u503c\u5199\u5165\u5230 HashSet \u65f6, \u4e5f\u5c31\u662f hashmap \u4e2d\u7684 key \u91cd\u590d\u4e86\uff0c\u90a3\u4e48 value \u4f1a\u88ab\u8986\u76d6\uff0c\u4f46 key \u4e0d\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u8fd9\u6837\u5c31\u4fdd\u8bc1\u4e86 HashSet \u4e2d\u53ea\u80fd\u5b58\u653e\u4e0d\u91cd\u590d\u7684\u5143\u7d20\n    return map.put(e, PRESENT)==null;\n}\n\n")),(0,r.kt)("h3",{id:"525-hashtable"},"5.2.5. HashTable"),(0,r.kt)("p",null,"\u540c\u6b65\u7684 hashmap, key, value \u4e0d\u5141\u8bb8\u4e3a null"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n- \u548c HashMap \u4e00\u6837\uff0cHashtable \u4e5f\u662f\u4e00\u4e2a\u6563\u5217\u8868\uff0c\u5b83\u5b58\u50a8\u7684\u5185\u5bb9\u662f\u952e\u503c\u5bf9\n\n- Hashtable \u4e0e HashMap \u7684\u7b80\u5355\u6bd4\u8f83\n\n    - HashTable \u57fa\u4e8e Dictionary \u7c7b\uff0c\u800c HashMap \u662f\u57fa\u4e8e AbstractMap\n\n        -(Dictionary \u662f\u4efb\u4f55\u53ef\u5c06\u952e\u6620\u5c04\u5230\u76f8\u5e94\u503c\u7684\u7c7b\u7684\u62bd\u8c61\u7236\u7c7b, \u8fc7\u65f6\u4e86)\n\n    - HashMap \u7684 key \u548c value \u90fd\u5141\u8bb8\u4e3a null\uff0c\u800c Hashtable \u7684 key \u548c value \u90fd\u4e0d\u5141\u8bb8\u4e3a null\n\n    - Hashtable \u65b9\u6cd5\u662f\u540c\u6b65\uff0c\u800cHashMap\u5219\u4e0d\u662f\n*/\n\n// \u6210\u5458\u53d8\u91cf \u548c HashMap \u7c7b\u4f3c table, count, threshold, loadFactor, modCount\u3002\n\n// \u6784\u9020\u65b9\u6cd5\u5927\u540c\u5c0f\u5f02, \u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5bb9\u91cf\u4e3a 11\uff0c\u52a0\u8f7d\u56e0\u5b50\u4e3a 0.75\n\n// \u6dfb\u52a0 \u7ebf\u7a0b\u5b89\u5168\n\n/**\n\u6574\u4e2a\u8fc7\u7a0b:\n\n- \u5224\u65ad value \u662f\u5426\u4e3a\u7a7a\uff0c\u4e3a\u7a7a\u5219\u629b\u51fa\u5f02\u5e38\uff1b\n\n- \u8ba1\u7b97 key \u7684 hash \u503c\uff0c\u5e76\u6839\u636e hash \u503c\u83b7\u5f97 key \u5728 table \u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e index\uff0c\u5982\u679c table[index] \u5143\u7d20\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8fdb\u884c\u8fed\u4ee3\uff0c\u5982\u679c\u9047\u5230\u76f8\u540c\u7684 key\uff0c\u5219\u76f4\u63a5\u66ff\u6362\uff0c\u5e76\u8fd4\u56de\u65e7 value\uff1b\n\n- table[index] \u4e3a\u7a7a\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u63d2\u5165\u5230 table[index] \u4f4d\u7f6e\u3002\n*/\npublic synchronized V put(K key, V value) {\n    // Make sure the value is not null\u786e\u4fddvalue\u4e0d\u4e3anull\n    if (value == null) {\n        throw new NullPointerException();\n    }\n\n    // Makes sure the key is not already in the hashtable.\n    //\u786e\u4fddkey\u4e0d\u5728hashtable\u4e2d\n    //\u9996\u5148\uff0c\u901a\u8fc7hash\u65b9\u6cd5\u8ba1\u7b97key\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u8ba1\u7b97\u5f97\u51faindex\u503c\uff0c\u786e\u5b9a\u5176\u5728table[]\u4e2d\u7684\u4f4d\u7f6e\n    //\u5176\u6b21\uff0c\u8fed\u4ee3index\u7d22\u5f15\u4f4d\u7f6e\u7684\u94fe\u8868\uff0c\u5982\u679c\u8be5\u4f4d\u7f6e\u5904\u7684\u94fe\u8868\u5b58\u5728\u76f8\u540c\u7684key\uff0c\u5219\u66ff\u6362value\uff0c\u8fd4\u56de\u65e7\u7684value\n    Entry tab[] = table;\n    int hash = hash(key);\n    int index = (hash & 0x7FFFFFFF) % tab.length;\n    for (Entry<K,V> e = tab[index] ; e != null ; e = e.next) {\n        if ((e.hash == hash) && e.key.equals(key)) {\n            V old = e.value;\n            e.value = value;\n            return old;\n        }\n    }\n\n    modCount++;\n    if (count >= threshold) {\n        // Rehash the table if the threshold is exceeded\n        //\u5982\u679c\u8d85\u8fc7\u9600\u503c\uff0c\u5c31\u8fdb\u884crehash\u64cd\u4f5c\n        rehash();\n\n        tab = table;\n        hash = hash(key);\n        index = (hash & 0x7FFFFFFF) % tab.length;\n    }\n\n    // Creates the new entry.\n    //\u5c06\u503c\u63d2\u5165\uff0c\u8fd4\u56de\u7684\u4e3anull\n    Entry<K,V> e = tab[index];\n    // \u521b\u5efa\u65b0\u7684Entry\u8282\u70b9\uff0c\u5e76\u5c06\u65b0\u7684Entry\u63d2\u5165Hashtable\u7684index\u4f4d\u7f6e\uff0c\u5e76\u8bbe\u7f6ee\u4e3a\u65b0\u7684Entry\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\n    tab[index] = new Entry<>(hash, key, value, e);\n    count++;\n    return null;\n}\n\n// get \u65b9\u6cd5\n\npublic synchronized V get(Object key) {\n    Entry tab[] = table;\n    int hash = hash(key); // calculate hashCode\n    int index = (hash & 0x7FFFFFFF) % tab.length; //calculate index\n    for (Entry<K,V> e = tab[index] ; e != null ; e = e.next) { //\u904d\u5386\u94fe\u8868\n        if ((e.hash == hash) && e.key.equals(key)) {\n            return e.value;\n        }\n    }\n    return null;\n}\n\n")),(0,r.kt)("h3",{id:"526-linkedhashmap"},"5.2.6. LinkedHashMap"),(0,r.kt)("p",null,"\u53ef\u4ee5\u6392\u5e8f\u7684 hashmap"),(0,r.kt)("p",null,'\u7531\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u6240\u6784\u6210, \u4fdd\u8bc1\u4e86\u6709\u5e8f (\u5728 hashmap \u5185\u90e8\u7684 entry \u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86 "Entry<K,V> before, after;" \u6784\u6210\u4e86\u53cc\u5411\u94fe\u8868, )'),(0,r.kt)("p",null,"\u6392\u5e8f\u6a21\u5f0f: \u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"accessOrder")," \u63a7\u5236"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6839\u636e\u5199\u5165\u987a\u5e8f\u6392\u5e8f(\u9ed8\u8ba4)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6839\u636e\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f - \u6bcf\u6b21 get \u90fd\u4f1a\u5c06\u8bbf\u95ee\u7684\u503c\u79fb\u52a8\u5230\u94fe\u8868\u672b\u5c3e\uff0c\u8fd9\u6837\u91cd\u590d\u64cd\u4f5c\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f\u7684\u94fe\u8868\u3002\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u7279\u6027, \u7528 LinkedHashMap \u6784\u5efa LRU \u7f13\u5b58"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n- LinkedHashMap \u662f HashMap \u7684\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5b83\u4fdd\u7559\u63d2\u5165\u7684\u987a\u5e8f\n\n- \u5141\u8bb8\u4f7f\u7528 null \u503c\u548c null \u952e\n\n- LinkedHashMap \u5b9e\u73b0\u4e0e HashMap \u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0cLinkedHashMap \u7ef4\u62a4\u7740\u4e00\u4e2a\u53cc\u91cd\u94fe\u63a5\u5217\u8868\u3002\u6b64\u94fe\u63a5\u5217\u8868\u5b9a\u4e49\u4e86\u8fed\u4ee3\u987a\u5e8f\uff0c\u8be5\u8fed\u4ee3\u987a\u5e8f\u53ef\u4ee5\u662f\u63d2\u5165\u987a\u5e8f\u6216\u8005\u662f\u8bbf\u95ee\u987a\u5e8f(\u5373\u8c03\u7528 get() \u540e\uff0c\u4f1a\u5c06\u8fd9\u6b21\u8bbf\u95ee\u7684\u5143\u7d20\u79fb\u81f3\u94fe\u8868 \u5c3e\u90e8\uff0c\u4e0d\u65ad\u8bbf\u95ee\u53ef\u4ee5\u5f62\u6210\u6309\u8bbf\u95ee\u987a\u5e8f\u6392\u5e8f\u7684\u94fe\u8868\u3002)\u3002\n**/\n\n// \u6210\u5458\u53d8\u91cf\n\nprivate final boolean accessOrder; //\u5982\u679c\u4e3atrue\uff0c\u5219\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\uff1b\u5982\u679c\u4e3afalse\uff0c\u5219\u6309\u7167\u63d2\u5165\u987a\u5e8f\u3002\nprivate transient Entry<K,V> header;// the head(eldest) of the doubly linked list\nprivate transient Entry<K,V> tail;// the tail(youngest) of the doubly linked list\n/**\n* LinkedHashMap\u7684Entry\u5143\u7d20\u3002\n* \u7ee7\u627fHashMap\u7684Entry\u5143\u7d20\uff0c\u53c8\u4fdd\u5b58\u4e86\u5176\u4e0a\u4e00\u4e2a\u5143\u7d20before\u548c\u4e0b\u4e00\u4e2a\u5143\u7d20after\u7684\u5f15\u7528\u3002\u65b0\u7248\u672c\u6709\u53d8\u5316\u4e86, \u7ee7\u627f Node\n */\nprivate static class Entry<K,V> extends HashMap.Entry<K,V> {\n    Entry<K,V> before, after;\n    \u2026\u2026\n}\n\n// \u521d\u59cb\u5316/\u6784\u9020\u51fd\u6570\n\npublic LinkedHashMap(int initialCapacity, float loadFactor,boolean accessOrder) {\n    super(initialCapacity, loadFactor);\n    this.accessOrder = accessOrder;//\u9ed8\u8ba4\u4e3a false\uff0c\u4ee3\u8868\u6309\u7167\u63d2\u5165\u987a\u5e8f\u8fdb\u884c\u8fed\u4ee3\uff1b\u5f53\u7136\u53ef\u4ee5\u663e\u5f0f\u8bbe\u7f6e\u4e3a true\uff0c\u4ee3\u8868\u4ee5\u8bbf\u95ee\u987a\u5e8f\u8fdb\u884c\u8fed\u4ee3\n}\n\n// \u5b58\u50a8\u65b9\u6cd5\n\n/**\nLinkedHashMap \u5e76\u672a\u91cd\u5199\u7236\u7c7b HashMap \u7684 put \u65b9\u6cd5\uff0c\u800c\u662f\u91cd\u5199\u4e86\u7236\u7c7b HashMap \u7684 put \u65b9\u6cd5\u8c03\u7528\u7684\u5b50\u65b9\u6cd5void recordAccess(HashMap m) \uff0cvoid addEntry(int hash, K key, V value, int bucketIndex) \u548cvoid createEntry(int hash, K key, V value, int bucketIndex)\uff0c\u63d0\u4f9b\u4e86\u81ea\u5df1\u7279\u6709\u7684\u53cc\u5411\u94fe\u63a5\u5217\u8868\u7684\u5b9e\u73b0\n*/\n\n// get \u65b9\u6cd5\n\n/**\nLinkedHashMap \u91cd\u5199\u4e86\u7236\u7c7b HashMap \u7684 get \u65b9\u6cd5\uff0c\u5b9e\u9645\u5728\u8c03\u7528\u7236\u7c7b getEntry() \u65b9\u6cd5\u53d6\u5f97\u67e5\u627e\u7684\u5143\u7d20\u540e\uff0c\u518d\u5224\u65ad\u5f53\u6392\u5e8f\u6a21\u5f0f accessOrder \u4e3a true \u65f6\uff0c\u8bb0\u5f55\u8bbf\u95ee\u987a\u5e8f\uff0c\u5c06\u6700\u65b0\u8bbf\u95ee\u7684\u5143\u7d20\u6dfb\u52a0\u5230\u53cc\u5411\u94fe\u8868\u7684\u8868\u5934\uff0c\u5e76\u4ece\u539f\u6765\u7684\u4f4d\u7f6e\u5220\u9664\u3002\n*/\n\n// LRU \u662f Least Recently Used \u7684\u7f29\u5199, \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\n// LinkedHashMap \u672c\u8eab\u5df2\u7ecf\u5b9e\u73b0\u4e86\u6309\u7167\u8bbf\u95ee\u987a\u5e8f\u7684\u5b58\u50a8\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6700\u8fd1\u8bfb\u53d6\u7684\u4f1a\u653e\u5728\u6700\u524d\u9762\uff0c\u6700\u6700\u4e0d\u5e38\u8bfb\u53d6\u7684\u4f1a\u653e\u5728\u6700\u540e;LinkedHashMap \u672c\u8eab\u6709\u4e00\u4e2a\u65b9\u6cd5\u7528\u4e8e\u5224\u65ad\u662f\u5426\u9700\u8981\u79fb\u9664\u6700\u4e0d\u5e38\u8bfb\u53d6\u7684\u6570\uff0c\u4f46\u662f\uff0c\u539f\u59cb\u65b9\u6cd5\u9ed8\u8ba4\u4e0d\u9700\u8981\u79fb\u9664\uff08\u8fd9\u662f\uff0cLinkedHashMap \u76f8\u5f53\u4e8e\u4e00\u4e2alinkedlist\uff09\uff0c\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981 override \u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4f7f\u5f97\u5f53\u7f13\u5b58\u91cc\u5b58\u653e\u7684\u6570\u636e\u4e2a\u6570\u8d85\u8fc7\u89c4\u5b9a\u4e2a\u6570\u540e\uff0c\u5c31\u628a\u6700\u4e0d\u5e38\u7528\u7684\u79fb\u9664\u6389\n\n/**\n * An LRU cache, based on <code>LinkedHashMap</code>.\n *\n * <p>\n * This cache has a fixed maximum number of elements (<code>cacheSize</code>).\n * If the cache is full and another entry is added, the LRU (least recently\n * used) entry is dropped.\n *\n * <p>\n * This class is thread-safe. All methods of this class are synchronized.\n *\n * <p>\n * Author: Christian d\'Heureuse, Inventec Informatik AG, Zurich, Switzerland<br>\n * Multi-licensed: EPL / LGPL / GPL / AL / BSD.\n */\npublic class LRUCache<K, V> {\n    private static final float hashTableLoadFactor = 0.75f;\n    private LinkedHashMap<K, V> map;\n    private int cacheSize;\n\n    /**\n     * Creates a new LRU cache. \u5728\u8be5\u65b9\u6cd5\u4e2d\uff0cnew LinkedHashMap<K,V>(hashTableCapacity,\n     * hashTableLoadFactor, true)\u4e2d\uff0ctrue\u4ee3\u8868\u4f7f\u7528\u8bbf\u95ee\u987a\u5e8f\n     *\n     * @param cacheSize\n     *            the maximum number of entries that will be kept in this cache.\n     */\n    public LRUCache(int cacheSize) {\n        this.cacheSize = cacheSize;\n        int hashTableCapacity = (int) Math\n                .ceil(cacheSize / hashTableLoadFactor) + 1;\n        map = new LinkedHashMap<K, V>(hashTableCapacity, hashTableLoadFactor,\n                true) {\n            // (an anonymous inner class)\n            private static final long serialVersionUID = 1;\n\n            @Override\n            protected boolean removeEldestEntry(Map.Entry<K, V> eldest) {\n                return size() > LRUCache.this.cacheSize;\n            }\n        };\n    }\n\n    /**\n     * Retrieves an entry from the cache.<br>\n     * The retrieved entry becomes the MRU (most recently used) entry.\n     *\n     * @param key\n     *            the key whose associated value is to be returned.\n     * @return the value associated to this key, or null if no value with this\n     *         key exists in the cache.\n     */\n    public synchronized V get(K key) {\n        return map.get(key);\n    }\n\n    /**\n     * Adds an entry to this cache. The new entry becomes the MRU (most recently\n     * used) entry. If an entry with the specified key already exists in the\n     * cache, it is replaced by the new entry. If the cache is full, the LRU\n     * (least recently used) entry is removed from the cache.\n     *\n     * @param key\n     *            the key with which the specified value is to be associated.\n     * @param value\n     *            a value to be associated with the specified key.\n     */\n    public synchronized void put(K key, V value) {\n        map.put(key, value);\n    }\n\n    /**\n     * Clears the cache.\n     */\n    public synchronized void clear() {\n        map.clear();\n    }\n\n    /**\n     * Returns the number of used entries in the cache.\n     *\n     * @return the number of entries currently in the cache.\n     */\n    public synchronized int usedEntries() {\n        return map.size();\n    }\n\n    /**\n     * Returns a <code>Collection</code> that contains a copy of all cache\n     * entries.\n     *\n     * @return a <code>Collection</code> with a copy of the cache content.\n     */\n    public synchronized Collection<Map.Entry<K, V>> getAll() {\n        return new ArrayList<Map.Entry<K, V>>(map.entrySet());\n    }\n\n    // Test routine for the LRUCache class.\n    public static void main(String[] args) {\n        LRUCache<String, String> c = new LRUCache<String, String>(3);\n        c.put("1", "one"); // 1\n        c.put("2", "two"); // 2 1\n        c.put("3", "three"); // 3 2 1\n        c.put("4", "four"); // 4 3 2\n        if (c.get("2") == null)\n            throw new Error(); // 2 4 3\n        c.put("5", "five"); // 5 2 4\n        c.put("4", "second four"); // 4 5 2\n        // Verify cache content.\n        if (c.usedEntries() != 3)\n            throw new Error();\n        if (!c.get("4").equals("second four"))\n            throw new Error();\n        if (!c.get("5").equals("five"))\n            throw new Error();\n        if (!c.get("2").equals("two"))\n            throw new Error();\n        // List cache content.\n        for (Map.Entry<String, String> e : c.getAll())\n            System.out.println(e.getKey() + " : " + e.getValue());\n    }\n}\n\n')),(0,r.kt)("h3",{id:"527-treemap"},"5.2.7. TreeMap"),(0,r.kt)("p",null,"\u57fa\u4e8e\u7ea2\u9ed1\u6811\u7684\u53ef\u6392\u5e8f hashmap"),(0,r.kt)("p",null,"\u904d\u5386\u548c\u589e\u52a0\u5220\u9664\u7684\u7684\u6548\u7387\u90fd\u662fO(logN)"),(0,r.kt)("h3",{id:"528-lindedhashset"},"5.2.8. LindedHashSet"),(0,r.kt)("p",null,"\u6709\u5e8f\u7684 hashset"),(0,r.kt)("p",null,"\u7ee7\u627f HashSet\u3001\u53c8\u57fa\u4e8e LinkedHashMap \u6765\u5b9e\u73b0\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n- \u4e0eHashSet \u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0cLinkedHashSet \u7ef4\u62a4\u7740\u4e00\u4e2a\u53cc\u91cd\u94fe\u63a5\u5217\u8868\u3002\u6b64\u94fe\u63a5\u5217\u8868\u5b9a\u4e49\u4e86\u8fed\u4ee3\u987a\u5e8f\uff0c\u8be5\u8fed\u4ee3\u987a\u5e8f\u53ef\u4e3a\u63d2\u5165\u987a\u5e8f\u6216\u662f\u8bbf\u95ee\u987a\u5e8f\n\n*/\n\n")),(0,r.kt)("h3",{id:"529-arraylist-\u548c-vector"},"5.2.9. ArrayList \u548c Vector"),(0,r.kt)("p",null,"\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u5c5e\u6027\u5206\u522b\u662f: ",(0,r.kt)("inlineCode",{parentName:"p"},"elementData")," \u6570\u7ec4\uff0c\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," \u5927\u5c0f, \u6dfb\u52a0\u5143\u7d20\u65f6\u5019 \u9996\u5148\u8fdb\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"\u6269\u5bb9\u6821\u9a8c"),", \u5982\u679c\u5bb9\u91cf\u4e0d\u591f\u4e86, \u4f1a\u8fdb\u884c\u6570\u7ec4\u7684\u590d\u5236. \u53e6\u5916\u5728\u6dfb\u52a0\u5143\u7d20\u5230\u6307\u5b9a\u4f4d\u7f6e\u65f6\u4e5f\u6709\u6570\u7ec4\u7684\u590d\u5236. \u6240\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"\u4f7f\u7528\u65f6\u6700\u597d\u662f\u6307\u5b9a\u5927\u5c0f"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"\u51cf\u5c11\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u6570\u636e\u7684\u64cd\u4f5c")),(0,r.kt)("p",null,"\u5b9e\u73b0\u4e8e\u4e0b\u9762 2 \u4e2a\u63a5\u53e3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"List \u63a5\u53e3")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"RandomAccess \u63a5\u53e3: \u6807\u8bb0\u63a5\u53e3, \u8868\u793a\u53ef\u4ee5\u5feb\u901f\u968f\u673a\u8bbf\u95ee(\u901a\u8fc7\u5143\u7d20\u7684\u5e8f\u53f7\u5feb\u901f\u83b7\u53d6\u5143\u7d20\u5bf9\u8c61)"))),(0,r.kt)("p",null,"Fail-Fast \u673a\u5236: \u591a\u4e2a\u7ebf\u7a0b\u7ade\u4e89\u8bbf\u95ee\u4f1a\u62a5\u9519"),(0,r.kt)("p",null,"\u7531\u4e8e ArrayList \u662f\u57fa\u4e8e\u6570\u7ec4\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5",(0,r.kt)("inlineCode",{parentName:"p"},"\u5e76\u4e0d\u662f\u6240\u6709\u7684\u7a7a\u95f4\u90fd\u88ab\u4f7f\u7528"),"\u3002\u56e0\u6b64\u4f7f\u7528\u4e86 transient \u4fee\u9970\uff0c\u53ef\u4ee5\u9632\u6b62\u88ab\u81ea\u52a8\u5e8f\u5217\u5316, \u56e0\u6b64 ",(0,r.kt)("inlineCode",{parentName:"p"},"ArrayList \u81ea\u5b9a\u4e49\u4e86\u5e8f\u5217\u5316\u4e0e\u53cd\u5e8f\u5217\u5316")),(0,r.kt)("p",null,"Vector \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u548c ArrayList \u7c7b\u4f3c,\u4e5f\u662f\u4e00\u4e2a\u52a8\u6001\u6570\u7ec4\u5b58\u653e\u6570\u636e\u3002\u4e0d\u8fc7\u662f\u5728 add() \u65b9\u6cd5\u7684\u65f6\u5019\u4f7f\u7528 synchronized \u8fdb\u884c\u540c\u6b65\u5199\u6570\u636e\uff0c\u4f46\u662f\u5f00\u9500\u8f83\u5927\uff0c\u6240\u4ee5 Vector \u662f\u4e00\u4e2a\u540c\u6b65\u5bb9\u5668\u5e76\u4e0d\u662f\u4e00\u4e2a\u5e76\u53d1\u5bb9\u5668\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n- \u5b83\u5b9e\u73b0 List \u63a5\u53e3\u3001\u5e95\u5c42\u4f7f\u7528\u6570\u7ec4\u4fdd\u5b58\u6240\u6709\u5143\u7d20\u3002\u5176\u64cd\u4f5c\u57fa\u672c\u4e0a\u662f\u5bf9\u6570\u7ec4\u7684\u64cd\u4f5c\n*/\n\n// \u6210\u5458\u53d8\u91cf\nprivate transient Object[] elementData;\n\n// \u6dfb\u52a0 \u6709\u591a\u79cd\u65b9\u6cd5\n\npublic E set(int index, E element) {\n    rangeCheck(index);//\u68c0\u67e5\u662f\u5426\u8d85\u51fa\u6570\u7ec4\u8303\u56f4, \u5982\u679c\u8d85\u51fa, \u629b\u5f02\u5e38\n\n    E oldValue = elementData(index);\n    elementData[index] = element;// replace\n    return oldValue;\n}\nprivate void rangeCheck(int index) {\n    if (index >= size)\n    throw new IndexOutOfBoundsException(outOfBoundsMsg(index));\n}\n\n /**\n    * Appends the specified element to the end of the list.\n    *\n    * @param e element to be appended to this list\n    * @return <tt>true</tt> (as specified by {@link Collection#add})\n    */\npublic boolean add(E e) {\n    //\u6269\u5bb9\u6821\u9a8c\u3002\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    elementData[size++] = e;\n    return true;\n}\nprivate void ensureCapacityInternal(int minCapacity) {\n    modCount++;\n    // overflow-conscious code\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity); //\u5f53\u5bb9\u91cf\u4e0d\u8db3\u65f6\uff0c\u4f1a\u8c03\u7528 grow \u65b9\u6cd5\u589e\u957f\u5bb9\u91cf\n}\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity >> 1);\n    if (newCapacity - minCapacity < 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE > 0)\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    // \u6570\u7ec4\u590d\u5236,\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n\n public void add(int index, E element) {\n    rangeCheckForAdd(index);\n\n    ensureCapacityInternal(size + 1);  // Increments modCount!!\n    //\u590d\u5236\uff0c\u5411\u540e\u79fb\u52a8\n    System.arraycopy(elementData, index, elementData, index + 1,\n                        size - index);\n    elementData[index] = element;\n    size++;\n}\n\n\n// \u8bfb\u53d6\n\npublic E get(int index) {\n    rangeCheck(index);\n    return (E) elementData[index];// returns the element at the specified position of the list\n}\nprivate void rangeCheck(int index) {\n    if (index >= size)\n    throw new IndexOutOfBoundsException(outOfBoundsMsg(index));\n}\n\n// \u8c03\u6574\u6570\u7ec4\u5bb9\u91cf\n\n/**\n\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a public \u7684\u65b9\u6cd5ensureCapacity(int minCapacity)\u6765\u589e\u52a0 ArrayList \u7684\u5bb9\u91cf\uff0c\u800c\u5728\u5b58\u50a8\u5143\u7d20\u7b49\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u9047\u5230\u5bb9\u91cf\u4e0d\u8db3\uff0c\u4f1a\u8c03\u7528priavte\u65b9\u6cd5private void ensureCapacityInternal(int minCapacity)\u5b9e\u73b0\u3002\n*/\n\n public void ensureCapacity(int minCapacity) {\n    if (minCapacity > 0)\n        ensureCapacityInternal(minCapacity);\n}\n\nprivate void ensureCapacityInternal(int minCapacity) {\n    modCount++;\n    // overflow-conscious code\n    if (minCapacity - elementData.length > 0)\n        grow(minCapacity);\n}\n/**\n    * Increases the capacity to ensure that it can hold at least the\n    * number of elements specified by the minimum capacity argument.\n    *\n    * @param minCapacity the desired minimum capacity\n    */\nprivate void grow(int minCapacity) {\n    // overflow-conscious code\n    int oldCapacity = elementData.length;\n    int newCapacity = oldCapacity + (oldCapacity >> 1); //\u6bcf\u6b21\u6570\u7ec4\u5bb9\u91cf\u7684\u589e\u957f\u5927\u7ea6\u662f\u5176\u539f\u5bb9\u91cf\u7684 1.5 \u500d\n    if (newCapacity - minCapacity < 0)\n        newCapacity = minCapacity;\n    if (newCapacity - MAX_ARRAY_SIZE > 0)\n        newCapacity = hugeCapacity(minCapacity);\n    // minCapacity is usually close to size, so this is a win:\n    elementData = Arrays.copyOf(elementData, newCapacity);\n}\n")),(0,r.kt)("h3",{id:"5210-linkedlist"},"5.2.10. LinkedList"),(0,r.kt)("p",null,"\u5355\u5411\u94fe\u8868"),(0,r.kt)("p",null,"LinkedList \u63d2\u5165\uff0c\u5220\u9664\u90fd\u662f\u79fb\u52a8\u6307\u9488\u6548\u7387\u5f88\u9ad8\u3002"),(0,r.kt)("p",null,"\u67e5\u627e\u9700\u8981\u8fdb\u884c\u904d\u5386\u67e5\u8be2\uff0c\u6548\u7387\u8f83\u4f4e, \u7279\u522b\u662f\u5f53 index \u8d8a\u63a5\u8fd1 size \u7684\u4e2d\u95f4\u503c\u65f6\u5c24\u5176\u4f4e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n- LinkedList \u662f\u57fa\u4e8e\u94fe\u8868\u5b9e\u73b0\n*/\n\n// \u6210\u5458\u53d8\u91cf\ntransient int size = 0;\ntransient Node<E> first; //\u94fe\u8868\u7684\u5934\u6307\u9488\ntransient Node<E> last; //\u5c3e\u6307\u9488\n\n//\u5b58\u50a8\u5bf9\u8c61\u7684\u7ed3\u6784 Node, LinkedList\u7684\u5185\u90e8\u7c7b\nprivate static class Node<E> {\n    E item;\n    Node<E> next; // \u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\n    Node<E> prev; //\u6307\u5411\u4e0a\u4e00\u4e2a\u8282\u70b9\n\n    Node(Node<E> prev, E element, Node<E> next) {\n        this.item = element;\n        this.next = next;\n        this.prev = prev;\n    }\n}\n\n// \u6838\u5fc3\u65b9\u6cd5 linkBefore\u3001linkLast\n\n// \u6dfb\u52a0\npublic boolean add(E e) {\n    linkLast(e);\n    return true;\n}\n/**\n* Links e as last element.\n*/\nvoid linkLast(E e) {\n    final Node<E> l = last;\n    final Node<E> newNode = new Node<>(l, e, null);\n    last = newNode;\n    if (l == null)\n        first = newNode;\n    else\n        l.next = newNode; // \u4ec5\u4ec5\u662f\u6307\u9488\u7684\u79fb\u52a8, \u6dfb\u52a0\u6548\u7387\u9ad8\n    size++;\n    modCount++;\n}\n\n// \u67e5\u8be2\npublic E get(int index) {\n    checkElementIndex(index);\n    return node(index).item;\n}\nNode<E> node(int index) {\n    // assert isElementIndex(index);\n\n    // \u5982\u679c\u5c0f\u4e8e size\u7684\u4e00\u534a, \u5c31\u4ece\u8282\u70b9\u5934\u90e8\u904d\u5386, \u5426\u5219\u5c31\u4ece\u8282\u70b9\u5c3e\u90e8\u5f00\u59cb\u904d\u5386\u3002\n    if (index < (size >> 1)) {\n        Node<E> x = first;\n        for (int i = 0; i < index; i++)\n            x = x.next;\n        return x;\n    } else {\n        Node<E> x = last;\n        for (int i = size - 1; i > index; i--)\n            x = x.prev;\n        return x;\n    }\n}\n\n")),(0,r.kt)("h3",{id:"5211-concurrenthashmap"},"5.2.11. ConcurrentHashMap"),(0,r.kt)("p",null,"ref: ",(0,r.kt)("a",{parentName:"p",href:"https://crossoverjie.top/2018/07/23/java-senior/ConcurrentHashMap/"},"https://crossoverjie.top/2018/07/23/java-senior/ConcurrentHashMap/")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ben-manes/concurrentlinkedhashmap"},"\u4e00\u4e2a concurrentlinkedhashmap \u5b9e\u73b0")),(0,r.kt)("p",null,"\u9762\u8bd5\u5957\u8def:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8c08\u8c08\u4f60\u7406\u89e3\u7684 HashMap\uff0c\u8bb2\u8bb2\u5176\u4e2d\u7684 get put \u8fc7\u7a0b\u3002"),(0,r.kt)("li",{parentName:"ul"},"1.8 \u505a\u4e86\u4ec0\u4e48\u4f18\u5316\uff1f"),(0,r.kt)("li",{parentName:"ul"},"\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u561b\uff1f"),(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u5b89\u5168\u4f1a\u5bfc\u81f4\u54ea\u4e9b\u95ee\u9898\uff1f"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u4f55\u89e3\u51b3\uff1f\u6709\u6ca1\u6709\u7ebf\u7a0b\u5b89\u5168\u7684\u5e76\u53d1\u5bb9\u5668\uff1f"),(0,r.kt)("li",{parentName:"ul"},"ConcurrentHashMap \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f 1.7\u30011.8 \u5b9e\u73b0\u6709\u4f55\u4e0d\u540c\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\n\u66ff\u6362\u4e86\u9501\u7684\u5b9e\u73b0\u5427, \u4f7f\u7528\u4e86 synchronized \u548c cas \u64cd\u4f5c\u5427, \u56e0\u4e3a \u65b0\u7248\u672c synchronize \u505a\u4e86\u5f88\u591a\u4f18\u5316, \u6027\u80fd\u5df2\u7ecf\u4e0d\u8f93reentrantLock")),(0,r.kt)("p",null,"\u9488\u5bf9\u5e76\u53d1\u573a\u666f\u7684 hashmap, \u6bd4 hashtable \u5e76\u53d1\u6548\u7387\u66f4\u9ad8"),(0,r.kt)("p",null,"\u4fee\u6539\u64cd\u4f5c: \u9501\u5b9a\u7684 Segment \u800c\u4e0d\u662f\u6574\u4e2a ConcurrentHashMap, \u66f4\u65b0\u64cd\u4f5c\u53ea\u662f\u5728\u8fd9\u4e2a Segment \u4e2d\u5b8c\u6210\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5bf9\u6574\u4e2a ConcurrentHashMap \u52a0\u9501, \u6b64\u65f6\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u4e5f\u53ef\u4ee5\u5bf9\u53e6\u5916\u7684 Segment \u8fdb\u884c put \u64cd\u4f5c\n\u8bfb\u64cd\u4f5c\u5c31\u66f4\u6ca1\u4ec0\u4e48\u5f71\u54cd\u4e86"),(0,r.kt)("p",null,"Segment \u6570\u636e\u7ed3\u6784"),(0,r.kt)("p",null,"\u6574\u4e2a ConcurrentHashMap \u6570\u636e\u7ed3\u6784"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n- \u6570\u636e\u7ed3\u6784\n\n    - \u6210\u5458\u53d8\u91cf\u4e2d\uff0c\u5305\u542b\u4e86\u4e00\u4e2a Segment \u7684\u6570\u7ec4\uff08final Segment<K,V>[] segments;\uff09\uff0c\u800c Segment \u662f ConcurrentHashMap \u7684\u5185\u90e8\u7c7b\n\n    - \u5728 Segment \u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u5305\u542b\u4e86\u4e00\u4e2a HashEntry \u7684\u6570\u7ec4\uff08transient volatile HashEntry<K,V>[] table;\uff09\u3002\u800c HashEntry \u4e5f\u662f ConcurrentHashMap \u7684\u5185\u90e8\u7c7b\u3002\n\n    - HashEntry \u4e2d\uff0c\u5305\u542b\u4e86 key \u548c value \u4ee5\u53ca next \u6307\u9488\uff08\u7c7b\u4f3c\u4e8e HashMap \u4e2d Entry\uff09\uff0c\u6240\u4ee5 HashEntry \u53ef\u4ee5\u6784\u6210\u4e00\u4e2a\u94fe\u8868\u3002\n\n- ConcurrentHashMap \u548c HashTable\n\n    - \u76f8\u6bd4\u4e8e HashTable \u548c\u7528\u540c\u6b65\u5305\u88c5\u5668\u5305\u88c5\u7684 HashMap\uff08Collections.synchronizedMap(new HashMap())\uff09\uff0cConcurrentHashMap \u62e5\u6709\u66f4\u9ad8\u7684\u5e76\u53d1\u6027\u3002\u5728\u524d\u4e24\u8005\u4e2d\uff0c\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u7684\u9501\u6765\u540c\u6b65\u4e0d\u540c\u7ebf\u7a0b\u95f4\u7684\u5e76\u53d1\u8bbf\u95ee\u3002\u540c\u4e00\u65f6\u95f4\u70b9\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u9501\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u540c\u4e00\u65f6\u95f4\u70b9\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bbf\u95ee\u5bb9\u5668\u3002\u8fd9\u867d\u7136\u4fdd\u8bc1\u591a\u7ebf\u7a0b\u95f4\u7684\u5b89\u5168\u5e76\u53d1\u8bbf\u95ee\uff0c\u4f46\u540c\u65f6\u4e5f\u5bfc\u81f4\u5bf9\u5bb9\u5668\u7684\u8bbf\u95ee\u53d8\u6210\u4e32\u884c\u5316\u7684\u4e86\u3002\n\n- ConcurrentHashMap \u7684\u9ad8\u5e76\u53d1\u6027\u4e3b\u8981\u6765\u81ea\u4e8e\u4e09\u4e2a\u65b9\u9762: (\u7531\u4e8e\u6563\u5217\u6620\u5c04\u8868\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5927\u591a\u6570\u64cd\u4f5c\u90fd\u662f\u6210\u529f\u7684 \u8bfb\u64cd\u4f5c\uff0c\u6240\u4ee5 2 \u548c 3 \u65e2\u53ef\u4ee5\u51cf\u5c11\u8bf7\u6c42\u540c\u4e00\u4e2a\u9501\u7684\u9891\u7387\uff0c\u4e5f\u53ef\u4ee5\u6709\u6548\u51cf\u5c11\u6301\u6709\u9501\u7684\u65f6\u95f4)\n\n    - \u7528\u5206\u79bb\u9501\u5b9e\u73b0\u591a\u4e2a\u7ebf\u7a0b\u95f4\u7684\u66f4\u6df1\u5c42\u6b21\u7684\u5171\u4eab\u8bbf\u95ee\u3002\n    - \u7528 HashEntery \u5bf9\u8c61\u7684\u4e0d\u53d8\u6027(final\u4fee\u9970)\u6765\u964d\u4f4e\u6267\u884c\u8bfb\u64cd\u4f5c\u7684\u7ebf\u7a0b\u5728\u904d\u5386\u94fe\u8868\u671f\u95f4\u5bf9\u52a0\u9501\u7684\u9700\u6c42\u3002\n    - \u901a\u8fc7\u5bf9\u540c\u4e00\u4e2a Volatile \u53d8\u91cf\u7684\u5199 / \u8bfb\u8bbf\u95ee\uff0c\u534f\u8c03\u4e0d\u540c\u7ebf\u7a0b\u95f4\u8bfb / \u5199\u64cd\u4f5c\u7684\u5185\u5b58\u53ef\u89c1\u6027\u3002\n*/\n\n// HashEntry \u5b58\u50a8\u952e\u503c\u5bf9\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6563\u5217\u7684\u65f6\u5019\u5982\u679c\u53d1\u751f\u201c\u78b0\u649e\u201d\uff0c\u5c06\u628a\u78b0\u649e\u7684 HashEntry \u5bf9\u8c61\u94fe\u63a5\u6210\u4e00\u4e2a\u94fe\u8868\u3002\n\nstatic final class HashEntry<K,V> {//\u7c7b\u6bd4\u7740 HashMap \u4e2d\u7684 Entry\n    final int hash;\n    final K key;\n    volatile V value;\n    volatile HashEntry<K,V> next;\n\n    HashEntry(int hash, K key, V value, HashEntry<K,V> next) {\n        this.hash = hash;\n        this.key = key;\n        this.value = value;\n        this.next = next;\n    }\n    ...\n    ...\n}\n\n// Segment\n\n// \u7ee7\u627f\u4e8e ReentrantLock \u7c7b\uff0c\u4ece\u800c\u4f7f\u5f97 Segment \u5bf9\u8c61\u53ef\u4ee5\u5145\u5f53\u9501\u7684\u89d2\u8272\n//Segment \u6570\u636e\u7ed3\u6784\u7c7b\u4f3c\u4e8e HashMap\u4e86\uff0c\u90fd\u662f\u5305\u542b\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u800c\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u4e00\u4e2a\u94fe\u8868\u3002\n/**\n    * Segments are specialized versions of hash tables.  This\n    * subclasses from ReentrantLock opportunistically, just to\n    * simplify some locking and avoid separate construction.\n    */\nstatic final class Segment<K,V> extends ReentrantLock implements Serializable {\n    /**\n        * The per-segment table. Elements are accessed via\n        * entryAt/setEntryAt providing volatile semantics.\n        */\n        // \u5982\u679c\u6563\u5217\u65f6\u53d1\u751f\u78b0\u649e\uff0c\u78b0\u649e\u7684 HashEntry \u5bf9\u8c61\u5c31\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u94fe\u63a5\u6210\u4e00\u4e2a\u94fe\u8868\n    transient volatile HashEntry<K,V>[] table;//Segment \u4e2d\u5305\u542bHashEntry \u7684\u6570\u7ec4; \u4f7f\u5f97 segment \u53ef\u4ee5\u53ef\u4ee5\u5b88\u62a4\u5176\u5305\u542b\u7684\u82e5\u5e72\u4e2a\u6876\uff08HashEntry\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2aHashentry\u5143\u7d20\u5373\u4e3a\u4e00\u4e2a \u6876\uff09\n\n    /**\n        * The number of elements. Accessed only either within locks\n        * or among other volatile reads that maintain visibility.\n        */\n    transient int count;//count \u53d8\u91cf\u662f\u8ba1\u7b97\u5668\uff0c\u8868\u793a\u6bcf\u4e2a Segment \u5bf9\u8c61\u7ba1\u7406\u7684 table \u6570\u7ec4\uff08\u82e5\u5e72\u4e2a HashEntry \u7684\u94fe\u8868); \u4e4b\u6240\u4ee5\u5728\u6bcf\u4e2aSegment\u5bf9\u8c61\u4e2d\u5305\u542b\u4e00\u4e2a count \u8ba1\u6570\u5668\uff0c\u800c\u4e0d\u5728 ConcurrentHashMap \u4e2d\u4f7f\u7528\u5168\u5c40\u7684\u8ba1\u6570\u5668\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u51fa\u73b0\u201c\u70ed\u70b9\u57df\u201d\u800c\u5f71\u54cd\u5e76\u53d1\u6027\u3002\n    transient int modCount;\n    /**\n        * \u88c5\u8f7d\u56e0\u5b50\n        */\n    final float loadFactor;\n}\n\n// \u5e76\u53d1\u5199\u64cd\u4f5c\n\n/**\n    * Maps the specified key to the specified value in this table.\n    * Neither the key nor the value can be null.\n    *\n    * <p> The value can be retrieved by calling the <tt>get</tt> method\n    * with a key that is equal to the original key.\n    *\n    * @param key key with which the specified value is to be associated\n    * @param value value to be associated with the specified key\n    * @return the previous value associated with <tt>key</tt>, or\n    *         <tt>null</tt> if there was no mapping for <tt>key</tt>\n    * @throws NullPointerException if the specified key or value is null\n    */\n@SuppressWarnings("unchecked")\npublic V put(K key, V value) {\n    Segment<K,V> s;//\u9996\u5148\u6709\u4e00\u4e2a Segment \u7684\u5f15\u7528 s\n    if (value == null)\n        throw new NullPointerException();\n    int hash = hash(key);//hash() \u65b9\u6cd5\u5bf9 key \u8fdb\u884c\u8ba1\u7b97\n    int j = (hash >>> segmentShift) & segmentMask;\n    if ((s = (Segment<K,V>)UNSAFE.getObject          // nonvolatile; recheck\n            (segments, (j << SSHIFT) + SBASE)) == null) //  in ensureSegment\n        s = ensureSegment(j);\n    return s.put(key, hash, value, false);//\u8c03\u7528 Segment \u7684 put(K key, int hash, V value, boolean onlyIfAbsent)\u65b9\u6cd5\u8fdb\u884c\u5b58\u50a8\u64cd\u4f5c\n}\n// Segment \u7684 put \u65b9\u6cd5\nfinal V put(K key, int hash, V value, boolean onlyIfAbsent) {\n    //\u52a0\u9501\uff0c\u8fd9\u91cc\u662f\u9501\u5b9a\u7684Segment\u800c\u4e0d\u662f\u6574\u4e2aConcurrentHashMap\n    //\u56e0\u4e3a put \u64cd\u4f5c\u53ea\u662f\u5728\u8fd9\u4e2a Segment \u4e2d\u5b8c\u6210\uff0c\u6240\u4ee5\u5e76\u4e0d\u9700\u8981\u5bf9\u6574\u4e2a ConcurrentHashMap \u52a0\u9501\n    //\u6240\u4ee5\uff0c\u6b64\u65f6\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u4e5f\u53ef\u4ee5\u5bf9\u53e6\u5916\u7684 Segment \u8fdb\u884c put \u64cd\u4f5c\uff0c\u56e0\u4e3a\u867d\u7136\u8be5 Segment \u88ab\u9501\u4f4f\u4e86\uff0c\u4f46\u5176\u4ed6\u7684 Segment \u5e76\u6ca1\u6709\u52a0\u9501\u3002\u540c\u65f6\uff0c\u8bfb\u7ebf\u7a0b\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u672c\u7ebf\u7a0b\u7684\u52a0\u9501\u800c\u963b\u585e\u3002\n    HashEntry<K,V> node = tryLock() ? null :scanAndLockForPut(key, hash, value);\n    V oldValue;\n    try {\n        HashEntry<K,V>[] tab = table;\n        //\u5f97\u5230hash\u5bf9\u5e94\u7684table\u4e2d\u7684\u7d22\u5f15index\n        int index = (tab.length - 1) & hash;\n        //\u627e\u5230hash\u5bf9\u5e94\u7684\u662f\u5177\u4f53\u7684\u54ea\u4e2a\u6876\uff0c\u4e5f\u5c31\u662f\u54ea\u4e2aHashEntry\u94fe\u8868\n        HashEntry<K,V> first = entryAt(tab, index);\n        for (HashEntry<K,V> e = first;;) {\n            if (e != null) {\n                K k;\n                if ((k = e.key) == key ||\n                    (e.hash == hash && key.equals(k))) {\n                    oldValue = e.value;\n                    if (!onlyIfAbsent) {\n                        e.value = value;\n                        ++modCount;\n                    }\n                    break;\n                }\n                e = e.next;\n            }\n            else {\n                if (node != null)\n                    node.setNext(first);\n                else\n                    node = new HashEntry<K,V>(hash, key, value, first);\n                int c = count + 1;\n                if (c > threshold && tab.length < MAXIMUM_CAPACITY)\n                    rehash(node);\n                else\n                    setEntryAt(tab, index, node);\n                ++modCount;\n                count = c;\n                oldValue = null;\n                break;\n            }\n        }\n    } finally {\n        //\u89e3\u9501\n        unlock();\n    }\n    return oldValue;\n}\n\n')),(0,r.kt)("h2",{id:"53-collections-\u548c-arrays-\u5de5\u5177\u7c7b"},"5.3. Collections \u548c Arrays \u5de5\u5177\u7c7b"),(0,r.kt)("p",null,"Collections \u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"1\uff0c\u5bf9list\u8fdb\u884c\u4e8c\u5206\u67e5\u627e\uff1a\n\u524d\u63d0\u8be5\u96c6\u5408\u4e00\u5b9a\u8981\u6709\u5e8f\u3002\nint binarySearch(list,key);\nint binarySearch(list,key,Comparator);\n\n2\uff0c\u5bf9list\u96c6\u5408\u8fdb\u884c\u6392\u5e8f\u3002\nsort(list);\nsort(list,comaprator);\n//\u6309\u7167\u6307\u5b9a\u6bd4\u8f83\u5668\u8fdb\u884c\u6392\u5e8f\n\n3\uff0c\u5bf9\u96c6\u5408\u53d6\u6700\u5927\u503c\u6216\u8005\u6700\u5c0f\u503c\u3002\nmax(Collection)\nmax(Collection,comparator)\nmin(Collection)\nmin(Collection,comparator)\n\n4\uff0c\u5bf9list\u96c6\u5408\u8fdb\u884c\u53cd\u8f6c\u3002\nreverse(list);\n\n\n8\uff0c\u53ef\u4ee5\u5c06\u4e0d\u540c\u6b65\u7684\u96c6\u5408\u53d8\u6210\u540c\u6b65\u7684\u96c6\u5408\u3002\nSet synchronizedSet(Set<T> s)\nMap synchronizedMap(Map<K,V> m)\nList synchronizedList(List<T> list)\n\n9.\u5982\u679c\u60f3\u8981\u5c06\u96c6\u5408\u53d8\u6570\u7ec4\uff1a\n\u53ef\u4ee5\u4f7f\u7528Collection \u4e2d\u7684toArray \u65b9\u6cd5\u3002\u6ce8\u610f\uff1a\u662fCollection\u4e0d\u662fCollections\u5de5\u5177\u7c7b\n\u4f20\u5165\u6307\u5b9a\u7684\u7c7b\u578b\u6570\u7ec4\u5373\u53ef\uff0c\u8be5\u6570\u7ec4\u7684\u957f\u5ea6\u6700\u597d\u4e3a\u96c6\u5408\u7684size\u3002\n\n10. \u8fd4\u56de \u7a7a\u96c6\u5408 \u8282\u7701\u5185\u5b58\n\n\u901a\u8fc7java.util.Collections.emptyList()\u65b9\u6cd5\u7684\u76f8\u5173\u6e90\u7801\u53ef\u4ee5\u5f97\u77e5\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u8fd4\u56de\u4e86\u4e00\u4e2a\u7a7a\u7684List\uff0c\u4f46\u662f\u8fd9\u4e2aList\u548c\u6211\u4eec\u5e73\u65f6\u5e38\u7528\u7684\u90a3\u4e2aList\u662f\u4e0d\u4e00\u6837\u7684\u3002\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u7684List\u662fCollections\u7c7b\u7684\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5b83\u7ee7\u627fAbstractList\u540e\u5e76\u6ca1\u6709\u5b9e\u73b0add()\u3001remove()\u7b49\u65b9\u6cd5\uff0c\u56e0\u6b64\u8fd9\u4e2a\u8fd4\u56de\u503cList\u5e76\u4e0d\u80fd\u589e\u52a0\u5220\u9664\u5143\u7d20\u3002\n\u65e2\u7136\u8fd9\u4e2aList\u4e0d\u80fd\u8fdb\u884c\u589e\u5220\u64cd\u4f5c\uff0c\u90a3\u4e48\u5b83\u6709\u4f55\u610f\u4e49\u5462\uff1f\n\u8fd9\u4e2a\u65b9\u6cd5\u4e3b\u8981\u76ee\u7684\u5c31\u662f\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684\u5217\u8868\uff0c\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u4f5c\u4e3a\u8fd4\u56de\u503c\u5c31\u4e0d\u9700\u8981\u518d\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u5f00\u9500\u3002\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2asize\u4e3a0\u7684List\uff0c\u8c03\u7528\u8005\u4e0d\u9700\u8981\u6821\u9a8c\u8fd4\u56de\u503c\u662f\u5426\u4e3anull\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u53ef\u80fd\u4e3a\u7a7a\u7684List\u3002\nemptySet()\u3001emptyMap()\u65b9\u6cd5\u540c\u7406\u3002\n\n")),(0,r.kt)("p",null,"Arrays \u65b9\u6cd5:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"1\uff0c\u4e8c\u5206\u67e5\u627e,\u6570\u7ec4\u9700\u8981\u6709\u5e8f\nbinarySearch(int[])\nbinarySearch(double[])\n\n2\uff0c\u6570\u7ec4\u6392\u5e8f\nsort(int[])\nsort(char[])\n\n\n3. \u590d\u5236\u6570\u7ec4\u3002\ncopyOf(oldArray\uff0cnewLength);\n// \u590d\u5236\u90e8\u5206\u6570\u7ec4\u3002\ncopyOfRange(oldArray\uff0cstartIndex\uff0cendIndex)    \u8fd9\u91cc\u4e0d\u5305\u62ecendIndex\u5bf9\u5e94\u503c\uff1b\n\n4\uff0c\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u5bf9\u5e94\u4f4d\u7f6e\u7684\u5143\u7d20\u662f\u5426\u4e00\u81f4\u3002\nequals(int[],int[]);\n\n5\uff0c\u5c06\u6570\u7ec4\u53d8\u6210\u96c6\u5408\u3002\nList asList(T[]);\n\u8fd9\u6837\u53ef\u4ee5\u901a\u8fc7\u96c6\u5408\u7684\u64cd\u4f5c\u6765\u64cd\u4f5c\u6570\u7ec4\u4e2d\u5143\u7d20\uff0c\n\u4f46\u662f\u4e0d\u53ef\u4ee5\u4f7f\u7528\u589e\u5220\u65b9\u6cd5\uff0cadd\uff0cremove\u3002\u56e0\u4e3a\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u4f1a\u51fa\u73b0\nUnsupportOperationExcetion\u3002\n\u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\uff1acontains\uff0cindexOf\u3002\u3002\u3002\n\u5982\u679c\u6570\u7ec4\u4e2d\u5b58\u5165\u7684\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48asList\u4f1a\u5c06\u6570\u7ec4\u5b9e\u4f53\u4f5c\u4e3a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\n\u5982\u679c\u6570\u7ec4\u4e2d\u7684\u5b58\u5165\u7684\u5f15\u7528\u6570\u636e\u7c7b\u578b\uff0c\u90a3\u4e48asList\u4f1a\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4f5c\u4e3a\u96c6\u5408\u4e2d\n\u7684\u5143\u7d20\u3002\n\n6. \u5c06\u6570\u7ec4\u53d8\u6210\u5b57\u7b26\u4e32\u3002\ntoString(int[])\n\n\n")),(0,r.kt)("h2",{id:"54-\u96c6\u5408\u6392\u5e8f"},"5.4. \u96c6\u5408\u6392\u5e8f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public class Main {\n    public static void main(String[] args) {\n         List<Boolean> arr = Arrays.asList(true, false, false, true);\n        arr.sort((o1, o2) -> {\n            if ((o1 && o2) || (!o1 && !o2)) {\n                return 0;\n            } else {\n                return o2 ? 1 : -1;\n                // or\n                // return o1 ? -1 : 1;\n            }\n\n\n            // or\n            // if (onLine1 ^ onLine2) {\n            //     return onLine1 ? -1 : 1;\n            // } else {\n            //     return 0;\n            // }\n        });\n        System.out.println(Arrays.toString(arr.toArray())); // true \u5728\u524d, false \u5728\u540e\n    }\n}\n")),(0,r.kt)("h1",{id:"6-\u6cdb\u578b"},"6. \u6cdb\u578b"),(0,r.kt)("h2",{id:"61-\u6cdb\u578b\u65b9\u6cd5-\u6cdb\u578b\u7c7b-\u6cdb\u578b\u63a5\u53e3"},"6.1. \u6cdb\u578b\u65b9\u6cd5-\u6cdb\u578b\u7c7b-\u6cdb\u578b\u63a5\u53e3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6cdb\u578b\u65b9\u6cd5\u4e2d \u7684\u81ea\u5b9a\u4e49\u6cdb\u578b\u7684\u5177\u4f53\u6570\u636e\u7c7b\u578b\u662f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"\u8c03\u7528\u8be5\u51fd\u6570\u7684\u65f6\u5019\u4f20\u5165\u5b9e\u53c2\u65f6"),"\u786e\u5b9a\u7684")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6cdb\u578b\u7c7b\u4e0a\u7684\u81ea\u5b9a\u4e49\u6cdb\u578b\u662f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"\u4f7f\u7528\u8be5\u7c7b\u521b\u5efa\u5bf9\u8c61\u7684\u65f6\u5019")," \u786e\u5b9a\u5177\u4f53\u7684\u6570\u636e\u7c7b\u578b\u7684")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6cdb\u578b\u63a5\u53e3\u4e0a\u7684\u81ea\u5b9a\u4e49\u6cdb\u578b\u662f\u5728",(0,r.kt)("inlineCode",{parentName:"p"},"\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684\u65f6\u5019"),"\u6307\u5b9a\u5177\u4f53\u6570\u636e\u7c7b\u578b\u7684 - \u5982\u679c\u9700\u8981",(0,r.kt)("inlineCode",{parentName:"p"},"\u5ef6\u8fdf\u786e\u5b9a\u63a5\u53e3\u6cdb\u578b"),"\u7684\u5177\u4f53\u7c7b\u578b, \u5728\u521b\u5efa\u63a5\u53e3\u5b9e\u73b0\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\u624d\u6307\u5b9a\u63a5\u53e3\u4e0a\u81ea\u5b9a\u4e49\u6cdb\u578b\uff0c\u90a3\u4e48\u9700\u8981\u4ee5\u4e0b\u683c\u5f0f\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"class<T> \u7c7b\u540d implements \u63a5\u53e3<T>")))),(0,r.kt)("h2",{id:"62-\u6cdb\u578b\u53cd\u5c04"},"6.2. \u6cdb\u578b\u53cd\u5c04"),(0,r.kt)("h3",{id:"621-\u6cdb\u578b\u53cd\u5c04-api"},"6.2.1. \u6cdb\u578b\u53cd\u5c04 api"),(0,r.kt)("p",null,"ParameterizedType \u53c2\u6570\u5316\u7c7b\u578b, \u6bd4\u5982: ",(0,r.kt)("inlineCode",{parentName:"p"},"ArrayList<String>"),";"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// baseDao\u7c7b\npublic class BaseDao<T> {\n    // \u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u7c7b\u578b\n    private Class<T> clazz;\n    // \u8868\u540d\n    private String tableName;\n    // \u4e3b\u952e\n    private String id_primary;\n    // \u62ff\u5230\u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u53c2\u6570\u5316\u7c7b\u578b\u4e2d\u5b9e\u9645\u7684\u7c7b\u578b  ( BaseDao<Admin> ,  Admin.class)\n    public BaseDao(){\n        //**\u83b7\u53d6parent\u7684\u53c2\u6570\u5316\u7c7b\u578b\n        Type type = this.getClass().getGenericSuperclass();\n        ParameterizedType pt = (ParameterizedType) type;\n        Type[] types = pt.getActualTypeArguments();\n\n        clazz = (Class<T>) types[0];//\u5230\u6b64, \u5df2\u7ecf\u62ff\u5230\uff1a  Admin.class\n\n        /*******1. \u83b7\u53d6\u8868\u540d*******/\n        Table table = clazz.getAnnotation(Table.class);\n        tableName = table.tableName();\n\n        /*******2. \u83b7\u53d6\u4e3b\u952e\u5b57\u6bb5*******/\n        //\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u6240\u6709\u5b57\u6bb5\u3001\u904d\u5386\u3001\u83b7\u53d6\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u4e0a\u7684id\u6ce8\u89e3\n        Field[] fs = clazz.getDeclaredFields();\n        for (Field f : fs) {\n            // \u8bbe\u7f6e\u5f3a\u5236\u8bbf\u95ee\n            f.setAccessible(true);\n\n            // \u83b7\u53d6\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u4e0a\u7684id\u6ce8\u89e3\n            Id anno_id = f.getAnnotation(Id.class);\n            if (anno_id != null) {// \u4e0d\u4e3anull, \u8bc1\u660e\u65f6\u4e3b\u952e\u5b57\u6bb5\n\n                Column column = f.getAnnotation(Column.class);\n                id_primary = column.columnName();\n                // \u8df3\u51fa\u5faa\u73af\n                break;\n            }\n        }\n        System.out.println("\u8868\uff1a" + tableName);\n        System.out.println("\u4e3b\u952e\uff1a" + id_primary);\n    }\n\n    public T findById(int id){\n        try {\n            String sql = "select * from " + tableName + " where " + id_primary +"=?";\n            /*\n             * DbUtils\u7684\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u5de5\u5177\u7c7b\uff1aBeanHandler?   \u5c5e\u6027=\u5b57\u6bb5\n             */\n            return JdbcUtils.getQueryRunner().query(sql, new BeanHandler<T>(clazz), id);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n\n    public List<T> getAll(){\n        try {\n            String sql = "select * from " + tableName;\n            return JdbcUtils.getQuerrRunner().query(sql, new BeanListHandler<T>(clazz));\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n\n')),(0,r.kt)("h3",{id:"622-\u6848\u4f8b-\u4f18\u5316-basedao"},"6.2.2. \u6848\u4f8b-\u4f18\u5316 BaseDao"),(0,r.kt)("p",null,"\u89c1 ",(0,r.kt)("a",{parentName:"p",href:"#%E7%9C%8B%E4%B8%80%E4%B8%AA%E4%BE%8B%E5%AD%90%E4%BC%98%E5%8C%96dao-%E8%A7%A3%E5%86%B3%E5%AD%97%E6%AE%B5%E5%92%8C%E5%B1%9E%E6%80%A7%E4%B8%8D%E4%B8%80%E8%87%B4"},"\u6ce8\u89e3\u53cd\u5c04")),(0,r.kt)("h1",{id:"7-\u6ce8\u89e3"},"7. \u6ce8\u89e3"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/briblue/article/details/73824058"},"https://blog.csdn.net/briblue/article/details/73824058")),(0,r.kt)("h2",{id:"71-\u8bed\u6cd5"},"7.1. \u8bed\u6cd5"),(0,r.kt)("p",null,"\u6ce8\u89e3\u6210\u5458\u5c5e\u6027\u7c7b\u578b:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6240\u6709\u57fa\u672c\u7c7b\u578b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"String")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Class")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Enum")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Annotation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ee5\u4e0a\u7c7b\u578b\u7684\u6570\u7ec4"))),(0,r.kt)("p",null,"\u6ce8\u89e3\u672c\u8eab\u4e0d\u652f\u6301\u7ee7\u627f, \u4f46\u662f\u6ce8\u89e3\u7684\u5c5e\u6027\u53ef\u4ee5\u662f\u53e6\u5916\u4e00\u4e2a\u6ce8\u89e3(\u6ce8\u89e3\u6570\u7ec4), \u800c\u4e14\u6ce8\u89e3\u6709\u4e00\u4e2a \u4e00\u4e2a\u5143\u6ce8\u89e3 @Inherited"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u5b9a\u4e49\u4e00\u4e2a\u6700\u666e\u901a\u7684\u6ce8\u89e3\n *\n */\npublic @interface Author {\n    /**\n    * \u6ce8\u89e3\u5c5e\u6027\n    *       1. \u4fee\u9970\u4e3a\u9ed8\u8ba4\u6216public\u6548\u679c\u4e00\u6837\n    */\n    String name();\n    int age();\n}\n// \u4f7f\u7528:\n@Author(name = "Jet", age = 30)\npublic void save() {\n\n}\n\n///////////////////////////////////////////////////////\n//\n//          \u5e26\u9ed8\u8ba4\u503c\u7684\u6ce8\u89e3\n//\n//////////////////////////////////\n\npublic @interface Author {\n\n    String name();\n    int age() default 30;   // \u5e26\u9ed8\u8ba4\u503c\u7684\u6ce8\u89e3;  \u4f7f\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4e0d\u5199\u6b64\u5c5e\u6027\u503c\n\n    // \u6ce8\u89e3\u7684\u6240\u6709\u5143\u7d20\u5fc5\u987b\u6709\u786e\u5b9a\u7684\u503c\uff0c\u8981\u60f3\u8868\u793a\u5143\u7d20null\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a\uff1a\n    int age() default -1;\n}\n\n\n/////////////////////\n//\n//      \u9ed8\u8ba4\u540d\u79f0\u7684\u6ce8\u89e3\n//\n/////////////////////\n\npublic @interface Author {\n    // \u5982\u679c\u6ce8\u89e3\u540d\u79f0\u4e3avalue,\u4f7f\u7528\u65f6\u5019\u53ef\u4ee5\u7701\u7565\u540d\u79f0\uff0c\u76f4\u63a5\u7ed9\u503c\n    // (\u4e14\u6ce8\u89e3\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\u65f6\u5019\u624d\u53ef\u4ee5\u7701\u7565\u540d\u79f0)\n    String value();\n}\n// \u4f7f\u7528\n@Author("Jet")\n// \u7b49\u4ef7\u4e8e\n@Author(value = "Jet")\n\n\n///////////////////////////\n//\n//      \u6570\u7ec4\n//\n///////////////////////////////\n\npublic @interface Author {\n    String[] value() default {"test1","test2"};\n}\n// \u4f7f\u7528\uff1a\n@Author\uff08{\u201c\u201d\uff0c\u201c\u201d}\uff09\npublic void save() {\n\n}\n\n\n\n')),(0,r.kt)("h2",{id:"72-\u5143\u6ce8\u89e3"},"7.2. \u5143\u6ce8\u89e3"),(0,r.kt)("p",null,"\u8868\u793a\u6ce8\u89e3\u4e0a\u7684\u6ce8\u89e3\uff0c"),(0,r.kt)("p",null,"\u4e00\u822c\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528 \u5bfc\u5165\u81ea\u52a8\u914d\u7f6e"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Import(RabbitBootstrapConfiguration.class)\npublic @interface EnableRabbit {\n}\n")),(0,r.kt)("p",null,"\u9664\u4e86\u666e\u901a\u6ce8\u89e3\uff0c \u8fd8\u652f\u6301\u4e0b\u9762\u51e0\u4e2a\u7279\u6b8a\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"////////////////////////////////////\n//\n//      \u6307\u5b9a\u6ce8\u89e3\u7684\u53ef\u7528\u8303\u56f4 @Target\n//\n//////////////////////////////////\n\n\u6307\u5b9a\u6ce8\u89e3\u5728\u4ec0\u4e48\u5730\u65b9\u7528\uff0c\u4f8b\u5982\u7528\u4e8e\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e00\u4e2a\u57df\n@Target({\nTYPE,     \u7c7b\nFIELD,     \u5b57\u6bb5\nMETHOD,  \u65b9\u6cd5\nPARAMETER,   \u53c2\u6570\nCONSTRUCTOR, \u6784\u9020\u5668\n LOCAL_VARIABLE  \u5c40\u90e8\u53d8\u91cf\n})\n\n//////////////////////////////\n//\n//     \u6307\u5b9a\u6ce8\u89e3\u7684\u53ef\u7528\u58f0\u660e\u5468\u671f @Retention\n//\n/////////////////////////////////////\n\n// \u6307\u5b9a\u6ce8\u89e3\u5728\u54ea\u4e00\u4e2a\u7ea7\u522b\u53ef\u7528\n\n@Retention(RetentionPolicy.SOURCE)    //\u6ce8\u89e3\u53ea\u5728\u6e90\u7801\u7ea7\u522b\u6709\u6548\n@Retention(RetentionPolicy.CLASS)      //\u6ce8\u89e3\u5728\u5b57\u8282\u7801\u7ea7\u522b\u6709\u6548(\u7f16\u8bd1\u6210\u5b57\u8282\u7801\u540e\u8fd8\u4fdd\u7559\u6ce8\u89e3\u4fe1\u606f)\n                                    // \u9ed8\u8ba4\u503c\n@Retention(RetentionPolicy.RUNTIME)   \u6ce8\u89e3\u5728\u8fd0\u884c\u65f6\u671f\u6709\u6548(\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u53bb\u83b7\u53d6\u6ce8\u89e3\u4fe1\u606f, \u5e38\u7528)\n\n/////////////////////\n//\n//      \u6ce8\u89e3\u5305\u542b\u8fdbjavadoc\u4e2d @Documented\n//\n/////////////////////////////\n\n@Documented\n\n///////////////////////\n//\n//      \u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u6ce8\u89e3 @Inherited\n//\n///////////////////////\n\n// \u5bf9\u4e8e\u88ab\u6807\u6ce8\u7684\u6ce8\u89e3\uff0c\u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u8be5\u6ce8\u89e3\n@Inherited\n\n\n/////////////////////////\n//\n//      \u62d3\u5c55: @Constraint(validatedBy = {XXXXValidator.class})\n//\n/////////////////////////\n\n// \u5bf9\u6ce8\u89e3\u6807\u6ce8\u7684\u5b57\u6bb5\u8fdb\u884c\u6821\u9a8c\n\n")),(0,r.kt)("h2",{id:"73-\u6ce8\u89e3\u53cd\u5c04"},"7.3. \u6ce8\u89e3\u53cd\u5c04"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u6ce8\u89e3\u53cd\u5c04\u8981\u8bbe\u7f6e\u6ce8\u89e3\u5728\u8fd0\u884c\u65f6\u6709\u6548\uff0c\u5373\uff1a\u5728\u521b\u5efa\u6ce8\u89e3\u65f6\u52a0\u4e0a\uff1a @Retention(RetentionPolicy.RUNTIME)   \u6ce8\u89e3\u5728\u8fd0\u884c\u65f6\u671f\u6709\u6548\n@Id\n@Author(remark = "\u4fdd\u5b58\u4fe1\u606f\uff01\uff01\uff01", age = 19)\npublic void save() throws Exception {\n    // \u83b7\u53d6\u6ce8\u89e3\u4fe1\u606f\uff1a name/age/remark\n    // 1. \u5148\u83b7\u53d6\u4ee3\u8868\u65b9\u6cd5\u7684Method\u7c7b\u578b;\n    Class clazz = App_2.class;\n    Method m = clazz.getMethod("save");\n    // 2. \u518d\u83b7\u53d6\u65b9\u6cd5\u4e0a\u7684\u6ce8\u89e3\n    Author author = m.getAnnotation(Author.class);\n    // \u83b7\u53d6\u8f93\u51fa\u6ce8\u89e3\u4fe1\u606f\n    System.out.println(author.authorName());\n    System.out.println(author.age());\n    System.out.println(author.remark());\n}\n\n\n')),(0,r.kt)("h2",{id:"74-\u770b\u4e00\u4e2a\u4f8b\u5b50\u4f18\u5316-dao-\u89e3\u51b3\u5b57\u6bb5\u548c\u5c5e\u6027\u4e0d\u4e00\u81f4"},"7.4. \u770b\u4e00\u4e2a\u4f8b\u5b50(\u4f18\u5316 dao-\u89e3\u51b3\u5b57\u6bb5\u548c\u5c5e\u6027\u4e0d\u4e00\u81f4)"),(0,r.kt)("p",null,"\u89e3\u51b3\u4f18\u5316\u7684\u95ee\u9898\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"\u5f53\u6570\u636e\u5e93\u8868\u540d\u4e0e\u7c7b\u540d\u4e0d\u4e00\u81f4\u3001"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:2},(0,r.kt)("li",{parentName:"ol"},"\u5b57\u6bb5\u4e0e\u5c5e\u6027\u4e0d\u4e00\u6837\u3001"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("ol",{parentName:"li",start:3},(0,r.kt)("li",{parentName:"ol"},"\u4e3b\u952e\u4e0d\u53eb id")))),(0,r.kt)("h3",{id:"741-\u901a\u8fc7\u6ce8\u89e3\u4f18\u5316-javabean"},"7.4.1. \u901a\u8fc7\u6ce8\u89e3\u4f18\u5316 JavaBean"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//admin\u7c7b\uff0c\u7ecf\u8fc7\u6ce8\u89e3\u4f18\u5316\n// Admin=a_admin\u8868\u540d\n@Table(tableName="a_admin")\npublic class Admin {\n    @Id//\u4e3b\u952e\n    @Column(columnName = "a_id")\n    private int id;\n\n    @Column(columnName = "a_userName")\n    private String userName;\n\n    @Column(columnName = "a_pwd")\n    private String pwd;\n\n   getter&setter\n\n    @Override\n    public String toString() {\n        return "Admin [id=" + id + ", pwd=" + pwd + ", userName=" + userName\n                + "]";\n    }\n}\n\n')),(0,r.kt)("h3",{id:"742-\u6cdb\u578b\u53cd\u5c04\u4f18\u5316-basedao"},"7.4.2. \u6cdb\u578b\u53cd\u5c04\u4f18\u5316 BaseDao"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n// baseDao\u7c7b\npublic class BaseDao<T> {\n    // \u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u7c7b\u578b\n    private Class<T> clazz;\n    // \u8868\u540d\n    private String tableName;\n    // \u4e3b\u952e\n    private String id_primary;\n    // \u62ff\u5230\u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u53c2\u6570\u5316\u7c7b\u578b\u4e2d\u5b9e\u9645\u7684\u7c7b\u578b  ( BaseDao<Admin> ,  Admin.class)\n    public BaseDao(){\n        //**\u83b7\u53d6parent\u7684\u53c2\u6570\u5316\u7c7b\u578b\n        Type type = this.getClass().getGenericSuperclass();\n        ParameterizedType pt = (ParameterizedType) type;\n        Type[] types = pt.getActualTypeArguments();\n\n        clazz = (Class<T>) types[0];//\u5230\u6b64, \u5df2\u7ecf\u62ff\u5230\uff1a  Admin.class\n\n        /*******1. \u83b7\u53d6\u8868\u540d*******/\n        Table table = clazz.getAnnotation(Table.class);\n        tableName = table.tableName();\n\n        /*******2. \u83b7\u53d6\u4e3b\u952e\u5b57\u6bb5*******/\n        //\u83b7\u53d6\u5f53\u524d\u8fd0\u884c\u7c7b\u7684\u6240\u6709\u5b57\u6bb5\u3001\u904d\u5386\u3001\u83b7\u53d6\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u4e0a\u7684id\u6ce8\u89e3\n        Field[] fs = clazz.getDeclaredFields();\n        for (Field f : fs) {\n            // \u8bbe\u7f6e\u5f3a\u5236\u8bbf\u95ee\n            f.setAccessible(true);\n\n            // \u83b7\u53d6\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u4e0a\u7684id\u6ce8\u89e3\n            Id anno_id = f.getAnnotation(Id.class);\n            if (anno_id != null) {// \u4e0d\u4e3anull, \u8bc1\u660e\u65f6\u4e3b\u952e\u5b57\u6bb5\n\n                Column column = f.getAnnotation(Column.class);\n                id_primary = column.columnName();\n                // \u8df3\u51fa\u5faa\u73af\n                break;\n            }\n        }\n        System.out.println("\u8868\uff1a" + tableName);\n        System.out.println("\u4e3b\u952e\uff1a" + id_primary);\n    }\n\n    public T findById(int id){\n        try {\n            String sql = "select * from " + tableName + " where " + id_primary +"=?";\n            /*\n             * DbUtils\u7684\u5df2\u7ecf\u5c01\u88c5\u597d\u7684\u5de5\u5177\u7c7b\uff1aBeanHandler?   \u5c5e\u6027=\u5b57\u6bb5\n             */\n            return JdbcUtils.getQueryRunner().query(sql, new BeanHandler<T>(clazz), id);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n\n\n    public List<T> getAll(){\n        try {\n            String sql = "select * from " + tableName;\n            return JdbcUtils.getQuerrRunner().query(sql, new BeanListHandler<T>(clazz));\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n\n')),(0,r.kt)("h3",{id:"743-\u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6-handler"},"7.4.3. \u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6 handler"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n * \u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6\uff1a\u5c01\u88c5\u5355\u4e2aBean\u5bf9\u8c61\n */\nclass BeanHandler<T> implements ResultSetHandler<T>{\n    // \u4fdd\u5b58\u4f20\u5165\u7684\u8981\u5c01\u88c5\u7684\u7c7b\u7684\u5b57\u8282\u7801\n    private Class<T> clazz;\n    public BeanHandler(Class<T> clazz) {\n        this.clazz = clazz;\n    }\n\n    // \u5c01\u88c5\u7ed3\u679c\u96c6\u7684\u65b9\u6cd5\n    @Override\n    public T handle(ResultSet rs) throws SQLException {\n        try {\n            // \u521b\u5efa\u8981\u5c01\u88c5\u7684\u5bf9\u8c61  \u20181\u2019\n            T t = clazz.newInstance();\n            // \u5411\u4e0b\u8bfb\u4e00\u884c\n            if (rs.next()) {\n                // a. \u83b7\u53d6\u7c7b\u7684\u6240\u6709\u7684Field\u5b57\u6bb5\u6570\u7ec4\n                Field[] fs = clazz.getDeclaredFields();\n                // b. \u904d\u5386\uff0c \u5f97\u5230\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7c7b\u578b\uff1aField\n                for (Field f : fs) {\n                    // c. \u83b7\u53d6\u201d\u5c5e\u6027\u540d\u79f0\u201c\uff0cattention: \u4e0d\u662f\u6ce8\u89e3\u91cc\u7684\u5b57\u6bb5\u540d\n                    String fieldName = f.getName();\n                    // e. \u83b7\u53d6Field\u5b57\u6bb5\u4e0a\u6ce8\u89e3\n                    Column column =  f.getAnnotation(Column.class);\n                 // \u6570\u636e\u5e93\u4e2d\u5b57\u6bb5 a_userName\n                    String columnName = column.columnName();\n                    // g. \u5b57\u6bb5\u503c\n                    Object columnValue = rs.getObject(columnName);\n\n                    // \u8bbe\u7f6e\uff08BeanUtils\u7ec4\u4ef6\uff09\n                    BeanUtils.copyProperty(t, fieldName, columnValue);\n                }\n            }\n            return t;\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n/**\n * \u81ea\u5b9a\u4e49\u7ed3\u679c\u96c6\uff1a\u5c01\u88c5\u591a\u4e2aBean\u5bf9\u8c61\u5230List\u96c6\u5408\n */\nclass BeanListHandler<T> implements ResultSetHandler<List<T>>{\n    // \u8981\u5c01\u88c5\u7684\u5355\u4e2a\u5bf9\u8c61\n    private Class<T> clazz;\n    public BeanListHandler(Class<T> clazz){\n        this.clazz = clazz;\n    }\n    // \u628a\u4ece\u6570\u636e\u5e93\u67e5\u8be2\u5230\u7684\u6ca1\u4e00\u884c\u8bb0\u5f55\uff0c\u5c01\u88c5\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u518d\u63d0\u4ea4\u5230list\u96c6\u5408\uff0c \u8fd4\u56deList<T>\n    @Override\n    public List<T> handle(ResultSet rs) throws SQLException {\n        List<T> list = new ArrayList<T>();\n        try {\n            // \u5411\u4e0b\u8bfb\u4e00\u884c\n            while (rs.next()) {\n                // \u521b\u5efa\u8981\u5c01\u88c5\u7684\u5bf9\u8c61  \u20181\u2019\n                T t = clazz.newInstance();\n                // a. \u83b7\u53d6\u7c7b\u7684\u6240\u6709\u7684Field\u5b57\u6bb5\u6570\u7ec4\n                Field[] fs = clazz.getDeclaredFields();\n                // b. \u904d\u5386\uff0c \u5f97\u5230\u6bcf\u4e00\u4e2a\u5b57\u6bb5\u7c7b\u578b\uff1aField\n                for (Field f : fs) {\n                    // c. \u83b7\u53d6\u201d\u5c5e\u6027\u540d\u79f0\u201c\n                    String fieldName = f.getName();\n                    // e. \u83b7\u53d6Field\u5b57\u6bb5\u4e0a\u6ce8\u89e3\n                    Column column =  f.getAnnotation(Column.class);\n                    // f. \u201d\u5b57\u6bb5\u540d\u201c\n                    String columnName = column.columnName();\n                    // g. \u5b57\u6bb5\u503c\n                    Object columnValue = rs.getObject(columnName);\n                    // \u8bbe\u7f6e\uff08BeanUtils\u7ec4\u4ef6\uff09\n                    BeanUtils.copyProperty(t, fieldName, columnValue);\n                }\n                // \u5bf9\u8c61\u6dfb\u52a0\u5230\u96c6\u5408\n                list.add(t);\n            }\n            return list;\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n\n\n")),(0,r.kt)("h1",{id:"8-io"},"8. io"),(0,r.kt)("p",null,"\u64cd\u4f5c io \u5b57\u8282\u5e8f\u5217\u5316\u5e93: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/EsotericSoftware/kryo"},"https://github.com/EsotericSoftware/kryo")),(0,r.kt)("h2",{id:"81-io\u603b\u7ed3"},"8.1. io\u603b\u7ed3"),(0,r.kt)("p",null,"io \u6709\u8fd9\u51e0\u79cd\u7528\u6cd5:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u63a5\u53d7\u4e00\u4e2a\u8fde\u63a5\uff0c\u8bfb\u53d6\u6570\u636e\uff0c\u5904\u7406\u4e1a\u52a1\uff0c\u5199\u56de\u7ed3\u679c\uff0c\u518d\u63a5\u53d7\u4e0b\u4e00\u4e2a\u8fde\u63a5\uff0c\u8fd9\u662f\u540c\u6b65\u963b\u585e\u3002\u8fd9\u79cd\u7528\u6cd5\u51e0\u4e4e\u6ca1\u6709\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e00\u4e2a\u7ebf\u7a0b\u548c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u8fd0\u884cselector\uff0c\u5c06\u6240\u6709 channel \u6ce8\u518c\u5230\u591a\u8def\u590d\u7528\u9009\u62e9\u5668\u4e0a\uff0c\u5982\u679cchannel \u4e2d\u6709\u6570\u636e\u4e86, \u5c31\u4ece\u7ebf\u7a0b\u6c60\u4e2d\u62ff\u5230\u4e00\u4e2a\u7ebf\u7a0b\u5904\u7406, \u4e5f\u5c31\u662f\u591a\u8def\u590d\u7528\uff0c\u8fd9\u662f\u540c\u6b65\u975e\u963b\u585e\u3002\u4e5f\u5c31\u662f java nio \u7684\u539f\u7406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e00\u4e2a\u7ebf\u7a0b\u548c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u7ebf\u7a0b\u6ce8\u518c\u4e00\u4e2aaccept\u56de\u8c03\uff0c\u7cfb\u7edf\u5e2e\u6211\u4eec\u63a5\u53d7\u597d\u8fde\u63a5\u540e\uff0c\u624d\u89e6\u53d1\u56de\u8c03\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\uff0c\u6267\u884c\u65f6\u518d\u6ce8\u518cread\u56de\u8c03\uff0c\u7cfb\u7edf\u5e2e\u6211\u4eec\u63a5\u53d7\u597d\u6570\u636e\u540e\uff0c\u624d\u89e6\u53d1\u56de\u8c03\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\uff0c\u5c31\u662fAIO\uff0c\u8fd9\u662f\u5f02\u6b65\u975e\u963b\u585e"))),(0,r.kt)("p",null,"redis\u4e5f\u662f\u591a\u8def\u590d\u7528\uff0c\u4f46\u5b83\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6267\u884cselect\u64cd\u4f5c\uff0c\u5904\u7406\u5c31\u7eea\u7684\u8fde\u63a5\uff0c\u6574\u4e2a\u662f\u4e32\u884c\u5316\u7684\uff0c\u6240\u4ee5\u5929\u7136\u4e0d\u5b58\u5728\u5e76\u53d1\u95ee\u9898\u3002\u53ea\u80fd\u628a\u5b83\u5f52\u4e3a\u540c\u6b65\u963b\u585e\u4e86\u3002"),(0,r.kt)("h2",{id:"82-socket-\u7f51\u7edc\u7f16\u7a0b"},"8.2. socket \u7f51\u7edc\u7f16\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u7cfb\u7edf\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c \u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff1a\n *\n * - \u6570\u636e\u4f20\u8f93.  - \u501f\u52a9 tcp/ip \uff08\u53ef\u9760\uff0c \u6027\u80fd\u8f83\u5dee\uff09, \u6216 udp/ip \u534f\u8bae \uff08\u6570\u636e\u4e22\u5931\uff0c \u4e71\u5e8f\uff0c \u4f46\u662f\u6027\u80fd\u66f4\u597d\uff09\n *\n * - \u6570\u636e\u5904\u7406\uff08\u8bfb\u53d6or \u5199\u5165\uff09 - \u540c\u6b65io \u6216\u8005 \u5f02\u6b65io\n *\n *      - \u540c\u6b65io\u5206\u4e3a bio, nio\n *\n *          bio - \u67d0\u4e2a thread \u5f53\u53d1\u8d77io\u64cd\u4f5c, \u4e3a\u963b\u585e\u65b9\u5f0f \uff08cpu \u4e00\u76f4\u7a7a\u95f2\u7b49\u5f85\uff09\uff0c\u76f4\u5230\u8bfb\u53d6\u5230 \u6d41 or \u5c06 \u6d41\u5199\u5165\u5230\u64cd\u4f5c\u7cfb\u7edf\u624d\u4f1a\u91ca\u653e\u8d44\u6e90\uff0c \u671f\u95f4\u72ec\u5360\u8d44\u6e90\uff0c \u5176\u4ed6\u9700\u8981\u4f7f\u7528\u5171\u4eab\u8d44\u6e90\u7684thread\u5747\u7b49\u5f85\n *\n *          nio - \u57fa\u4e8e"\u4e8b\u4ef6\u9a71\u52a8" \u601d\u60f3\uff0c \u901a\u8fc7 Reactor\u6a21\u5f0f \u5b9e\u73b0 \u3002 \u67d0\u4e2a thread \u8fdb\u884c \u8bfb or \u5199\u64cd\u4f5c \u5747\u4e3a \u975e\u963b\u585e\u7684 \uff08cpu \u53bb\u5904\u7406\u5176\u4ed6\u4efb\u52a1\uff09\u3002 \u5f53 socket \u6709 stream \u53ef\u8bfb \u6216 \u6709 stream \u5f85\u88ab \u5199\u5165 socket\n *          \u65f6, \u53d1\u51fa\u4e8b\u4ef6(\u5982 \u8fde\u63a5\u5efa\u7acb\u4e8b\u4ef6, \u6d41\u8bfb\u53d6\u4e8b\u4ef6, \u6d41\u5199\u5165\u4e8b\u4ef6), \u7531\u64cd\u4f5c\u7cfb\u7edf\u901a\u77e5 app\u6765\u5904\u7406\n *\n *      - \u5f02\u6b65io \u5206\u4e3a aio\n *\n *          aio - \u540c\u6837\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8, \u901a\u8fc7 Proactor\u6a21\u5f0f\u5b9e\u73b0;\n *          \u548cnio\u5bf9\u6bd4, 1. \u7b80\u5316\u7f16\u7a0b, io\u64cd\u4f5c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210, app\u53ea\u8981\u8c03\u7528api\u5373\u53ef; 2. \u7701\u7565\u4e86 nio\u4e2d\u9700\u8981\u904d\u5386 \u4e8b\u4ef6\u901a\u77e5\u961f\u5217(Selector)\n *          \u7684\u65f6\u95f4\n *\n * \u8fd9\u6837\u7ec4\u5408\u7684\u8bdd, \u6709\u56db\u79cd\u901a\u4fe1\u65b9\u5f0f: tcp/ip + bio, tcp/ip  + nio, udp/ip + bio, udp/ip + nio\n *\n * *************************************************************************************************\n *\n * \u4e0b\u9762\u662f bio + tcp \u65b9\u5f0f\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Client {\n\n    //private String url = "127.0.0.1";\n    //private int port = 9527;\n    private Socket socket;\n    private BufferedReader readerOnServer;\n    private PrintWriter printerOnServer;\n    private BufferedReader readerOnCli;\n\n    public void init(String url, int port) throws IOException {\n        socket = new Socket(url, port);\n        readerOnServer = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n        printerOnServer = new PrintWriter(socket.getOutputStream(), true);\n        readerOnCli   = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    public void start() throws IOException {\n        while (true) {\n            String line = readerOnCli.readLine();\n            // exit\n            if (testExit(line)) {\n                break;\n            }\n\n            System.out.println(">>> send to server: " + line);\n            // send to server\n            printerOnServer.println(line);\n\n            // receive from server\n            String respLine = readerOnServer.readLine();\n            System.out.println(">>> receive from server: " + respLine);\n        }\n    }\n\n    private boolean testExit(String test) throws IOException {\n        if (StringUtils.isBlank(test) || "exit".equalsIgnoreCase(test)) {\n            printerOnServer.write("exit");\n            close();\n            System.out.println(">>> client exit.");\n            return true;\n        }\n        return false;\n    }\n\n    private void close() throws IOException {\n        printerOnServer.close();\n        readerOnCli.close();\n        readerOnServer.close();\n        socket.close();\n    }\n\n    public static void main(String[] args) throws IOException {\n        Client client = new Client();\n        client.init("127.0.0.1", 9527);\n        client.start();\n    }\n}\n\n/**\n * \u8fd9\u4e2a server \u53ea\u652f\u6301 \u5355\u4e2a client \u8fde\u63a5\n *\n * \u591a\u4e2a client \u8fde\u63a5 server\u600e\u4e48\u529e? \u9996\u5148\u8981 pass \u6389 "\u5728 server \u4e2d \u521b\u5efa\u591a\u4e2a socket"\u7684\u60f3\u6cd5, \u56e0\u4e3a \u751f\u6210 socket \u662f\u975e\u5e38\u91cd\u7684\u64cd\u4f5c, \u5360\n * \u7528server\u8d44\u6e90\u975e\u5e38\u591a\n *\n * \u901a\u5e38\u7528\u91c7\u7528 "\u8fde\u63a5\u6c60", \u597d\u5904\u662f \ud83d\udc36 \u80fd\u591f\u9650\u5236\u521b\u5efa\u7684 socket\u4e2a\u6570; \ud83d\udc36 \u907f\u514d\u91cd\u590d\u521b\u5efa socket\n * \u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u8fd8\u662f\u6709\u95ee\u9898: \u8fde\u63a5\u6c60\u4e2d socket \u603b\u662f\u6709\u9650\u7684\u603b\u6709\u4e0d\u591f\u7528\u7684\u65f6\u5019; server \u9700\u8981\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4, \u9632\n * \u6b62 server \u8fde\u5e26 client\u6302\u6389\n *\n * \u5982\u679c\u8981\u652f\u6301\u591a\u4e2a client \u8fde\u63a5\uff0c \u53ef\u91c7\u7528 \u7ebf\u7a0b\u6c60\uff0c \u6bcf\u4e2a socket \u65b0\u5f00\u4e00\u4e2a thread\u3002 \u8fd9\u4e48\u505a\u6709\u7f3a\u70b9\uff1a \u65e0\u8bba\u662f\u5426\u662f\u6709\u6548\u8bf7\u6c42\uff0c server\n * \u90fd\u8981\u8017\u8d39\u4e00\u4e2a thread\n * \u5473\u4e86\u907f\u514d \u8fc7\u591a\u7684 thread \u8017\u5c3d server\u7684\u8d44\u6e90\uff0c \u7ebf\u7a0b\u6c60\u5fc5\u987b\u662f\u9650\u5b9a\u5927\u5c0f\u7684\u3002 <=> \u91c7\u7528 bio \u65b9\u5f0f\u7684 server \u652f\u6491\u7684\u8fde\u63a5\u6570\u662f\u6709\u9650\u7684\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Server {\n\n    //private ServerSocket serverSocket;\n    //private BufferedReader readerFromClient;\n    //private PrintWriter writerToClient;\n    //\n    //public void initBlock(int port) throws IOException {\n    //    this.serverSocket = new ServerSocket(port);\n    //    this.readerFromClient = new BufferedReader(new InputStreamReader(serverSocket.accept().getInputStream()));\n    //}\n\n    public static void main(String[] args) throws IOException, InterruptedException {\n        int port = 9527;\n        ServerSocket socketServer = new ServerSocket(port);\n        socketServer.setSoTimeout(60 * 1000); // unit : milliseconds\n        System.out.println(">>> server listen on port: " + port);\n        Socket socketClient = socketServer.accept(); // start\n\n        BufferedReader readerFromClient = new BufferedReader(new InputStreamReader(socketClient.getInputStream()));\n        //BufferedWriter writerToClient   = new BufferedWriter(new OutputStreamWriter(socketClient.getOutputStream()));\n        PrintWriter writerToClient = new PrintWriter(socketClient.getOutputStream(), true);\n\n        while (true) {\n            String line = readerFromClient.readLine(); // start\n\n            if (StringUtils.isBlank(line)) {// read nothing\n                Thread.sleep(100);\n                continue;\n            }\n            if ("exit".equalsIgnoreCase(line)) {\n                // close\n                readerFromClient.close();\n                writerToClient.close();\n                socketServer.close();\n\n                System.out.println(">>> server exit");\n                break;\n            }\n\n            System.out.println(">>> msg from client: " + line);\n\n            writerToClient.println(line);\n            System.out.println(">>> msg to client: " + line);\n            Thread.sleep(100);\n        }\n        System.exit(0);\n\n    }\n}\n\n/////////////////////////////////////////////\n\n/**\n * \u57fa\u4e8e\u6d88\u606f\u7684\u65b9\u5f0f\u5b9e\u73b0\u901a\u4fe1;\n * \u6570\u636e\u4f20\u8f93: tcp/ip\n * \u6570\u636e\u5904\u7406: nio\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Client {\n\n    //private Selector selector;\n    //\n    //public void init(String ip, int port) throws IOException {\n    //    SocketChannel socketChannel = SocketChannel.open();\n    //    socketChannel.configureBlocking(false); // configure channel as non blocking\n    //    socketChannel.connect(new InetSocketAddress(ip, port));// \u5bf9\u4e8e non blocking io, \u7acb\u5373\u8fd4\u56de false, \u8868\u793a\u8fde\u63a5\u5efa\u7acb\u4e2d\n    //                                            // \u7528channel.finishConnect();\u624d\u80fd\u5b8c\u6210\u8fde\u63a5\n    //    Selector selector = Selector.open();\n    //    socketChannel.register(selector, SelectionKey.OP_CONNECT);\n    //}\n    //\n    //public void listen() {\n    //\n    //}\n\n    public static void main(String[] args) throws IOException {\n        String ip = "127.0.0.1";\n        int port = 9527;\n\n        SocketChannel socketChannel = SocketChannel.open();\n        socketChannel.configureBlocking(false); // configure channel as non blocking\n        // \u4f1a\u7acb\u5373\u8fd4\u56de false, \u8868\u793a\u8fde\u63a5\u5efa\u7acb\u4e2d; \u8c03\u7528channel.finishConnect()\u624d\u80fd\u5b8c\u6210\u8fde\u63a5\n        socketChannel.connect(new InetSocketAddress(ip, port));\n\n        // register socket channel with selector, \u5e76\u6307\u5b9a\u53ea\u5bf9 \u8fde\u63a5 \u611f\u5174\u8da3\n        Selector selector = Selector.open();\n        socketChannel.register(selector, SelectionKey.OP_CONNECT);\n\n        BufferedReader readerOnCli = new BufferedReader(new InputStreamReader(System.in));\n        while (true) {\n            if (socketChannel.isConnected()) {// connection is established; send msg to server\n                String line = readerOnCli.readLine();\n                socketChannel.write(StandardCharsets.UTF_8.encode(line));\n\n                if ("exit".equalsIgnoreCase(line)) {\n                    // exit\n                    readerOnCli.close();\n                    socketChannel.close();\n                    selector.close();\n                    System.out.println(">>> client exit.");\n                    break;\n                }\n            }\n\n            // receive from server\n            selector.select(60 * 1000);// timeout = 60 s\n            Iterator<SelectionKey> it = selector.selectedKeys().iterator();\n            while (it.hasNext()) {\n                SelectionKey key = it.next();\n                it.remove();// remove current key from key set to avoid repetition\n\n                if (key.isConnectable()) {// event: \u8fde\u63a5\u4e8b\u4ef6\n                    SocketChannel sc = (SocketChannel) key.channel();\n                    sc.configureBlocking(false);\n                    // - \u8fd9\u65f6, sc \u5bf9 read \u4e8b\u4ef6\u4e5f\u611f\u5174\u8da3\u4e86;\n                    // - \u4e00\u822c\u4e0d\u4f1a\u76f4\u63a5\u6ce8\u518c write \u4e8b\u4ef6 \u56e0\u4e3a\u5728 buffer \u672a\u6ee1\u65f6\u4e00\u76f4\u662f\u53ef\u5199\u7684, \u56e0\u6b64\u5982\u679c\u5728\u6ce8\u518c\u4e86 write \u4e8b\u4ef6\u800c\u53c8\u4e0d\u4f7f\u7528\n                    //   \u5b83\u65f6 cpu \u6d88\u8017\u53ef\u80fd\u4f1a100%\n                    sc.register(selector, SelectionKey.OP_READ);\n\n                    if (sc.isConnectionPending()) {// \u5982\u679c\u8fde\u63a5\u8fd8\u6ca1\u5b8c\u6210\uff0c\u5219\u5b8c\u6210\u8fde\u63a5\u7684\u5efa\u7acb\n                        sc.finishConnect();\n                    }\n                } else if (key.isReadable()) {// reading event\n                    SocketChannel sc = (SocketChannel) key.channel();\n                    ByteBuffer    buffer = ByteBuffer.allocate(1024);\n\n                    int numRead = 0;\n                    try {\n                        int tmp = 0;\n                        try {\n                            // read \u64cd\u4f5c\u662f block \u7684\uff0c \u8bfb\u53d6\u5230\u672b\u5c3e\uff0c \u8fd4\u56de -1\n                            while ((tmp = sc.read(buffer)) > 0) {\n                                numRead += tmp;\n                            }\n                        } finally {\n                            buffer.flip();\n                        }\n\n                        if (numRead > 0) {\n                            System.out.println(">>> msg from server: " + StandardCharsets.UTF_8.decode(buffer).toString());\n                            buffer = null;\n                        }\n                    } finally {\n                        if (buffer != null) {\n                            buffer.clear();\n                        }\n                    }\n\n                }\n            }\n\n        }\n    }\n}\n\n/**\n * tcp + nio\n * \n * @author xiaoyu\n * @since 1.0\n */\npublic class Server {\n    public static void main(String[] args) throws IOException {\n        int                 port              = 9527;\n        InetSocketAddress   inetSocketAddress = new InetSocketAddress(port);\n        ServerSocketChannel ssc               = ServerSocketChannel.open();\n        ssc.configureBlocking(false);\n        ssc.socket().bind(inetSocketAddress);// retrieve server socket and bind to port\n\n        // - register server socket channel with selector;\n        //      - `selector.select()` will return directly instead of blocking if `OP_ACCEPT` occurred;\n        //      - OP_ACCEPT means the type of the registration; in this case, selector merely reports that a client\n        //          attempts a connection to the server; (Other possible options are: OP_CONNECT, which will be used by the client; OP_READ; and OP_WRITE.)\n        Selector selector = Selector.open();\n        ssc.register(selector, SelectionKey.OP_ACCEPT);\n        System.out.println(">>> server listen on port: " + port);\n\n        outLoop:\n        while (true) {\n            selector.select(60 * 1000); // block, wait for events recorded on the selector; timeout: 60s\n\n            // work on selected keys\n            Iterator<SelectionKey> it = selector.selectedKeys().iterator();\n            while (it.hasNext()) {\n                SelectionKey key = it.next();\n                it.remove();// prevent the same key coming up again\n\n                if (!key.isValid()) {\n                    continue;\n                }\n                if (key.isAcceptable()) {// event: the associated client request a connection\n                    // retrieve server socket channel from selector\n                    ServerSocketChannel serverSocketChannel = (ServerSocketChannel) key.channel();\n                    // create a socket channel which accepts the connection, creates a standard java socket\n                    SocketChannel socketChannel = serverSocketChannel.accept();\n                    socketChannel.configureBlocking(false);\n                    System.out.println(">>> connected to: " + socketChannel.socket().getRemoteSocketAddress());\n\n                    // register socket channel with selector, \u8fd9\u4e2a channel\u53ea\u5bf9 read \u611f\u5174\u8da3\n                    socketChannel.register(selector, SelectionKey.OP_READ);\n                } else if (key.isReadable()) {// event: the server can read\n                    SocketChannel sc     = (SocketChannel) key.channel();\n                    ByteBuffer    buffer = ByteBuffer.allocate(1024);\n\n                    int readBytes = 0;\n                    try {\n                        int tmp =  0;\n                        try {\n                            while ((tmp = sc.read(buffer)) > 0) {\n                                readBytes += tmp;\n                            }\n                        } finally {\n                            buffer.flip();\n                        }\n\n                        if (readBytes > 0) {\n                            String data = StandardCharsets.UTF_8.decode(buffer).toString();\n                            System.out.println(">>> receive from client: " + data);\n\n                            if ("exit".equalsIgnoreCase(data)) {\n                                sc.close();\n                                selector.close();\n                                System.out.println(">>> server closed");\n                                break outLoop;  // \u642c\u5230\u8fd9\u91cc\u5c31ok\u4e86\n                            }\n\n                            sc.write(StandardCharsets.UTF_8.encode(data));\n                            System.out.println(">>> send to client: " + data );\n                        }\n                    } finally {\n                        if (buffer != null) {\n                            buffer.clear();\n                        }\n                    }\n\n                    //byte[] data = new byte[numRead];\n                    //System.arraycopy(buffer, 0, data, 0, numRead);\n                    //java.lang.String data = new java.lang.String(buffer.array());\n                    //System.out.println(">>> receive from client: " + data);\n\n                    //if ("exit".equalsIgnoreCase(data)) {\n                    //    sc.close();\n                    //    selector.close();\n                    //    System.out.println(">>> server closed");\n                    //    break outLoop;  // \u5b58\u7591 \u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f client \u53d1\u9001 exit\uff0c \u8fd9\u91cc\u540e\u9762\u7684\u4ee3\u7801\u4ecd\u65e7\u4f1a\u6267\u884c\n                    //}\n\n                    // send msg to client\n                    //sc.write(StandardCharsets.UTF_8.encode(data));\n                    //System.out.println(">>> send to client: " + data );\n                }\n            }\n        }\n    }\n}\n\n///////////////////////////////////////////\n\n/**\n * udp \u901a\u4fe1\u65e0\u9700\u5efa\u7acb\u8fde\u63a5\uff0c \u6240\u4ee5\u65e0\u6cd5\u53cc\u5411\u901a\u4fe1\uff0c \u5982\u9700\u53cc\u5411\u901a\u4fe1\uff0c \u4e24\u7aef\u90fd\u5fc5\u987b\u662f server, \u4e5f\u5c31\u662f client \u4e5f\u8981\u6709\u76d1\u542c\u7aef\u53e3\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Client {\n    public static void main(String[] args) throws Exception {\n        int            remotePort          = 9527;// \u8fdc\u7a0b server \u7aef\u53e3\n        int            listenPort         = 9528;// \u672c\u5730\u76d1\u542c\u7aef\u53e3\n\n        DatagramSocket listenSocket  = new DatagramSocket(listenPort);\n        byte[]         buffer        = new byte[65507];\n        DatagramPacket receivePacket = new DatagramPacket(buffer, buffer.length);// \u63a5\u6536\u6570\u636e\u6d41\u5bf9\u8c61\n\n        DatagramSocket socket   = new DatagramSocket();\n        InetAddress    remoteAddr   = InetAddress.getByName("localhost");\n        BufferedReader systemIn = new BufferedReader(new InputStreamReader(System.in));\n        System.out.println(">>> client listen on port : " + listenPort);\n        while (true) {\n            String         line      = systemIn.readLine();\n            byte[]         lineBytes = line.getBytes(StandardCharsets.UTF_8);\n            DatagramPacket packetToRemote    = new DatagramPacket(lineBytes, lineBytes.length, remoteAddr, remotePort);// \u4f20\u9001\u6570\u636e\u6d41\u5bf9\u8c61\n            socket.send(packetToRemote);\n            System.out.println(">>> send to server: " + line);\n\n            if ("exit".equalsIgnoreCase(line.trim())) {\n                System.out.println(">>> Client quit!");\n                socket.close();\n                listenSocket.close();\n                break;\n            }\n\n            listenSocket.receive(receivePacket);\n            String receiveResponse = new String(receivePacket.getData(),\n                    0, receivePacket.getLength(), StandardCharsets.UTF_8);\n            System.out.println(">>> receive from server: " + receiveResponse);\n        }\n    }\n}\n\n\n/**\n * @author xiaoyu\n * @since 1.0\n */\npublic class Server {\n    public static void main(String[] args) throws Exception{\n        int            listenPort          =9527;\n        int            remotePort         =9528;\n        DatagramSocket server        =new DatagramSocket(listenPort);\n        DatagramSocket client        =new DatagramSocket();\n        InetAddress    serverAddress =InetAddress.getByName("localhost");\n        byte[]         buffer        =new byte[65507];\n        DatagramPacket packet        =new DatagramPacket(buffer,buffer.length);\n        System.out.println(">>> server listen on port : " + listenPort);\n        while(true){\n            server.receive(packet);\n            String line=new String(packet.getData(),0,packet.getLength(), StandardCharsets.UTF_8);\n            if("exit".equalsIgnoreCase(line.trim())){\n                server.close();\n                client.close();\n                System.exit(0);\n            }\n            else{\n                System.out.println(">>> Message from client: "+ line);\n                packet.setLength(buffer.length);\n                byte[] lineBytes=line.getBytes(StandardCharsets.UTF_8);\n                DatagramPacket responsePacket=new DatagramPacket(lineBytes,lineBytes.length,serverAddress,remotePort);\n                client.send(responsePacket);\n                System.out.println(">>> send to client: " + line);\n                Thread.sleep(100);\n            }\n        }\n    }\n}\n\n////////////////////////////////////////////\n\n/**\n * DatagramChannel \u8d1f\u8d23\u76d1\u542c\u7aef\u53e3and\u8bfb\u5199; ByteBuffer \u6570\u636e\u4f20\u8f93\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Client {\n    public static void main(String[] args) throws Exception{\n        int listenPort=9528;\n        int remotePort=9527;\n\n        DatagramChannel receiveChannel=DatagramChannel.open();\n        receiveChannel.configureBlocking(false);\n        receiveChannel.socket().bind(new InetSocketAddress(listenPort));\n        Selector selector= Selector.open();\n        receiveChannel.register(selector, SelectionKey.OP_READ);\n\n        DatagramChannel sendChannel =DatagramChannel.open();\n        sendChannel.configureBlocking(false);\n        sendChannel.connect(new InetSocketAddress("127.0.0.1",remotePort));\n\n        BufferedReader systemIn =new BufferedReader(new InputStreamReader(System.in));\n\n        while(true){\n            String command=systemIn.readLine();\n            sendChannel.write(Charset.forName("UTF-8").encode(command));\n            if("quit".equalsIgnoreCase(command.trim())){\n                systemIn.close();\n                sendChannel.close();\n                selector.close();\n                System.out.println("Client quit!");\n                System.exit(0);\n            }\n            int nKeys=selector.select(1000);\n            if(nKeys>0){\n                for (SelectionKey key : selector.selectedKeys()) {\n                    if(key.isReadable()){\n                        ByteBuffer buffer= ByteBuffer.allocate(1024);\n                        DatagramChannel dc=(DatagramChannel) key.channel();\n                        dc.receive(buffer);\n                        buffer.flip();\n                        System.out.println(Charset.forName("UTF-8").decode(buffer).toString());\n                    }\n                }\n                selector.selectedKeys().clear();\n            }\n        }\n    }\n}\n\n/**\n * @author xiaoyu\n * @since 1.0\n */\npublic class Server {\n    public static void main(String[] args) throws Exception{\n        int rport=9527;\n        int sport=9528;\n\n        DatagramChannel sendChannel=DatagramChannel.open();\n        sendChannel.configureBlocking(false);\n        SocketAddress target =new InetSocketAddress("127.0.0.1",sport);\n        sendChannel.connect(target);\n\n        DatagramChannel receiveChannel =DatagramChannel.open();\n        DatagramSocket  serverSocket   =receiveChannel.socket();\n        serverSocket.bind(new InetSocketAddress(rport));\n        System.out.println("Data receive listen on port: "+rport);\n        receiveChannel.configureBlocking(false);\n        Selector selector= Selector.open();\n        receiveChannel.register(selector, SelectionKey.OP_READ);\n        while(true){\n            int nKeys=selector.select(1000);\n            if(nKeys>0){\n                for (SelectionKey key : selector.selectedKeys()) {\n                    if(key.isReadable()){\n                        ByteBuffer buffer= ByteBuffer.allocate(1024);\n                        DatagramChannel dc=(DatagramChannel) key.channel();\n                        dc.receive(buffer);\n                        buffer.flip();\n                        String message= Charset.forName("UTF-8").decode(buffer).toString();\n                        System.out.println("Message from client: "+ message);\n                        if("quit".equalsIgnoreCase(message.trim())){\n                            dc.close();\n                            selector.close();\n                            sendChannel.close();\n                            System.out.println("Server has been shutdown!");\n                            System.exit(0);\n                        }\n                        String outMessage="Server response\uff1a"+message;\n                        sendChannel.write(Charset.forName("UTF-8").encode(outMessage));\n                    }\n                }\n                selector.selectedKeys().clear();\n            }\n        }\n    }\n}\n\n\n')),(0,r.kt)("h2",{id:"83-\u963b\u585e-io"},"8.3. \u963b\u585e io"),(0,r.kt)("h3",{id:"831-\u4ec0\u4e48\u662f\u963b\u585e-io"},"8.3.1. \u4ec0\u4e48\u662f\u963b\u585e io"),(0,r.kt)("p",null,"IO : \u6307\u7684\u5c31\u662f\u5e94\u7528\u7a0b\u5e8f\u8bfb\u5165/\u5199\u51fa\u6570\u636e\u7684\u8fc7\u7a0b\uff0c\u548c\u7a0b\u5e8f\u7b49\u5f85\u8bfb\u5165/\u5199\u51fa\u6570\u636e\u7684\u8fc7\u7a0b\u3002\u4e00\u65e6\u62ff\u5230\u6570\u636e\u540e\u5c31\u53d8\u6210\u4e86\u6570\u636e\u64cd\u4f5c\u4e86\uff0c\u5c31\u4e0d\u662f IO \u4e86"),(0,r.kt)("p",null,"\u963b\u585eio: \u62ff\u7f51\u7edc IO \u6765\u8bf4\uff0c\u7b49\u5f85\u7684\u8fc7\u7a0b\u5c31\u662f\u6570\u636e\u4ece\u7f51\u7edc\u5230\u7f51\u5361\u518d\u5230\u5185\u6838\u7a7a\u95f4\u3002\u8bfb\u5199\u7684\u8fc7\u7a0b\u5c31\u662f\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7684\u76f8\u4e92\u62f7\u8d1d. \u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u80fd\u64cd\u4f5c\u7684\u6570\u636e\u4e5f\u90fd\u5728\u7528\u6237\u7a7a\u95f4\u3002\u53ea\u8981\u6570\u636e\u6ca1\u6709\u5230\u8fbe\u7528\u6237\u7a7a\u95f4\uff0c\u7528\u6237\u7ebf\u7a0b\u5c31\u64cd\u4f5c\u4e0d\u4e86. \u5982\u679c\u6b64\u65f6\u7528\u6237\u7ebf\u7a0b\u5df2\u7ecf\u53c2\u4e0e\uff0c\u90a3\u5b83\u4e00\u5b9a\u4f1a\u88ab\u963b\u585e\u5728 IO \u4e0a\u3002\u8fd9\u5c31\u662f\u5e38\u8bf4\u7684\u963b\u585e IO\u3002\u7528\u6237\u7ebf\u7a0b\u88ab\u963b\u585e\u5728\u7b49\u5f85\u6570\u636e\u4e0a\u6216\u62f7\u8d1d\u6570\u636e\u4e0a."),(0,r.kt)("p",null,"\u975e\u963b\u585e IO : \u5c31\u662f\u7528\u6237\u7ebf\u7a0b\u4e0d\u53c2\u4e0e\u4ee5\u4e0a\u4e24\u4e2a\u8fc7\u7a0b(\u6570\u636e\u4f20\u8f93, \u6570\u636e\u62f7\u8d1d)\uff0c\u5373\u6570\u636e\u5df2\u7ecf\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u624d\u53bb\u901a\u77e5\u7528\u6237\u7ebf\u7a0b\uff0c\u4e00\u4e0a\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u4e86"),(0,r.kt)("p",null,"\u963b\u585eio \u548c\u975e\u963b\u585eio\u533a\u522b\u5c31\u662f\u7528\u6237\u7ebf\u7a0b\u4f1a\u4e0d\u4f1a\u963b\u585e\u5728\u7b49\u5f85\u6570\u636e\u6216\u8005\u6570\u636e\u62f7\u8d1d\u4e0a"),(0,r.kt)("h3",{id:"832-io-\u4f53\u7cfb\u7684\u6574\u4e2a\u6982\u89c8"},"8.3.2. io \u4f53\u7cfb\u7684\u6574\u4e2a\u6982\u89c8"),(0,r.kt)("p",null,"\u57fa\u4e8e\u5b57\u8282\u64cd\u4f5c\u7684 I/O \u63a5\u53e3\uff1aInputStream \u548c OutputStream"),(0,r.kt)("p",null,"\u57fa\u4e8e\u5b57\u7b26\u64cd\u4f5c\u7684 I/O \u63a5\u53e3\uff1aWriter \u548c Reader"),(0,r.kt)("p",null,"\u5b57\u8282\u5b57\u7b26\u8f6c\u6362\u6d41"),(0,r.kt)("p",null,"\u57fa\u4e8e\u78c1\u76d8\u64cd\u4f5c\u7684 I/O \u63a5\u53e3\uff1aFile"),(0,r.kt)("p",null,"\u57fa\u4e8e\u7f51\u7edc\u64cd\u4f5c\u7684 I/O \u63a5\u53e3\uff1aSocket"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n1. \u5b57\u8282\u6d41\n\n1.1 \u5b57\u8282\u8bfb\u53d6\uff1a\n\nInputStream \u6240\u6709\u8f93\u5165\u5b57\u8282\u6d41\u7684\u57fa\u7c7b  \u62bd\u8c61\u7c7b\n    FileInputStream \u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u7684\u8f93\u5165\u5b57\u8282\u6d41\n    BufferedInputStream  \u7f13\u51b2\u8f93\u5165\u5b57\u7b26\u6d41       \u8be5\u7c7b\u51fa\u73b0\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u53d6\u6587\u4ef6 \u6570\u636e\u7684\u6548\u7387\u3002 \u8fd9\u4e2a\u7c7b\u5176\u5b9e\u53ea\u4e0d\u8fc7\u662f\u5728\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a8kb\u7684\u5b57\u8282\u6570\u7ec4\u800c\u5df2\u3002\n\n1.2 \u5b57\u8282\u8f93\u51fa\uff1a\n\nOutputStream \u6240\u6709\u8f93\u51fa\u5b57\u8282\u6d41\u7684\u57fa\u7c7b\u3002  \u62bd\u8c61\u7c7b\u3002\n    FileOutputStream \u5411\u6587\u4ef6\u8f93\u51fa\u6570\u636e\u7684\u8f93\u51fa\u5b57\u8282\u6d41\n    BufferedOutputStream \u7f13\u51b2\u8f93\u51fa\u5b57\u8282\u6d41   \u8be5\u7c7b\u51fa\u73b0\u7684\u76ee\u7684\u4e5f\u662f\u4e3a\u4e86\u63d0\u9ad8\u5411\u6587\u4ef6\u5199\u6570\u636e\u7684\u6548\u7387\u3002 \u8fd9\u4e2a\u7c7b\u7684\u4e5f\u53ea\u4e0d\u8fc7\u662f\u5728\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a8kb\u7684\u5b57\u8282\u6570\u7ec4\u800c\u5df2\u3002\n\n2. \u5b57\u7b26\u6d41 : \u5b57\u7b26\u6d41 = \u5b57\u8282\u6d41 + \u7f16\u7801\uff08\u89e3\u7801\uff09\n\n2.1 \u5b57\u7b26\u8bfb\u53d6:\n\nReader \u6240\u6709\u8f93\u5165\u5b57\u7b26\u6d41\u7684\u57fa\u7c7b\u3002 \u62bd\u8c61\u7c7b\u3002\n    FileReader \u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u7684\u8f93\u5165\u5b57\u7b26\u6d41\u3002    \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a1024\u5b57\u7b26\u7684\u5b57\u7b26\u6570\u7ec4, \u8c03\u7528flush\u6216\u8005\u662fclose\u65b9\u6cd5\u6216\u8005\u662f\u586b\u6ee1\u4e86\u5185\u90e8\u7684\u5b57\u7b26\u6570\u7ec4\u624d\u4f1a\u771f\u6b63\u5199\u6570\u636e\u5230\u786c\u76d8\n    BufferedReader \u7f13\u51b2\u8f93\u5165\u5b57\u7b26\u6d41           \u8be5\u7c7b\u51fa\u73b0\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u7684\u6548\u7387\u4e0e\u62d3\u5c55FileReader\u7684(readLine)\u529f\u80fd\u3002 \u8fd9\u4e2a\u7c7b\u7684\u4e5f\u53ea\u4e0d\u8fc7\u662f\u5728\u5185\u90e8\u7ef4\u62a4\u4e86\u4e00\u4e2a8kb\u7684\u5b57\u7b26\u6570\u7ec4\u800c\u5df2\u3002\n\n2.2 \u5b57\u7b26\u8f93\u51fa:\n\nWriter \u6240\u6709\u8f93\u51fa\u5b57\u7b26\u6d41\u7684\u57fa\u7c7b\u3002  \u62bd\u8c61\u7c7b\n    FileWriter \u5411\u6587\u4ef6\u8f93\u51fa\u6570\u636e\u7684\u8f93\u51fa\u5b57\u7b26\u6d41\n    BufferedWriter \u7f13\u51b2\u8f93\u51fa\u5b57\u7b26\u6d41 , \u624b\u52a8 flush, \u624b\u52a8 newLine()       \u8be5\u7c7b\u51fa\u73b0\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u5199\u6587\u4ef6\u6570\u636e\u7684\u6548\u7387\u4e0e\u62d3\u5c55FileWriter\u7684(newLine)\u529f\u80fd.\n    PrintWriter \u6253\u5370\u8f93\u51fa\u6d41, \u5b57\u7b26\u5b57\u8282\u5747\u53ef, \u53ef\u8bbe\u7f6e\u81ea\u52a8flush, \u81ea\u52a8\u6362\u884c , \u53ef\u4ee3\u66ff bufferwriter; (https://blog.csdn.net/lyhkmm/article/details/78260207)\n\n3. \u8f6c\u6362\u6d41\n\nInputStreamReader   \u8f93\u5165\u5b57\u8282\u6d41\u7684\u8f6c\u6362\u6d41 ; \u4f5c\u7528\uff1aInputStream--------------------\x3e Reader\nOutputStreamWriter  \u8f93\u51fa\u5b57\u8282\u6d41\u7684\u8f6c\u6362\u6d41 ; \u4f5c\u7528\uff1aOutputStream --------------------\x3e Writer\n\n\u8f6c\u6362\u6d41\u7684\u4f5c\u7528\uff1a\n    - \u53ef\u4ee5\u628a\u5b57\u8282\u6d41\u8f6c\u6362\u6210\u5b57\u7b26\u6d41\u4f7f\u7528\u3002\n    - FileReader\u4e0eFileWriter\u90fd\u662f\u56fa\u5b9a\u662fgbk\u7801\u8868\u8fdb\u884c\u8bfb\u5199\u6570\u636e\u7684\uff0c\u800c\u8f6c\u6362\u6d41\u53ef\u4ee5\u6307\u5b9a\u7801\u8868\u8fdb\u884c\u8bfb\u5199\u6587\u4ef6\u7684\u6570\u636e\u3002\n\n4. File\n\nFile \u5e76\u4e0d\u4ee3\u8868\u4e00\u4e2a\u771f\u5b9e\u5b58\u5728\u7684\u6587\u4ef6\u5bf9\u8c61, \u800c\u4e14\u5c31\u7b97\u5b58\u5728\u8fd8\u53ef\u80fd\u5f0f\u6587\u4ef6or\u76ee\u5f55;\n\n\u4e3a\u4f55\u8981\u8fd9\u6837\u8bbe\u8ba1\uff1f\u56e0\u4e3a\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc3\u8fd9\u4e2a\u6587\u4ef6\u662f\u5426\u771f\u7684\u5b58\u5728\uff0c\u800c\u662f\u5173\u5fc3\u8fd9\u4e2a\u6587\u4ef6\u5230\u5e95\u5982\u4f55\u64cd\u4f5c\u3002\u4f8b\u5982\u6211\u4eec\u624b\u673a\u91cc\u901a\u5e38\u5b58\u4e86\u51e0\u767e\u4e2a\u670b\u53cb\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u4f46\u662f\u6211\u4eec\u901a\u5e38\u5173\u5fc3\u7684\u662f\u6211\u6709\u6ca1\u6709\u8fd9\u4e2a\u670b\u53cb\u7684\u7535\u8bdd\u53f7\u7801\uff0c\u6216\u8005\u8fd9\u4e2a\u7535\u8bdd\u53f7\u7801\u662f\u4ec0\u4e48\uff0c\u4f46\u662f\u8fd9\u4e2a\u7535\u8bdd\u53f7\u7801\u5230\u5e95\u80fd\u4e0d\u80fd\u6253\u901a\uff0c\u6211\u4eec\u5e76\u4e0d\u662f\u65f6\u65f6\u523b\u523b\u90fd\u53bb\u68c0\u67e5\uff0c\u800c\u53ea\u6709\u5728\u771f\u6b63\u8981\u7ed9\u4ed6\u6253\u7535\u8bdd\u65f6\u624d\u4f1a\u770b\u8fd9\u4e2a\u7535\u8bdd\u80fd\u4e0d\u80fd\u7528\u3002\u4e5f\u5c31\u662f\u4f7f\u7528\u8fd9\u4e2a\u7535\u8bdd\u8bb0\u5f55\u8981\u6bd4\u6253\u8fd9\u4e2a\u7535\u8bdd\u7684\u6b21\u6570\u591a\u5f88\u591a\n\n\nProperties(\u914d\u7f6e\u6587\u4ef6\u7c7b)\n\n\u4f53\u7cfb\uff1a\n -------| Map\n ------------| HashTable\n ----------------| Properties \u914d\u7f6e\u6587\u4ef6\u7c7b\u3001\n\n store() \u7528\u4e8e\u751f\u6210\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\n load() \u52a0\u8f7d\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\n\nattention \uff1a\n    - \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u5b58\u5728\u7740\u4e2d\u6587\uff0c\u90a3\u4e48\u751f\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u65f6\u5019\u8981\u4f7f\u7528\u5b57\u7b26\u6d41\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u4e71\u7801\u3002\n    - \u5982\u679c\u9700\u8981\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e94\u8be5\u5148\u52a0\u8f7d\u539f\u672c\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u518d\u751f\u6210\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002\n\n\n")),(0,r.kt)("h3",{id:"833-paths-\u548c-files-\u76f8\u5173-api"},"8.3.3. Paths \u548c Files \u76f8\u5173 api"),(0,r.kt)("h4",{id:"8331-paths-\u7684\u83b7\u53d6\u8f6c\u5316"},"8.3.3.1. Paths \u7684\u83b7\u53d6\u8f6c\u5316"),(0,r.kt)("p",null,"jdk 1.7 \u63d0\u4f9b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Paths.get("C:/", "Xmp"); \u548c Paths.get("C:/Xmp"); \u7b49\u540c\n\n\nPath pathRoot = Paths.get("/");// \u8868\u793a\u78c1\u76d8\u6839\u8def\u5f84\nSystem.out.println(pathRoot.toAbsolutePath());// D:\\\n\nFileSystems.getDefault().getPath("C:/", "aa.log") // \u4ece\u64cd\u4f5c\u7cfb\u7edf\u83b7\u53d6\n\nPaths.get(URI.create("file:///C:/Xmp/dd"))\n\nnew File("C:/aa.log").toPath()\n\n// \u8868\u793a\u5f53\u524d\u9879\u76ee\u6839\u8def\u5f84, \u7b49\u540c System.getProperty("user.dir"), \u7b49\u540c new File("").getAbsoblutePath\n// \u6ce8\u610f: system.getProperty("user.home")  \u8868\u793a\u64cd\u4f5c\u7cfb\u7edf \u7528\u6237\u5bb6\u76ee\u5f55, \u800c\u4e0d\u662f\u5f53\u524d\u9879\u76ee\u76ee\u5f55\nPath pathA  = Paths.get(".");\nPath pathB = pathA.toAbsolutePath();\nSystem.out.println(pathB);// D:\\repo\\repo_github\\shared_already\\xiaoyu-recipes\\samples\\java8-demo\\.\n\n\nPath path1 = Paths.get(this.getClass().getResource(".").toURI());\nSystem.out.println(path1);\n//D:\\repo\\repo_github\\shared_already\\starter-demo\\target\\classes\\io\\github\\xiaoyureed\\starterdemo\\util\n\nPath path2 = Paths.get(this.getClass().getClassLoader().getResource(".").toURI());\nSystem.out.println(path2);\n//D:\\repo\\repo_github\\shared_already\\starter-demo\\target\\classes\n\n// \u83b7\u53d6 class path \u63a8\u8350\u8fd9\u79cd\u65b9\u5f0f\nPath path3 = Paths.get(Thread.currentThread().getContextClassLoader().getResource(".").toURI());\nSystem.out.println(path3);\n//D:\\repo\\repo_github\\shared_already\\starter-demo\\target\\classes\n\n')),(0,r.kt)("h4",{id:"8332-\u901a\u8fc7-files-paths-\u8bfb\u53d6\u5199\u5165"},"8.3.3.2. \u901a\u8fc7 Files Paths \u8bfb\u53d6\u5199\u5165"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'private Path createFile(String dir, String file) throws IOException {\n    Path dirPath = Paths.get(dir);\n    if (Files.notExists(dirPath)) {\n        Files.createDirectories(dirPath);\n    }\n    Path filePath = Paths.get(dir, file);\n    if (Files.notExists(filePath)) {\n        Files.createFile(filePath);// cannot create directory, only for file\n    }\n\n    return filePath;\n}\n\n/**\n    * create a file\n    *\n    * write sth to the file\n    *\n    * read from the file\n    */\n@Test\npublic void testPaths_2() throws IOException {\n\n    //Set<PosixFilePermission> perms = PosixFilePermissions.fromString("rw-rw-rw-");\n    //FileAttribute<Set<PosixFilePermission>> attrs = PosixFilePermissions.asFileAttribute(perms);\n\n    Path file = this.createFile("d:/_test", "aa.log");\n\n        // \u4e5f\u80fd\u76f4\u63a5 files.newbufferreader/writer(Paths.get("xxx.json"))\n        // reader.lines().collect(toList)\n    try (BufferedWriter bufferedWriter = Files.newBufferedWriter(file, StandardCharsets.UTF_8)) {\n        bufferedWriter.write("test writing file");\n        bufferedWriter.flush();\n    }\n\n    try (BufferedReader bufferedReader = Files.newBufferedReader(file, StandardCharsets.UTF_8);) {\n        for (;;) {\n            String s = bufferedReader.readLine();\n            if (s == null) {\n                break;\n            }\n            System.out.println(s);\n        }\n    }\n}\n')),(0,r.kt)("h4",{id:"8333-\u904d\u5386\u6587\u4ef6\u5939"},"8.3.3.3. \u904d\u5386\u6587\u4ef6\u5939"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n     * \u6ca1\u6709\u9012\u5f52\u7684\u904d\u5386\n     *\n     * \u53ea\u4f1a\u904d\u5386\u7b2c\u4e00\u5c42\u76ee\u5f55\n     */\n    @Test\n    public void testTraverse() throws IOException {\n        Path path = Paths.get("d:/_learn/");\n        DirectoryStream<Path> dirStream = Files.newDirectoryStream(path);\n\n        if (!Files.isDirectory(path)) {\n            System.out.println("path is not a dir, path = " + path.toAbsolutePath().toString());\n        }\n        dirStream.forEach(p -> System.out.println(p.getFileName()));\n    }\n\n    /**\n     * \u7b49\u4ef7\n     */\n    @Test\n    public void testTraverse_1() throws IOException {\n        Path path = Paths.get("d:/_learn");\n        Stream<Path> dirStream = Files.list(path);\n        Iterator<Path> it = dirStream.iterator();\n        while (it.hasNext()) {\n            Path next = it.next();\n            System.out.println(next.getFileName());\n        }\n    }\n\n    /**\n     * \u9012\u5f52\u904d\u5386\n     */\n    @Test\n    public void testTraverse_2() throws IOException {\n        Path path = Paths.get("d:/_learn");\n        ArrayList<Path> result = new ArrayList<>();\n        Files.walkFileTree(path, new SimpleFileVisitor<Path>() {\n            @Override\n            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs) throws IOException {\n                if (file.toString().endsWith(".php")) {\n                    result.add(file);\n                }\n\n                return super.visitFile(file, attrs);\n            }\n        });\n\n        result.forEach(System.out::println);\n    }\n\n    /**\n     * \u9012\u5f52\u904d\u5386, \u7b49\u4ef7\u4e0a\u9762\n     */\n    @Test\n    public void testTraverse_3() throws IOException {\n        Path path = Paths.get("d:/_learn");\n        Stream<Path> stream = Files.walk(path);\n        List<Path> result = stream.map(p -> p.toString().endsWith(".php") ? p : null)\n                .distinct()\n                .collect(Collectors.toList());\n        result.forEach(System.out::println);\n    }\n')),(0,r.kt)("h4",{id:"8334-\u901a\u8fc7-files-\u83b7\u53d6\u6587\u4ef6\u5c5e\u6027"},"8.3.3.4. \u901a\u8fc7 files \u83b7\u53d6\u6587\u4ef6\u5c5e\u6027"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},' /**\n     * \u6587\u4ef6\u5c5e\u6027\n     */\n    @Test\n    public void testFileProperty() throws IOException {\n        Path zip = Paths.get("d:/_test/aa.log");\n        System.out.println(Files.getLastModifiedTime(zip));\n        System.out.println(Files.size(zip));\n        System.out.println(Files.isSymbolicLink(zip));\n        System.out.println(Files.isDirectory(zip));\n        System.out.println(Files.readAttributes(zip, "*"));// map, \u6240\u6709\u5c5e\u6027\n\n        // 2019-05-22T14:34:24.320402Z\n        // 17\n        // false\n        // false\n        // {lastAccessTime=2019-05-22T14:21:24.821534Z, lastModifiedTime=2019-05-22T14:34:24.320402Z, size=17, creationTime=2019-05-22T14:21:24.821534Z, isSymbolicLink=false, isRegularFile=true, fileKey=null, isOther=false, isDirectory=false}\n\n    }\n')),(0,r.kt)("h3",{id:"834-bio-tcp-\u5b9e\u73b0\u901a\u4fe1"},"8.3.4. bio tcp \u5b9e\u73b0\u901a\u4fe1"),(0,r.kt)("p",null,"(\u66f4\u591a\u89c1\u8fd9\u91cc distributed-System#\u600e\u4e48\u5b9e\u73b0\u5b50\u7cfb\u7edf\u95f4\u7684\u901a\u4fe1)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * \u7cfb\u7edf\u95f4\u8fdb\u884c\u901a\u4fe1\uff0c \u9700\u8981\u4e24\u4e2a\u6b65\u9aa4\uff1a\n *\n * - \u6570\u636e\u4f20\u8f93.  - \u501f\u52a9 tcp/ip, \u6216 udp/ip \u534f\u8bae\n *\n * - \u6570\u636e\u5904\u7406\uff08\u8bfb\u53d6or \u5199\u5165\uff09 - \u540c\u6b65io \u6216\u8005 \u5f02\u6b65io\n *\n *      - \u540c\u6b65io\u5206\u4e3a bio, nio\n *\n *          bio - \u5f53\u53d1\u8d77io\u64cd\u4f5c, \u7ebf\u7a0b\u95f4\u4e3a\u963b\u585e\u5173\u7cfb, \u5f53\u524d thread \u53ea\u6709\u5c06\u6d41\u8bfb\u53d6/\u5199\u5165\u5b8c\u6bd5\u624d\u4f1a\u91ca\u653e\u8d44\u6e90\u7ed9\u5176\u4ed6\u7b49\u5f85\u7684 thread\n *\n *          nio - \u57fa\u4e8e"\u4e8b\u4ef6\u9a71\u52a8" \u901a\u8fc7 Reactor\u6a21\u5f0f \u5b9e\u73b0   thread \u95f4\u975e\u963b\u585e, \u5f53 socket \u6709 stream \u53ef\u8bfb \u6216 \u6709 stream \u5f85\u88ab socket\n *          \u5199\u5165\u65f6, \u53d1\u51fa\u4e8b\u4ef6(\u5982 \u8fde\u63a5\u5efa\u7acb\u4e8b\u4ef6, \u6d41\u8bfb\u53d6\u4e8b\u4ef6, \u6d41\u5199\u5165\u4e8b\u4ef6), \u7531\u64cd\u4f5c\u7cfb\u7edf\u901a\u77e5 app\u6765\u5904\u7406\n *\n *      - \u5f02\u6b65io \u5206\u4e3a aio\n *\n *          aio - \u540c\u6837\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8, \u901a\u8fc7 Proactor\u6a21\u5f0f\u5b9e\u73b0;\n *          \u548cnio\u5bf9\u6bd4, 1. \u7b80\u5316\u7f16\u7a0b, io\u64cd\u4f5c\u7531\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210, app\u53ea\u8981\u8c03\u7528api\u5373\u53ef; 2. \u7701\u7565\u4e86 nio\u4e2d\u9700\u8981\u904d\u5386 \u4e8b\u4ef6\u901a\u77e5\u961f\u5217(Selector)\n *          \u7684\u65f6\u95f4\n *\n * \u8fd9\u6837\u7ec4\u5408\u7684\u8bdd, \u6709\u56db\u79cd\u901a\u4fe1\u65b9\u5f0f: tcp/ip + bio, tcp/ip  + nio, udp/ip + bio, udp/ip + nio\n *\n * *************************************************************************************************\n *\n * \u4e0b\u9762\u662f bio + tcp \u65b9\u5f0f\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Client {\n\n    //private String url = "127.0.0.1";\n    //private int port = 9527;\n    private Socket socket;\n    private BufferedReader readerOnServer;\n    private PrintWriter printerOnServer;\n    private BufferedReader readerOnCli;\n\n    public void init(String url, int port) throws IOException {\n        socket = new Socket(url, port);\n        readerOnServer = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n        printerOnServer = new PrintWriter(socket.getOutputStream(), true);\n        readerOnCli   = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    public void start() throws IOException {\n        while (true) {\n            String line = readerOnCli.readLine();\n            // exit\n            if (testExit(line)) {\n                break;\n            }\n\n            System.out.println(">>> send to server: " + line);\n            // send to server\n            printerOnServer.println(line);\n\n            // receive from server\n            String respLine = readerOnServer.readLine();\n            System.out.println(">>> receive from server: " + respLine);\n        }\n    }\n\n    private boolean testExit(String test) throws IOException {\n        if (StringUtils.isBlank(test) || "exit".equalsIgnoreCase(test)) {\n            printerOnServer.write("exit");\n            close();\n            System.out.println(">>> client exit.");\n            return true;\n        }\n        return false;\n    }\n\n    private void close() throws IOException {\n        printerOnServer.close();\n        readerOnCli.close();\n        readerOnServer.close();\n        socket.close();\n    }\n\n    public static void main(String[] args) throws IOException {\n        Client client = new Client();\n        client.init("127.0.0.1", 9527);\n        client.start();\n    }\n}\n\n/**\n * \u8fd9\u4e2a server \u53ea\u652f\u6301 \u5355\u4e2a client \u8fde\u63a5\n *\n * \u591a\u4e2a client \u8fde\u63a5 server\u600e\u4e48\u529e? \u9996\u5148\u8981 pass \u6389 "\u5728 server \u4e2d \u521b\u5efa\u591a\u4e2a socket"\u7684\u60f3\u6cd5, \u56e0\u4e3a \u751f\u6210 socket \u662f\u975e\u5e38\u91cd\u7684\u64cd\u4f5c, \u5360\n * \u7528server\u8d44\u6e90\u975e\u5e38\u591a\n *\n * \u901a\u5e38\u7528\u91c7\u7528 "\u8fde\u63a5\u6c60", \u597d\u5904\u662f \ud83d\udc36 \u80fd\u591f\u9650\u5236\u521b\u5efa\u7684 socket\u4e2a\u6570; \ud83d\udc36 \u907f\u514d\u91cd\u590d\u521b\u5efa socket\n * \u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u8fd8\u662f\u6709\u95ee\u9898: \u8fde\u63a5\u6c60\u4e2d socket \u603b\u662f\u6709\u9650\u7684\u603b\u6709\u4e0d\u591f\u7528\u7684\u65f6\u5019; server \u9700\u8981\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4, \u9632\n * \u6b62 server \u8fde\u5e26 client\u6302\u6389\n *\n * \u5982\u679c\u8981\u652f\u6301\u591a\u4e2a client \u8fde\u63a5\uff0c \u53ef\u91c7\u7528 \u7ebf\u7a0b\u6c60\uff0c \u6bcf\u4e2a socket \u65b0\u5f00\u4e00\u4e2a thread\u3002 \u8fd9\u4e48\u505a\u6709\u7f3a\u70b9\uff1a \u65e0\u8bba\u662f\u5426\u662f\u6709\u6548\u8bf7\u6c42\uff0c server\n * \u90fd\u8981\u8017\u8d39\u4e00\u4e2a thread\n * \u5473\u4e86\u907f\u514d \u8fc7\u591a\u7684 thread \u8017\u5c3d server\u7684\u8d44\u6e90\uff0c \u7ebf\u7a0b\u6c60\u5fc5\u987b\u662f\u9650\u5b9a\u5927\u5c0f\u7684\u3002 <=> \u91c7\u7528 bio \u65b9\u5f0f\u7684 server \u652f\u6491\u7684\u8fde\u63a5\u6570\u662f\u6709\u9650\u7684\n *\n * @author xiaoyu\n * @since 1.0\n */\npublic class Server {\n\n    //private ServerSocket serverSocket;\n    //private BufferedReader readerFromClient;\n    //private PrintWriter writerToClient;\n    //\n    //public void initBlock(int port) throws IOException {\n    //    this.serverSocket = new ServerSocket(port);\n    //    this.readerFromClient = new BufferedReader(new InputStreamReader(serverSocket.accept().getInputStream()));\n    //}\n\n    public static void main(String[] args) throws IOException, InterruptedException {\n        int port = 9527;\n        ServerSocket socketServer = new ServerSocket(port);\n        socketServer.setSoTimeout(60 * 1000); // unit : milliseconds\n        System.out.println(">>> server listen on port: " + port);\n        Socket socketClient = socketServer.accept(); // start\n\n        BufferedReader readerFromClient = new BufferedReader(new InputStreamReader(socketClient.getInputStream()));\n        //BufferedWriter writerToClient   = new BufferedWriter(new OutputStreamWriter(socketClient.getOutputStream()));\n        PrintWriter writerToClient = new PrintWriter(socketClient.getOutputStream(), true);\n\n        while (true) {\n            String line = readerFromClient.readLine(); // start\n\n            if (StringUtils.isBlank(line)) {// read nothing\n                Thread.sleep(100);\n                continue;\n            }\n            if ("exit".equalsIgnoreCase(line)) {\n                // close\n                readerFromClient.close();\n                writerToClient.close();\n                socketServer.close();\n\n                System.out.println(">>> server exit");\n                break;\n            }\n\n            System.out.println(">>> msg from client: " + line);\n\n            writerToClient.println(line);\n            System.out.println(">>> msg to client: " + line);\n            Thread.sleep(100);\n        }\n        System.exit(0);\n\n    }\n}\n\n\n')),(0,r.kt)("h2",{id:"84-\u975e\u963b\u585e-io"},"8.4. \u975e\u963b\u585e io"),(0,r.kt)("h3",{id:"841-\u4ec0\u4e48\u662f\u975e\u963b\u585e-io"},"8.4.1. \u4ec0\u4e48\u662f\u975e\u963b\u585e io"),(0,r.kt)("p",null,"\u7528\u6237\u7ebf\u7a0b\u6ca1\u6709\u56e0\u4e3a IO \u7684\u4e8b\u60c5\u51fa\u73b0\u963b\u585e\uff0c\u8fd9\u5c31\u662f\u5e38\u8bf4\u7684\u975e\u963b\u585e IO, \u5373\u6570\u636e\u5df2\u7ecf\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u624d\u53bb\u901a\u77e5\u7528\u6237\u7ebf\u7a0b\uff0c\u4e00\u4e0a\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u4e86\u3002"),(0,r.kt)("p",null,"\u4f20\u7edf io(block io) \u4e0d\u7ba1\u662f\u78c1\u76d8 I/O \u8fd8\u662f\u7f51\u7edc I/O\uff0c\u6570\u636e\u5728\u5199\u5165 OutputStream \u6216\u8005\u4ece InputStream \u8bfb\u53d6\u65f6\u7528\u6237\u7ebf\u7a0b\u90fd\u6709\u53ef\u80fd\u4f1a\u963b\u585e, \u4e00\u65e6\u6709\u7ebf\u7a0b\u963b\u585e\u5c06\u4f1a\u5931\u53bb CPU \u7684\u4f7f\u7528\u6743"),(0,r.kt)("p",null,"nio \u4f7f\u5f97 server \u4f7f\u7528 \u4e00\u4e2a thread \u53ef\u4ee5\u5904\u7406\u591a\u4e2a client \u7684\u8bf7\u6c42"),(0,r.kt)("h3",{id:"842-\u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e"},"8.4.2. \u540c\u6b65\u5f02\u6b65\u548c\u963b\u585e\u975e\u963b\u585e"),(0,r.kt)("h4",{id:"8421-\u540c\u6b65\u4e0e\u5f02\u6b65"},"8.4.2.1. \u540c\u6b65\u4e0e\u5f02\u6b65"),(0,r.kt)("p",null,"\u5f62\u5bb9\u591a\u4e2a\u4e8b\u7269\u4e4b\u95f4\u7684\u8fd0\u884c\u5173\u7cfb, \u53ef\u4ee5\u5f62\u5bb9 \u65b9\u6cd5, \u7ebf\u7a0b, cpu \u6307\u4ee4..."),(0,r.kt)("p",null,"\u540c\u6b65\u5c31\u662f\u591a\u4e2a\u4e8b\u7269\u4e0d\u80fd\u540c\u65f6\u5f00\u5de5\uff0c\u5f02\u6b65\u5c31\u662f\u591a\u4e2a\u4e8b\u7269\u53ef\u4ee5\u540c\u65f6\u5f00\u5de5"),(0,r.kt)("h4",{id:"8422-\u963b\u585e\u4e0e\u975e\u963b\u585e"},"8.4.2.2. \u963b\u585e\u4e0e\u975e\u963b\u585e"),(0,r.kt)("p",null,"\u5f62\u5bb9\u4e00\u79cd\u4e8b\u7269\u72b6\u6001"),(0,r.kt)("p",null,"\u7ebf\u7a0b\u963b\u585e\u4e86, \u8868\u660e\u7ebf\u7a0b\u88ab\u6302\u8d77, \u4e0d\u80fd\u52a8\u4e86, \u8ba9\u51fa\u4e86 CPU"),(0,r.kt)("h4",{id:"8423-\u56db\u79cd\u7ec4\u5408"},"8.4.2.3. \u56db\u79cd\u7ec4\u5408"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u540c\u6b65\u963b\u585e, \u76f8\u5f53\u4e8e\u4e00\u4e2a\u7ebf\u7a0b\u5728\u7b49\u5f85"),(0,r.kt)("p",{parentName:"li"},"\u4f8b\u5982 java bio, I/O \u6027\u80fd\u4e00\u822c\u5f88\u5dee\uff0cCPU \u5927\u90e8\u5206\u5728\u7a7a\u95f2\u72b6\u6001\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u540c\u6b65\u975e\u963b\u585e, \u76f8\u5f53\u4e8e\u4e00\u4e2a\u7ebf\u7a0b\u5728\u6b63\u5e38\u8fd0\u884c"),(0,r.kt)("p",{parentName:"li"},"java nio")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5f02\u6b65\u975e\u963b\u585e - \u7528\u6237\u7ebf\u7a0b\u7684\u7ee7\u7eed\u6267\u884c\uff0c\u548c\u64cd\u4f5c\u7cfb\u7edf\u51c6\u5907 IO \u6570\u636e\u7684\u8fc7\u7a0b\u662f\u540c\u65f6\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u624d\u53eb\u505a\u5f02\u6b65 IO"),(0,r.kt)("p",{parentName:"li"},"java aio"))),(0,r.kt)("h2",{id:"85-\u591a\u8def\u590d\u7528-io-\u5373-java-nio"},"8.5. \u591a\u8def\u590d\u7528 IO \u5373 java nio"),(0,r.kt)("h3",{id:"851-\u89e3\u91ca\u591a\u8def\u590d\u7528"},"8.5.1. \u89e3\u91ca\u591a\u8def\u590d\u7528"),(0,r.kt)("p",null,"\u591a\u79cd\u6570\u636e\u4fe1\u53f7\u6df7\u5408\u5728\u4e00\u8d77, \u901a\u8fc7\u4e00\u6761\u901a\u8def\u4f20\u8f93, \u6700\u7ec8\u901a\u8fc7\u5404\u81ea\u7279\u5b9a\u7684\u5904\u7406\u5668\u5904\u7406"),(0,r.kt)("p",null,"\u6bd4\u5982 \u7f51\u7edc io, \u670d\u52a1\u5668\u7aef\u7684\u5de5\u4f5c\u7ebf\u7a0b\u4e0d\u4f1a\u628a\u65f6\u95f4\u82b1\u5728\u201c\u7b49\u5f85\u6570\u636e\u201d\u4e0a, \u4f46\u662f\u4f1a\u82b1\u5728\u7b49\u5f85\u201c\u8bfb\u53d6\u6570\u636e\u201d\u8fd9\u4e2a\u8fc7\u7a0b\u4e0a"),(0,r.kt)("h3",{id:"852-nio-\u548c-io-\u533a\u522b"},"8.5.2. nio \u548c io \u533a\u522b"),(0,r.kt)("p",null,"1)IO \u662f\u9762\u5411\u6d41\u7684\uff0cNIO \u662f\u9762\u5411\u7f13\u51b2\u533a\u7684\uff1b"),(0,r.kt)("p",null,"2)IO \u6d41\u662f\u963b\u585e\u7684\uff0cNIO \u6d41\u662f\u4e0d\u963b\u585e\u7684;"),(0,r.kt)("p",null,"3)NIO \u6709\u9009\u62e9\u5668\uff0c\u800c IO \u6ca1\u6709\u3002"),(0,r.kt)("p",null,"\u963b\u585eio: \u62ff\u7f51\u7edc IO \u6765\u8bf4\uff0c\u7b49\u5f85\u7684\u8fc7\u7a0b\u5c31\u662f\u6570\u636e\u4ece\u7f51\u7edc\u5230\u7f51\u5361\u518d\u5230\u5185\u6838\u7a7a\u95f4\u3002\u8bfb\u5199\u7684\u8fc7\u7a0b\u5c31\u662f\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u7684\u76f8\u4e92\u62f7\u8d1d. \u5e94\u7528\u7a0b\u5e8f\u90fd\u662f\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\uff0c\u6240\u4ee5\u5b83\u4eec\u80fd\u64cd\u4f5c\u7684\u6570\u636e\u4e5f\u90fd\u5728\u7528\u6237\u7a7a\u95f4\u3002\u53ea\u8981\u6570\u636e\u6ca1\u6709\u5230\u8fbe\u7528\u6237\u7a7a\u95f4\uff0c\u7528\u6237\u7ebf\u7a0b\u5c31\u64cd\u4f5c\u4e0d\u4e86. \u5982\u679c\u6b64\u65f6\u7528\u6237\u7ebf\u7a0b\u5df2\u7ecf\u53c2\u4e0e\uff0c\u90a3\u5b83\u4e00\u5b9a\u4f1a\u88ab\u963b\u585e\u5728 IO \u4e0a\u3002\u8fd9\u5c31\u662f\u5e38\u8bf4\u7684\u963b\u585e IO\u3002\u7528\u6237\u7ebf\u7a0b\u88ab\u963b\u585e\u5728\u7b49\u5f85\u6570\u636e\u4e0a\u6216\u62f7\u8d1d\u6570\u636e\u4e0a."),(0,r.kt)("p",null,"\u975e\u963b\u585e IO : \u5c31\u662f\u7528\u6237\u7ebf\u7a0b\u4e0d\u53c2\u4e0e\u4ee5\u4e0a\u4e24\u4e2a\u8fc7\u7a0b(\u6570\u636e\u4f20\u8f93, \u6570\u636e\u62f7\u8d1d)\uff0c\u5373\u6570\u636e\u5df2\u7ecf\u62f7\u8d1d\u5230\u7528\u6237\u7a7a\u95f4\u540e\uff0c\u624d\u53bb\u901a\u77e5\u7528\u6237\u7ebf\u7a0b\uff0c\u4e00\u4e0a\u6765\u5c31\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6570\u636e\u4e86"),(0,r.kt)("p",null,"\u963b\u585eio \u548c\u975e\u963b\u585eio\u533a\u522b\u5c31\u662f\u7528\u6237\u7ebf\u7a0b\u4f1a\u4e0d\u4f1a\u963b\u585e\u5728\u7b49\u5f85\u6570\u636e\u6216\u8005\u6570\u636e\u62f7\u8d1d\u4e0a"),(0,r.kt)("h3",{id:"853-linux-\u4e2d\u7684\u591a\u8def\u590d\u7528\u652f\u6301"},"8.5.3. Linux \u4e2d\u7684\u591a\u8def\u590d\u7528\u652f\u6301"),(0,r.kt)("p",null,"Linux\u4e0b\u7684select\u3001poll\u548cepoll\u5c31\u662f\u5e72\u8fd9\u4e2a\u7684\u3002\u5c06\u7528\u6237socket\u5bf9\u5e94\u7684fd\u6ce8\u518c\u8fdbepoll\uff0c\u7136\u540eepoll\u5e2e\u4f60\u76d1\u542c\u54ea\u4e9bsocket\u4e0a\u6709\u6d88\u606f\u5230\u8fbe"),(0,r.kt)("p",null,"\u8fd9\u6837\uff0c\u6574\u4e2a\u8fc7\u7a0b\u53ea\u5728\u8c03\u7528select\u3001poll\u3001epoll\u8fd9\u4e9b\u8c03\u7528\u7684\u65f6\u5019\u624d\u4f1a\u963b\u585e\uff0c\u6536\u53d1\u5ba2\u6237\u6d88\u606f\u662f\u4e0d\u4f1a\u963b\u585e\u7684\uff0c\u6574\u4e2a\u8fdb\u7a0b\u6216\u8005\u7ebf\u7a0b\u5c31\u88ab\u5145\u5206\u5229\u7528\u8d77\u6765\uff0c\u8fd9\u5c31\u662f\u4e8b\u4ef6\u9a71\u52a8\uff0c\u6240\u8c13\u7684reactor\u6a21\u5f0f"),(0,r.kt)("h3",{id:"854-\u6838\u5fc3\u7ec4\u4ef6"},"8.5.4. \u6838\u5fc3\u7ec4\u4ef6"),(0,r.kt)("p",null,"java nio \u5c31\u662f \u591a\u8def\u590d\u7528\u601d\u60f3\u7684\u5b9e\u73b0"),(0,r.kt)("h4",{id:"8541-\u7406\u89e3"},"8.5.4.1. \u7406\u89e3"),(0,r.kt)("p",null,"Selector \u53ef\u4ee5\u540c\u65f6\u76d1\u542c\u4e00\u7ec4\u901a\u4fe1\u4fe1\u9053\uff08Channel\uff09\u4e0a\u7684 I/O \u72b6\u6001"),(0,r.kt)("p",null,"selectionKeys \u8868\u793a \u5404\u4e2a client \u7684\u8bf7\u6c42"),(0,r.kt)("p",null,"\u53e6\u5916 , \u53c2\u8003\u8fd9\u91cc: ",(0,r.kt)("a",{parentName:"p",href:"https://tech.meituan.com/nio.html"},"https://tech.meituan.com/nio.html")),(0,r.kt)("h4",{id:"8542-channels"},"8.5.4.2. Channels"),(0,r.kt)("p",null,"NIO Channel \u901a\u9053\u548c\u6d41\u7684\u533a\u522b:"),(0,r.kt)("h4",{id:"8543-buffers"},"8.5.4.3. Buffers"),(0,r.kt)("p",null,"\u548c channel \u4ea4\u4e92"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ece Channel \u4e2d\u8bfb\u53d6\u6570\u636e\u5230 buffers \u91cc\uff0c\u4ece Buffer \u628a\u6570\u636e\u5199\u5165\u5230 Channels\uff1b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Buffer \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u5757\u5185\u5b58\u533a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"capacity \u5bb9\u91cf\u3001position \u4f4d\u7f6e\u3001limit \u9650\u5236\u3002"))),(0,r.kt)("p",null,"api:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"ByteBuffer buf = ByteBuffer.allocate(28);//\u4ee5ByteBuffer\u4e3a\u4f8b\u5b50\nint bytesRead = inChannel.read(buf); //read into buffer.\nbuf.put(127);// put data into buf\n\n")),(0,r.kt)("h4",{id:"8544-selectors"},"8.5.4.4. Selectors"),(0,r.kt)("p",null,"\u5176\u5b9e\u5bf9\u4e8e\u9009\u62e9\u5668\u7684\u4e2a\u6570\u3001\u9009\u62e9\u5668\u8fd0\u884c\u5728\u54ea\u4e2a\u7ebf\u7a0b\u91cc\u3001\u662f\u5426\u4f7f\u7528\u65b0\u7684\u7ebf\u7a0b\u6765\u5904\u7406\u8bf7\u6c42\u90fd\u6ca1\u6709\u8981\u6c42\uff0c\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6765\u5b9a\u3002"),(0,r.kt)("p",null,"\u6bd4\u5982\u8bf4 redis\uff0c\u548c\u5904\u7406\u8bf7\u6c42\u76f8\u5173\u7684\u5c31\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u9009\u62e9\u5668\u8fd0\u884c\u5728\u91cc\u9762\uff0c\u5904\u7406\u8bf7\u6c42\u7684\u7a0b\u5e8f\u4e5f\u8fd0\u884c\u5728\u91cc\u9762\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7ebf\u7a0b\u65e2\u662f I/O \u7ebf\u7a0b\uff0c\u4e5f\u662f Worker \u7ebf\u7a0b\u3002"),(0,r.kt)("p",null,"\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u9009\u62e9\u5668\uff0c\u4e00\u4e2a\u5904\u7406 OP_ACCEPT\uff0c\u4e00\u4e2a\u5904\u7406 OP_READ\uff0c\u8ba9\u5b83\u4eec\u5206\u522b\u8fd0\u884c\u5728\u4e24\u4e2a\u5355\u72ec\u7684 I/O \u7ebf\u7a0b\u91cc\u3002\u5bf9\u4e8e\u80fd\u5feb\u901f\u5b8c\u6210\u7684\u64cd\u4f5c\u53ef\u4ee5\u76f4\u63a5\u5728 I/O \u7ebf\u7a0b\u91cc\u505a\u4e86\uff0c\u5bf9\u4e8e\u975e\u5e38\u8017\u65f6\u7684\u64cd\u4f5c\u4e00\u5b9a\u8981\u4f7f\u7528 Worker \u7ebf\u7a0b\u6c60\u6765\u5904\u7406\u3002"),(0,r.kt)("p",null,"\u8fd9\u79cd\u5904\u7406\u6a21\u5f0f\u5c31\u662f\u88ab\u79f0\u4e3a\u7684\u591a\u8def\u590d\u7528 I/O\uff0c\u591a\u8def\u6307\u7684\u662f\u591a\u4e2a Socket \u901a\u9053\uff0c\u590d\u7528\u6307\u7684\u662f\u53ea\u7528\u4e00\u4e2a\u7ebf\u7a0b\u6765\u7ba1\u7406\u5b83\u4eec\u3002"),(0,r.kt)("h3",{id:"855-nio-\u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1"},"8.5.5. nio \u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1"),(0,r.kt)("p",null,"\u4ece\u901a\u9053\u8fdb\u884c\u6570\u636e\u8bfb\u53d6 \uff1a\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u7136\u540e\u8bf7\u6c42\u901a\u9053\u8bfb\u53d6\u6570\u636e\u3002"),(0,r.kt)("p",null,"\u4ece\u901a\u9053\u8fdb\u884c\u6570\u636e\u5199\u5165 \uff1a\u521b\u5efa\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u586b\u5145\u6570\u636e\uff0c\u5e76\u8981\u6c42\u901a\u9053\u5199\u5165\u6570\u636e\u3002"),(0,r.kt)("p",null,"\u770b\u4e2a\u4f8b\u5b50 - nio + tcp \u5b9e\u73b0\u901a\u4fe1 (",(0,r.kt)("a",{parentName:"p",href:"https://examples.javacodegeeks.com/core-java/nio/java-nio-socket-example/"},"https://examples.javacodegeeks.com/core-java/nio/java-nio-socket-example/"),")"),(0,r.kt)("p",null,"\u89c1 distributed-System#\u600e\u4e48\u5b9e\u73b0\u5b50\u7cfb\u7edf\u95f4\u7684\u901a\u4fe1"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\nnio \u5b9e\u73b0\u7f51\u7edc\u901a\u4fe1\n*/\npublic class NioServer {\n\n  static int clientCount = 0;\n  static AtomicInteger counter = new AtomicInteger(0);\n  static SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");\n\n  public static void main(String[] args) {\n    try {\n      Selector selector = Selector.open(); // \u5b9a\u4e49\u4e00\u4e2a\u9009\u62e9\u5668\n\n      // \u5b9a\u4e49\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u5957\u63a5\u5b57\u901a\u9053\n      // \u914d\u7f6e\u4e3a\u975e\u963b\u585e\n      ServerSocketChannel ssc = ServerSocketChannel.open();\n      ssc.configureBlocking(false);\n\n        // \u6ce8\u518c ssc \u5230 \u9009\u62e9\u5668, \u6307\u5b9a ssc \u5173\u6ce8\u7684\u4e8b\u4ef6\n      ssc.register(selector, SelectionKey.OP_ACCEPT);\n      ssc.bind(new InetSocketAddress("localhost", 8080));\n\n      //\u8fdb\u5165\u6b7b\u5faa\u73af, // \u8f6e\u8be2, \u9009\u62e9\u5668\u4e0d\u65f6\u7684\u8fdb\u884c\u9009\u62e9\n      while (true) {\n        selector.select();\n        Set<SelectionKey> keys = selector.selectedKeys();\n        Iterator<SelectionKey> iterator = keys.iterator();\n        while (iterator.hasNext()) {\n          SelectionKey key = iterator.next();\n          iterator.remove();\n          if (key.isAcceptable()) {\n              //\u9009\u62e9\u5668\u7ec8\u4e8e\u9009\u62e9\u51fa\u4e86\u901a\u9053\n            ServerSocketChannel ssc1 = (ServerSocketChannel)key.channel();\n            SocketChannel sc = null;\n            while ((sc = ssc1.accept()) != null) {\n                //\u628a\u65b0\u63a5\u53d7\u7684\u901a\u9053\u914d\u7f6e\u4e3a\u975e\u963b\u585e\u7684\uff0c\u5e76\u628a\u5b83\u4e5f\u6ce8\u518c\u5230\u4e86\u9009\u62e9\u5668\u4e0a\uff0c\u8be5\u901a\u9053\u611f\u5174\u8da3\u7684\u64cd\u4f5c\u4e3aOP_READ\u3002\n              sc.configureBlocking(false);\n              sc.register(selector, SelectionKey.OP_READ);\n              InetSocketAddress rsa = (InetSocketAddress)sc.socket().getRemoteSocketAddress();\n              System.out.println(time() + "->" + rsa.getHostName() + ":" + rsa.getPort() + "->" + Thread.currentThread().getId() + ":" + (++clientCount));\n            }\n          }\n          //\u9009\u62e9\u5668\u7ec8\u4e8e\u53c8\u9009\u62e9\u51fa\u4e86\u901a\u9053\uff0c\u8fd9\u6b21\u53d1\u73b0\u901a\u9053\u662f\u9700\u8981Readable\u7684\n          else if (key.isReadable()) {\n            //\u5148\u5c06\u201c\u8bfb\u201d\u4ece\u611f\u5174\u8da3\u64cd\u4f5c\u79fb\u51fa\uff0c\u5f85\u628a\u6570\u636e\u4ece\u901a\u9053\u4e2d\u8bfb\u5b8c\u540e\uff0c\u518d\u628a\u201c\u8bfb\u201d\u6dfb\u52a0\u5230\u611f\u5174\u8da3\u64cd\u4f5c\u4e2d\n            //\u5426\u5219\uff0c\u8be5\u901a\u9053\u4f1a\u4e00\u76f4\u88ab\u9009\u51fa\u6765\n            key.interestOps(key.interestOps() & (~ SelectionKey.OP_READ));\n            // \u628a\u8fd9\u4e2a\u901a\u9053\u4ea4\u7ed9\u4e86\u4e00\u4e2a\u65b0\u7684\u5de5\u4f5c\u7ebf\u7a0b\u53bb\u5904\u7406\n            processWithNewThread((SocketChannel)key.channel(), key);\n          }\n        }\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  static void processWithNewThread(SocketChannel sc, SelectionKey key) {\n    Runnable run = () -> {\n      counter.incrementAndGet();\n      try {\n        String result = readBytes(sc);\n        //\u628a\u201c\u8bfb\u201d\u52a0\u8fdb\u53bb\n        key.interestOps(key.interestOps() | SelectionKey.OP_READ);\n        System.out.println(time() + "->" + result + "->" + Thread.currentThread().getId() + ":" + counter.get());\n        sc.close();\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n      counter.decrementAndGet();\n    };\n    new Thread(run).start();\n  }\n\n  static String readBytes(SocketChannel sc) throws Exception {\n    long start = 0;\n    int total = 0;\n    int count = 0;\n    ByteBuffer bb = ByteBuffer.allocate(1024);\n    //\u5f00\u59cb\u8bfb\u6570\u636e\u7684\u65f6\u95f4\n    long begin = System.currentTimeMillis();\n    while ((count = sc.read(bb)) > -1) {\n      if (start < 1) {\n        //\u7b2c\u4e00\u6b21\u8bfb\u5230\u6570\u636e\u7684\u65f6\u95f4\n        start = System.currentTimeMillis();\n      }\n      total += count;\n      bb.clear();\n    }\n    //\u8bfb\u5b8c\u6570\u636e\u7684\u65f6\u95f4\n    long end = System.currentTimeMillis();\n    return "wait=" + (start - begin) + "ms,read=" + (end - start) + "ms,total=" + total + "bs";\n  }\n\n  static String time() {\n    return sdf.format(new Date());\n  }\n}\n\n')),(0,r.kt)("h2",{id:"86-java-aio"},"8.6. java aio"),(0,r.kt)("p",null,"\u6ca1\u6709\u963b\u585e\u70b9\uff0c\u5f53\u5de5\u4f5c\u7ebf\u7a0b\u542f\u52a8\u65f6\uff0c\u6570\u636e\u5df2\u7ecf\uff08\u88ab\u7cfb\u7edf\uff09\u51c6\u5907\u597d\u53ef\u4ee5\u76f4\u63a5\u7528\u4e86\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\npublic class AioServer {\n\n  static int clientCount = 0;\n  static AtomicInteger counter = new AtomicInteger(0);\n  static SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");\n\n  public static void main(String[] args) {\n    try {\n      AsynchronousServerSocketChannel assc = AsynchronousServerSocketChannel.open();\n      assc.bind(new InetSocketAddress("localhost", 8080));\n      //\u975e\u963b\u585e\u65b9\u6cd5\uff0c\u5176\u5b9e\u5c31\u662f\u6ce8\u518c\u4e86\u4e2a\u56de\u8c03\uff0c\u800c\u4e14\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u8fde\u63a5\n      assc.accept(null, new CompletionHandler<AsynchronousSocketChannel, Object>() {\n\n        @Override\n        public void completed(AsynchronousSocketChannel asc, Object attachment) {\n          //\u518d\u6b21\u6ce8\u518c\uff0c\u63a5\u53d7\u4e0b\u4e00\u4e2a\u8fde\u63a5\n          assc.accept(null, this);\n          try {\n            InetSocketAddress rsa = (InetSocketAddress)asc.getRemoteAddress();\n            System.out.println(time() + "->" + rsa.getHostName() + ":" + rsa.getPort() + "->" + Thread.currentThread().getId() + ":" + (++clientCount));\n          } catch (Exception e) {\n          }\n          readFromChannelAsync(asc);\n        }\n\n        @Override\n        public void failed(Throwable exc, Object attachment) {\n\n        }\n      });\n      //\u4e0d\u8ba9\u4e3b\u7ebf\u7a0b\u9000\u51fa\n      synchronized (AioServer.class) {\n        AioServer.class.wait();\n      }\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n\n  static void readFromChannelAsync(AsynchronousSocketChannel asc) {\n    //\u4f1a\u628a\u6570\u636e\u8bfb\u5165\u5230\u8be5buffer\u4e4b\u540e\uff0c\u518d\u89e6\u53d1\u5de5\u4f5c\u7ebf\u7a0b\u6765\u6267\u884c\u56de\u8c03\n    ByteBuffer bb = ByteBuffer.allocate(1024*1024*1 + 1);\n    long begin = System.currentTimeMillis();\n    //\u975e\u963b\u585e\u65b9\u6cd5\uff0c\u5176\u5b9e\u5c31\u662f\u6ce8\u518c\u4e86\u4e2a\u56de\u8c03\uff0c\u800c\u4e14\u53ea\u80fd\u63a5\u53d7\u4e00\u6b21\u8bfb\u53d6\n    asc.read(bb, null, new CompletionHandler<Integer, Object>() {\n      //\u4ece\u8be5\u8fde\u63a5\u4e0a\u4e00\u5171\u8bfb\u5230\u7684\u5b57\u8282\u6570\n      int total = 0;\n      /**\n       * @param count \u8868\u793a\u672c\u6b21\u8bfb\u53d6\u5230\u7684\u5b57\u8282\u6570\uff0c-1\u8868\u793a\u6570\u636e\u5df2\u8bfb\u5b8c\n       */\n      @Override\n      public void completed(Integer count, Object attachment) {\n        counter.incrementAndGet();\n        if (count > -1) {\n          total += count;\n        }\n        int size = bb.position();\n        System.out.println(time() + "->count=" + count + ",total=" + total + "bs,buffer=" + size + "bs->" + Thread.currentThread().getId() + ":" + counter.get());\n        if (count > -1) {//\u6570\u636e\u8fd8\u6ca1\u6709\u8bfb\u5b8c\n          //\u518d\u6b21\u6ce8\u518c\u56de\u8c03\uff0c\u63a5\u53d7\u4e0b\u4e00\u6b21\u8bfb\u53d6\n          asc.read(bb, null, this);\n        } else {//\u6570\u636e\u5df2\u8bfb\u5b8c\n          try {\n            asc.close();\n          } catch (Exception e) {\n            e.printStackTrace();\n          }\n        }\n        counter.decrementAndGet();\n      }\n\n      @Override\n      public void failed(Throwable exc, Object attachment) {\n\n      }\n    });\n    long end = System.currentTimeMillis();\n    System.out.println(time() + "->exe read req,use=" + (end -begin) + "ms" + "->" + Thread.currentThread().getId());\n  }\n\n  static String time() {\n    return sdf.format(new Date());\n  }\n}\n\n')),(0,r.kt)("h2",{id:"87-\u65ad\u70b9\u7eed\u4f20"},"8.7. \u65ad\u70b9\u7eed\u4f20"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/ryanlijianchang/ResumeBrokenDownloads"},"https://github.com/ryanlijianchang/ResumeBrokenDownloads")),(0,r.kt)("h1",{id:"9-\u4ee3\u7406"},"9. \u4ee3\u7406"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u9759\u6001\u4ee3\u7406"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4ee3\u7406\u7c7b\u5b9e\u73b0\u76ee\u6807\u63a5\u53e3, \u5185\u90e8\u7ef4\u62a4\u4e00\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u5f15\u7528), jdk \u539f\u751f\u5b9e\u73b0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"aspectj \u6846\u67b6, \u5728\u7f16\u8bd1\u671f\u589e\u5f3a")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u52a8\u6001\u4ee3\u7406:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"jdk \u52a8\u6001\u4ee3\u7406(\u53ea\u80fd\u9488\u5bf9\u63a5\u53e3\u8fdb\u884c\u4ee3\u7406), jdk \u539f\u751f\u5b9e\u73b0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"cglib \u52a8\u6001\u4ee3\u7406(\u76f4\u63a5\u9488\u5bf9\u7c7b\u4ee3\u7406, \u751f\u6210\u5b50\u7c7b, \u6240\u4ee5\u76ee\u6807\u7c7b\u4e0d\u80fd\u662f final \u7684 ), \u4f9d\u8d56 asm; "),(0,r.kt)("p",{parentName:"li"},"Spring aop \u5728\u7ed9\u67d0\u4e2a\u7c7b\u63d0\u4f9b\u52a8\u6001\u4ee3\u7406\u65f6\u4f1a\u81ea\u52a8\u5728 jdk \u52a8\u6001\u4ee3\u7406\u548c cglib \u52a8\u6001\u4ee3\u7406\u4e2d\u52a8\u6001\u7684\u9009\u62e9\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"javaassist - javaassist \u662f\u4f7f\u7528\u6700\u5e7f\u6cdb\u7684\u52a8\u6001\u4ee3\u7406\u5f00\u6e90\u5e93, \u65e0\u9700\u7c7b\u63a5\u53e3; javaassist \u7684 ProxyFactory \u8fd8\u63d0\u4f9b\u4e86\u65b9\u6cd5\u8fc7\u6ee4\u5668\uff0c\u5b83\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5bf9\u7279\u5b9a\u65b9\u6cd5\u8fdb\u884c\u589e\u5f3a\u3002"))))),(0,r.kt)("h1",{id:"10-java-\u5185\u5b58\u6a21\u578b"},"10. Java \u5185\u5b58\u6a21\u578b"),(0,r.kt)("p",null,"java-memory-model.md"),(0,r.kt)("h1",{id:"11-java8"},"11. java8"),(0,r.kt)("h2",{id:"111-\u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5fp"},"11.1. \u51fd\u6570\u5f0f\u7f16\u7a0b\u7684\u6982\u5ff5(FP)"),(0,r.kt)("p",null,"vavr \u589e\u5f3a\u5e93 (",(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/gening4014/article/details/124326753"},"https://blog.csdn.net/gening4014/article/details/124326753"),")"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u53e6\u5916\u7684\u51fd\u6570, \u5728 Java \u4e2d\u672c\u8d28\u8fd8\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u533f\u540d\u7c7b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u5916\u51fd\u6570\u7684\u8fd4\u56de\u503c")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u51fd\u6570\u6ca1\u6709\u526f\u4f5c\u7528 - \u51fd\u6570\u548c\u5916\u754c\u4ea4\u4e92\u552f\u4e00\u9014\u5f84\u5c31\u662f \u53c2\u6570 \u548c \u8fd4\u56de\u503c"),(0,r.kt)("p",{parentName:"li"},"\u526f\u4f5c\u7528: \u51fd\u6570\u5728 call \u7684\u8fc7\u7a0b\u4e2d, \u5f71\u54cd\u4e86\u51fd\u6570\u7684\u5916\u90e8\u72b6\u6001")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Declaractive(\u7533\u660e\u5f0f) \u4ee3\u66ff Imperative(\u547d\u4ee4\u5f0f)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e0d\u53d8\u7684\u5bf9\u8c61 -- \u7c7b\u4f3c\u4e8e \u4e0d\u53d8\u6a21\u5f0f"),(0,r.kt)("p",{parentName:"li"},"\u58f0\u660e\u5f0f\u7684\u64cd\u4f5c\u4e0d\u4f1a\u6539\u53d8\u539f\u59cb\u5bf9\u8c61")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'\u5bb9\u6613 \u5e76\u884c\u5316 -- \u8fd9\u4e5f\u662f "\u4e0d\u53d8\u5bf9\u8c61"\u7684\u597d\u5904'))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// Declaractive vs. Imperative:\nprivate static void imperative(int[] arr) {\n    for (int i : arr) {\n        System.out.print(i+", ");\n    }\n}\n\nprivate static void declaractive(int[] arr) {\n    // jdk1.8\n    Arrays.stream(arr).forEach(System.out::println);\n}\n\n//////////////////////////////////////\n\n')),(0,r.kt)("h2",{id:"112-java8-\u6dfb\u52a0\u7684\u65b0\u7279\u6027"},"11.2. Java8 \u6dfb\u52a0\u7684\u65b0\u7279\u6027"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"default methods for interface \u63a5\u53e3\u5185\u5141\u8bb8\u9ed8\u8ba4\u5b9e\u73b0, \u5b9e\u73b0 fluent api"),(0,r.kt)("li",{parentName:"ul"},"Lambda expression",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"lambda scope",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"accessing local variables - final \u53ef\u4ee5\u4e0d\u52a0, \u6700\u597d\u52a0\u4e0a, \u5fc5\u987b\u4fdd\u8bc1\u53d8\u91cf\u53ea\u8bfb"),(0,r.kt)("li",{parentName:"ul"},"accessing fields and static variables - \u53ef\u8bfb\u53ef\u5199"),(0,r.kt)("li",{parentName:"ul"},"accessing default interface methods - lambda \u4e2d\u65e0\u6cd5\u4f7f\u7528\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5"))))),(0,r.kt)("li",{parentName:"ul"},"method/constructor reference",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u65b9\u6cd5\u5f15\u7528 -- ClassName:methodName"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u7c7b\u578b\u5bf9\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528 -- ClassName::methodName"),(0,r.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5b9e\u4f8b\u5bf9\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528 -- instance::methodName"))),(0,r.kt)("li",{parentName:"ul"},"\u8d85\u7c7b\u4e0a\u7684\u65b9\u6cd5\u5f15\u7528 -- super::methodName"),(0,r.kt)("li",{parentName:"ul"},"\u6784\u9020\u65b9\u6cd5\u5f15\u7528 -- ClassName::new"),(0,r.kt)("li",{parentName:"ul"},"\u6570\u7ec4\u6784\u9020\u65b9\u6cd5\u5f15\u7528 -- TypeName[]::new"))),(0,r.kt)("li",{parentName:"ul"},"functional interface",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"built-in functional interface",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Predicates - accept one arg and produce a predicate (and, or, negtive, isquals), \u4ee3\u8868\u4e00\u6bb5\u903b\u8f91\u5224\u65ad"),(0,r.kt)("li",{parentName:"ul"},"Functions - accept one arg and produce a result (andThen \u4e00\u4e2a\u4e00\u4e2a\u63a5\u7740\u6267\u884c, compose \u4ece\u6700\u5185\u5c42\u5f00\u59cb\u6267\u884c), \u4ee3\u8868\u4e00\u4e2a\u529f\u80fd",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"BiFunction - \u63a5\u6536 \u4e24\u4e2a\u53c2\u6570"))),(0,r.kt)("li",{parentName:"ul"},"Suppliers - do not accept any arg, produce a object of a given type, \u8868\u793a\u4e00\u4e2a\u5bf9\u8c61\u5de5\u5382"),(0,r.kt)("li",{parentName:"ul"},"Consumers - accept one arg and perform some operations on it, \u6d88\u8d39\u8005"),(0,r.kt)("li",{parentName:"ul"},"Comparators - \u6bd4\u8f83\u5668"))))),(0,r.kt)("li",{parentName:"ul"},"optional - a container for a value, \u5e76\u975e functional interface, \u7528\u4e8e\u9632\u6b62\u7a7a\u6307\u9488\u5f02\u5e38"),(0,r.kt)("li",{parentName:"ul"},"stream - represents a sequence of elements, on which some operations can be performed; stream opts are either \u4e2d\u95f4\u64cd\u4f5c and \u7ec8\u6b62\u64cd\u4f5c; \u6d41\u90fd\u662f\u4e00\u6b21\u6027\u7684, \u4e00\u65e6 terminal opts \u8c03\u7528, \u6d41\u5c31\u5173\u95ed\u4e86, \u518d\u7528\u5c31\u4f1a\u5f02\u5e38, \u53ef\u901a\u8fc7\u6784\u9020\u4e00\u4e2a Suplier \u6765\u91cd\u7528 stream;",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4e2d\u95f4\u64cd\u4f5c(intermediate opts) - \u53ea\u6709\u5b58\u5728 terminal opts \u65f6\u624d\u4f1a\u5b9e\u9645\u6267\u884c; \u5e76\u4e14\u662f\u6bcf\u4e2a element \u8d70\u5b8c\u6574\u4e2a\u94fe\u6761, \u624d\u4f1a\u8fdb\u5165\u4e0b\u4e00\u4e2a element(\u5229\u4e8e\u51cf\u5c11\u64cd\u4f5c\u6570, \u6bd4\u5982\u5bf9\u4e8e anyMatch \u64cd\u4f5c, \u53ea\u8981\u4e00\u4e2a\u5143\u7d20\u7b26\u5408\u5c31\u8fd4\u56de\u6700\u603b\u7ed3\u679c true)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Filter - accept a predicate and return a filtered stream - \u4e00\u822c\u653e\u5728\u94fe\u6761\u9996\u4f4d, \u51cf\u5c11\u64cd\u4f5c\u6570"),(0,r.kt)("li",{parentName:"ul"},"Sorted - accept a comparator or nothing and return a sorted view of stream; \u53ea\u662f\u751f\u6210\u89c6\u56fe, \u5e76\u4e0d\u6539\u53d8\u539f\u59cb collection"),(0,r.kt)("li",{parentName:"ul"},"Map - accept a function and perform on each element of the stream"))),(0,r.kt)("li",{parentName:"ul"},"\u7ec8\u70b9\u64cd\u4f5c(terminal opts)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"forEach - accept a consumer to be executed for each element in the stream"),(0,r.kt)("li",{parentName:"ul"},"Match - accept a predicate and return a boolean result; \u68c0\u67e5\u8fd9\u4e2a stream \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u7b26\u5408 predicate",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"anyMatch \u4efb\u4f55\u4e00\u4e2a\u7b26\u5408 return true"),(0,r.kt)("li",{parentName:"ul"},"allMatch \u5168\u90fd\u7b26\u5408 return true"),(0,r.kt)("li",{parentName:"ul"},"noneMatch \u6ca1\u6709\u7b26\u5408\u7684\u5143\u7d20 return true"))),(0,r.kt)("li",{parentName:"ul"},"Count - return the number of element as a long value"),(0,r.kt)("li",{parentName:"ul"},"Reduce - accept a function and return a optional representing the reducing value;"),(0,r.kt)("li",{parentName:"ul"},"Collect - accept a collector, transfer a stream to collection",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6709\u8bb8\u591a builtin \u7684 collector, \u5982 Collectors.toList()..."))))),(0,r.kt)("li",{parentName:"ul"},"sequential stream(\u4e32\u884c\u6d41)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u4f8b\u65b9\u6cd5 someList.stream()"),(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u65b9\u6cd5 Arrays.stream(arr)"),(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u65b9\u6cd5 Stream.of(...)"))),(0,r.kt)("li",{parentName:"ul"},"Parallel Streams(\u5e76\u884c\u6d41)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"someList.parallelStream()"),(0,r.kt)("li",{parentName:"ul"},"Stream.parallel()"))))),(0,r.kt)("li",{parentName:"ul"},"maps",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"map.keySet().stream()"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"map.values().stream()")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"map.entrySet().stream()"),"."),(0,r.kt)("li",{parentName:"ul"},"putIfAbsent(key, value) - \u82e5\u786e\u5b9e, \u5219\u5b58\u5165; ---\x3e  \u5982\u679c key \u6ca1\u6709\u5728 map \u4e2d, \u5b58\u5165, \u5982\u679c key \u5b58\u5728 map \u4e86, \u8fd4\u56de oldValue; \u4e3b\u8981\u662f\u514d\u9664\u4e86 null check"),(0,r.kt)("li",{parentName:"ul"},"merge(key,  newValue, biFunction) - \u6839\u636e key \u67e5 value, \u5982\u679c\u6ca1\u67e5\u5230, \u4fdd\u5b58, \u5982\u679c\u67e5\u5230\u4e86, \u6839\u636e biFunction \u6784\u9020 newValue \u4fdd\u5b58; biFunction(oldValue, newValue) \u8fd4\u56de\u8ba1\u7b97\u540e\u7684\u503c"),(0,r.kt)("li",{parentName:"ul"},"forEach - accept a consumer"),(0,r.kt)("li",{parentName:"ul"},"computeIfPresent(key, biFunction) - \u63a5\u6536\u4e00\u4e2a key, \u4e00\u4e2a biFunction, \u68c0\u67e5 key \u662f\u5426 null, \u627e\u5230\u8fd9\u4e2a entry, \u6839\u636e biFunction \u8ba1\u7b97\u51fa\u65b0\u7684 value \u91cd\u65b0 put \u8fdb map; biFunction(key, value) \u8fd4\u56de\u8ba1\u7b97\u7684\u503c"),(0,r.kt)("li",{parentName:"ul"},"computeIfAbsent - \u5982\u679c\u6839\u636e key \u83b7\u53d6\u4e0d\u5230 value, \u5219\u8ba1\u7b97\u65b0\u7684 value \u5e76 put \u8fdb\u53bb"),(0,r.kt)("li",{parentName:"ul"},"remove(key, value) - value \u7b26\u5408\u624d\u79fb\u9664 key \u5bf9\u5e94\u7684\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},"getOrDefault(key, def_value) - \u6ca1\u6709\u5c31\u8fd4\u56de\u9ed8\u8ba4\u503c"))),(0,r.kt)("li",{parentName:"ul"},"Date api - java.time \u5305\u4e0b, \u7ebf\u7a0b\u5b89\u5168",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Clock - \u65f6\u949f, \u65f6\u95f4\u7edf\u8ba1"),(0,r.kt)("li",{parentName:"ul"},"Timezones - \u65f6\u533a"),(0,r.kt)("li",{parentName:"ul"},"LocalTime - \u6ca1\u6709 time zone \u7684\u65f6\u95f4"),(0,r.kt)("li",{parentName:"ul"},"LocalDate - \u65e5\u671f"),(0,r.kt)("li",{parentName:"ul"},"LocalDateTime - \u65e5\u671f\u65f6\u95f4"))),(0,r.kt)("li",{parentName:"ul"},"Annotations",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6ce8\u89e3\u91cc\u9762\u5141\u8bb8\u6ce8\u89e3, \u5141\u8bb8\u91cd\u590d"),(0,r.kt)("li",{parentName:"ul"},"\u6ce8\u89e3\u5141\u8bb8\u653e\u5728\u65b0\u7684\u5730\u65b9: ElementType.TYPE_PARAMETER, ElementType.TYPE_USE"))),(0,r.kt)("li",{parentName:"ul"},"CompletableFuture - \u589e\u5f3a\u7248\u672c\u7684 Future",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"future.get() \u83b7\u53d6\u6700\u7ec8\u7ed3\u679c, \u4f1a\u963b\u585e, \u7b49\u5f85\u5b8c\u6210"),(0,r.kt)("li",{parentName:"ul"},"future.complet(xxx) \u4efb\u52a1\u5b8c\u6210"),(0,r.kt)("li",{parentName:"ul"},"CompletableFuture.supplyAsync(xxx) \u6784\u9020 future, \u6709\u8fd4\u56de\u503c"),(0,r.kt)("li",{parentName:"ul"},"CompletableFuture.runAsync(xxx) \u6784\u9020 future, \u65e0\u8fd4\u56de\u503c"),(0,r.kt)("li",{parentName:"ul"},"\u6d41\u5f0f\u8c03\u7528"),(0,r.kt)("li",{parentName:"ul"},"\u5f02\u5e38\u5904\u7406")))),(0,r.kt)("h3",{id:"1121-\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5"},"11.2.1. \u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5"),(0,r.kt)("p",null,'java8 \u5185\u7f6e\u7684\u8bb8\u591a\u51fd\u6570\u5f0f\u63a5\u53e3\u7528\u5230\u4e86"\u63a5\u53e3\u9ed8\u8ba4\u5b9e\u73b0", \u8fd9\u4f7f\u5f97 Java8 \u62e5\u6709\u4e86\u7c7b\u4f3c \u591a\u7ee7\u627f\u7684\u80fd\u529b: \u4e00\u4e2a\u5bf9\u8c61\u5b9e\u4f8b, \u62e5\u6709\u591a\u4e2a\u63a5\u53e3\u63d0\u4f9b\u7684\u5b9e\u4f8b\u65b9\u6cd5'),(0,r.kt)("p",null,"\u800c\u8fd9\u4e5f\u4f7f\u5f97\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5\u4f1a\u78b0\u5230 \u591a\u7ee7\u627f\u4e00\u6837\u7684\u95ee\u9898 -- \u5982\u679c\u4e24\u4e2a\u7236\u7c7b\u62e5\u6709\u76f8\u540c\u540d\u79f0\u7684\u65b9\u6cd5, \u5b50\u7c7b\u4e0d\u77e5\u9053\u4ee5\u54ea\u4e2a\u7684\u4e3a\u51c6, \u4f1a\u629b\u5f02\u5e38"),(0,r.kt)("p",null,"\u5229\u7528 \u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5, \u53ef\u4ee5\u5b9e\u73b0\u987a\u7545\u7684 fluent api"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u5178\u578b Demo\ninterface Formula {\n    double calculate(int a);\n\n    default double sqrt(int a) {\n        return Math.sqrt(a);\n    }\n}\n\n/////////////////////////////////////////\n\nprivate static void intConsumerAndThenTest() {\n    IntConsumer println = System.out::println;// \u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\n    IntConsumer errPrintln = System.err::println;// \u8f93\u51fa\u5230 \u9519\u8bef\u8f93\u51fa\n    Arrays.stream(arr).forEach(println.andThen(errPrintln));\n}\n\n// IntConsumer\u7684\u5b9e\u73b0\n\n@FunctionalInterface\npublic interface IntConsumer {\n\n    void accept(int value);\n\n    //\u5148\u8c03\u7528 accept, \u7136\u540eafter.accept()\n    default IntConsumer andThen(IntConsumer after) {\n        Objects.requireNonNull(after);\n        return (int t) -> { accept(t); after.accept(t); };\n    }\n}\n\n\n")),(0,r.kt)("h3",{id:"1122-functionalinterface-\u51fd\u6570\u63a5\u53e3"},"11.2.2. @FunctionalInterface-\u51fd\u6570\u63a5\u53e3"),(0,r.kt)("p",null,"\u7528\u4e8e\u6807\u6ce8\u51fd\u6570\u5f0f\u63a5\u53e3 - \u8fd9\u4e2a\u63a5\u53e3\u4e2d\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5(attention: \u5141\u8bb8\u5b58\u5728\u5176\u4ed6\u7684\u63a5\u53e3\u9ed8\u8ba4\u65b9\u6cd5 or Object \u4e2d\u5305\u542b\u7684\u65b9\u6cd5); \u662f\u5426\u6dfb\u52a0\u8fd9\u4e2a\u6ce8\u89e3\u4e0d\u662f\u5f3a\u5236\u6027\u7684, \u7c7b\u4f3c @Override, \u53ea\u662f\u4e3a\u4e86\u63d0\u4f9b\u7f16\u8bd1\u68c0\u67e5"),(0,r.kt)("p",null,"\u672c\u8d28\u662f\u5ef6\u8fdf\u4e86\u51fd\u6570\u7684\u5b9a\u4e49, \u4f7f\u7528\u7684\u65f6\u5019\u518d\u6765\u5b9a\u4e49\u51fd\u6570\u7684\u5177\u4f53\u5b9e\u73b0, \u65b9\u4fbf\u4e86 lambda \u8868\u8fbe\u5f0f"),(0,r.kt)("p",null,'\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u5b9e\u4f8b\u901a\u8fc7 "\u65b9\u6cd5\u5f15\u7528" \u548c "lambda" \u6784\u9020'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u5b9a\u4e49\u51fd\u6570\u5f0f\u63a5\u53e3\n@FunctionalInterface\ninterface Converter<F, T> {\n    T convert(F from);// \u53ea\u5305\u542b\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\n}\n\n// \u8fd9\u4e2a\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\n@FunctionalInterface\ninterface IntHandler {\n    void handl(int i);\n    boolean equals(Object obj);// equals() \u88ab Object \u5b9e\u73b0\u4e86, \u800cIntHandler\u7684\u5b9e\u4f8b\u9ed8\u8ba4\u7ee7\u627f\u81eaObject\n}\n\n// \u4f7f\u7528\n\nConverter<String, Integer> converter = (from) -> Integer.valueOf(from);\nInteger converted = converter.convert("123");\nSystem.out.println(converted);    // 123\n')),(0,r.kt)("h3",{id:"1123-\u65b9\u6cd5\u7684\u5f15\u7528"},"11.2.3. \u65b9\u6cd5\u7684\u5f15\u7528"),(0,r.kt)("p",null,"\u7528\u6765\u7b80\u5316 lambda \u8868\u8fbe\u5f0f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u65b9\u6cd5\u5f15\u7528 -- ClassName:methodName"),(0,r.kt)("li",{parentName:"ul"},"\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u7c7b\u578b\u5bf9\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528 -- ClassName::methodName"),(0,r.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5b9e\u4f8b\u5bf9\u5b9e\u4f8b\u65b9\u6cd5\u5f15\u7528 -- instance::methodName"))),(0,r.kt)("li",{parentName:"ul"},"\u8d85\u7c7b\u4e0a\u7684\u65b9\u6cd5\u5f15\u7528 -- super::methodName"),(0,r.kt)("li",{parentName:"ul"},"\u6784\u9020\u65b9\u6cd5\u5f15\u7528 -- ClassName::new"),(0,r.kt)("li",{parentName:"ul"},"\u6570\u7ec4\u6784\u9020\u65b9\u6cd5\u5f15\u7528 -- TypeName[]::new")),(0,r.kt)("p",null,"\u4e0d\u8981\u8bd5\u56fe\u7528\u5728\u91cd\u8f7d\u65b9\u6cd5\u4e0a, \u7f16\u8bd1\u5668\u78b0\u5230\u591a\u4e2a\u76f8\u540c\u7684\u540d\u79f0\u7684\u65b9\u6cd5\u4f1a\u611f\u5230\u56f0\u60d1, \u629b\u51fa\u5f02\u5e38"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * main\n */\npublic class App {\n    private static final Logger log = LoggerFactory.getLogger(App.class);\n    public static void main( String[] args ){\n        System.out.println( "java 8" );\n    }\n    /**\n     * :: \u666e\u901a\u51fd\u6570\u7684\u5f15\u7528\n     */\n    private static void test3() {\n        Person person = new Person("Peter", "Parker");\n        String ret = person::sayAndReturn;//// \u7f16\u8bd1\u65e0\u6cd5\u901a\u8fc7, [String ret ] \u65e0\u6cd5\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570\n                                    // person::sayAndReturn \u8fd4\u56de\u7684\u5f0f\u65b9\u6cd5\u5f15\u7528, \u800c\u4e0d\u662f \u65b9\u6cd5\u6267\u884c\u7684\u7ed3\u679c\n        // \u7f16\u8bd1\u901a\u8fc7, test\u65b9\u6cd5\u7b26\u5408Converter\u4e2d\u7684\u63a5\u53e3\u89c4\u8303\n        Converter<String, String> converter = person::test;\n\n        Demo demo = new Demo();\n        Converter<String, String> converter2 = demo::startWith;// \u63a5\u6536\u4e00\u4e2astring, \u8fd4\u56de\u7b2c\u4e00\u4e2a\u5b57\u7b26\n                                                // (strtWith\u7684\u8f93\u5165\u8f93\u51fa\u8981\u548cConverter\u7684\u51fd\u6570\u5f0f\u63a5\u53e3\u5339\u914d)\n        String firstLetter = converter2.convert("Java");\n        log.info(firstLetter);\n    }\n    /**\n     * :: constructor reference\n     */\n    private static void test2() {\n        PersonFactory<Person> personFac =  Person::new;// Person::new\u8868\u793aPerson\u7684\u6784\u9020\u51fd\u6570\n                                        // \u7684reference, \u4e5f\u662f PersonFactory \u8fd9\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u4f8b;\n                                        // \u521a\u597d\u7528 personFac \u63a5\u6536\n        Person person = personFac.create("Peter", "Parker");\n    }\n    @FunctionalInterface\n    interface PersonFactory<P extends Person> {\n        P create(String first, String last);\n    }\n\n}\n\n')),(0,r.kt)("h3",{id:"1124-lambda-\u8868\u8fbe\u5f0f"},"11.2.4. Lambda \u8868\u8fbe\u5f0f"),(0,r.kt)("h4",{id:"11241-lambda-\u4ecb\u7ecd"},"11.2.4.1. lambda \u4ecb\u7ecd"),(0,r.kt)("p",null,"\u672c\u8d28\u5c31\u662f\u533f\u540d\u7c7b"),(0,r.kt)("p",null,'lambda \u8868\u8fbe\u5f0f\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u53d8\u91cf, \u4f46\u662f lambda \u4e00\u65e6\u5b9a\u4e49, \u8fd9\u4e2a\u5916\u90e8\u53d8\u91cf\u5c31\u4e0d\u80fd\u6539\u53d8\u4e86, \u5e94\u8be5\u89c6\u4e3a "final"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'List<String> names = Arrays.asList("peter", "anna", "mike", "xenia");\n\n// old\u7248\u672c\nCollections.sort(names, new Comparator<String>() {\n    @Override\n    public int compare(String a, String b) {\n        return b.compareTo(a);\n    }\n});\n\n// Lambda\u8868\u8fbe\u5f0f\nCollections.sort(names, (String a, String b) -> {\n    return b.compareTo(a);\n});\n//\u66f4\u7b80\u53551\nCollections.sort(names, (String a, String b) -> b.compareTo(a));\n// \u66f4\u7b80\u53552\nCollections.sort(names, (a, b) -> b.compareTo(a));// \u7f16\u8bd1\u5668\u77e5\u9053\u53c2\u6570\u7c7b\u578b\uff0c\u6240\u4ee5\u53ef\u4ee5\u8df3\u8fc7\u5b83\u4eec\u4e0d\u5199\n')),(0,r.kt)("h4",{id:"11242-lambda-\u4f5c\u7528\u57df\u95ee\u9898"},"11.2.4.2. Lambda \u4f5c\u7528\u57df\u95ee\u9898"),(0,r.kt)("h5",{id:"112421-\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf"},"11.2.4.2.1. \u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf"),(0,r.kt)("p",null,"\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u58f0\u660e\u4e3a: final \u6216\u8005\u9690\u5f0f final"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//// \u8fd9\u6837\u53ef\u4ee5\nfinal int num = 1;\nConverter<Integer, String> stringConverter = (from) -> String.valueOf(from + num);\nstringConverter.convert(2);     // 3\n\n/// \u8fd9\u6837\u53ef\u4ee5(\u9690\u5f0ffinal)\nint num = 1;\nConverter<Integer, String> stringConverter = (from) -> String.valueOf(from + num);\nstringConverter.convert(2);     // 3\n\n// \u8fd9\u6837\u65e0\u6cd5\u7f16\u8bd1\nint num = 1;\nConverter<Integer, String> stringConverter = (from) -> String.valueOf(from + num);\nnum = 3;// \u4e0d\u662ffinal\u7684\u4e86\n")),(0,r.kt)("h5",{id:"112422-\u8bbf\u95ee\u6210\u5458\u53d8\u91cf"},"11.2.4.2.2. \u8bbf\u95ee\u6210\u5458\u53d8\u91cf"),(0,r.kt)("p",null,"\u5f88\u666e\u901a, \u53ef\u8bfb\u53ef\u5199"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"class Lambda4 {\n    static int outerStaticNum;\n    int outerNum;\n\n    void testScopes() {\n        Converter<Integer, String> stringConverter1 = (from) -> {\n            outerNum = 23;\n            return String.valueOf(from);\n        };\n\n        Converter<Integer, String> stringConverter2 = (from) -> {\n            outerStaticNum = 72;\n            return String.valueOf(from);\n        };\n    }\n}\n")),(0,r.kt)("h5",{id:"112423-\u8bbf\u95ee\u9ed8\u8ba4\u63a5\u53e3\u65b9\u6cd5"},"11.2.4.2.3. \u8bbf\u95ee\u9ed8\u8ba4\u63a5\u53e3\u65b9\u6cd5"),(0,r.kt)("p",null,"\u4e0d\u80fd\u8bbf\u95ee"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"interface Formula {\n    double calculate(int a);\n\n    default double sqrt(int a) {\n        return Math.sqrt(a);\n    }\n}\n\n// \u7f16\u8bd1\u4e0d\u901a\u8fc7,\nFormula formula = (a) -> sqrt( a * 100);\n")),(0,r.kt)("h2",{id:"113-java8-\u4e2d\u7684\u5e76\u884c\u6d41"},"11.3. java8 \u4e2d\u7684\u5e76\u884c\u6d41"),(0,r.kt)("h3",{id:"1131-\u4f7f\u7528\u5e76\u884c\u8fc7\u6ee4\u6570\u636e"},"11.3.1. \u4f7f\u7528\u5e76\u884c\u8fc7\u6ee4\u6570\u636e"),(0,r.kt)("p",null,"parallel() - \u5f97\u5230\u5e76\u884c\u6d41"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'private static long countPrime() {\n\n    // long count = IntStream.range(1, 5).filter(Lambdda::isPrime).count();\n\n    // \u4f7f\u7528\u5e76\u884c\u6a21\u5f0f\n    // Lambdda::isPrime \u4f1a\u88ab\u591a\u7ebf\u7a0b\u5e76\u53d1\u8c03\u7528\n    long count = IntStream.range(1, 10000).parallel().filter(Lambdda::isPrime).count();\n\n    System.out.println(count);\n    return count;\n}\n\n/**\n    * \u5224\u65ad\u662f\u5426\u8d28\u6570\n    * \u8d28\u6570: \u53ea\u80fd\u88ab 1\u548c\u5b83\u672c\u8eab\u6574\u9664\n    * @param target\n    * @return\n    */\nprivate static boolean isPrime(int target) {\n    if (target < 2) {\n        return false;\n    }\n    for (int i = 2; i <= Math.sqrt(target); i++) {\n        if (target % i == 0) {\n            return false;\n        }\n    }\n    // System.out.println("prime: " + target);\n    return true;\n}\n\n')),(0,r.kt)("h3",{id:"1132-\u4ece\u96c6\u5408\u5f97\u5230\u5e76\u884c\u6d41"},"11.3.2. \u4ece\u96c6\u5408\u5f97\u5230\u5e76\u884c\u6d41"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private static void average() {\n    ArrayList<Student> stuList = new ArrayList<Student>();\n    stuList.add(new Student(1));\n    stuList.add(new Student(2));\n    stuList.add(new Student(3));\n\n    // \u4ece\u96c6\u5408\u83b7\u53d6\u6d41\n    double asDouble = stuList.stream().mapToInt(stu -> stu.score).average().getAsDouble();\n    // \u5e76\u884c\u6d41\n    double asDouble2 = stuList.stream().parallel().mapToInt(stu -> stu.score).average().getAsDouble();\n    System.out.println(asDouble);\n}\n\n")),(0,r.kt)("h3",{id:"1133-\u5e76\u884c\u6392\u5e8f-\u7ed9\u6570\u7ec4\u8d4b\u503c"},"11.3.3. \u5e76\u884c\u6392\u5e8f-\u7ed9\u6570\u7ec4\u8d4b\u503c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private static void parallelSort() {\n    int[] bigArr = new int[100];\n    Arrays.setAll(bigArr, ele -> new Random().nextInt(200));\n    // \u5e76\u884c\u8d4b\u503c\n    // Arrays.parallelSetAll(bigArr, ele -> new Random().nextInt());\n\n    // \u6392\u5e8f\n    Arrays.sort(bigArr);\n    // \u5e76\u884c\u6392\u5e8f\n    // Arrays.parallelSort(bigArr);\n\n    Arrays.stream(bigArr).forEach(System.out::println);\n}\n\n")),(0,r.kt)("h2",{id:"114-completablefuture-\u63a5\u53e3-\u589e\u5f3a\u7684-future"},"11.4. CompletableFuture \u63a5\u53e3-\u589e\u5f3a\u7684 Future"),(0,r.kt)("h3",{id:"1141-java-\u5f02\u6b65\u7f16\u7a0b"},"11.4.1. java \u5f02\u6b65\u7f16\u7a0b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/* \n\n\u5f02\u6b65\u7684\u51e0\u79cd\u65b9\u5f0f\n\n    Thread \u65b9\u5f0f: \u5bf9\u8017\u65f6\u7684\u4efb\u52a1\u65b0\u5f00\u4e00\u4e2a\u7ebf\u7a0b, \u4e3b\u7ebf\u7a0b\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\n        \u7f3a\u70b9: \u521b\u5efa\u7ebf\u7a0b\u6ca1\u6709\u590d\u7528 (\u8fd9\u4e2a\u95ee\u9898\u4f7f\u7528\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u89e3\u51b3\u3002)\n            \u5f02\u6b65\u4efb\u52a1\u65e0\u6cd5\u83b7\u53d6\u6700\u7ec8\u7684\u6267\u884c\u7ed3\u679c, \u4f7f\u7528  FutureTask \u53ef\u4ee5\u89e3\u51b3\n    \n    Guava \u5e93\u63d0\u4f9b\u7684 ListenableFuture \u548c Futures \u7c7b\n\n    spring \u6846\u67b6\u63d0\u4f9b\u7684 @Async \u7b49\u6ce8\u89e3\u5b9e\u73b0\u5f02\u6b65\u5904\u7406\n\n    FutureTask \u65b9\u5f0f: \u81ea JDK 1.5 \u5f00\u59cb\uff0c\u5f15\u5165\u4e86 Future \u63a5\u53e3\u548c\u5b9e\u73b0 Future \u63a5\u53e3\u7684 FutureTask \u7c7b\u6765\u8868\u793a\u5f02\u6b65\u8ba1\u7b97\u7ed3\u679c\n                    \u5b9e\u73b0\u4e86 Future \u63a5\u53e3\u8fd8\u5b9e\u73b0\u4e86 Runnable \u63a5\u53e3\uff0c\u8868\u793a\u4e00\u79cd\u53ef\u751f\u6210\u7ed3\u679c\u7684 Runnable\n        \u7f3a\u70b9:\u4f7f\u7528\u8fd8\u662f\u6bd4\u8f83\u590d\u6742, \u591a\u4e2a\u5f02\u6b65\u4efb\u52a1\u7684\u7ec4\u5408\u6bd4\u8f83, \u4f9d\u8d56\u5173\u7cfb\u6bd4\u8f83\u96be\u8868\u8fbe\n    \n    CompletableFuture: \u81ea jdk1.8\u5f15\u5165, \u5b9e\u73b0\u4e86 Future \u548c CompletionStage \u63a5\u53e3\n\n\n\n\n*/\n\n\n")),(0,r.kt)("h3",{id:"1142-\u539f\u7406\u4ecb\u7ecd"},"11.4.2. \u539f\u7406\u4ecb\u7ecd"),(0,r.kt)("p",null,"CompletableFuture \u662f\u8d85\u5927\u578b\u5de5\u5177\u7c7b, \u65b9\u6cd5\u5de8\u591a, \u5b9e\u73b0\u4e86 Future , CompletionStage, \u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u591a\u7ebf\u7a0b\u5f02\u6b65\u4efb\u52a1\u7684\u7f16\u6392"),(0,r.kt)("p",null,"Callable\uff0c\u6709\u7ed3\u679c\u7684\u540c\u6b65\u884c\u4e3a\uff0c\u6bd4\u5982\u505a\u86cb\u7cd5\uff0c\u4ea7\u751f\u86cb\u7cd5\nRunnable\uff0c\u65e0\u7ed3\u679c\u7684\u540c\u6b65\u884c\u4e3a\uff0c\u6bd4\u5982\u559d\u725b\u5976\uff0c\u4ec5\u4ec5\u5c31\u662f\u559d\nFuture\uff0c\u5f02\u6b65\u5c01\u88c5Callable/Runnable\uff0c\u6bd4\u5982\u59d4\u6258\u7ed9\u5e08\u5085\uff08\u5176\u4ed6\u7ebf\u7a0b\uff09\u53bb\u505a\u7cd5\u70b9\nCompletableFuture\uff0c\u5c01\u88c5Future\uff0c\u4f7f\u5176\u62e5\u6709\u56de\u8c03\u529f\u80fd\uff0c\u6bd4\u5982\u8ba9\u5e08\u5085\u4e3b\u52a8\u544a\u8bc9\u6211\u86cb\u7cd5\u505a\u597d\u4e86"),(0,r.kt)("p",null,"\u521b\u5efa\u65f6\u9700\u8981\u4f20\u9012\u7ebf\u7a0b\u6c60, \u4e0d\u4f20\u5219\u4f7f\u7528\u9ed8\u8ba4 pool"),(0,r.kt)("h3",{id:"1143-completablefuture-api"},"11.4.3. completablefuture api"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\n// \u521b\u5efa\n\n// supplyAsync\u65b9\u6cd5, \u5173\u6ce8\u8fd4\u56de\u503c\n// \n//\u4f7f\u7528\u9ed8\u8ba4\u5185\u7f6e\u7ebf\u7a0b\u6c60ForkJoinPool.commonPool()\uff0c\u6839\u636esupplier\u6784\u5efa\u6267\u884c\u4efb\u52a1\npublic static <U> CompletableFuture<U> supplyAsync(Supplier<U> supplier)\n//\u81ea\u5b9a\u4e49\u7ebf\u7a0b\uff0c\u6839\u636esupplier\u6784\u5efa\u6267\u884c\u4efb\u52a1\npublic static <U> CompletableFuture<U> supplyAsync(Supplier<U> supplier, Executor executor)\n\n\n// runAsync\u65b9\u6cd5, \u4e0d\u652f\u6301\u4e0d\u5173\u6ce8\u8fd4\u56de\u503c\n// \n//\u4f7f\u7528\u9ed8\u8ba4\u5185\u7f6e\u7ebf\u7a0b\u6c60ForkJoinPool.commonPool()\uff0c\u6839\u636erunnable\u6784\u5efa\u6267\u884c\u4efb\u52a1\npublic static CompletableFuture<Void> runAsync(Runnable runnable) \n//\u81ea\u5b9a\u4e49\u7ebf\u7a0b\uff0c\u6839\u636erunnable\u6784\u5efa\u6267\u884c\u4efb\u52a1\npublic static CompletableFuture<Void> runAsync(Runnable runnable,  Executor executor)\n\n\n\n// \u5f02\u6b65\u56de\u8c03\n\n\n// \u505a\u5b8c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u540e\uff0c\u518d\u505a\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u3002\u524d\u540e\u4e24\u4e2a\u4efb\u52a1\u6ca1\u6709\u53c2\u6570\u4f20\u9012(\u5373\u4e0d\u5173\u5fc3\u4e0a\u4e2a\u4efb\u52a1\u7684\u7ed3\u679c)\uff0c\u7b2c\u4e8c\u4e2a\u4efb\u52a1(\u5373\u8fd9\u91cc\u7684 action)\u4e5f\u6ca1\u6709\u8fd4\u56de\u503c\npublic CompletableFuture<Void> thenRun(Runnable action);\n// \u7b49\u6548thenRun, \u533a\u522b:\n// \u5982\u679c\u4f60\u6267\u884c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u7684\u65f6\u5019\uff0c\u4f20\u5165\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff1a\n    // \u8c03\u7528thenRun\u65b9\u6cd5\u6267\u884c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u65f6\uff0c\u5219\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u548c\u7b2c\u4e00\u4e2a\u4efb\u52a1\u662f\u5171\u7528\u540c\u4e00\u4e2a\u7ebf\u7a0b\u6c60\u3002\n    // \u8c03\u7528thenRunAsync\u6267\u884c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u65f6\uff0c\u5219\u7b2c\u4e00\u4e2a\u4efb\u52a1\u4f7f\u7528\u7684\u662f\u4f60\u81ea\u5df1\u4f20\u5165\u7684\u7ebf\u7a0b\u6c60\uff0c\u7b2c\u4e8c\u4e2a\u4efb\u52a1\u4f7f\u7528\u7684\u662fForkJoin\u7ebf\u7a0b\u6c60\npublic CompletableFuture<Void> thenRunAsync(Runnable action);\n\n// \u4f9d\u8d56\u4e0a\u4e2a\u4efb\u52a1\u7684\u7ed3\u679c, \u6709\u4f20\u53c2, \u65e0\u8fd4\u56de\u503c ( \u7b2c\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\uff0c\u6267\u884c\u7b2c\u4e8c\u4e2a\u56de\u8c03\u65b9\u6cd5\u4efb\u52a1\uff0c\u4f1a\u5c06\u8be5\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\uff0c\u4f5c\u4e3a\u5165\u53c2\uff0c\u4f20\u9012\u5230\u56de\u8c03\u65b9\u6cd5\u4e2d\uff0c\u4f46\u662f\u56de\u8c03\u65b9\u6cd5\u662f\u6ca1\u6709\u8fd4\u56de\u503c\u7684\u3002)\nthenAccept/thenAcceptAsync\n\n// \u4f9d\u8d56\u4e0a\u4e2a\u4efb\u52a1\u7ed3\u679c, \u6709\u4f20\u53c2, \u6709\u8fd4\u56de\u503c\nthenApply/thanApplyAsync\n\n// \u67d0\u4e2a\u4efb\u52a1\u5f02\u5e38, \u6267\u884c\u7684\u56de\u8c03\u65b9\u6cd5\nexceptionally(e -> {e.print...})\n\n// \u67d0\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e, \u6267\u884c\u7684\u56de\u8c03\u65b9\u6cd5   , \u56de\u8c03\u65b9\u6cd5\u65e0\u8fd4\u56de\u503c, \u4f46\u662f\u65b9\u6cd5\u672c\u8eab\u6709\u8fd4\u56de\u503c, \u8fd4\u56de\u4e0a\u4e2a\u4efb\u52a1\u7684\u7ed3\u679c\nwhenComplete((last_result, e) -> {no return_value})\n\n//\u67d0\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e, \u6267\u884c\u7684\u56de\u8c03\u65b9\u6cd5   , \u56de\u8c03\u65b9\u6cd5\u6709\u8fd4\u56de\u503c , \u65b9\u6cd5\u672c\u8eab\u8fd4\u56de\u56de\u8c03\u65b9\u6cd5\u7684 result\nhandle((last_result, e) -> {return_value})\n\n\n\n// \u591a\u4e2a\u4efb\u52a1\u7ec4\u5408\u5904\u7406\n\n\n// and \u7684\u5173\u7cfb\nthenCombine / thenAcceptBoth / runAfterBoth\n// \u90fd\u8868\u793a\uff1a\u5c06\u4e24\u4e2aCompletableFuture\u7ec4\u5408\u8d77\u6765\uff0c\u53ea\u6709\u8fd9\u4e24\u4e2a\u90fd\u6b63\u5e38\u6267\u884c\u5b8c\u4e86\uff0c\u624d\u4f1a\u6267\u884c\u67d0\u4e2a\u4efb\u52a1\u3002\n// \u533a\u522b\u5728\u4e8e\uff1a\n// thenCombine\uff1a\u4f1a\u5c06\u4e24\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a\u65b9\u6cd5\u5165\u53c2\uff0c\u4f20\u9012\u5230\u6307\u5b9a\u65b9\u6cd5\u4e2d\uff0c\u4e14\u6709\u8fd4\u56de\u503c\n// thenAcceptBoth: \u4f1a\u5c06\u4e24\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c\u4f5c\u4e3a\u65b9\u6cd5\u5165\u53c2\uff0c\u4f20\u9012\u5230\u6307\u5b9a\u65b9\u6cd5\u4e2d\uff0c\u4e14\u65e0\u8fd4\u56de\u503c\n// runAfterBoth \u4e0d\u4f1a\u628a\u6267\u884c\u7ed3\u679c\u5f53\u505a\u65b9\u6cd5\u5165\u53c2\uff0c\u4e14\u6ca1\u6709\u8fd4\u56de\u503c\u3002\n\n// or \u7684\u5173\u7cfb\napplyToEither / acceptEither / runAfterEither \n// \u90fd\u8868\u793a\uff1a\u5c06\u4e24\u4e2aCompletableFuture\u7ec4\u5408\u8d77\u6765\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u6267\u884c\u5b8c\u4e86,\u5c31\u4f1a\u6267\u884c\u67d0\u4e2a\u4efb\u52a1 \n// \u533a\u522b\u5728\u4e8e\uff1a\n// applyToEither\uff1a\u4f1a\u5c06\u5df2\u7ecf\u6267\u884c\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4f5c\u4e3a\u65b9\u6cd5\u5165\u53c2\uff0c\u4f20\u9012\u5230\u6307\u5b9a\u65b9\u6cd5\u4e2d\uff0c\u4e14\u6709\u8fd4\u56de\u503c\n// acceptEither: \u4f1a\u5c06\u5df2\u7ecf\u6267\u884c\u5b8c\u6210\u7684\u4efb\u52a1\uff0c\u4f5c\u4e3a\u65b9\u6cd5\u5165\u53c2\uff0c\u4f20\u9012\u5230\u6307\u5b9a\u65b9\u6cd5\u4e2d\uff0c\u4e14\u65e0\u8fd4\u56de\u503c\n// runAfterEither\uff1a \u4e0d\u4f1a\u628a\u6267\u884c\u7ed3\u679c\u5f53\u505a\u65b9\u6cd5\u5165\u53c2\uff0c\u4e14\u6ca1\u6709\u8fd4\u56de\u503c\u3002\n\nAllOf\n// \u6240\u6709\u4efb\u52a1\u90fd\u6267\u884c\u5b8c\u6210\u540e\uff0c\u624d\u6267\u884c allOf\u8fd4\u56de\u7684CompletableFuture\u3002\n//\u5982\u679c\u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u5f02\u5e38\uff0callOf\u7684CompletableFuture\uff0c\u6267\u884cget\u65b9\u6cd5\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\n\nAnyOf\n// \u4efb\u610f\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\uff0c\u5c31\u6267\u884canyOf\u8fd4\u56de\u7684CompletableFuture\u3002\n// \u5982\u679c\u6267\u884c\u7684\u4efb\u52a1\u5f02\u5e38\uff0canyOf\u7684CompletableFuture\uff0c\u6267\u884cget\u65b9\u6cd5\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38\n\nthenCompose/thenComposeAsync\n// \u5728\u67d0\u4e2a\u4efb\u52a1\u6267\u884c\u5b8c\u6210\u540e\uff0c\u5c06\u8be5\u4efb\u52a1\u7684\u6267\u884c\u7ed3\u679c,\u4f5c\u4e3a\u65b9\u6cd5\u5165\u53c2,\u53bb\u6267\u884c\u6307\u5b9a\u7684\u65b9\u6cd5\u3002\n// \u8be5\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684CompletableFuture\u5b9e\u4f8b\n\n// \u548c thenApply \u533a\u522b:\n// thenApply()\u63a5\u6536\u7684\u662f\u524d\u4e00\u4e2a\u8c03\u7528\u8fd4\u56de\u7684\u7ed3\u679c\uff0c\u7136\u540e\u5bf9\u8be5\u7ed3\u679c\u8fdb\u884c\u5904\u7406\u3002\n//          \u5b83\u7684\u529f\u80fd\u76f8\u5f53\u4e8e\u5c06CompletableFuture<T>\u8f6c\u6362\u6210CompletableFuture<U>\u3002\n//          \u8f6c\u6362\u7684\u662f\u6cdb\u578b\u4e2d\u7684\u7c7b\u578b\uff0c\u662f\u540c\u4e00\u4e2aCompletableFuture\n// thenCompose()\u63a5\u6536\u7684\u662f\u524d\u4e00\u4e2a\u8c03\u7528\u7684stage\uff0c\u8fd4\u56deflat\u4e4b\u540e\u7684\u7684CompletableFuture\u3002\n//          \u4ed6\u7684\u529f\u80fd\u662f\u7528\u6765\u8fde\u63a5\u4e24\u4e2aCompletableFuture\n//          \u662f\u751f\u6210\u4e00\u4e2a\u65b0\u7684CompletableFuture\n// \u7b80\u5355\u70b9\u6bd4\u8f83\uff0c\u4e24\u8005\u5c31\u50cf\u662fmap\u548cflatMap\u7684\u533a\u522b\u3002\n\n\n// \u6ce8\u610f:\n// Future\u9700\u8981\u83b7\u53d6\u8fd4\u56de\u503c\uff0c\u624d\u80fd\u83b7\u53d6\u5f02\u5e38\u4fe1\u606f\n\n// CompletableFuture\u4ee3\u7801\u4e2d\u53c8\u4f7f\u7528\u4e86\u9ed8\u8ba4\u7684\u7ebf\u7a0b\u6c60\uff0c\u5904\u7406\u7684\u7ebf\u7a0b\u4e2a\u6570\u662f\u7535\u8111CPU\u6838\u6570-1\u3002\u5728\u5927\u91cf\u8bf7\u6c42\u8fc7\u6765\u7684\u65f6\u5019\uff0c\u5904\u7406\u903b\u8f91\u590d\u6742\u7684\u8bdd\uff0c\u54cd\u5e94\u4f1a\u5f88\u6162\u3002\u4e00\u822c\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff0c\u4f18\u5316\u7ebf\u7a0b\u6c60\u914d\u7f6e\u53c2\u6570\n\n// \u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u65f6\uff0c\u6ce8\u610f\u9971\u548c\u7b56\u7565\n// CompletableFuture\u7684get()\u65b9\u6cd5\u662f\u963b\u585e\u7684\uff0c\u6211\u4eec\u4e00\u822c\u5efa\u8bae\u4f7f\u7528future.get(3, TimeUnit.SECONDS)\u3002\u5e76\u4e14\u4e00\u822c\u5efa\u8bae\u4f7f\u7528\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u3002\n// \u4f46\u662f\u5982\u679c\u7ebf\u7a0b\u6c60\u62d2\u7edd\u7b56\u7565\u662fDiscardPolicy\u6216\u8005DiscardOldestPolicy\uff0c\u5f53\u7ebf\u7a0b\u6c60\u9971\u548c\u65f6\uff0c\u4f1a\u76f4\u63a5\u4e22\u5f03\u4efb\u52a1\uff0c\u4e0d\u4f1a\u629b\u5f03\u5f02\u5e38\u3002\u56e0\u6b64\u5efa\u8bae\uff0cCompletableFuture\u7ebf\u7a0b\u6c60\u7b56\u7565\u6700\u597d\u4f7f\u7528AbortPolicy\uff0c\u7136\u540e\u8017\u65f6\u7684\u5f02\u6b65\u7ebf\u7a0b\uff0c\u505a\u597d\u7ebf\u7a0b\u6c60\u9694\u79bb\u54c8\n")),(0,r.kt)("h3",{id:"1144-\u5b8c\u6210\u4e86\u5c31\u901a\u77e5\u6211-\u624b\u52a8\u586b\u5145\u7ed3\u679c"},"11.4.4. \u5b8c\u6210\u4e86\u5c31\u901a\u77e5\u6211-\u624b\u52a8\u586b\u5145\u7ed3\u679c"),(0,r.kt)("p",null,"\u53ef\u4f5c\u4e3a\u51fd\u6570\u8c03\u7528\u7684\u5951\u7ea6(\u771f\u5b9e\u8fd4\u56de\u503c\u7684\u5305\u88c5)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n * CompletableFutureDemo  \u590d\u6742\u7684\u8ba1\u7b97\u5728 main thread\n */\npublic class CompletableFutureDemo {\n    // block until main thread complete the complex compute, then print result\n    private static class AskTask implements Runnable {\n        private CompletableFuture<Integer> future;\n\n        public AskTask(CompletableFuture<Integer> future) {\n            this.future = future;\n        }\n\n        @Override\n        public void run() {\n            try {\n                Integer integer = future.get();// \u963b\u585e, CompletableFuture\u4e3a "\u672a\u5b8c\u6210" \u72b6\u6001\n                System.out.println(integer);\n            } catch (InterruptedException | ExecutionException e) {\n                e.printStackTrace();\n            }\n        }\n\n    }\n\n    public static void main(String[] args) throws InterruptedException {\n        CompletableFuture<Integer> future = new CompletableFuture<Integer>();\n        new Thread(new AskTask(future)).start();// \u542f\u52a8\u7b49\u5f85\u7ebf\u7a0b\n\n        // simulate complex compute\n        Thread.sleep(1000);\n\n        // \u544a\u77e5\u8fd0\u7b97\u7ed3\u679c: 100\n        future.complete(100);// \u6b64\u65f6\u4e3a "\u5b8c\u6210"\u72b6\u6001\n    }\n}\n\n')),(0,r.kt)("h3",{id:"1145-\u5f02\u6b65\u6267\u884c\u4efb\u52a1"},"11.4.5. \u5f02\u6b65\u6267\u884c\u4efb\u52a1"),(0,r.kt)("p",null,"\u8fd9\u4e2a demo \u521a\u597d\u548c\u4e0a\u9762\u7684 demo \u76f8\u53cd, \u8d1f\u8d23\u7684\u8ba1\u7b97\u4e0d\u5728 main thread"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"public static void main(String[] args) throws InterruptedException, ExecutionException {\n\n    CompletableFuture<Integer> supplyAsync = CompletableFuture.supplyAsync(() -> calculate(20));\n                                    // supplyAsync() \u7528\u4e8e\u9700\u8981\u6709\u8fd4\u56de\u503c\u7684\u573a\u666f, \u53ef\u4f20\u9012 pool\n                                    // runAsync() \u7528\u4e8e\u65e0\u9700\u8fd4\u56de\u503c\u7684\u573a\u666f, \u53ef\u4f20\u9012 pool\n    // do sth else;\n\n    System.out.println(supplyAsync.get());\n}\n\nprivate static Integer calculate(Integer param) {\n    try {\n        // simulate complex calculation\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    return param * param;\n}\n\n")),(0,r.kt)("h3",{id:"1146-\u6d41\u5f0f\u8c03\u7528\u7ec4\u5408\u591a\u4e2a-function-\u548c-\u5f02\u5e38\u5904\u7406"},"11.4.6. \u6d41\u5f0f\u8c03\u7528\u7ec4\u5408\u591a\u4e2a function \u548c \u5f02\u5e38\u5904\u7406"),(0,r.kt)("p",null,"\u7ebf\u7a0b\u4e32\u884c\u5316 (\u7b49\u5f85\u524d\u7f6e \u4efb\u52a1\u5b8c\u6210\u540e\u518d...)"),(0,r.kt)("p",null,"thenapply() \u7b49\u5f85\u5b8c\u6210\u7136\u540e\u5904\u7406, \u6709\u8fd4\u56de\u503c\nthenrun() .... \u6ca1\u6709\u8fd4\u56de\u503c, \u6ca1\u6709\u4f20\u5165\u53c2\u6570\nthenaccept() \u7b49\u5f85\u5b8c\u6210\u7136\u540e\u6d88\u8d39"),(0,r.kt)("p",null,"\u5e26\u6709 async \u7684\u65b9\u6cd5\u5219\u65b0\u4efb\u52a1\u662f\u65b0\u5f00\u4e00\u4e2athread \u6267\u884c, \u4e0d\u5e26 async \u7684\u65b9\u6cd5\u5219\u65b0\u4efb\u52a1\u662f\u548c\u524d\u7f6e\u4efb\u52a1\u5171\u7528 thread"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'private static void fluentApiDemo() throws InterruptedException, ExecutionException {\n    CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> calculate(50))\n            .thenApply(i -> Integer.toString(i)).thenApply(str -> "\\"" + str + "\\"")\n            .thenAccept(System.out::println);// \u7ed3\u679c: "2500"\n            \n//   \u4e5f\u53ef\u4ee5\u5728\u6d41\u8c03\u7528\u4e2d\u4f7f\u7528 whencomplete((resp, e) -> {})    \u5f02\u5e38\u5904\u7406\n//                  \u7c7b\u4f3c \u7684 handle(( resp, e) -> {return ...}), \u53ef\u4ee5\u6709\u8fd4\u56de\u503c\n    future.get(); // \u9700\u8981\u8ba9 main thread \u963b\u585e, \u7b49\u5f85 calculate\u6267\u884c\u5b8c\n    System.out.println(future.get());// \u963b\u585e // \u7ed3\u679c: null\n}\n\nprivate static Integer calculate(Integer param) {\n    try {\n        // simulate complex calculation\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    return param * param;\n}\n\n')),(0,r.kt)("p",null,"\u5f02\u5e38\u5904\u7406"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'private static void fluentApiDemo() throws InterruptedException, ExecutionException {\n    CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> calculate(50))\n    //   \u4e5f\u53ef\u4ee5\u5728\u6d41\u8c03\u7528\u4e2d\u4f7f\u7528 whencomplete((resp, e) -> {})    \u5f02\u5e38\u5904\u7406\n//                  \u7c7b\u4f3c \u7684 handle(( resp, e) -> {return ...}), \u53ef\u4ee5\u6709\u8fd4\u56de\u503c\n            .exceptionally(e -> {           // \u5bf9 calculate \u65b9\u6cd5\u7684\u5f02\u5e38\u5904\u7406\n                e.printStackTrace(); // java.util.concurrent.CompletionException: java.lang.ArithmeticException: / by zero\n                return 0; // \u6700\u7ec8\u5904\u7406\u7ed3\u679c : "0"\n            })\n            .thenApply(i -> Integer.toString(i)).thenApply(str -> "\\"" + str + "\\"")\n            .thenAccept(System.out::println);// \u7ed3\u679c: "2500"\n    future.get(); // \u9700\u8981\u8ba9 main thread \u963b\u585e, \u7b49\u5f85 calculate\u6267\u884c\u5b8c\n    System.out.println(future.get());// \u963b\u585e // \u7ed3\u679c: null\n}\n\nprivate static Integer calculate(Integer param) {\n    int i = param/0;\n    try {\n        // simulate complex calculation\n        Thread.sleep(1000);\n    } catch (InterruptedException e) {\n        e.printStackTrace();\n    }\n\n    return param * param;\n}\n\n')),(0,r.kt)("h3",{id:"1147-\u7ec4\u5408\u591a\u4e2a-completablefuture"},"11.4.7. \u7ec4\u5408\u591a\u4e2a CompletableFuture"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u987a\u5e8f\u5b8c\u6210\nprivate static void composeCompletableFutureDemo() throws InterruptedException, ExecutionException {\n    CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> calculate(20))\n        .thenCompose(i -> CompletableFuture.supplyAsync(() -> calculate(i)))\n                    // \u7b49\u5f85\u4e0a\u4e00\u4e2afuture\u5f97\u5230\u7ed3\u679c, \u7136\u540e\u5c06\u4e0a\u4e00\u4e2a future \u7684\n                    // \u7ed3\u679c\u4f20\u5165(\u8fd9\u4fe9 future \u662f\u4f9d\u8d56\u5173\u7cfb), \u518d\u6b21\u6784\u9020\u4e00\u4e2a future\n        .thenApply(i -> "\\"" + i + "\\"").thenAccept(System.out::println);// \u7ed3\u679c: "160000"\n    future.get();\n}\n\n// \u53e6\u4e00\u79cd\u7ec4\u5408\u7684\u65b9\u6cd5\n// \u6ca1\u6709\u987a\u5e8f, \u4f46\u662f\u90fd\u8981\u5b8c\u6210\nprivate static void composeCompletableFutureDemo() throws InterruptedException, ExecutionException {\n    CompletableFuture<Void> future = CompletableFuture.supplyAsync(() -> calculate(20))\n        // \u9996\u5148\u5b8c\u6210\u524d\u4e00\u4e2a future  \u548c \u8ddf\u7740\u7684 future (\u8fd9\u4fe9future \u6ca1\u6709\u4efb\u4f55\u5173\u7cfb), \u7136\u540e\u5c06\u4e24\u8005\u7ed3\u679c\u8fdb\u884c\u8ba1\u7b97\n        .thenCombine(CompletableFuture.supplyAsync(() -> calculate(10)), (i, j) -> {\n            System.out.println("i=" + i);\n            System.out.println("j=" + j);\n            return i + j;\n        })\n        .thenApply(i -> "\\"" + i + "\\"").thenAccept(System.out::println);\n                    // \u7ed3\u679c:i=400 j=100 "500"\n\n    future.get();\n}\n\n// \u6ca1\u6709\u987a\u5e8f\u7684\u7ec4\u5408\u65b9\u6cd5\nCompletableFuture.allOf(f1,f2).join();\n\n\n// \u53ea\u8981\u4e00\u4e2a\u5b8c\u6210\n\napplyToEither() \u4efb\u4e00\u5b8c\u6210, \u83b7\u53d6\u8fd4\u56de\u503c, \u5904\u7406\u7136\u540e\u53c8\u6709\u65b0\u7684\u8fd4\u56de\u503c\naccepttoeither() \nrunaftereither()\n')),(0,r.kt)("h2",{id:"115-stampedlock-\u8bfb\u5199\u9501\u7684\u6539\u8fdb"},"11.5. StampedLock-\u8bfb\u5199\u9501\u7684\u6539\u8fdb"),(0,r.kt)("h2",{id:"116-longadder-\u539f\u5b50\u7c7b\u7684\u589e\u5f3a"},"11.6. LongAdder-\u539f\u5b50\u7c7b\u7684\u589e\u5f3a"),(0,r.kt)("p",null,'\u5185\u90e8\u4ecd\u7136\u4f7f\u7528 CAS \u64cd\u4f5c, \u4f46\u662f\u4f7f\u7528 "\u70ed\u70b9\u6570\u636e\u5206\u79bb" \u7684\u601d\u60f3, \u7c7b\u4f3c ConcurrentHashMap \u5c06\u5185\u90e8\u6570\u636e\u5206\u79bb\u5230\u591a\u4e2a segment'),(0,r.kt)("p",null,"LongAdder \u5c06 AtomicInteger \u5185\u90e8\u7684\u6838\u5fc3\u6570\u636e value \u5206\u89e3\u4e3a\u4e00\u4e2a \u6570\u7ec4, \u6bcf\u4e2a thread \u8bbf\u95ee\u5c31\u901a\u8fc7 hash \u7b97\u6cd5\u6620\u5c04\u5230\u6570\u7ec4\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u8ba1\u7b97, \u6700\u7ec8\u7684\u7ed3\u679c\u5219\u662f\u8fd9\u4e2a\u6570\u7ec4\u7684\u6c42\u548c\u7d2f\u52a0"),(0,r.kt)("h2",{id:"117-java8-\u5185\u7f6e\u51fd\u6570\u5f0f\u63a5\u53e3"},"11.7. java8 \u5185\u7f6e\u51fd\u6570\u5f0f\u63a5\u53e3"),(0,r.kt)("h3",{id:"1171-predicates\u8c13\u8bcd-\u65ad\u5b9a"},"11.7.1. Predicates(\u8c13\u8bcd, \u65ad\u5b9a)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"apply(T input): boolean")," \u8f93\u5165\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd4\u56de true \u6216\u8005 false"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Predicate<String> predicateStr = (str) -> str.length() > 0;\nboolean test = predicateStr.test("ssss");\nlog.info(test+"");\n\nPredicate<Boolean> nonNull = Objects::nonNull;\nPredicate<Boolean> isNull = Objects::isNull;\n\nPredicate<String> isEmpty = String::isEmpty;\nPredicate<String> isNotEmpty = isEmpty.negate();\n')),(0,r.kt)("h3",{id:"1172-functions\u51fd\u6570"},"11.7.2. Functions(\u51fd\u6570)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"apply(S input): T")," Functions \u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4ea7\u751f\u4e00\u4e2a\u7ed3\u679c\u3002\u9ed8\u8ba4\u65b9\u6cd5\u53ef\u4ee5\u5c06\u591a\u4e2a\u51fd\u6570\u4e32\u5728\u4e00\u8d77\uff08compse, andThen\uff09"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Function<String, Integer> toInteger = Integer::valueOf;\nFunction<String, String> backToString = toInteger.andThen(String::valueOf);\n\nbackToString.apply("123");     // "123"\n\n')),(0,r.kt)("h3",{id:"1173-suppliers\u751f\u4ea7\u8005"},"11.7.3. Suppliers(\u751f\u4ea7\u8005)"),(0,r.kt)("p",null,"\u5c31\u597d\u50cf\u4e00\u4e2a bean \u5de5\u5382"),(0,r.kt)("p",null,"Suppliers \u4ea7\u751f\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6cdb\u578b\u7c7b\u578b\u7684\u7ed3\u679c, \u4e0e Functional \u4e0d\u540c\u7684\u662f Suppliers \u4e0d\u63a5\u53d7\u8f93\u5165\u53c2\u6570\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// \u7531\u4e8epersonSupplier\u4e0d\u63a5\u53d7\u8f93\u5165\u53c2\u6570, \u5219\u8c03\u7528\u7684\u662fperson\u7684\u65e0\u53c2\u6570Constructor\nSupplier<Person> personSupplier = Person::new;\npersonSupplier.get();   // new Person\n")),(0,r.kt)("h3",{id:"1174-consumers\u6d88\u8d39\u8005"},"11.7.4. Consumers(\u6d88\u8d39\u8005)"),(0,r.kt)("p",null,"Consumers \u4ee3\u8868\u5728\u4e00\u4e2a\u5355\u4e00\u7684\u8f93\u5165\u53c2\u6570\u4e0a\u6267\u884c\u64cd\u4f5c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\nConsumer<Person> greeter = (p) -> System.out.println("Hello, " + p.name);\ngreeter.accept(new Person("Luke", "Skywalker"));\n')),(0,r.kt)("h3",{id:"1175-comparators\u6bd4\u8f83\u5668"},"11.7.5. Comparators(\u6bd4\u8f83\u5668)"),(0,r.kt)("p",null,"Comparators \u5728\u65e7\u7248\u672c Java \u4e2d\u662f\u4f17\u6240\u5468\u77e5\u7684\u3002Java8 \u589e\u52a0\u4e86\u5404\u79cd\u9ed8\u8ba4\u65b9\u6cd5\u7684\u63a5\u53e3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Comparator<Person> comparator = (p1, p2) -> p1.name.compareTo(p2.name); // \u5347\u5e8f, \u82e5 p2.name.compareTo(p1.name) \u5219\u662f\u964d\u5e8f\n\n// \u5728 stream \u4e2d, stream.max(comparator) \u53d6\u6700\u5927\u503c, \u9700\u8981 comparator \u662f\u5347\u5e8f\u6392\u5e8f\u5668\n\n// \u5347\u5e8f\u6392\u5e8f \u4e5f\u53ef\u4ee5\u7b80\u5199 Comparator.comparing(o -> Long.valueOf(o.getVersion()))\n\nPerson p1 = new Person("John", "Doe");\nPerson p2 = new Person("Alice", "Wonderland");\n\ncomparator.compare(p1, p2);             // > 0\ncomparator.reversed().compare(p1, p2);  // < 0\n')),(0,r.kt)("h3",{id:"1176-optional"},"11.7.6. Optional"),(0,r.kt)("p",null,"\u53ef\u9009\u5bf9\u8c61, \u662f\u5bf9 object \u7684\u4e00\u5c42\u5305\u88c5"),(0,r.kt)("p",null,"Optionals \u662f\u6ca1\u6709\u4efb\u4f55\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u552f\u4e00\u4f5c\u7528\u662f\u9632\u6b62 NullPointerException \u5f02\u5e38"),(0,r.kt)("p",null,"Optional is a simple container for a value which may be null or non-null. Think of a method which may return a non-null result but sometimes return nothing. Instead of returning null you return an Optional in Java 8.\n(Optional \u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5bb9\u5668\uff0c\u8fd9\u4e2a\u503c\u53ef\u80fd\u662f\u7a7a\u7684\u6216\u8005\u975e\u7a7a\u7684\u3002\u8003\u8651\u5230\u4e00\u4e2a\u65b9\u6cd5\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a non-null \u7684\u503c\uff0c\u4e5f\u53ef\u80fd\u8fd4\u56de\u4e00\u4e2a\u7a7a\u503c\u3002\u4e3a\u4e86\u4e0d\u76f4\u63a5\u8fd4\u56de null\uff0c\u6211\u4eec\u5728 Java 8 \u4e2d\u5c31\u8fd4\u56de\u4e00\u4e2a Optional\u3002)"),(0,r.kt)("p",null,"\u5e38\u7528 api:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"Optional.of()\nOptional.ofNullable()\nOptional.empty()\n\npublic<U> Optional<U> map(Function<? super T, ? extends U> mapper)\npublic T orElse(T other)       \n    // \u82e5\u5185\u90e8 object \u4e0d\u4e3a null, \u8fd4\u56de object, \u5426\u5219\u8fd4\u56de other\n    //          \u4f20\u5165\u4e00\u4e2a method call, \u5219\u8fd9\u4e2a\u65b9\u6cd5\u603b\u662f\u4f1a\u6267\u884c, \u65e0\u8bba\u5185\u90e8 object\u662f\u5426\u4e3a null\npublic T orElseGet(Supplier<? extends T> other)\n    //          method call \u53ea\u4f1a\u5728 \u5185\u90e8 object \u4e3a null \u65f6\u6267\u884c, \u66f4\u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\npublic void ifPresent(Consumer<? super T> consumer)\npublic Optional<T> filter(Predicate<? super T> predicate)\npublic<U> Optional<U> flatMap(Function<? super T, Optional<U>> mapper)\n    // \u7c7b\u4f3c map(), \u533a\u522b\u662f flatMap \u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6ca1\u6709\u5305\u88c5\u7684\u503c, map()\u8fd4\u56de\u7684\u662f\u5e26\u5305\u88c5\u7684\u503c\npublic <X extends Throwable> T orElseThrow(Supplier<? extends X> exceptionSupplier) throws X\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'/**\n* optional api \u793a\u4f8b\n*/\nprivate static void test5() {\n    Optional<String> opt = Optional.of("mama");\n\n    // \u4e0d\u63a8\u8350\u4f7f\u7528\n    log.info(opt.isPresent()+"");\n    log.info(opt.get());\n\n\n    log.info(opt.orElse("elseValue"));\n    opt.ifPresent((s) -> log.info(s.charAt(0)+""));\n    opt.flatMap((input) -> {\n        return null; // \u8fd4\u56de\u7684\u662f\u4e00\u4e2aOptionnal\n    });\n    opt.map((input) -> {\n        return null;// \u8fd4\u56de\u7684\u662f\u4e00\u4e2aObject\n    });\n}\n\nreturn user.orElse(null);  //\u800c\u4e0d\u662f return user.isPresent() ? user.get() : null;\nreturn user.orElse(UNKNOWN_USER);\neturn user.orElseGet(() -> fetchAUserFromDatabase());\nuser.ifPresent(System.out::println);\nreturn user.map(u -> u.getOrders()).orElse(Collections.emptyList())\n\n// \u6700\u4f73\u5b9e\u8df5\n private String getName2(User_1 user_1) {\n    return Optional.ofNullable(user_1)\n            .map(user1 -> user1.user_2)\n            .map(user_2 -> user_2.name)\n            .orElseThrow(RuntimeException::new);\n}\n\n')),(0,r.kt)("p",null,"optional \u76f4\u63a5\u751f\u6210 stream"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Optional<String> optional = Optional.of("ggg");\n// java 8\nStream<String> texts = optional.map(Stream::of).orElseGet(Stream::empty);\nStream<String> hello = Optional.of(new String[] {"hello", "aa", "bb"}).map(Stream::of).orElseGet(Stream::empty);\n// java 9\nStream<String> texts = optional.stream();\n')),(0,r.kt)("h2",{id:"118-streams\u7ba1\u9053"},"11.8. Streams(\u7ba1\u9053)"),(0,r.kt)("h3",{id:"1181-stream-\u4ecb\u7ecd"},"11.8.1. stream \u4ecb\u7ecd"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/biezhi/learn-java8/blob/master/java8-stream/README.md"},"https://github.com/biezhi/learn-java8/blob/master/java8-stream/README.md")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"java.util.Stream"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6d41\u662f\u4e00\u4e2a\u6e90\u4ea7\u751f\u7684\uff0c\u4f8b\u5982 java.util.Collection(\u6bd4\u5982:Collection.stream()\u6216 Collection.parallelStream())")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u64cd\u4f5c\u7684\u90fd\u662f\u96c6\u5408\u7684\u89c6\u56fe, \u539f\u96c6\u5408\u6ca1\u6709\u53d8\u5316")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Parallel Streams(\u5e76\u884c\u7ba1\u9053): \u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"list.parallelStream()"),"\u83b7\u53d6 paralled stream, \u6548\u7387\u6781\u5927\u63d0\u5347")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"stream \u53ea\u80fd\u4f7f\u7528\u4e00\u6b21, \u91cd\u590d\u4f7f\u7528\u9700\u8981\u6784\u9020\u4e00\u4e2a Supplier"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"IntStream.range(1, 4)\n        .forEach(System.out::println);\n\nArrays.stream(new int[] {1, 2, 3})\n        .map(n -> 2 * n + 1)\n        .average()\n        .ifPresent(System.out::println);\n")),(0,r.kt)("h3",{id:"1182-\u91cd\u590d\u4f7f\u7528-stream"},"11.8.2. \u91cd\u590d\u4f7f\u7528 stream"),(0,r.kt)("p",null,"\u901a\u8fc7 supplier: (\u672c\u8d28\u5c31\u662f\u8c03\u7528 get() \u65f6 \u91cd\u65b0\u751f\u6210\u4e86\u6d41, \u6240\u4ee5, \u6d41\u751f\u6210\u4e0d\u80fd\u5199\u5728 supplier \u5916\u90e8)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Supplier<Stream<String>>  supplier = () -> Stream.of("hello", "aa", "bb");\nboolean        aa    = supplier.get().allMatch(s -> s.equalsIgnoreCase("aa"));\nboolean        aa1   = supplier.get().anyMatch(s -> s.equalsIgnoreCase("aa"));\nSystem.out.println(aa);\nSystem.out.println(aa1);\n')),(0,r.kt)("h3",{id:"1183-map-\u548c-flatmap"},"11.8.3. map \u548c flatMap"),(0,r.kt)("p",null,"map \u63a5\u6536\u4e00\u4e2a\u51fd\u6570, \u51fd\u6570\u8fd4\u56de\u5904\u7406\u540e\u7684 stream"),(0,r.kt)("p",null,"flatmap, \u63a5\u53d7\u4e00\u4e2a\u51fd\u6570, \u51fd\u6570\u8fd4\u56de stream, \u6700\u540e\u4f1a\u5c06\u5404\u4e2a stream \u5408\u5e76\u4e3a\u4e00\u4e2a stream"),(0,r.kt)("h3",{id:"1184-\u53bb\u91cd"},"11.8.4. \u53bb\u91cd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"stream \u6709 distinct()\n\n\u6839\u636e\u67d0\u4e2a object \u5c5e\u6027\u53bb\u91cd:\nstudentList = studentList.stream().collect(\n      collectingAndThen(\n        toCollection(() -> new TreeSet<>(Comparator.comparing(Student::getName))), ArrayList::new)\n    );\n")),(0,r.kt)("h3",{id:"1185-collect\u65b9\u6cd5-\u5982\u4f55\u6536\u96c6\u5904\u7406\u540e\u7684\u5143\u7d20-\u5206\u7ec4-\u53bb\u91cd"},"11.8.5. collect\u65b9\u6cd5 \u5982\u4f55\u6536\u96c6\u5904\u7406\u540e\u7684\u5143\u7d20 \u5206\u7ec4 \u53bb\u91cd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// set , \u53bb\u91cd\nSystem.out.println(Stream.of("a", "b", "c","a").collect(Collectors.toSet()));\n\n// \u8f6c\u6362\u4e3a\u7279\u5b9a \u96c6\u5408\nTreeSet<String> treeSet = Stream.of("a", "c", "b", "a").collect(Collectors.toCollection(TreeSet::new));\n\n//\u5bf9\u4e8estring\u5217\u8868\u53bb\u91cd\nList stringList\uff1b\nstringList = stringList.stream().distinct().collect(Collectors.toList());\n// \u5bf9\u4e8e\u5b9e\u4f53\u7c7b\u7684\u53bb\u91cd\n//\u901a\u8fc7hashcode()\u548cequals()\u65b9\u6cd5\u6765\u83b7\u53d6\u4e0d\u540c\u5143\u7d20\uff0c\u56e0\u6b64\u9700\u8981\u53bb\u91cd\u7684\u7c7b\u5fc5\u987b\u5b9e\u73b0hashcode()\u548cequals()\u65b9\u6cd5\nList studentList\uff1b\nstudentList = studentList.stream().distinct().collect(Collectors.toList());\n\n// \u6839\u636e List \u4e2d Object \u67d0\u4e2a\u5c5e\u6027\u53bb\u91cd(\u59d3\u540d\u53bb\u91cd)\nList studentList;\nstudentList = studentList.stream()\n.collect(collectingAndThen(toCollection(() -> new TreeSet<>(Comparator.comparing(Student::getName))), ArrayList::new));\n//\u6839\u636eList \u4e2d Object \u591a\u4e2a\u5c5e\u6027\u53bb\u91cd(\u59d3\u540d\uff0c\u5e74\u9f84\u53bb\u91cd)\nListstudentList\uff1b\nstudentList=studentList.stream()\n.collect(Collectors.collectingAndThen(Collectors.toCollection(() -> new TreeSet<>(Comparator.comparing(o -> o.getName() + \u201c;\u201d + o.getAge()))), ArrayList::new));\n\n\n\n//\u53c2\u6570:  toMap(\n    //     keyMapper,\n    //     valueMapper,\n    //     mergeFunction // biFunction(oldVal, newVal) \u8868\u793a \u82e5 \u6784\u9020\u5f53\u524d\u952e\u503c\u5bf9\u65f6, key \u5bf9\u5e94\u7684 value \u5df2\u7ecf\u5b58\u5728, \u5219\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u751f\u6210\u65b0\u7684 value\n    //  )\nMap<String, String> collect = Stream.of("a", "b", "c", "a").collect(Collectors.toMap(x -> x, x -> x + x,(oldVal, newVal) -> newVal)));\n\n// Collectors.minBy(Integer::compare)\uff1a\u6c42\u6700\u5c0f\u503c\uff0c\u76f8\u5bf9\u5e94\u7684\u5f53\u7136\u4e5f\u6709maxBy\u65b9\u6cd5\u3002\n\n// Collectors.averagingInt(x->x)\uff1a\u6c42\u5e73\u5747\u503c\uff0c\u540c\u65f6\u4e5f\u6709averagingDouble\u3001averagingLong\u65b9\u6cd5\u3002\n\n// Collectors.summingInt(x -> x))\uff1a\u6c42\u548c\n\n//Collectors.summarizingDouble(x -> x)\uff1a\u53ef\u4ee5\u83b7\u53d6\u6700\u5927\u503c\u3001\u6700\u5c0f\u503c\u3001\u5e73\u5747\u503c\u3001\u603b\u548c\u503c\u3001\u603b\u6570\u3002\nDoubleSummaryStatistics summaryStatistics = Stream.of(1, 3, 4).collect(Collectors.summarizingDouble(x -> x));\nSystem.out.println(summaryStatistics .getAverage());\n\n//Collectors.groupingBy(x -> x)\uff1a\u6709\u4e09\u79cd\u65b9\u6cd5\uff0c\u67e5\u770b\u6e90\u7801\u53ef\u4ee5\u77e5\u9053\u524d\u4e24\u4e2a\u65b9\u6cd5\u6700\u7ec8\u8c03\u7528\u7b2c\u4e09\u4e2a\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9ed8\u8ba4HashMap::new  \u7b2c\u4e09\u4e2a\u53c2\u6570\u9ed8\u8ba4Collectors.toList()\nMap<Integer, List<Integer>> map = Stream.of(1, 3, 3, 2).collect(Collectors.groupingBy(Function.identity()));//identity()\u662fFunction\u7c7b\u7684\u9759\u6001\u65b9\u6cd5,\u548c x->x \u662f\u4e00\u4e2a\u610f\u601d,\u5f53\u4ec5\u4ec5\u9700\u8981\u81ea\u5df1\u8fd4\u56de\u81ea\u5df1\u65f6,\u4f7f\u7528identity()\u80fd\u66f4\u6e05\u695a\u7684\u8868\u8fbe\u4f5c\u8005\u7684\u610f\u601d.\u5199\u7684\u590d\u6742\u4e00\u70b9,\u7ed5\u4e00\u70b9,\u5bf9\u7406\u89e3\u5f88\u6709\u597d\u5904\nMap<Integer, Integer> map1 = Stream.of(1, 3, 3, 2).collect(Collectors.groupingBy(Function.identity(), Collectors.summingInt(x -> x)));\nHashMap<Integer, List<Integer>> hashMap = Stream.of(1, 3, 3, 2).collect(Collectors.groupingBy(Function.identity(), HashMap::new, Collectors.mapping(x -> x + 1, Collectors.toList())));\n\n\n\n// Collectors.partitioningBy(x -> x > 2)\uff0c\u628a\u6570\u636e\u5206\u6210\u4e24\u90e8\u5206\uff0ckey\u4e3ature/false\u3002\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u4e5f\u662f\u8c03\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3aCollectors.toList()\nMap<Boolean, List<Integer>> map = Stream.of(1, 3, 3, 2).collect(Collectors.partitioningBy(x -> x > 2));\nMap<Boolean, Long> longMap = Stream.of(1, 3, 3, 2).collect(Collectors.partitioningBy(x -> x > 1, Collectors.counting()));\n\n//Collectors.joining(",")\uff1a\u62fc\u63a5\u5b57\u7b26\u4e32\nSystem.out.println(Stream.of("1", "3", "3", "2").collect(Collectors.joining(",")));\n\n\n//Collectors.collectingAndThen(Collectors.toList(), x -> x.size())\uff1a\u5148\u6267\u884ccollect\u64cd\u4f5c\u540e\u518d\u6267\u884c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u8868\u8fbe\u5f0f\u3002\u8fd9\u91cc\u662f\u5148\u585e\u5230\u96c6\u5408\uff0c\u518d\u5f97\u51fa\u96c6\u5408\u957f\u5ea6\u3002\nInteger integer = Stream.of("1", "2", "3").collect(Collectors.collectingAndThen(Collectors.toList(), x -> x.size()));\n\n\n//Collectors.mapping(...)\uff1a\u8ddfStream\u7684map\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u53ea\u662f\u53c2\u6570\u6709\u70b9\u533a\u522b\nSystem.out.println(Stream.of(1, 3, 5).collect(Collectors.mapping(x -> x + 1, Collectors.toList())));\n\n\n')),(0,r.kt)("h3",{id:"1186-stream-\u4e2d\u5f02\u5e38\u5904\u7406"},"11.8.6. stream \u4e2d\u5f02\u5e38\u5904\u7406"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://cloud.tencent.com/developer/article/1429208"},"https://cloud.tencent.com/developer/article/1429208")),(0,r.kt)("h2",{id:"119-date-\u65f6\u95f4\u65e5\u671f\u65b0\u7684-api"},"11.9. date \u65f6\u95f4\u65e5\u671f\u65b0\u7684 api"),(0,r.kt)("h3",{id:"1191-\u4ecb\u7ecd-\u4e3a\u4ec0\u4e48\u4f7f\u7528"},"11.9.1. \u4ecb\u7ecd-\u4e3a\u4ec0\u4e48\u4f7f\u7528"),(0,r.kt)("p",null,"\u5438\u6536\u4e86 ",(0,r.kt)("a",{parentName:"p",href:"http://www.joda.org/joda-time/"},"joda date api")," \u8fd9\u4e2a\u5f00\u6e90\u5b9e\u73b0"),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48\u4f7f\u7528\u5462:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Java8 \u4e4b\u524d\u6211\u4eec\u5e38\u7528 SimpleDateFormat, Date, Calander, \u7e41\u7410, \u800c\u4e14\u7ebf\u7a0b\u4e0d\u5b89\u5168")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Java8 \u4ee5\u524d\u4f7f\u7528 new Date()\u83b7\u53d6\u6708\u65f6\uff0c\u4ece 0 \u5f00\u59cb\uff0c\u6bcf\u6b21\u90fd\u8981+1\u3002\u83b7\u53d6\u672c\u6708\u6700\u540e\u4e00\u5929\uff0c\u8981\u5206\u60c5\u51b5\u5224\u65ad 28\uff0c29\uff0c30\uff0c31")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u65f6\u533a\u5904\u7406\u4e0d\u65b9\u4fbf"))),(0,r.kt)("p",null,"LocalDate\uff0cLocalTime\uff0cLocalDateTime.... , \u4f4d\u4e8e java.time \u5305\u4e0b, final \u4e0d\u53ef\u7ee7\u627f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"ZoneId: \u65f6\u533a ID\uff0c\u7528\u6765\u786e\u5b9a Instant \u548c LocalDateTime \u4e92\u76f8\u8f6c\u6362\u7684\u89c4\u5219"),(0,r.kt)("li",{parentName:"ul"},"Instant: \u7528\u6765\u8868\u793a\u65f6\u95f4\u7ebf\u4e0a\u7684\u4e00\u4e2a\u70b9"),(0,r.kt)("li",{parentName:"ul"},"LocalDate: \u8868\u793a\u6ca1\u6709\u65f6\u533a\u7684\u65e5\u671f, LocalDate \u662f\u4e0d\u53ef\u53d8\u5e76\u4e14\u7ebf\u7a0b\u5b89\u5168\u7684"),(0,r.kt)("li",{parentName:"ul"},"LocalTime: \u8868\u793a\u6ca1\u6709\u65f6\u533a\u7684\u65f6\u95f4, LocalTime \u662f\u4e0d\u53ef\u53d8\u5e76\u4e14\u7ebf\u7a0b\u5b89\u5168\u7684"),(0,r.kt)("li",{parentName:"ul"},"LocalDateTime: \u8868\u793a\u6ca1\u6709\u65f6\u533a\u7684\u65e5\u671f\u65f6\u95f4, LocalDateTime \u662f\u4e0d\u53ef\u53d8\u5e76\u4e14\u7ebf\u7a0b\u5b89\u5168\u7684"),(0,r.kt)("li",{parentName:"ul"},"ZonedDateTime\uff1a\u6700\u5b8c\u6574\u7684\u65e5\u671f\u65f6\u95f4\uff0c\u5305\u542b\u65f6\u533a\u548c\u76f8\u5bf9UTC\u6216\u683c\u6797\u5a01\u6cbb\u7684\u65f6\u5dee\nZoneOffSet\u548cZoneId\u7c7b"),(0,r.kt)("li",{parentName:"ul"},"Clock: \u7528\u4e8e\u8bbf\u95ee\u5f53\u524d\u65f6\u523b\u3001\u65e5\u671f\u3001\u65f6\u95f4\uff0c\u7528\u5230\u65f6\u533a"),(0,r.kt)("li",{parentName:"ul"},"Duration: \u7528\u79d2\u548c\u7eb3\u79d2\u8868\u793a\u65f6\u95f4\u7684\u6570\u91cf")),(0,r.kt)("h3",{id:"1192-\u4f7f\u7528\u65b0\u7684\u65f6\u95f4\u65e5\u671f-api"},"11.9.2. \u4f7f\u7528\u65b0\u7684\u65f6\u95f4\u65e5\u671f api"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u6784\u9020\nLocalDate.now();  // \u83b7\u53d6\u5f53\u524d\u65e5\u671f format: yyyy-MM-dd\nLocalTime.now();  // \u83b7\u53d6\u5f53\u524d\u65f6\u95f4 format: HH:mm:ss\nLocalDateTime.now();  // \u83b7\u53d6\u5f53\u524d\u65e5\u671f\u65f6\u95f4 format: yyyy-MM-ddTHH:mm:ss\nLocalDate.of(2017, 07, 20);\nLocalDateTime.of(2017, Month.JULY, 20, 15, 18);\nLocalDateTime.parse("2017-07-20T15:18:00");\nLocalDate.parse("2017-07-20"); // \u53ef\u4f20\u5165 formatter \u6307\u5b9a\u683c\u5f0f\nLocalTime nowTime = LocalTime.parse("15:02");\nLocalTime nowTime = LocalTime.of(15, 02);\n\n// \u52a0\u51cf\n\nLocalDate tomorrow = LocalDate.now().plusDays(1);\nLocalDate prevMonth = LocalDate.now().minus(1, ChronoUnit.MONTHS);\n// \u4e00\u4e2a\u5c0f\u65f6\u540e\u7684\u65f6\u95f4\nLocalTime nextHour = LocalTime.parse("15:02").plus(1, ChronoUnit.HOURS);\n\nLocalDateTime tomorrow = now.plusDays(1);\nSystem.out.println("\u660e\u5929\u7684\u8fd9\u4e2a\u65f6\u95f4: " + tomorrow);\nLocalDateTime minusTowHour = now.minusHours(2);\nSystem.out.println("\u4e24\u5c0f\u65f6\u524d: " + minusTowHour);\n\n\n\n//\u83b7\u53d6\u65f6\u95f4, \u65e5\u671f, \u6708\u4efd, \u661f\u671f, \n\n// \u4e00\u7cfb\u5217\u7684get\u65b9\u6cd5\u6765\u83b7\u53d6\u7279\u5b9a\u5355\u4f4d:\nLocalDate date = LocalDate.parse("2017-07-20")\n// \u661f\u671f\nDayOfWeek thursday = date.getDayOfWeek();\nSystem.out.println("\u5468\u56db: " + thursday);// \u5468\u56db: THURSDAY\n// \u65e5\u671f\nint twenty = LocalDate.parse("2017-07-20").getDayOfMonth();\nSystem.out.println("twenty: " + twenty);// twenty: 20\n// \u6708\u4efd\nint month = date.getMonthValue()\nMonth month = now.getMonth();\n// \u5e74\u4efd\nint year = date.getYear()\n// \u83b7\u53d6\u672c\u6708\u7b2c\u4e00\u5929\nLocalDate firstDayOfMonth = LocalDate.parse("2017-07-20")\n                .with(TemporalAdjusters.firstDayOfMonth());\nSystem.out.println("\u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u5929: " + firstDayOfMonth);\nfirstDayOfMonth = firstDayOfMonth.withDayOfMonth(1);\nSystem.out.println("\u8fd9\u4e2a\u6708\u7684\u7b2c\u4e00\u5929: " + firstDayOfMonth);\n\nint hour = LocalTime.parse("15:02").getHour();\nSystem.out.println("\u5c0f\u65f6: " + hour);\nint minute = LocalTime.parse("15:02").getMinute();\nSystem.out.println("\u5206\u949f: " + minute);\n// \u6bcf\u5929\u7684\u5f00\u59cb\u7ed3\u675f\nSystem.out.println(LocalTime.MAX);\nSystem.out.println(LocalTime.MIN);\n// 23:59:59.999999999\n// 00:00\n\n\n\n// \u6bd4\u8f83\u65e5\u671f\n\n// \u662f\u5426\u76f8\u7b49\nLocalDate date1 = LocalDate.of(2014, 01, 14);\nif(date1.equals(today)){\n    System.out.printf("Today %s and date1 %s are same date %n", today, date1);\n}\n// \u5224\u65ad\u662f\u5426\u4e4b\u524d\u4e4b\u540e\nboolean notBefore = LocalDate.parse("2017-07-20")\n                .isBefore(LocalDate.parse("2017-07-22"));\nSystem.out.println("notBefore: " + notBefore);\nboolean isAfter = LocalDate.parse("2017-07-20").isAfter(LocalDate.parse("2017-07-22"));\nSystem.out.println("isAfter: " + isAfter);\n\n\n// \u5224\u65ad\u5468\u671f\u6027\u4e8b\u4ef6 (\u4e0d\u5e26\u5e74\u4efd\u7684\u65e5\u671f)\n\n// \u751f\u65e5\n//\u5224\u65ad\u4eca\u5929\u662f\u5426\u662f\u6211\u7684\u751f\u65e5\uff0c\u4f8b\u5982\u6211\u7684\u751f\u65e5\u662f 2009-07-20\nLocalDate birthday = LocalDate.of(2009, 07, 20);\n// monthday \u8868\u793a \u4e0d\u5e26\u5e74\u7684\u65e5\u671f, \n//\u53ef\u4ee5\u7528\u5b83\u5224\u65ad\u6bcf\u5e74\u90fd\u4f1a\u53d1\u751f\u4e8b\u4ef6, \nMonthDay birthdayMd = MonthDay.of(birthday.getMonth(), birthday.getDayOfMonth());\nMonthDay today = MonthDay.from(LocalDate.now());\nSystem.out.println("\u4eca\u5929\u662f\u5426\u662f\u6211\u7684\u751f\u65e5: " + today.equals(birthdayMd));\n\n// \u4fe1\u7528\u5361\u5230\u671f\n// YearMonth \u4e0d\u5e26\u65f6\u95f4\u7684\u5e74\u6708\nYearMonth currentYearMonth = YearMonth.now();\nSystem.out.printf("current year-month is %s, has %d days", currentYearMonth, currentYearMonth.lengthOfMonth());\nYearMonth creditCardExpiry = YearMonth.of(2018, Month.FEBRUARY);\nSystem.out.printf("Your credit card expires on %s ", creditCardExpiry);\n// Output:\n// current year-month is 2014-01: has 31 days\n// Your credit card expires on 2018-02\n\n\n// \u662f\u5426\u95f0\u5e74\nboolean leapYear = LocalDate.now().isLeapYear();\nSystem.out.println("\u662f\u5426\u95f0\u5e74: " + leapYear);\n\n////////////////////////////////////////////////////////////\n\n// \u95f4\u9694\n////Period\u7c7b\u8868\u793a\u4e00\u6bb5\u65f6\u95f4, \u7528\u4e8e\u4fee\u6539\u7ed9\u5b9a\u65e5\u671f\u6216\u83b7\u5f97\u7684\u4e24\u4e2a\u65e5\u671f\u4e4b\u95f4\u7684\u95f4\u9694\n\nLocalDate initialDate = LocalDate.parse("2017-07-20");\nLocalDate finalDate   = initialDate.plus(Period.ofDays(5));\nSystem.out.println("\u521d\u59cb\u5316\u65e5\u671f: " + initialDate);\nSystem.out.println("\u52a0\u65e5\u671f\u4e4b\u540e: " + finalDate);\n\n\nLocalDate java8Release = LocalDate.of(2014, Month.MARCH, 14);\nPeriod periodToNextJavaRelease = Period.between(today, java8Release);\nSystem.out.println("Months left between today and Java 8 release : "\n                                   + periodToNextJavaRelease.getMonths() );\n// Output:\n// Months left between today and Java 8 release : 2\n\nfinal long duration = Duration.between(LocalDateTime.now(), latestTime.toInstant()).getSeconds();\n\n\n\n\n//////////////////////////////////////////////////////////\n\n\n////////////////////////////////////////////////////////////////////////\n\n\n// \u683c\u5f0f\u5316\n\nLocalDateTime now = LocalDateTime.now();\nDateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");\nSystem.out.println("\u9ed8\u8ba4\u683c\u5f0f\u5316: " + now);\nSystem.out.println("\u81ea\u5b9a\u4e49\u683c\u5f0f\u5316: " + now.format(dateTimeFormatter));\n\nLocalDateTime localDateTime = LocalDateTime.parse("2017-07-20 15:27:44", dateTimeFormatter);\nSystem.out.println("\u5b57\u7b26\u4e32\u89e3\u6790 LocalDateTime: " + localDateTime);\n\nString dateString = dateTimeFormatter.format(LocalDate.now());\nSystem.out.println("\u65e5\u671f\u8f6c\u5b57\u7b26\u4e32: " + dateString);\n\n\n///////////////////////////////////////////////////////////////\n\n// \u4e0e\u9057\u7559\u4ee3\u7801\u8f6c\u6362\n\n// Date\u548cInstant\u4e92\u76f8\u8f6c\u6362\nDate date = Date.from(Instant.now());\nInstant instant = date.toInstant();\n\n// Date\u8f6c\u6362\u4e3aLocalDateTime\nDate startDate=new Date();\nLocalDateTime localDateTime = startDate.toInstant()\n                .atZone(ZoneId.systemDefault())\n                .toLocalDateTime()\n\n// LocalDateTime\u8f6cDate\nDate date =\n    Date.from(localDateTime.atZone(ZoneId.systemDefault()).toInstant());\n\n// LocalDate\u8f6cDate\nDate date =\n    Date.from(LocalDate.now().atStartOfDay().atZone(ZoneId.systemDefault()).toInstant());\n\n\n///////////////////////////////////////////////////////////////\n\n\n//\u65f6\u95f4\u6233\n\nInstant timestamp = Instant.now();\nSystem.out.println("What is value of this instant " + timestamp);\n// Output :\n// What is value of this instant 2014-01-14T08:33:33.379Z\n\n\n///////////////////////////////////////////////////////////////\n\n// Clock\u65f6\u949f\u7c7b \n//\u7528\u4e8e\u83b7\u53d6\u5f53\u65f6\u7684\u65f6\u95f4\u6233\uff0c\u6216\u5f53\u524d\u65f6\u533a\u4e0b\u7684\u65e5\u671f\u65f6\u95f4\u4fe1\u606f\n// System.currentTimeMillis()\u548cTimeZone.getDefault()\u7684\u5730\u65b9\u90fd\u53ef\u7528Clock\u66ff\u6362\u3002\npublic void clock(){\n    // \u6839\u636e\u7cfb\u7edf\u65f6\u95f4\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u5e76\u8bbe\u7f6e\u4e3aUTC\u3002\n    Clock clock = Clock.systemUTC();\n    System.out.println("Clock : " + clock);//Clock : SystemClock[Z]\n\n\n    // \u6839\u636e\u7cfb\u7edf\u65f6\u949f\u533a\u57df\u8fd4\u56de\u65f6\u95f4\n    Clock defaultClock = Clock.systemDefaultZone();\n    System.out.println("Clock : " + clock);//Clock : SystemClock[Z]\n\n    //\u6307\u5b9a\u65f6\u533a\n    LocalDate.now(clock)\n\n}\n\n///////////////////////////////////////////////////////////\n\n// \u65f6\u533a\u548c\u65f6\u5dee:\n//\u65f6\u533a: \u4ee3\u8868\u4e86\u5730\u7403\u4e0a\u67d0\u4e2a\u533a\u57df\u5185\u666e\u904d\u4f7f\u7528\u7684\u6807\u51c6\u65f6\u95f4\u3002\u6bcf\u4e2a\u65f6\u533a\u90fd\u6709\u4e00\u4e2a\u4ee3\u53f7\uff0c\u683c\u5f0f\u901a\u5e38\u7531\u533a\u57df/\u57ce\u5e02\u6784\u6210\uff08Asia/Tokyo\uff09\uff0c\u5728\u52a0\u4e0a\u4e0e\u683c\u6797\u5a01\u6cbb\u6216 UTC\u7684\u65f6\u5dee\u3002\u4f8b\u5982\uff1a\u4e1c\u4eac\u7684\u65f6\u5dee\u662f+09:00\u3002\n//\u65f6\u5dee: OffsetDateTime\u7c7b\u5b9e\u9645\u4e0a\u7ec4\u5408\u4e86LocalDateTime\u7c7b\u548cZoneOffset\u7c7b\u3002\u7528\u6765\u8868\u793a\u5305\u542b\u548c\u683c\u6797\u5a01\u6cbb\u6216UTC\u65f6\u5dee\u7684\u5b8c\u6574\u65e5\u671f\uff08\u5e74\u3001\u6708\u3001\u65e5\uff09\u548c\u65f6\u95f4\uff08\u65f6\u3001\u5206\u3001\u79d2\u3001\u7eb3\u79d2\uff09\u4fe1\u606f\n// OffSetDateTime\u662f\u5bf9\u8ba1\u7b97\u673a\u53cb\u597d\u7684\uff0c\n// ZoneDateTime\u5219\u5bf9\u4eba\u66f4\u53cb\u597d\n\n// \u5904\u7406\u65f6\u533a\n\nZoneId america = ZoneId.of("America/New_York");\nLocalDateTime localtDateAndTime = LocalDateTime.now();\nZonedDateTime dateAndTimeInNewYork  = ZonedDateTime.of(localtDateAndTime, america );\nSystem.out.println("Current date and time in a particular timezone : " + dateAndTimeInNewYork);\n// Output :\n// Current date and time in a particular timezone : 2014-01-14T16:33:33.373-05:00[America/New_York]\n\n// \u65f6\u5dee\n\nLocalDateTime datetime = LocalDateTime.of(2014, Month.JANUARY, 14, 19, 30);\nZoneOffset offset = ZoneOffset.of("+05:30");//\u5370\u5ea6\u4e0eGMT\u6216UTC\u6807\u51c6\u65f6\u533a\u76f8\u5dee+05:30\nOffsetDateTime date = OffsetDateTime.of(datetime, offset);  \nSystem.out.println("Date and Time with timezone offset in Java : " + date);\n// Output :\n// Date and Time with timezone offset in Java : 2014-01-14T19:30+05:30\n\n\n')),(0,r.kt)("h3",{id:"1193-\u7edf\u8ba1\u4ee3\u7801\u8017\u65f6"},"11.9.3. \u7edf\u8ba1\u4ee3\u7801\u8017\u65f6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n\n\u4e0e\u7cfb\u7edf\u65f6\u95f4\u5b8c\u5168\u65e0\u5173\uff0c\u76ee\u7684\u4e5f\u6b63\u662f\u7528\u6765\u7edf\u8ba1\u7a0b\u5e8f\u8017\u65f6\u7684\u3002nanoTime()\u8bb0\u5f55\u7684\u662f\u4ece\u67d0\u4e2a\u56fa\u5b9a\u7684\u65f6\u523b\u8d77\uff0c\u5230\u73b0\u5728\u7ecf\u8fc7\u4e86\u591a\u5c11\u7eb3\u79d2\u3002\u4f46\u662f\u8fd9\u4e2a\u56fa\u5b9a\u7684\u65f6\u523b\u4e0d\u662fUnix\u65f6\u95f4\u6233\u76841970-1-1 00:00:00\uff0c\u800c\u662f\u542f\u52a8\u865a\u62df\u673a\u65f6\u751f\u6210\u7684\u4e00\u4e2a\u56fa\u5b9a\u65f6\u523b\uff0c\u6bcf\u4e2a\u865a\u62df\u673a\u7684\u751f\u6210\u7684\u8fd9\u4e2a\u65f6\u95f4\u90fd\u662f\u4e0d\u540c\u7684\n\nnanoTime()\u867d\u7136\u7cbe\u786e\u5230\u7eb3\u79d2\uff0c\u4f46\u4e8b\u5b9e\u5e76\u4e0d\u662f\u6bcf\u7eb3\u79d2\u90fd\u8df3\u52a8\u4e00\u683c\uff0c\u800c\u662f\u53ef\u80fd\u57283\u7eb3\u79d2\u4e4b\u540e\uff0c\u4e00\u4e0b\u8df3\u52a83\u683c\n\nlong start = System.nonoTime();\n// \u4e1a\u52a1\u903b\u8f91\u4ee3\u7801...\nlong end = System.nonoTime();\nlong timeElapsed = finish - end; // \u5355\u4f4d\u4e3a\u7eb3\u79d2\n\n\n\n\njava8\n\nInstant start = Instant.now();\n// \u4e1a\u52a1\u903b\u8f91\u4ee3\u7801...\nInstant end = Instant.now();\nlong timeElapsed = Duration.between(start, finish).toMillis(); // \u5355\u4f4d\u4e3a\u6beb\u79d2\n\n\n\n\n\n<dependency>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-lang3</artifactId>\n    <version>3.7</version>\n</dependency>\n\nStopWatch watch = new StopWatch();\nwatch.start();\n// \u4e1a\u52a1\u903b\u8f91\u4ee3\u7801...\nwatch.stop();\nSystem.out.println("Time Elapsed: " + watch.getTime() + "ms"); // \u5355\u4f4d\u4e3a\u6beb\u79d2\n\n\n\n\n\n\n')),(0,r.kt)("h2",{id:"1110-\u53ef\u91cd\u590d\u7684-annotations"},"11.10. \u53ef\u91cd\u590d\u7684 Annotations"),(0,r.kt)("p",null,"\u5728 Java8 \u4e2d\u6ce8\u89e3\u662f\u53ef\u4ee5\u91cd\u590d\u7684"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"@interface Hint {\n    String value();\n\n    @Target({ ElementType.METHOD, ElementType.FIELD, ElementType.ANNOTATION_TYPE, ElementType.CONSTRUCTOR,\n            ElementType.PARAMETER })\n    @Retention(RetentionPolicy.RUNTIME)\n    @Documented\n    public @interface Hints {\n        Hint[] value();\n    }\n}\n\n// \u6548\u679c\u540c\u4e0a\n@Repeatable(Hints.class)\n@interface Hint {\n    String value();\n}\n")),(0,r.kt)("h2",{id:"1111-base64-\u7f16\u7801"},"11.11. base64 \u7f16\u7801"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'final Base64.Decoder decoder = Base64.getDecoder();\nfinal Base64.Encoder encoder = Base64.getEncoder();\nfinal String text = "\u5b57\u4e32\u6587\u5b57";\nfinal byte[] textByte = text.getBytes("UTF-8");\n//\u7f16\u7801\nfinal String encodedText = encoder.encodeToString(textByte);\nSystem.out.println(encodedText);\n//\u89e3\u7801\nSystem.out.println(new String(decoder.decode(encodedText), "UTF-8"));\n\n')),(0,r.kt)("h2",{id:"1112-map-\u6620\u5c04\u7684\u65b0\u65b9\u6cd5"},"11.12. map \u6620\u5c04\u7684\u65b0\u65b9\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// >>> compute \u5bf9key\u5b58\u5728\u7684\u5143\u7d20\u8fdb\u884c\u52a0\u5de5\uff0c\u5e76\u8fd4\u56de\u52a0\u5de5\u540e\u7684\u5143\u7d20\uff0c\u540c\u65f6map\u4e2d\u8be5\u5143\u7d20\u4e5f\u88ab\u66ff\u6362\u6210\u52a0\u5de5\u540e\u7684\n\nKeyAndValue a1 = new KeyAndValue().setName("kevin").setValue("lee");\nKeyAndValue a5 = new KeyAndValue().setName("kevin2").setValue("lee5");\nKeyAndValue a6 = new KeyAndValue().setName("kevin3").setValue("lee8");\nMap<String, KeyAndValue> maps = new HashMap<>();\nmaps.put("a",a1); //{a=KeyAndValue(name=kevin, value=lee)}\n//key\u5b58\u5728\u65f6\nKeyAndValue compute1 = maps.compute("a", (k, old) -> {\n    Optional.ofNullable(old).ifPresent(v -> v.setValue(old.getValue().concat("__ddddd")));\n    return v;\n});\nSystem.out.println(compute1);\n// KeyAndValue(name=kevin, value=lee__ddddd)\nSystem.out.println(maps);\n// {a=KeyAndValue(name=kevin, value=lee__ddddd)}\n\n// key\u4e0d\u5b58\u5728\u65f6\nKeyAndValue compute = maps.compute("b", (k, v) -> {\n    Optional.ofNullable(v).ifPresent(v1 -> v1.setValue(v.getValue().concat("__ddddd")));\n    return v;\n});\nSystem.out.println(compute);\n//null\nSystem.out.println(maps);\n// {a=KeyAndValue(name=kevin, value=lee__ddddd)}\n\n\n\n// >>> \u9488\u5bf9value\u4e0d\u5b58\u5728\u548c\u5b58\u5728\uff0c\u4e5f\u6709\u9488\u5bf9\u6027\u7684\u65b9\u6cd5\uff08computeIfAbsent\u548ccomputeIfPresent\uff09\n\n//computeIfAbsent\n// key\u4e0d\u5b58\u5728\u6216null\uff0c\u5219\u4f1a\u5904\u7406\uff0c\u8fd4\u56de\u5904\u7406\u540e\u7ed3\u679c\uff0c\u5e76\u66f4\u65b0value (\u5373, key, \u548c newValue \u4f1a mapping \u4e0a)\n// key\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u8fdb\u884c\u5904\u7406\uff0c\u8fd4\u56devalue\uff0c\u4e0d\u66f4\u65b0map\n//\n//computeIfPresent \uff0c\n// key\u5b58\u5728\u5219\u5904\u7406\uff0c\u8fd4\u56de\u5904\u7406\u540e\u7ed3\u679c\uff0c\u5e76\u66f4\u65b0value\n// key\u4e0d\u5b58\u5728\u6216null\uff0c\u5219\u4e0d\u8fdb\u884c\u5904\u7406\uff0c\u8fd4\u56denull\uff0c\u4e0d\u66f4\u65b0value\nMap<String, KeyAndValue> map = new HashMap<>();\nSystem.out.println(map);\n//{}\nKeyAndValue computeIfAbsent = map.computeIfAbsent("a", k -> {\n    return a6;\n});\nSystem.out.println(computeIfAbsent);\n// KeyAndValue(name=kevin3, value=lee8)\nSystem.out.println(map);\n// {a=KeyAndValue(name=kevin3, value=lee8)}\n\n\n// >>>merge:\u5bf9key\u5b58\u5728\u7684\u5143\u7d20\u8fdb\u884c\u5408\u5e76\u65b0\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u52a0\u5de5\u540e\u7684\u5143\u7d20\n\nMap<String, KeyAndValue> map = new HashMap<>();\nmap.put("a",a1);\nSystem.out.println(map);\n// {a=KeyAndValue(name=kevin, value=lee)}\n//\u201ca\u201d\u6709\u503c\uff0c\u5219\u5408\u5e76\n//a6\u5c31\u662f\u5408\u8fdb\u6765\u7684\u65b0\u503c\uff0ca6\u548cnewV\u662f\u540c\u4e00\u5bf9\u8c61\n//oldV\u662fmap\u4e2d\u539f\u6709key\u5bf9\u5e94\u7684\u503c\uff0coldV\u6709\u503c\u5219\u5408\u5e76\uff0c\u65e0\u503c\u5219\u65b0\u589e\u5bf9\u5e94\u7684k\u548cvalue=newV\u7684\u952e\u503c\u5bf9\nKeyAndValue merge = map.merge("a", a6, (oldV, newV) -> {\n    oldV.setValue(newV.getValue()+"___"+oldV.getValue());\n    return oldV;\n\n});\nSystem.out.println(merge);\n// KeyAndValue(name=kevin, value=lee8___lee)\nSystem.out.println(map);\n// {a=KeyAndValue(name=kevin, value=lee8___lee)}\n\n//\u201cb\u201d\u65e0\u503c\uff0c\u5219\u65b0\u589e"b":newV\nKeyAndValue merge1 = map.merge("b", a5, (oldV, newV) -> {\n    oldV.setValue(oldV.getValue()+"___"+oldV.getValue());\n    return oldV;    //a5\u5c31\u662f\u5408\u8fdb\u6765\u7684\u65b0\u503c\uff0ca5\u548cnewV\u662f\u540c\u4e00\u5bf9\u8c61\uff0c\u6240\u4ee5newV\u548ca5\u53ef\u4e92\u6362\uff1b\n    // oldV\u662fmap\u4e2d\u539f\u6709key=\u201cb\u201d\u5bf9\u5e94\u7684\u503c\uff0coldV\u6709\u503c\u5219\u5408\u5e76\uff0c\u65e0\u503c\u5219\u65b0\u589e\n});\nSystem.out.println(merge1);\n// KeyAndValue(name=kevin2, value=lee5)\nSystem.out.println(map);\n// {a=KeyAndValue(name=kevin, value=lee), b=KeyAndValue(name=kevin2, value=lee5)}\n\n')),(0,r.kt)("h1",{id:"12-java11"},"12. java11"),(0,r.kt)("h2",{id:"121-java-module"},"12.1. java module"),(0,r.kt)("p",null,"Java \u6a21\u5757\u5316\u5f00\u53d1: \u589e\u52a0\u4e86\u66f4\u9ad8\u7ea7\u522b\u7684\u805a\u5408\uff0c\u662fPackage\u7684\u5c01\u88c5\u4f53"),(0,r.kt)("p",null,"java9\u4ee5\u524d \uff1apackage => class/interface\u3002\njava9\u4ee5\u540e \uff1amodule => package => class/interface\u3002"),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48\u8fd9\u4e48\u505a\uff1f\n\u5927\u5bb6\u90fd\u77e5\u9053JRE\u4e2d\u6709\u4e00\u4e2a\u8d85\u7ea7\u5927\u7684rt.jar(60\u591aM)\uff0ctools.jar\u4e5f\u6709\u51e0\u5341\u5146\uff0c\u4ee5\u524d\u8fd0\u884c\u4e00\u4e2ahello world\u4e5f\u9700\u8981\u4e0a\u767e\u5146\u7684\u73af\u5883\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u66f4\u52a0\u5bb9\u6613\u8f7b\u91cf\u7ea7\u90e8\u7f72"),(0,r.kt)("li",{parentName:"ul"},"\u5728 package \u4e4b\u4e0a, \u589e\u52a0\u4e86\u4e00\u4e2a\u66f4\u9ad8\u5c42\u7ea7\u7684\u5c01\u88c5")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"java --list-modules")," \u67e5\u770bjdk\u88ab\u5206\u62c6\u4e3a\u54ea\u4e9b module"),(0,r.kt)("p",null,"\u6a21\u5757\u7684\u662f\u901a\u8fc7module-info.java\u8fdb\u884c\u5b9a\u4e49\uff0c\u7f16\u8bd1\u540e\u6253\u5305\u540e\uff0c\u5c31\u6210\u4e3a\u4e00\u4e2a\u6a21\u5757\u7684\u5b9e\u4f53"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// open \u7528\u6765\u6307\u5b9a\u5f00\u653e\u6a21\u5757,\u5f00\u653e\u6a21\u5757\u7684\u6240\u6709\u5305\u90fd\u662f\u516c\u5f00\u7684\nopen module module.one {\n    // \u5bfc\u5165\n    // opens \u7528\u6765\u6307\u5b9a\u5f00\u653e\u7684\u5305\n    opens java.logging;\n\n    //\u58f0\u660e\u4f9d\u8d56\u5173\u7cfb, opens resuires xxx \u4ea6\u53ef\n    requires java.logging;\n}\n\nmodule module.one {\n \n exports <package>;//exports\u7528\u4e8e\u6307\u5b9a\u6a21\u5757\u4e0b\u7684\u54ea\u4e9b\u5305\u53ef\u4ee5\u88ab\u5176\u4ed6\u6a21\u5757\u8bbf\u95ee\n \n exports <package> to <module1>, <module2>...;\n}\n\n\n//uses\u8bed\u53e5\u4f7f\u7528\u670d\u52a1\u63a5\u53e3\u7684\u540d\u5b57,\u5f53\u524d\u6a21\u5757\u5c31\u4f1a\u53d1\u73b0\u5b83,\u4f7f\u7528java.util.ServiceLoader\u7c7b\u8fdb\u884c\u52a0\u8f7d,\nmodule module.one {\n //\u5bf9\u5916\u63d0\u4f9b\u7684\u63a5\u53e3\u670d\u52a1 ,\u4e0b\u9762\u6307\u5b9a\u7684\u63a5\u53e3\u4ee5\u53ca\u63d0\u4f9b\u670d\u52a1\u7684impl\uff0c\u5982\u679c\u6709\u591a\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u7528\u7528\u9017\u53f7\u9694\u5f00\n uses <\u63a5\u53e3\u540d>;\n provides <\u63a5\u53e3\u540d> with <\u63a5\u53e3\u5b9e\u73b0\u7c7b>,<\u63a5\u53e3\u5b9e\u73b0\u7c7b>;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.zhihu.com/question/40413806/answer/135807272"},"\u4e3a\u4ec0\u4e48 Java 9 \u6a21\u5757\u5316\u4f7f\u7528 Jigsaw \u800c\u4e0d\u662f OSGi\uff1f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://www.cnblogs.com/chenjianjx/archive/2012/05/24/2516620.html"},"osgi \u5165\u95e8")," , ",(0,r.kt)("a",{parentName:"li",href:"https://www.cnblogs.com/zhangpan1244/p/11677705.html"},"https://www.cnblogs.com/zhangpan1244/p/11677705.html"))),(0,r.kt)("h2",{id:"122-jshell"},"12.2. jshell"),(0,r.kt)("p",null,"some classes already import into the console"),(0,r.kt)("h2",{id:"123-var-\u7c7b\u578b\u63a8\u65ad"},"12.3. var \u7c7b\u578b\u63a8\u65ad"),(0,r.kt)("p",null,"\u5c40\u90e8\u7c7b\u578b\u53d8\u91cf\u63a8\u65ad\u3002\u5b83\u4f1a\u6839\u636e\u540e\u9762\u7684\u503c\u6765\u63a8\u65ad\u53d8\u91cf\u7684\u7c7b\u578b\uff0c\u6240\u4ee5var\u5fc5\u987b\u8981\u521d\u59cb\u5316\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"\nvar a = 1; \n\u7b49\u4e8e\nint a = 1;\n\n\n")),(0,r.kt)("p",null,"var\u4e0d\u80fd\u518d\u54ea\u91cc\u4f7f\u7528\uff1f"),(0,r.kt)("p",null,"\u7c7b\u6210\u5458\u53d8\u91cf\u7c7b\u578b\u3002\n\u65b9\u6cd5\u8fd4\u56de\u503c\u7c7b\u578b\u3002\nJava10\u4e2dLambda\u4e0d\u80fd\u4f7f\u7528var\uff0cJava11\u4e2d\u53ef\u4ee5\u4f7f\u7528\u3002"),(0,r.kt)("h2",{id:"124-jdk-api-enhencement"},"12.4. jdk api enhencement"),(0,r.kt)("p",null,"string \u589e\u5f3a: \u5224\u65ad\u662f\u5426\u7a7a\u767d, \u53bb\u9664\u7a7a\u683c...\n\u96c6\u5408\u589e\u5f3a: of, copyOf, create immutable collection\nstream \u548c option \u589e\u5f3a: \u53ef\u4ee5\u76f8\u4e92\u8f6c\u6362, "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\n// \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a\u767d\n" ".isBlank(); // true\n// \u53bb\u9664\u9996\u5c3e\u7a7a\u683c\n" Hello Java11 ".strip(); // "Hello Java11"\n// \u53bb\u9664\u5c3e\u90e8\u7a7a\u683c \n" Hello Java11 ".stripTrailing(); // " Hello Java11"\n// \u53bb\u9664\u9996\u90e8\u7a7a\u683c \n" Hello Java11 ".stripLeading(); // "Hello Java11 "\n// \u590d\u5236\u5b57\u7b26\u4e32\n"Java11".repeat(3); // "Java11Java11Java11"\n// \u884c\u6570\u7edf\u8ba1\n"A\\nB\\nC".lines().count(); // 3\n\n//\u521b\u5efa\u4e0d\u53ef\u53d8\u96c6\u5408\u3002\n\nvar list = List.of("Java", "Python", "C"); //\u4e0d\u53ef\u53d8\u96c6\u5408\n var copy = List.copyOf(list); //copyOf\u5224\u65ad\u662f\u5426\u662f\u4e0d\u53ef\u53d8\u96c6\u5408\u7c7b\u578b\uff0c\u5982\u679c\u662f\u76f4\u63a5\u8fd4\u56de\n System.out.println(list == copy); // true\n var list = new ArrayList<String>(); // \u8fd9\u91cc\u8fd4\u56de\u6b63\u5e38\u7684\u96c6\u5408\n var copy = List.copyOf(list); // \u8fd9\u91cc\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u96c6\u5408\n System.out.println(list == copy); // false\n\n\n\u4ee5\u524d\nStream.of(null); //\u62a5\u9519\n\u73b0\u5728\nStream.ofNullable(null);\n\n// http client \u652f\u6301\u540c\u6b65\u5f02\u6b65\n\nvar request = HttpRequest.newBuilder()\n .uri(URI.create("https://www.baidu.com/"))\n .build();\n var client = HttpClient.newHttpClient();\n // \u540c\u6b65\n HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());\n System.out.println(response.body());\n // \u5f02\u6b65\n CompletableFuture<HttpResponse<String>> sendAsync = client.sendAsync(request, HttpResponse.BodyHandlers.ofString());\n //\u8fd9\u91cc\u4f1a\u963b\u585e\n HttpResponse<String> response1 = sendAsync.get();\n System.out.println(response1.body());\n')),(0,r.kt)("h2",{id:"125-\u6539\u8fdb-java-\u7a0b\u5e8f\u5728-docker-\u4e2d\u7684\u8868\u73b0"},"12.5. \u6539\u8fdb java \u7a0b\u5e8f\u5728 docker \u4e2d\u7684\u8868\u73b0"),(0,r.kt)("p",null,"JVM\u73b0\u5728\u53ef\u4ee5\u8bc6\u522b\u7531\u5bb9\u5668\u63a7\u5236\u7ec4\uff08cgroups\uff09\u8bbe\u7f6e\u7684\u7ea6\u675f\u3002\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u4f7f\u7528\u5185\u5b58\u548cCPU\u7ea6\u675f\u6765\u76f4\u63a5\u7ba1\u7406Java\u5e94\u7528\u7a0b\u5e8f\uff0c\u5176\u4e2d\u5305\u62ec\uff1a"),(0,r.kt)("p",null,"\u9075\u5b88\u5bb9\u5668\u4e2d\u8bbe\u7f6e\u7684\u5185\u5b58\u9650\u5236\n\u5728\u5bb9\u5668\u4e2d\u8bbe\u7f6e\u53ef\u7528\u7684CPU\n\u5728\u5bb9\u5668\u4e2d\u8bbe\u7f6eCPU\u7ea6\u675f"),(0,r.kt)("h2",{id:"126-\u65b0\u7684\u5783\u573e\u56de\u6536\u5668"},"12.6. \u65b0\u7684\u5783\u573e\u56de\u6536\u5668"),(0,r.kt)("h1",{id:"13-classloader-\u7c7b\u52a0\u8f7d\u5668"},"13. classloader \u7c7b\u52a0\u8f7d\u5668"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/doit8791/p/5820037.html"},"https://www.cnblogs.com/doit8791/p/5820037.html")),(0,r.kt)("h2",{id:"131-classloader-\u7684\u6982\u5ff5"},"13.1. classloader \u7684\u6982\u5ff5"),(0,r.kt)("p",null,"\u7c7b\u52a0\u8f7d\u5668\uff08class loader\uff09\u7528\u6765\u52a0\u8f7d Java \u7c7b\u5230 Java \u865a\u62df\u673a\u4e2d\u3002\u9664\u6b64\u4e4b\u5916\uff0cClassLoader \u8fd8\u8d1f\u8d23\u52a0\u8f7d Java \u5e94\u7528\u6240\u9700\u7684\u8d44\u6e90\uff0c\u5982\u56fe\u50cf\u6587\u4ef6\u548c\u914d\u7f6e\u6587\u4ef6\u7b49"),(0,r.kt)("h2",{id:"132-\u5c42\u7ea7\u7ed3\u6784"},"13.2. \u5c42\u7ea7\u7ed3\u6784"),(0,r.kt)("p",null,"\u6811\u72b6\u7ed3\u6784:"),(0,r.kt)("p",null,"\u5206\u7c7b. ","[\u7236 -> \u5b50 \u5173\u7cfb]","\u662f\u8fd9\u6837\u7684: \u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\uff08bootstrap class loader\uff09-> \u6269\u5c55\u7c7b\u52a0\u8f7d\u5668\uff08extensions class loader\uff09 -> \u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\uff08system class loader\uff09 -> user-defined classloader"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7cfb\u7edf(jvm) \u63d0\u4f9b\u7684 classloader"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\uff08bootstrap class loader\uff09\uff1a\u5b83\u7528\u6765\u52a0\u8f7d Java \u7684\u6838\u5fc3\u5e93 (rt.jar \u4e2d\u7684\u6240\u6709 class)\uff0c\u7531 C++\u7f16\u5199\u7684\uff0c\u5b83\u672c\u8eab\u662f\u865a\u62df\u673a\u7684\u4e00\u90e8\u5206\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a JAVA \u7c7b\uff0c\u5e76\u4e0d\u7ee7\u627f\u81ea java.lang.ClassLoader, \u6ca1\u6709 parent")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668\uff08extensions class loader\uff09\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"ExtClassLoader"),", \u5b83\u7528\u6765\u52a0\u8f7d Java \u7684\u6269\u5c55\u5e93(Java \u865a\u62df\u673a\u7684\u5b9e\u73b0\u4f1a\u63d0\u4f9b\u4e00\u4e2a\u6269\u5c55\u5e93\u76ee\u5f55, \u8be5\u7c7b\u52a0\u8f7d\u5668\u5728\u6b64\u76ee\u5f55\u91cc\u9762\u67e5\u627e\u5e76\u52a0\u8f7d Java \u7c7b)\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\uff08app class loader\uff09\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"AppClassLoader"),", \u5b83\u6839\u636e Java \u5e94\u7528\u7684\u7c7b\u8def\u5f84\uff08CLASSPATH\uff09\u6765\u52a0\u8f7d Java \u7c7b\u3002Java \u5e94\u7528\u7684\u7c7b\u90fd\u662f\u7531\u5b83\u6765\u5b8c\u6210\u52a0\u8f7d\u7684\u3002\u53ef\u4ee5\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"ClassLoader.getSystemClassLoader()"),"\u6765\u83b7\u53d6\u5b83\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u81ea\u5b9a\u4e49\u7684 classloader - \u901a\u8fc7\u7ee7\u627f ",(0,r.kt)("inlineCode",{parentName:"p"},"java.lang.ClassLoader"),"\u62bd\u8c61\u7c7b\u7684\u65b9\u5f0f\u5b9e\u73b0\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668, \u53ef\u4ee5\u7528\u6765",(0,r.kt)("inlineCode",{parentName:"p"},"\u52a0\u8f7d \u975e classpath \u4e2d\u7684 jar \u548c \u76ee\u5f55 (\u6bd4\u5982\u4ece\u7f51\u7edc\u4e0b\u8f7d)"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"\u5728\u52a0\u8f7d class \u524d \u505a\u5176\u4ed6\u4e8b\u60c5, \u5982\u89e3\u5bc6")," , ",(0,r.kt)("inlineCode",{parentName:"p"},"\u5b9e\u73b0\u7c7b\u9694\u79bb")," (\u8fd0\u884c\u591a\u4e2a\u4e0d\u540c\u7248\u672c\u7684 jar \u5305, check ",(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/t894690230/article/details/73252331"},"https://blog.csdn.net/t894690230/article/details/73252331"),")"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"loadClass \u65b9\u6cd5 - \u52a0\u8f7d\u6307\u5b9a\u540d\u79f0\u7684\u7c7b, (\u53e6\u4e00\u79cd\u52a0\u8f7d class \u7684\u65b9\u6cd5 ",(0,r.kt)("inlineCode",{parentName:"p"},"Class.forName")," \u542f\u52a8\u8fd9\u4e2a\u52a0\u8f7d\u8fc7\u7a0b\u662f\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"loadClass"),"\u6765\u5b9e\u73b0\u7684, \u79f0\u4e3a\u521d\u59cb\u52a0\u8f7d\u5668\uff08initiating loader\uff09)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"findLoadedClass \u65b9\u6cd5 - \u4ece\u5f53\u524d classloader \u5b9e\u4f8b\u7684\u7f13\u5b58\u4e2d\u5bfb\u627e\u5df2\u7ecf\u52a0\u8f7d\u7684\u7c7b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"findClass\u65b9\u6cd5")," - \u53ea\u9700\u8981\u8986\u76d6\u8fd9\u4e2a\u65b9\u6cd5, \u81ea\u5b9a\u4e49\u52a0\u8f7d\u903b\u8f91, \u5176\u4ed6\u65b9\u6cd5\u4e0d\u52a8;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defineClass \u65b9\u6cd5 - \u5c06 class \u5b57\u8282\u7801\u8f6c\u6362\u4e3a Class \u5bf9\u8c61 (\u771f\u6b63\u5b8c\u6210\u7c7b\u7684\u52a0\u8f7d\u5de5\u4f5c\u662f\u901a\u8fc7\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"defineClass"),"\u6765\u5b9e\u73b0\u7684, \u79f0\u4e3a\u4e00\u4e2a\u7c7b\u7684\u5b9a\u4e49\u52a0\u8f7d\u5668\uff08defining loader\uff09)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"defineClass() \u548c loadClass() \u4e24\u79cd\u52a0\u8f7d\u65b9\u5f0f\u7684\u5173\u8054\u4e4b\u5904\u5728\u4e8e\uff1a\u4e00\u4e2a\u7c7b\u7684\u5b9a\u4e49\u52a0\u8f7d\u5668\u662f\u5b83\u5f15\u7528\u7684\u5176\u5b83\u7c7b\u7684\u521d\u59cb\u52a0\u8f7d\u5668\u3002\u5982\u7c7b com.example.Outer \u5f15\u7528\u4e86\u7c7b com.example.Inner\uff0c\u5219\u7531\u7c7b com.example.Outer \u7684\u5b9a\u4e49\u52a0\u8f7d\u5668\u8d1f\u8d23\u542f\u52a8\u7c7b com.example.Inner \u7684\u52a0\u8f7d\u8fc7\u7a0b\u3002"))))))),(0,r.kt)("h2",{id:"133-\u5de5\u4f5c\u8fc7\u7a0b-and-\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f"},"13.3. \u5de5\u4f5c\u8fc7\u7a0b and \u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Java \u6e90\u7a0b\u5e8f\uff08.java \u6587\u4ef6\uff09\u5728\u7ecf\u8fc7 Java \u7f16\u8bd1\u5668\u7f16\u8bd1\u4e4b\u540e\u5c31\u88ab\u8f6c\u6362\u6210 Java \u5b57\u8282\u4ee3\u7801\uff08.class \u6587\u4ef6\uff09\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u7c7b\u52a0\u8f7d\u5668\u8d1f\u8d23\u8bfb\u53d6 Java \u5b57\u8282\u4ee3\u7801\uff0c\u5e76\u8f6c\u6362\u6210 java.lang.Class \u7c7b\u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u6bcf\u4e2a\u8fd9\u6837\u7684\u5b9e\u4f8b\u7528\u6765\u8868\u793a\u4e00\u4e2a Java \u7c7b\u3002\u901a\u8fc7\u6b64\u5b9e\u4f8b\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"newInstance()"),"\u65b9\u6cd5\u5c31\u53ef\u4ee5\u521b\u5efa\u51fa\u8be5\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u7c7b\u52a0\u8f7d\u5668\u5728\u5c1d\u8bd5 \u81ea\u5df1\u53bb\u67e5\u627e\u67d0\u4e2a\u7c7b\u7684\u5b57\u8282\u4ee3\u7801\u5e76\u5b9a\u4e49\u5b83 \u4e4b\u524d, \u4f1a\u5148\u5c1d\u8bd5\u901a\u8fc7 parent classloader \u52a0\u8f7d\uff0c\u5982\u679c\u65e0\u6cd5\u52a0\u8f7d\uff0c\u4f9d\u6b21\u7c7b\u63a8 -- ",(0,r.kt)("inlineCode",{parentName:"p"},"classloader\u7684\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f")," , \u7531\u4e8e ","[\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f]",", \u771f\u6b63\u5b8c\u6210\u7c7b\u7684\u52a0\u8f7d\u5de5\u4f5c\u7684\u7c7b\u52a0\u8f7d\u5668\u548c\u542f\u52a8\u8fd9\u4e2a\u52a0\u8f7d\u8fc7\u7a0b\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u6709\u53ef\u80fd\u4e0d\u662f\u540c\u4e00\u4e2a;")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u4e3a\u4ec0\u4e48\u8981\u6709 classloader \u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f\u7684\u8bbe\u8ba1? ------- \u4e3a\u4e86\u4fdd\u8bc1 Java \u6838\u5fc3\u5e93\u7684\u7c7b\u578b\u5b89\u5168 (\u4e3e\u4e2a\u4f8b\u5b50 \ud83c\udf30 -> \u6240\u6709 Java \u5e94\u7528\u90fd\u81f3\u5c11\u9700\u8981\u5f15\u7528 java.lang.Object \u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u8fd0\u884c\u7684\u65f6\u5019\uff0cjava.lang.Object \u8fd9\u4e2a\u7c7b\u9700\u8981\u88ab\u52a0\u8f7d\u5230 Java \u865a\u62df\u673a\u4e2d\u3002\u5982\u679c\u8fd9\u4e2a\u52a0\u8f7d\u8fc7\u7a0b\u7531 Java \u5e94\u7528\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u5b8c\u6210\u7684\u8bdd\uff0c\u5f88\u53ef\u80fd\u5c31\u5b58\u5728\u591a\u4e2a\u7248\u672c\u7684 java.lang.Object \u7c7b\uff0c\u800c\u4e14\u8fd9\u4e9b\u7c7b\u4e4b\u95f4\u662f\u4e0d\u517c\u5bb9\u7684\u3002\u901a\u8fc7\u4ee3\u7406\u6a21\u5f0f\uff0c\u5bf9\u4e8e Java \u6838\u5fc3\u5e93\u7684\u7c7b\u7684\u52a0\u8f7d\u5de5\u4f5c\u7531\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\u6765\u7edf\u4e00\u5b8c\u6210\uff0c\u4fdd\u8bc1\u4e86 Java \u5e94\u7528\u6240\u4f7f\u7528\u7684\u90fd\u662f\u540c\u4e00\u4e2a\u7248\u672c\u7684 Java \u6838\u5fc3\u5e93\u7684\u7c7b\uff0c\u662f\u4e92\u76f8\u517c\u5bb9\u7684\u3002)")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u7c7b\u52a0\u8f7d\u5668\u5728\u6210\u529f\u52a0\u8f7d\u67d0\u4e2a\u7c7b\u4e4b\u540e\uff0c\u4f1a\u628a\u5f97\u5230\u7684 java.lang.Class \u7c7b\u7684\u5b9e\u4f8b\u7f13\u5b58\u8d77\u6765 - \u5bf9\u4e8e\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u5b9e\u4f8b\u6765\u8bf4\uff0c\u76f8\u540c\u5168\u540d\u7684\u7c7b\u53ea\u52a0\u8f7d\u4e00\u6b21\uff0c\u5373 loadClass \u65b9\u6cd5\u4e0d\u4f1a\u88ab\u91cd\u590d\u8c03\u7528\u3002"))),(0,r.kt)("h2",{id:"134-\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668-\u6253\u4e71\u5c42\u7ea7\u7ed3\u6784"},"13.4. \u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668-\u6253\u4e71\u5c42\u7ea7\u7ed3\u6784"),(0,r.kt)("p",null,"\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668\uff08context class loader\uff09\u53ea\u662f\u4e00\u4e2a\u6982\u5ff5 , \u7c7b ",(0,r.kt)("inlineCode",{parentName:"p"},"java.lang.Thread"),"\u4e2d\u7684\u65b9\u6cd5 ",(0,r.kt)("inlineCode",{parentName:"p"},"getContextClassLoader()"),"\u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"setContextClassLoader(ClassLoader cl)"),"\u7528\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668"),(0,r.kt)("p",null,"\u4e3b\u8981\u662f\u4e3a\u4e86\u89e3\u51b3\u4e00\u4e2a\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f\u7684 bug , \u4e3e\u4e2a\u4f8b\u5b50 \ud83c\udf30: Java \u63d0\u4f9b\u4e86\u5f88\u591a\u670d\u52a1\u63d0\u4f9b\u8005\u63a5\u53e3\uff08Service Provider Interface\uff0cSPI\uff09\uff0c\u5141\u8bb8\u7b2c\u4e09\u65b9\u4e3a\u8fd9\u4e9b\u63a5\u53e3\u63d0\u4f9b\u5b9e\u73b0(\u5e38\u89c1\u7684 SPI \u6709 JDBC, JAXP..., ) , \u8fd9\u4e9b\u5b9e\u73b0\u7531",(0,r.kt)("inlineCode",{parentName:"p"},"app class loader"),"\u6765\u52a0\u8f7d, \u800c\u8fd9\u4e9b SPI \u7684\u63a5\u53e3\u7531 Java \u6838\u5fc3\u5e93\u6765\u63d0\u4f9b, \u662f\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668 bootstrap class loader"),"\u6765\u52a0\u8f7d). \u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\u662f\u65e0\u6cd5\u627e\u5230 SPI \u7684\u5b9e\u73b0\u7c7b\u7684\uff0c\u56e0\u4e3a\u5b83\u53ea\u52a0\u8f7d Java \u7684\u6838\u5fc3\u5e93\u3002\u5b83\u4e5f\u4e0d\u80fd\u4ee3\u7406\u7ed9 app class loader \uff0c\u56e0\u4e3a bootstrap class loader \u5728 app class loader \u7684\u4e0a\u5c42, \u4e5f\u5c31\u662f\u8bf4\uff0c\u7c7b\u52a0\u8f7d\u5668\u7684\u53cc\u4eb2\u59d4\u6d3e\u6a21\u5f0f\u65e0\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002"),(0,r.kt)("p",null,"\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668\u6b63\u597d\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898 ","[\u5728 SPI \u63a5\u53e3\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7c7b\u52a0\u8f7d\u5668\uff0c\u5c31\u53ef\u4ee5\u6210\u529f\u7684\u52a0\u8f7d\u5230 SPI \u5b9e\u73b0\u7684\u7c7b]"),(0,r.kt)("h2",{id:"135-\u501f\u52a9-classloader-\u5b9e\u73b0\u7c7b\u9694\u79bb"},"13.5. \u501f\u52a9 classloader \u5b9e\u73b0\u7c7b\u9694\u79bb"),(0,r.kt)("p",null,"\u4e0d\u540c\u7684\u7c7b\u52a0\u8f7d\u5668\u4e3a\u5404\u81ea\u52a0\u8f7d\u7684\u7c7b\u521b\u5efa\u4e86\u989d\u5916\u7684\u540d\u79f0\u7a7a\u95f4, \u5373\u4f7f\u5404\u81ea\u52a0\u8f7d\u7684\u662f\u76f8\u540c\u540d\u79f0\u7684\u7c7b\u3002\u76f8\u540c\u540d\u79f0\u7684\u7c7b\u53ef\u4ee5\u5e76\u5b58\u5728 Java \u865a\u62df\u673a\u4e2d\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"\u53ea\u9700\u8981\u7528\u4e0d\u540c\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u52a0\u8f7d\u5b83\u4eec\u5373\u53ef"),"\u3002\u4e0d\u540c\u7c7b\u52a0\u8f7d\u5668\u52a0\u8f7d\u7684\u7c7b\u4e4b\u95f4\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u8fd9\u5c31\u76f8\u5f53\u4e8e\u5728 Java \u865a\u62df\u673a\u5185\u90e8\u521b\u5efa\u4e86\u4e00\u4e2a\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"\u76f8\u4e92\u9694\u79bb\u7684 Java \u7c7b\u7a7a\u95f4"),"\u3002\u8fd9\u79cd\u6280\u672f\u5728\u8bb8\u591a\u6846\u67b6\u4e2d\u90fd\u88ab\u7528\u5230"),(0,r.kt)("p",null,"\u53ef\u4ee5\u8fd9\u4e48\u505a\u7684\u539f\u7406\u662f:"),(0,r.kt)("p",null,"Java \u865a\u62df\u673a\u662f\u5982\u4f55\u5224\u5b9a\u4e24\u4e2a Java \u7c7b\u662f\u76f8\u540c\u7684? ------- \ud83d\udccc \u7c7b\u7684\u5168\u540d\u662f\u5426\u76f8\u540c \ud83d\udccc \u52a0\u8f7d\u6b64\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668(\u5b9e\u4f8b\u5bf9\u8c61 id)\u662f\u5426\u4e00\u6837"),(0,r.kt)("h2",{id:"136-\u7c7b\u52a0\u8f7d\u76f8\u5173\u7684\u5f02\u5e38"},"13.6. \u7c7b\u52a0\u8f7d\u76f8\u5173\u7684\u5f02\u5e38"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"classnotfoundException - \u5728\u5f53\u524d\u7684 classloader \u4e2d",(0,r.kt)("inlineCode",{parentName:"p"},"\u52a0\u8f7d class \u6587\u4ef6\u65f6\u6ca1\u6709\u627e\u5230")),(0,r.kt)("p",{parentName:"li"},"\u5bf9\u4e8e system class loader, \u53ea\u8981 class path \u4e2d\u6ca1\u6709\u76f8\u5e94\u7684 class \u6587\u4ef6, \u5c31\u629b\u5f02\u5e38;\n\u5bf9\u4e8e user-defined class loader \u8981\u5230\u4ee3\u7801\u627e\u627e\u770b, \u770b\u5177\u4f53\u662f\u4ece\u4ec0\u4e48\u4f4d\u7f6e\u52a0\u8f7d class")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'NoClassDefFoundException - \u52a0\u8f7d\u7684\u7c7b\u5f15\u7528\u4e86\u53e6\u5916\u7684\u7c7b, \u800c\u8fd9\u4e2a"\u53e6\u5916\u7684"',(0,r.kt)("inlineCode",{parentName:"p"},"\u5f15\u7528\u7c7b\u4e0d\u5b58\u5728or\u5f53\u524dclass loader\u65e0\u6cd5\u52a0\u8f7d\u5f15\u7528\u7684\u7c7b")),(0,r.kt)("p",{parentName:"li"},"\u89e3\u51b3\u8fd9\u4e2a\u5f02\u5e38, \u9700\u8981\u5230\u5f02\u5e38\u7c7b\u4e2d\u627e\u5230\u5f15\u7528\u5230\u4e86\u54ea\u4e9b\u53e6\u5916\u7684\u7c7b , \u7136\u540e\u770b\u770b\u8fd9\u4e9b\u53e6\u5916\u7684\u7c7b\u662f\u4e0d\u662f\u5b58\u5728\u4e8e\u80fd\u591f\u88ab\u5f53\u524d class loader \u52a0\u8f7d\u5230\u7684\u4f4d\u7f6e")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"LinkageError - \u52a0\u8f7d\u67d0\u4e2a class \u65f6, \u8fd9\u4e2a class \u5df2\u7ecf\u5b58\u5728\u4e8e\u5f53\u524d\u7684 class loader \u4e2d\u4e86 , \u4e5f\u5c31\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"\u91cd\u590d\u7684\u52a0\u8f7d")),(0,r.kt)("p",{parentName:"li"},"\u81ea\u5b9a\u4e49 class loader \u4e2d and \u5e76\u53d1\u4e0b\u5bb9\u6613\u51fa\u73b0"),(0,r.kt)("p",{parentName:"li"},"\u8fd9\u4e2a\u673a\u5236\u4e5f\u9020\u6210 jvm \u65e0\u6cd5\u76f4\u63a5\u66f4\u65b0\u4e00\u4e2a\u5df2\u7ecf\u52a0\u8f7d\u8fc7\u7684 class, \u53ea\u80fd\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 class loader \u6765\u52a0\u8f7d\u66f4\u65b0\u540e\u7684 class, \u7136\u540e\u5c06\u65b0\u8bf7\u6c42\u8f6c\u5165\u65b0 class loader \u6765\u83b7\u53d6\u66f4\u65b0\u540e\u7684\u7c7b -------- \u8fd9\u4e5f\u65f6\u52a8\u6001\u66f4\u65b0\u7684\u539f\u7406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ClassCastException - \u8f6c\u578b\u5f02\u5e38"),(0,r.kt)("p",{parentName:"li"},"\u4f7f\u7528\u6cdb\u578b\u53ef\u4ee5\u89c4\u907f"),(0,r.kt)("p",{parentName:"li"},"\u8981\u6ce8\u610f\u4e24\u4e2a\u540c\u7c7b\u578b\u5bf9\u8c61\u4f46\u662f\u901a\u8fc7\u4e0d\u540c class loader \u52a0\u8f7d\u7684\u60c5\u51b5, \u8fd9\u79cd\u60c5\u51b5\u4e5f\u4f1a\u629b\u5f02\u5e38"))),(0,r.kt)("h2",{id:"137-\u81ea\u5b9a\u4e49-classloader\u52a0\u8f7d\u7f51\u7edc\u4e0a\u7684-class"},"13.7. \u81ea\u5b9a\u4e49 classloader(\u52a0\u8f7d\u7f51\u7edc\u4e0a\u7684 class)"),(0,r.kt)("p",null,"\u573a\u666f: \u5e94\u7528\u901a\u8fc7\u7f51\u7edc\u6765\u4f20\u8f93 Java \u7c7b\u7684\u5b57\u8282\u4ee3\u7801\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5b89\u5168\u6027\uff0c\u8fd9\u4e9b\u5b57\u8282\u4ee3\u7801\u7ecf\u8fc7\u4e86\u52a0\u5bc6\u5904\u7406\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668\u6765\u4ece\u67d0\u4e2a\u7f51\u7edc\u5730\u5740\u4e0a\u8bfb\u53d6\u52a0\u5bc6\u540e\u7684\u5b57\u8282\u4ee3\u7801\uff0c\u63a5\u7740\u8fdb\u884c\u89e3\u5bc6\u548c\u9a8c\u8bc1\uff0c\u6700\u540e\u5b9a\u4e49\u51fa\u8981\u5728 Java \u865a\u62df\u673a\u4e2d\u8fd0\u884c\u7684\u7c7b\u6765"),(0,r.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u7c7b\u7ee7\u627f\u81ea ClassLoader \u62bd\u8c61\u7c7b\u3002\n\u590d\u5199\u5b83\u7684 findClass()\u65b9\u6cd5\u3002\n\u5728 findClass()\u65b9\u6cd5\u4e2d\u8c03\u7528 defineClass()\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"//\u6587\u4ef6\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\npublic class FileSystemClassLoader extends ClassLoader {\n\n   private String rootDir;\n\n   public FileSystemClassLoader(String rootDir) {\n       this.rootDir = rootDir;\n   }\n\n   // \u81ea\u5b9a\u4e49 classloader \u91cd\u5199 findClass \u5373\u53ef\n   /*\n   - java.lang.ClassLoader\u7c7b\u7684\u65b9\u6cd5 loadClass()\u5c01\u88c5\u4e86\u524d\u9762\u63d0\u5230\u7684\u4ee3\u7406\u6a21\u5f0f\u7684\u5b9e\u73b0\u3002\u8be5\u65b9\u6cd5\u4f1a\u9996\u5148\u8c03\u7528 findLoadedClass()\u65b9\u6cd5\u6765\u68c0\u67e5\u8be5\u7c7b\u662f\u5426\u5df2\u7ecf\u88ab\u52a0\u8f7d\u8fc7\uff1b\u5982\u679c\u6ca1\u6709\u52a0\u8f7d\u8fc7\u7684\u8bdd\uff0c\u4f1a\u8c03\u7528\u7236\u7c7b\u52a0\u8f7d\u5668\u7684 loadClass()\u65b9\u6cd5\u6765\u5c1d\u8bd5\u52a0\u8f7d\u8be5\u7c7b\uff1b\u5982\u679c\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u8be5\u7c7b\u7684\u8bdd\uff0c\u5c31\u8c03\u7528 findClass()\u65b9\u6cd5\u6765\u67e5\u627e\u8be5\u7c7b\u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u7c7b\u52a0\u8f7d\u5668\u90fd\u6b63\u786e\u5b9e\u73b0\u4ee3\u7406\u6a21\u5f0f\uff0c\u5728\u5f00\u53d1\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668\u65f6\uff0c\u6700\u597d\u4e0d\u8981\u8986\u5199 loadClass()\u65b9\u6cd5\uff0c\u800c\u662f\u8986\u5199 findClass()\u65b9\u6cd5\u3002\n   */\n   protected Class<?> findClass(String name) throws ClassNotFoundException {\n       byte[] classData = getClassData(name);\n       if (classData == null) {\n           throw new ClassNotFoundException();\n       }\n       else {\n           return defineClass(name, classData, 0, classData.length);\n       }\n   }\n\n   private byte[] getClassData(String className) {\n       String path = classNameToPath(className);\n       try {\n           InputStream ins = new FileInputStream(path);\n           ByteArrayOutputStream baos = new ByteArrayOutputStream();\n           int bufferSize = 4096;\n           byte[] buffer = new byte[bufferSize];\n           int bytesNumRead = 0;\n           while ((bytesNumRead = ins.read(buffer)) != -1) {\n               baos.write(buffer, 0, bytesNumRead);\n           }\n           return baos.toByteArray();\n       } catch (IOException e) {\n           e.printStackTrace();\n       }\n       return null;\n   }\n\n   private String classNameToPath(String className) {\n       return rootDir + File.separatorChar\n               + className.replace('.', File.separatorChar) + \".class\";\n   }\n}\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u7f51\u7edc\u7c7b\u52a0\u8f7d\u5668\n/**\n\u901a\u8fc7\u7f51\u7edc\u4e0b\u8f7d Java \u7c7b\u5b57\u8282\u4ee3\u7801\u5e76\u5b9a\u4e49\u51fa Java \u7c7b\n */\npublic class NetworkClassLoader extends ClassLoader {\n\n    private String rootUrl;\n\n    public NetworkClassLoader(String rootUrl) {\n        this.rootUrl = rootUrl;\n    }\n\n    protected Class<?> findClass(String name) throws ClassNotFoundException {\n        byte[] classData = getClassData(name);\n        if (classData == null) {\n            throw new ClassNotFoundException();\n        }\n        else {\n            return defineClass(name, classData, 0, classData.length);\n        }\n    }\n\n    private byte[] getClassData(String className) {\n        String path = classNameToPath(className);\n        try {\n            URL url = new URL(path);\n            InputStream ins = url.openStream();\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            int bufferSize = 4096;\n            byte[] buffer = new byte[bufferSize];\n            int bytesNumRead = 0;\n            while ((bytesNumRead = ins.read(buffer)) != -1) {\n                baos.write(buffer, 0, bytesNumRead);\n            }\n            return baos.toByteArray();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    private String classNameToPath(String className) {\n        return rootUrl + "/"\n                + className.replace(\'.\', \'/\') + ".class";\n    }\n}\n\n////////////////////////////////////////\n\n// test\npublic class CalculatorTest {\n\n    public static void main(String[] args) {\n        String url = "http://localhost:8080/ClassloaderTest/classes";\n        NetworkClassLoader ncl = new NetworkClassLoader(url);\n        String basicClassName = "com.example.CalculatorBasic";\n        String advancedClassName = "com.example.CalculatorAdvanced";\n        try {\n            Class<?> clazz = ncl.loadClass(basicClassName);\n            ICalculator calculator = (ICalculator) clazz.newInstance();// \u901a\u8fc7\u63a5\u53e3\u63a5\u6536\n            System.out.println(calculator.getVersion());\n            clazz = ncl.loadClass(advancedClassName);\n            calculator = (ICalculator) clazz.newInstance();\n            System.out.println(calculator.getVersion());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n\n')),(0,r.kt)("h1",{id:"14-\u8def\u5f84\u95ee\u9898"},"14. \u8def\u5f84\u95ee\u9898"),(0,r.kt)("h2",{id:"141-\u83b7\u53d6-classpath-\u548c-\u7cfb\u7edf\u5c5e\u6027-\u73af\u5883\u53d8\u91cf"},"14.1. \u83b7\u53d6 classpath \u548c \u7cfb\u7edf\u5c5e\u6027 \u73af\u5883\u53d8\u91cf"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'String str = Thread.currentThread().getContextClassLoader().getResource("").getPath();\nSystem.out.println("-------");\nSystem.out.println(str); // \u6211\u662f\u5728\u6d4b\u8bd5\u76ee\u5f55\u4e0b, \u6240\u4ee5\u7ed3\u679c\u662f: /D:/repo/eclipse/etc-learn/target/test-classes/\n\nString str1 = Thread.currentThread().getContextClassLoader().getResource("./").getPath();\nSystem.out.println(str1);// \u65e0\u8bba\u662f[.] \u8fd8\u662f[./], \u7ed3\u679c\u540c str\n\nString str2 = Thread.currentThread().getContextClassLoader().getResource("demo.properties").getPath();\nSystem.out.println(str2);// /D:/repo/eclipse/etc-learn/target/classes/demo.properties\n\n// \u8fd9\u79cd\u901a\u8fc7 .class \u83b7\u53d6\u7684\u8def\u5f84, \u4e0d\u662f root classpath, \u800c\u662f \u8be5\u7c7b\u6240\u5728\u7684\u8be6\u7ec6class path\u8def\u5f84\nPathUtil.class.getResource(classpath).getPath()\n//   /D:/repo/repo_github/shared_already/springboot-demos/groovy-demo/target/classes/io/github/xiaoyu/groovydemo/util/\n\n\n')),(0,r.kt)("p",null,"\u83b7\u53d6\u8d44\u6e90\u6587\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'Properties props = new Properties();\nprops.load(Thread.currentThread().getContextClassLoader()\n// \u8fd9\u91cc\u5fc5\u987b\u662f class path\n        .getResourceAsStream("com/xiaoyu/learn/etc/schedule/quartz/simple/demo/quartz.properties"));\n\n')),(0,r.kt)("p",null,'\u901a\u8fc7 System.getProperty("user.dir")'),(0,r.kt)("p",null,"\u82e5\u662f\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u53c2\u6570, \u53ef\u4ee5\u5728 jvm \u53c2\u6570\u4e2d\u8bbe\u7f6e: ",(0,r.kt)("inlineCode",{parentName:"p"},"-Daaa=xxx"),", \u5728 Tomcat \u7684  catalina.sh \u4e2d \u914d\u7f6e ",(0,r.kt)("inlineCode",{parentName:"p"},"JAVA_OPS=-Daaa=xxx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"/**\n*\njava.version          Java \u8fd0\u884c\u65f6\u73af\u5883\u7248\u672c\njava.vendor         Java \u8fd0\u884c\u65f6\u73af\u5883\u4f9b\u5e94\u5546\njava.vendor.url         Java \u4f9b\u5e94\u5546\u7684 URL\njava.vm.specification.version         Java \u865a\u62df\u673a\u89c4\u8303\u7248\u672c\njava.vm.specification.vendor         Java \u865a\u62df\u673a\u89c4\u8303\u4f9b\u5e94\u5546\njava.vm.specification.name         Java \u865a\u62df\u673a\u89c4\u8303\u540d\u79f0\njava.vm.version         Java \u865a\u62df\u673a\u5b9e\u73b0\u7248\u672c\njava.vm.vendor         Java \u865a\u62df\u673a\u5b9e\u73b0\u4f9b\u5e94\u5546\njava.vm.name         Java \u865a\u62df\u673a\u5b9e\u73b0\u540d\u79f0\njava.specification.version         Java \u8fd0\u884c\u65f6\u73af\u5883\u89c4\u8303\u7248\u672c\njava.specification.vendor         Java \u8fd0\u884c\u65f6\u73af\u5883\u89c4\u8303\u4f9b\u5e94\u5546\njava.specification.name         Java \u8fd0\u884c\u65f6\u73af\u5883\u89c4\u8303\u540d\u79f0\nos.name         \u64cd\u4f5c\u7cfb\u7edf\u7684\u540d\u79f0\nos.arch         \u64cd\u4f5c\u7cfb\u7edf\u7684\u67b6\u6784\nos.version         \u64cd\u4f5c\u7cfb\u7edf\u7684\u7248\u672c\nfile.separator         \u6587\u4ef6\u5206\u9694\u7b26\uff08\u5728 UNIX \u7cfb\u7edf\u4e2d\u662f\u201c / \u201d\uff09\npath.separator         \u8def\u5f84\u5206\u9694\u7b26\uff08\u5728 UNIX \u7cfb\u7edf\u4e2d\u662f\u201c : \u201d\uff09\nline.separator         \u884c\u5206\u9694\u7b26\uff08\u5728 UNIX \u7cfb\u7edf\u4e2d\u662f\u201c /n \u201d\uff09\n\njava.home         Java \u5b89\u88c5\u76ee\u5f55\njava.class.version         Java \u7c7b\u683c\u5f0f\u7248\u672c\u53f7\njava.class.path         Java \u7c7b\u8def\u5f84\njava.library.path          \u52a0\u8f7d\u5e93\u65f6\u641c\u7d22\u7684\u8def\u5f84\u5217\u8868\njava.io.tmpdir         \u9ed8\u8ba4\u7684\u4e34\u65f6\u6587\u4ef6\u8def\u5f84\njava.compiler         \u8981\u4f7f\u7528\u7684 JIT \u7f16\u8bd1\u5668\u7684\u540d\u79f0\njava.ext.dirs         \u4e00\u4e2a\u6216\u591a\u4e2a\u6269\u5c55\u76ee\u5f55\u7684\u8def\u5f84\nuser.name         \u7528\u6237\u7684\u8d26\u6237\u540d\u79f0\nuser.home         \u7528\u6237\u7684\u4e3b\u76ee\u5f55\nuser.dir\n*/\n\n")),(0,r.kt)("h1",{id:"15-\u6570\u636e\u7c7b\u578b"},"15. \u6570\u636e\u7c7b\u578b"),(0,r.kt)("h2",{id:"151-\u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u8303\u56f4"},"15.1. \u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u8303\u56f4"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/qfikh/article/details/52832087"},"https://blog.csdn.net/qfikh/article/details/52832087")),(0,r.kt)("h2",{id:"152-double-\u7c7b\u578b\u7684\u52a0\u51cf\u4e58\u9664"},"15.2. double \u7c7b\u578b\u7684\u52a0\u51cf\u4e58\u9664"),(0,r.kt)("p",null,"float : \u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570, \u5360 4 \u5b57\u8282"),(0,r.kt)("p",null,"double : \u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570 -- \u7f16\u8bd1\u5668\u9ed8\u8ba4\u5c0f\u6570; \u5360\u636e 8 \u5b57\u8282"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'//\u5982\u679c\u4e0d\u58f0\u660e\uff0c\u9ed8\u8ba4\u5c0f\u6570\u4e3adouble\u7c7b\u578b\uff0c\u6240\u4ee5\u5982\u679c\u8981\u7528float\u7684\u8bdd\uff0c\u5fc5\u987b\u8fdb\u884c\u5f3a\u8f6c\n//\u4f8b\u5982\uff1afloat  a=1.3; \u4f1a\u7f16\u8bd1\u62a5\u9519\uff0c\u6b63\u786e\u7684\u5199\u6cd5 float a = (float)1.3;\u6216\u8005float a = 1.3f;\uff08f\u6216F\u90fd\u53ef\u4ee5\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff09\n\npublic class DoubleArith {\n    private static final int DEF_DIV_SCALE = 10;\n    /**\n     * \u4e24\u4e2aDouble\u6570\u76f8\u52a0\n     * @param v1\n     * @param v2\n     * @return Double\n     */\n    public static Double add(Double v1,Double v2){\n        BigDecimal b1 = new BigDecimal(v1.toString());\n        BigDecimal b2 = new BigDecimal(v2.toString());\n        return b1.add(b2).doubleValue();\n    }\n\n    /**\n     * \u4e24\u4e2aDouble\u6570\u76f8\u51cf\n     * @param v1\n     * @param v2\n     * @return Double\n     */\n    public static Double sub(Double v1,Double v2){\n        BigDecimal b1 = new BigDecimal(v1.toString());\n        BigDecimal b2 = new BigDecimal(v2.toString());\n        return b1.subtract(b2).doubleValue();\n    }\n\n    /**\n     * \u4e24\u4e2aDouble\u6570\u76f8\u4e58\n     * @param v1\n     * @param v2\n     * @return Double\n     */\n    public static Double mul(Double v1,Double v2){\n        BigDecimal b1 = new BigDecimal(v1.toString());\n        BigDecimal b2 = new BigDecimal(v2.toString());\n        return b1.multiply(b2).doubleValue();\n    }\n\n    /**\n     * \u4e24\u4e2aDouble\u6570\u76f8\u9664\n     * @param v1\n     * @param v2\n     * @return Double\n     */\n    public static Double div(Double v1,Double v2){\n        BigDecimal b1 = new BigDecimal(v1.toString());\n        BigDecimal b2 = new BigDecimal(v2.toString());\n        return b1.divide(b2,DEF_DIV_SCALE,BigDecimal.ROUND_HALF_UP).doubleValue();\n    }\n\n    /**\n     * \u4e24\u4e2aDouble\u6570\u76f8\u9664\uff0c\u5e76\u4fdd\u7559scale\u4f4d\u5c0f\u6570\n     * @param v1\n     * @param v2\n     * @param scale\n     * @return Double\n     */\n    public static Double div(Double v1,Double v2,int scale){\n        if(scale<0){\n            throw new IllegalArgumentException(\n            "The scale must be a positive integer or zero");\n        }\n        BigDecimal b1 = new BigDecimal(v1.toString());\n        BigDecimal b2 = new BigDecimal(v2.toString());\n        return b1.divide(b2,scale,BigDecimal.ROUND_HALF_UP).doubleValue();\n    }\n\n}\n')),(0,r.kt)("h1",{id:"16-\u63a7\u5236\u53f0\u547d\u4ee4"},"16. \u63a7\u5236\u53f0\u547d\u4ee4"),(0,r.kt)("h2",{id:"161-\u6253-jar-\u5305"},"16.1. \u6253 jar \u5305"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"jar cvf <jar\u6587\u4ef6\u540d> <class\u6587\u4ef6\u6216\u6587\u4ef6\u5939>\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"jar \u5305\u6253\u597d\u540e\uff0c\u8981\u6307\u5b9a\u5165\u53e3\u7c7b \u5373\u66f4\u6539 manifest.mf \u6587\u4ef6 \u683c\u5f0f\uff1aMain-Class: \u5305\u540d.\u7c7b\u540d\uff08\u4e0d\u52a0.class)"),(0,r.kt)("li",{parentName:"ul"},"jar \u5305\u53cc\u51fb\u8fd0\u884c\u53ea\u5bf9\u56fe\u5f62\u754c\u9762\u8d77\u4f5c\u7528"),(0,r.kt)("li",{parentName:"ul"},"\u975e\u56fe\u5f62\u754c\u9762\u8981\u7528 bat \u6587\u4ef6"),(0,r.kt)("li",{parentName:"ul"},"\u5982\u679c\u662f\u4f7f\u7528\u4ed6\u4eba\u7684 jar \u5305\uff0c\u8981\u5148\u8bbe\u7f6e classpath")),(0,r.kt)("h2",{id:"162-\u751f\u6210\u6ce8\u91ca\u6587\u6863-javadoc"},"16.2. \u751f\u6210\u6ce8\u91ca\u6587\u6863 javadoc"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"javadoc -d \u5b58\u653e\u6587\u6863\u7684\u8def\u5f84 java\u7684\u6e90\u6587\u4ef6")),(0,r.kt)("h2",{id:"163-\u7f16\u8bd1\u548c\u53cd\u7f16\u8bd1"},"16.3. \u7f16\u8bd1\u548c\u53cd\u7f16\u8bd1"),(0,r.kt)("p",null,"\u5982\u679c Java \u6587\u4ef6\u542b\u6709\u5305\u3010package\u3011\uff0c\u5219 ",(0,r.kt)("inlineCode",{parentName:"p"},"javac \u2013d . Demo.java"),"-----\u3010.\u3011\u8868\u793a\u5f53\u524d\u8def\u5f84\uff0c\u5373 class \u6587\u4ef6\u8def\u5f84\n\u5fc5\u987b\u52a0\u3010-d\u3011\uff0c\u5426\u5219\u7f16\u8bd1\u51fa\u6765\u6ca1\u6709\u5305\u6587\u4ef6\u5939\u3002"),(0,r.kt)("p",null,"\u8fd0\u884c\u65f6\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"java com.xiaoyu.Demo")),(0,r.kt)("p",null,"\u53cd\u7f16\u8bd1: ",(0,r.kt)("inlineCode",{parentName:"p"},"javap -verbose class\u6587\u4ef6")),(0,r.kt)("h1",{id:"17-\u91cd\u8981\u7684\u5bf9\u8c61"},"17. \u91cd\u8981\u7684\u5bf9\u8c61"),(0,r.kt)("h2",{id:"171-object"},"17.1. Object"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://www.javacoder.cn/?p=274"},"http://www.javacoder.cn/?p=274")),(0,r.kt)("h2",{id:"172-string"},"17.2. String"),(0,r.kt)("h1",{id:"18-\u5b57\u8282\u7801\u7f16\u8f91\u6280\u672f"},"18. \u5b57\u8282\u7801\u7f16\u8f91\u6280\u672f"),(0,r.kt)("h2",{id:"181-javassist"},"18.1. javassist"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/jboss-javassist/javassist"},"https://github.com/jboss-javassist/javassist"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/rickiyang/p/11336268.html"},"https://www.cnblogs.com/rickiyang/p/11336268.html")),(0,r.kt)("h1",{id:"19-\u524d\u6cbf"},"19. \u524d\u6cbf"),(0,r.kt)("h2",{id:"191-graalvm"},"19.1. graalvm"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://zhuanlan.zhihu.com/p/106555993"},"https://zhuanlan.zhihu.com/p/106555993")),(0,r.kt)("h2",{id:"192-vertx"},"19.2. vertx"),(0,r.kt)("h2",{id:"193-micronaut"},"19.3. Micronaut"),(0,r.kt)("h2",{id:"194-quarkus"},"19.4. Quarkus"),(0,r.kt)("h1",{id:"20-\u62fe\u9057"},"20. \u62fe\u9057"),(0,r.kt)("h2",{id:"201-\u6b63\u5219\u8868\u8fbe\u5f0f-regex"},"20.1. \u6b63\u5219\u8868\u8fbe\u5f0f regex"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'private final static Pattern VERSION_PREFIX_PATTERN = Pattern.compile("v(\\\\d+)/");\nMatcher m = VERSION_PREFIX_PATTERN.matcher(httpServletRequest.getRequestURI());\nif(m.find()){\n            Integer version = Integer.valueOf(m.group(1));\n            if(version >= this.apiVersion)\n            {\n                return this;\n            }\n        }\n\n')),(0,r.kt)("h2",{id:"202-\u9759\u6001\u7ed1\u5b9a\u548c\u52a8\u6001\u7ed1\u5b9a"},"20.2. \u9759\u6001\u7ed1\u5b9a\u548c\u52a8\u6001\u7ed1\u5b9a"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://droidyue.com/blog/2014/12/28/static-biding-and-dynamic-binding-in-java/"},"https://droidyue.com/blog/2014/12/28/static-biding-and-dynamic-binding-in-java/")),(0,r.kt)("p",null,"\u52a8\u6001\u7ed1\u5b9a\u662f\u6307\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u9636\u6bb5\u4e0d\u77e5\u9053\u8981\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\uff0c\u76f4\u5230\u8fd0\u884c\u65f6\u624d\u80fd\u786e\u5b9a"),(0,r.kt)("p",null,"\u5982\u679c\u7f16\u8bd1\u5668\u53ef\u4ee5\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u5b8c\u6210\u7ed1\u5b9a\uff0c\u5c31\u53eb\u4f5c\u9759\u6001\u7ed1\u5b9a"),(0,r.kt)("p",null,"\u662f\u5426\u662f\u9759\u6001\u7ed1\u5b9a\u53ef\u4ee5\u53cd\u7f16\u8bd1 class \u6587\u4ef6\u67e5\u770b ",(0,r.kt)("inlineCode",{parentName:"p"},"javap -c <class_name>")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u7ed1\u5b9a\u53d1\u751f\u5728\u7f16\u8bd1\u65f6\u671f\uff0c\u52a8\u6001\u7ed1\u5b9a\u53d1\u751f\u5728\u8fd0\u884c\u65f6"),(0,r.kt)("li",{parentName:"ul"},"\u9759\u6001\u7ed1\u5b9a\u4f7f\u7528\u7c7b\u4fe1\u606f\u6765\u5b8c\u6210\uff0c\u800c\u52a8\u6001\u7ed1\u5b9a\u5219\u9700\u8981\u4f7f\u7528\u5bf9\u8c61\u4fe1\u606f\u6765\u5b8c\u6210\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u65b9\u6cd5\u91cd\u8f7d\u662f\u9759\u6001\u7ed1\u5b9a\uff0c \u65b9\u6cd5\u91cd\u5199\u662f\u52a8\u6001\u7ed1\u5b9a"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528 private \u6216 static \u6216 final \u4fee\u9970\u7684\u53d8\u91cf\u6216\u8005\u65b9\u6cd5\uff0c\u4f7f\u7528\u9759\u6001\u7ed1\u5b9a\u3002\u800c\u865a\u65b9\u6cd5\uff08\u53ef\u4ee5\u88ab\u5b50\u7c7b\u91cd\u5199\u7684\u65b9\u6cd5\uff09\u5219\u4f1a\u6839\u636e\u8fd0\u884c\u65f6\u7684\u5bf9\u8c61\u8fdb\u884c\u52a8\u6001\u7ed1\u5b9a\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u91cd\u8f7d(Overload)\u7684\u65b9\u6cd5\u4f7f\u7528\u9759\u6001\u7ed1\u5b9a\u5b8c\u6210\uff0c\u800c\u91cd\u5199(Override)\u7684\u65b9\u6cd5\u5219\u4f7f\u7528\u52a8\u6001\u7ed1\u5b9a\u5b8c\u6210\u3002")),(0,r.kt)("h2",{id:"203-\u91cd\u8f7d-and-\u91cd\u5199"},"20.3. \u91cd\u8f7d and \u91cd\u5199"),(0,r.kt)("p",null,"\u65b9\u6cd5\u7b7e\u540d: \u65b9\u6cd5\u540d\u79f0+\u65b9\u6cd5\u53c2\u6570 (\u4e0d\u5305\u62ec\u8fd4\u56de\u503c)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u91cd\u8f7d\u5fc5\u987b\u65b9\u6cd5\u7b7e\u540d\u4e0d\u540c"),(0,r.kt)("li",{parentName:"ul"},"\u91cd\u5199\u5fc5\u987b\u65b9\u6cd5\u7b7e\u540d\u76f8\u540c")),(0,r.kt)("h2",{id:"204-java-\u503c\u4f20\u9012-or-\u5f15\u7528\u4f20\u9012"},"20.4. java \u503c\u4f20\u9012 or \u5f15\u7528\u4f20\u9012"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u57fa\u672c\u6570\u636e\u7c7b\u578b, \u662f\u503c\u4f20\u9012 -- \u76f8\u5f53\u4e8e\u5c06\u53c2\u6570\u590d\u5236\u4e86\u4e00\u4efd, \u5bf9\u5f62\u53c2\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u53c2\uff1b"),(0,r.kt)("li",{parentName:"ul"},"\u5f15\u7528\u7c7b\u578b, \u662f\u5f15\u7528\u4f20\u9012 -- \u76f8\u5f53\u4e8e\u4f20\u9012\u7684\u662f\u5185\u5b58\u5730\u5740(\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u590d\u5236\u590d\u6742\u7c7b\u578b\u7684\u5185\u5b58\u8017\u8d39), \u5f62\u53c2\u548c\u5b9e\u53c2\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\uff08\u5373\u5f15\u7528\uff09\uff0c\u6240\u4ee5\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u5b9e\u9645\u7684\u5bf9\u8c61\u3002"),(0,r.kt)("li",{parentName:"ul"},"String, Integer, Double \u7b49 immutable \u7684\u7c7b\u578b\u7279\u6b8a\u5904\u7406\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4f20\u503c\uff0c\u6700\u540e\u7684\u64cd\u4f5c\u4e0d\u4f1a\u4fee\u6539\u5b9e\u53c2\u5bf9\u8c61\u3002")),(0,r.kt)("h2",{id:"205-\u8bbf\u95ee\u4fee\u9970\u7b26-public-protect-default-private"},"20.5. \u8bbf\u95ee\u4fee\u9970\u7b26 public-protect-default-private"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://blog.csdn.net/u012418131/article/details/52822381"},"https://blog.csdn.net/u012418131/article/details/52822381")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n\u4f5c\u7528\u57df\u6709\u56db\u4e2a\u53ef\u8bbf\u95ee\u7ea7\u522b: \u5f53\u524d\u7c7b, \u540c\u5305, \u7ee7\u627f, \u4e0d\u540c\u5305\n\n1. public           \u8303\u56f4\u6700\u5927, \u90fd\u5141\u8bb8\n2. protected        \u8303\u56f4\u5c0f\u4e00\u70b9, \u4e0d\u53ef\u8de8\u5305\u8bbf\u95ee, \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u6253\u7834\n3. default          \u8303\u56f4\u518d\u5c0f\u4e00\u70b9 (package scope),\u4e0d\u53ef\u8de8\u5305\u8bbf\u95ee, \u4e5f\u4e0d\u53ef\u901a\u8fc7\u7ee7\u627f\u8bbf\u95ee , \u53ea\u80fd\u5728\u540c\u5305\u4e0b\u8bbf\u95ee;\n4. private          \u8303\u56f4\u6700\u5c0f, \u53ea\u80fd\u518d\u7c7b\u5185\u90e8\u8bbf\u95ee;\n\n")),(0,r.kt)("h2",{id:"206-getcontextclassloadergetclassloader-\u533a\u522b"},"20.6. getcontextclassloader&getclassloader \u533a\u522b"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u4f7f\u7528 Test.class.getClassLoader()\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u548c\u5f53\u524d\u7ebf\u7a0b\u6240\u8fd0\u884c\u7684\u7c7b\u52a0\u8f7d\u5668\u4e0d\u4e00\u81f4, \u4e00\u822c\u53ea\u80fd\u7528\u5728 getResource"),(0,r.kt)("p",null,"\u6700\u597d\u4f7f\u7528 Thread.currentThread().getContextClassLoader()"),(0,r.kt)("h2",{id:"207-getter-\u548c-setter-\u5b58\u5728\u7684\u610f\u4e49"},"20.7. getter \u548c setter \u5b58\u5728\u7684\u610f\u4e49"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/1568091/why-use-getters-and-setters-accessors"},"https://stackoverflow.com/questions/1568091/why-use-getters-and-setters-accessors")),(0,r.kt)("p",null,"\u66f4\u597d\u7684\u5c01\u88c5\u6027, \u65e0\u6cd5\u76f4\u63a5 access \u6210\u5458\u53d8\u91cf"),(0,r.kt)("p",null,"\u62d3\u5c55\u6027\u597d, \u53ef\u4ee5\u5728\u51fd\u6570\u4e2d\u6dfb\u52a0\u5176\u4ed6\u529f\u80fd"),(0,r.kt)("p",null,"\u65b9\u4fbf\u6253\u65ad\u70b9 debug"),(0,r.kt)("h2",{id:"208-\u4e3a\u4ec0\u4e48-service-\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e5f\u9700\u8981\u4e00\u4e2a\u63a5\u53e3"},"20.8. \u4e3a\u4ec0\u4e48 service \u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u4e5f\u9700\u8981\u4e00\u4e2a\u63a5\u53e3"),(0,r.kt)("p",null,"\u5728\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e00\u4e2a service \u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u7c7b, \u4e3a\u4ec0\u4e48\u8fd8\u8981\u5355\u72ec\u62bd\u51fa\u4e00\u4e2a\u63a5\u53e3\u5462? \u8fd9\u4e2a\u63a5\u53e3\u65f6\u591a\u4f59\u7684\u5417?"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u65b9\u4fbf JAVA \u5e95\u5c42\u7684\u76f8\u5173\u7279\u6027\u5b9e\u73b0\uff0c\u4f8b\u5982\u53cd\u5c04, \u751f\u6210\u4ee3\u7406")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u9762\u5411\u63a5\u53e3\u5f00\u53d1\u7684\u597d\u5904, \u6bd4\u5982 \u53ef\u4ee5\u628a\u63a5\u53e3\u6253\u8fdb\u8c03\u7528\u65b9\u5f00\u53d1\u5305\u63d0\u4f9b\u51fa\u53bb\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u7c7b\u3002\u6240\u4ee5\u8c03\u7528\u5c31\u662f\u7b7e\u540d\u7684\u8c03\u7528, \u63a5\u53e3\u662f\u5426\u5b9e\u73b0\u4e0d\u5f71\u54cd\u8c03\u7528"))),(0,r.kt)("h2",{id:"209-static-\u5173\u952e\u5b57"},"20.9. static \u5173\u952e\u5b57"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/dotgua/p/6354151.html?utm_source=itdadao&utm_medium=referral"},"\u56db\u4e2a\u4f5c\u7528"),"\nsos \u4e0a\u7684\u4e00\u4e2a\u95ee\u9898: ",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/413898/what-does-the-static-keyword-do-in-a-class"},"What does the 'static' keyword do in a class?")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/hf-cherish/p/4970267.html"},"\u9759\u6001\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f")),(0,r.kt)("p",null,"static \u5173\u952e\u5b57\u7684\u4f5c\u7528\u662f\u628a\u7c7b\u7684\u6210\u5458\u53d8\u6210\u7c7b\u76f8\u5173\uff0c\u800c\u4e0d\u662f\u5b9e\u4f8b\u76f8\u5173"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4fee\u9970\u6210\u5458\u53d8\u91cf - \u5185\u5b58\u4f4d\u7f6e\u53d8\u5316: heap(\u5c5e\u4e8e\u5bf9\u8c61, \u5bf9\u8c61\u72ec\u6709) --\x3e method area(\u5c5e\u4e8e class, \u5bf9\u8c61\u516c\u6709)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4fee\u9970\u6210\u5458\u65b9\u6cd5 - \u5185\u5b58\u53d8\u5316: \u6ca1\u6709\u591a\u5927\u7684\u53d8\u5316, \u65b9\u6cd5\u672c\u6765\u5c31\u662f\u5b58\u653e\u5728\u7c7b\u7684\u5b9a\u4e49\u5f53\u4e2d\u7684"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'\u6700\u5927\u7684\u4f5c\u7528\uff0c\u5c31\u662f\u53ef\u4ee5\u4f7f\u7528"\u7c7b\u540d.\u65b9\u6cd5\u540d"\u7684\u65b9\u5f0f\u64cd\u4f5c\u65b9\u6cd5\uff0c\u907f\u514d\u4e86\u5148\u8981 new \u51fa\u5bf9\u8c61\u7684\u7e41\u7410\u548c\u8d44\u6e90\u6d88\u8017.')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4e0d\u8fc7\u5b83\u4e5f\u6709\u4f7f\u7528\u7684\u5c40\u9650\uff0c\u4e00\u4e2a static \u4fee\u9970\u7684\u65b9\u6cd5\u4e2d\uff0c\u4e0d\u80fd\u4f7f\u7528\u975e static \u4fee\u9970\u7684\u6210\u5458\u53d8\u91cf\u548c\u65b9\u6cd5\uff0c\u8fd9\u5f88\u597d\u7406\u89e3\uff0c\u56e0\u4e3a static \u4fee\u9970\u7684\u65b9\u6cd5\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u5982\u679c\u53bb\u76f4\u63a5\u4f7f\u7528\u5bf9\u8c61\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5b83\u4f1a\u4e0d\u77e5\u6240\u63aa\uff08\u4e0d\u77e5\u8be5\u4f7f\u7528\u54ea\u4e00\u4e2a\u5bf9\u8c61\u7684\u5c5e\u6027\uff09\u3002")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u9759\u6001\u5757 - \u521d\u59cb\u5316 static \u4fee\u9970\u7684\u6210\u5458\u65f6\uff0c\u53ef\u4ee5\u5c06\u4ed6\u4eec\u7edf\u4e00\u653e\u5728\u4e00\u4e2a\u4ee5 static \u5f00\u59cb\uff0c\u7528\u82b1\u62ec\u53f7\u5305\u88f9\u8d77\u6765\u7684\u5757\u72b6\u8bed\u53e5\u4e2d. \u9759\u6001\u5757\u548c\u9759\u6001\u6210\u5458\u53d8\u91cf\u6548\u679c\u7b49\u540c"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u52a0\u8f7d\u987a\u5e8f"),(0,r.kt)("p",{parentName:"li"},"1\u3001\uff08\u5982\u679c\u7c7b\u8fd8\u672a\u88ab\u52a0\u8f7d\uff09\u5148\u6267\u884c\u7236\u7c7b\u7684\u9759\u6001\u4ee3\u7801\u5757\u548c\u9759\u6001\u53d8\u91cf\u521d\u59cb\u5316\uff0c\u5e76\u4e14\u9759\u6001\u4ee3\u7801\u5757\u548c\u9759\u6001\u53d8\u91cf\u7684\u6267\u884c\u987a\u5e8f\u53ea\u8ddf\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u6709\u5173\u3002\n2\u3001\uff08\u5982\u679c\u7c7b\u8fd8\u672a\u88ab\u52a0\u8f7d\uff09\u6267\u884c\u5b50\u7c7b\u7684\u9759\u6001\u4ee3\u7801\u5757\u548c\u9759\u6001\u53d8\u91cf\u521d\u59cb\u5316\u3002\n3\u3001\u6267\u884c\u7236\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u521d\u59cb\u5316\n4\u3001\u6267\u884c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\n5\u3001\u6267\u884c\u5b50\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u521d\u59cb\u5316\n6\u3001\u6267\u884c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u9759\u6001\u5bfc\u5305"))),(0,r.kt)("h2",{id:"2010-\u5185\u90e8\u7c7b-or-\u9759\u6001\u5185\u90e8\u7c7b"},"20.10. \u5185\u90e8\u7c7b or \u9759\u6001\u5185\u90e8\u7c7b"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/Gaojiecai/p/4041663.html"},"https://www.cnblogs.com/Gaojiecai/p/4041663.html")),(0,r.kt)("h3",{id:"20101-\u5185\u90e8\u7c7b"},"20.10.1. \u5185\u90e8\u7c7b"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5185\u90e8\u7c7b\uff1a\u5b9a\u4e49\u518d\u7c7b\u5185\u90e8\u7684\u7c7b"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"\u975e\u9759\u6001\u5185\u90e8\u7c7b\u5bf9\u8c61\u6709\u7740\u6307\u5411\u5176\u5916\u90e8\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528"),", \u6240\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"\u5728\u521b\u5efa\u975e\u9759\u6001\u5185\u90e8\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4e00\u5b9a\u8981\u5148\u521b\u5efa\u8d77\u76f8\u5e94\u7684\u5916\u90e8\u7c7b\u5bf9\u8c61"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u4f5c\u7528 - \u5c01\u88c5\u6027"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"\u5185\u90e8\u7c7b\u6210\u5458\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u79c1\u6709\u6570\u636e"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"\u5916\u90e8\u7c7b\u4e0d\u80fd\u8bbf\u95ee\u5185\u90e8\u7c7b\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4f8b\u5982\u5185\u90e8\u7c7b\u7684\u6210\u5458\u53d8\u91cf"))))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7406\u89e3: \u4ec0\u4e48\u662f\u5185\u90e8\uff1f\u5185\u90e8\u5c31\u662f\u6211\u662f\u4f60\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4e86\u89e3\u4f60\uff0c\u6211\u77e5\u9053\u4f60\u7684\u5168\u90e8\uff0c\u6ca1\u6709\u4f60\u5c31\u6ca1\u6709\u6211\u3002\uff08\u6240\u4ee5\u5185\u90e8\u7c7b\u5bf9\u8c61\u662f\u4ee5\u5916\u90e8\u7c7b\u5bf9\u8c61\u5b58\u5728\u4e3a\u524d\u63d0\u7684\uff09")),(0,r.kt)("h3",{id:"20102-\u9759\u6001\u5185\u90e8\u7c7b"},"20.10.2. \u9759\u6001\u5185\u90e8\u7c7b"),(0,r.kt)("p",null,"\u9759\u6001\u5185\u90e8\u7c7b(\u9759\u6001\u5d4c\u5957\u7c7b)\uff1a\u4f7f\u7528 static \u6765\u4fee\u9970\u4e00\u4e2a\u5185\u90e8\u7c7b"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"static InnerClass \u548c OuterClass \u6ca1\u5565\u5173\u7cfb"),", \u5c31\u662f\u4e2a\u72ec\u7acb\u7684 class, \u81ea\u5df1\u53ef\u4ee5\u5b8c\u5168\u72ec\u7acb\u5b58\u5728, \u4e5f\u5c31\u6ca1\u6709\u4e86\u6307\u5411\u5916\u90e8\u7c7b\u7684\u5f15\u7528, \u56e0\u6b64\u4e5f\u5c31\u65e0\u6cd5\u8bbf\u95ee\u5916\u90e8\u7c7b\u7684\u6210\u5458"),(0,r.kt)("p",null,"\u5916\u90e8\u7c7b\u53ef\u4ee5\u8bbf\u95ee static InnerClass \u7684\u6210\u5458"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u7406\u89e3: \u6bd4\u5982\u6709 A\uff0cB \u4e24\u4e2a\u7c7b\uff0cB \u6709\u70b9\u7279\u6b8a\uff0c\u867d\u7136\u53ef\u4ee5\u72ec\u7acb\u5b58\u5728\uff0c\u4f46\u53ea\u88ab A \u4f7f\u7528\u3002\u8fd9\u65f6\u5019\u600e\u4e48\u529e\uff1f\u5982\u679c\u628a B \u5e76\u5165 A \u91cc\uff0c\u590d\u6742\u5ea6\u63d0\u9ad8\uff0c\u641e\u5f97 A \u8fdd\u53cd\u5355\u4e00\u804c\u8d23\u3002\u5982\u679c B \u72ec\u7acb\uff0c\u53c8\u53ef\u80fd\u88ab\u5176\u4ed6\u7c7b\uff08\u6bd4\u5982\u540c\u4e00\u4e2a\u5305\u4e0b\u7684 C\uff09\u4f9d\u8d56\uff0c\u4e0d\u7b26\u5408\u8bbe\u8ba1\u7684\u672c\u610f\u3002\u6240\u4ee5\u4e0d\u5982\u5c06\u5176\u53d8\u6210 A.B\uff0c\u7b49\u4e8e\u6dfb\u52a0\u4e2a\u6ce8\u91ca\uff0c\u544a\u8bc9\u5176\u4ed6\u7c7b\u522b\u4f7f\u7528 B \u4e86\uff0c\u5b83\u53ea\u8ddf A \u73a9\u3002")),(0,r.kt)("h2",{id:"2011-java-\u7c7b\u521d\u59cb\u5316\u987a\u5e8f"},"20.11. Java \u7c7b\u521d\u59cb\u5316\u987a\u5e8f"),(0,r.kt)("p",null,"\u5355\u72ec\u7684\u7c7b:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u9759\u6001\u5c5e\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u9759\u6001\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u666e\u901a\u5c5e\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u666e\u901a\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u6784\u9020\u65b9\u6cd5")),(0,r.kt)("p",null,"\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7236\u7c7b\u9759\u6001\u5c5e\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u7236\u7c7b\u9759\u6001\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u5b50\u7c7b\u9759\u6001\u5c5e\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u5b50\u7c7b\u9759\u6001\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u7236\u7c7b\u666e\u901a\u5c5e\u6027"),(0,r.kt)("li",{parentName:"ol"},"\u7236\u7c7b\u666e\u901a\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u7236\u7c7b\u6784\u9020\u65b9\u6cd5"),(0,r.kt)("li",{parentName:"ol"},"\u5b50\u7c7b\u666e\u901a\u53d8\u91cf"),(0,r.kt)("li",{parentName:"ol"},"\u5b50\u7c7b\u666e\u901a\u4ee3\u7801\u5757"),(0,r.kt)("li",{parentName:"ol"},"\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5")),(0,r.kt)("h2",{id:"2012-random-\u968f\u673a\u6570"},"20.12. Random-\u968f\u673a\u6570"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/yrrAwx/p/7806444.html"},"https://www.cnblogs.com/yrrAwx/p/7806444.html")),(0,r.kt)("h2",{id:"2013-\u4f4d\u8fd0\u7b97"},"20.13. \u4f4d\u8fd0\u7b97"),(0,r.kt)("p",null,"\u5de6\u79fb: \u5de6\u79fb n \u4f4d\u5c31\u662f\u628a\u6700\u9ad8\u4f4d n \u4f4d\u79fb\u51fa\uff0c\u4f4e\u4f4d\u6dfb\u52a0 n \u4e2a 0 \u7684\u64cd\u4f5c\uff0c\u5de6\u79fb\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\u8be5\u6570\u4e58\u4ee5 2^n \u6b21\u65b9\u3002"),(0,r.kt)("p",null,"\u53f3\u79fb: \u53f3\u79fb n \u4f4d\u5c31\u662f\u628a\u4f4e\u4f4d n \u4f4d\u79fb\u51fa\uff0c\u9ad8\u4f4d\u6dfb\u52a0 n \u4e2a 0 \u7684\u64cd\u4f5c\uff0c\u53f3\u79fb\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\u8be5\u6570\u9664\u4ee5 2^n \u6b21\u65b9\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/liaopeng/p/8436155.html"},"https://www.cnblogs.com/liaopeng/p/8436155.html")),(0,r.kt)("h2",{id:"2014-\u4e3a\u4ec0\u4e48\u5305\u540d\u90fd\u5c0f\u5199"},"20.14. \u4e3a\u4ec0\u4e48\u5305\u540d\u90fd\u5c0f\u5199"),(0,r.kt)("p",null,"\u5b9e\u9645\u4e0a, java \u5305\u540d\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684, \u90a3\u4e3a\u4ec0\u4e48\u8fd8\u662f\u8981\u6c42\u90fd\u8981\u5c0f\u5199\u5462"),(0,r.kt)("p",null,"\u662f\u4e3a\u4e86\u8de8\u5e73\u53f0\u7684\u8003\u8651, Linux \u4e2d\u7684\u6587\u4ef6\u540d\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684, \u4f46\u662f windows \u4e2d\u7684\u6587\u4ef6\u540d\u662f\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684, \u9632\u6b62\u5728 Windows \u5e73\u53f0\u51fa\u9519, \u7edf\u4e00\u8981\u6c42\u5c0f\u5199"),(0,r.kt)("h2",{id:"2015-\u5904\u7406-unicode-\u7f16\u7801\u95ee\u9898"},"20.15. \u5904\u7406 unicode \u7f16\u7801\u95ee\u9898"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// \u65b9\u6cd51\npublic class UnicodeUtils {\n\n    /**\n     * \u5b57\u7b26\u4e32\u7f16\u7801\u6210Unicode\u7f16\u7801\n     */\n    public static String encode(String src) throws Exception {\n        char c;\n        StringBuilder str = new StringBuilder();\n        int intAsc;\n        String strHex;\n        for (int i = 0; i < src.length(); i++) {\n            c = src.charAt(i);\n            intAsc = (int) c;\n            strHex = Integer.toHexString(intAsc);\n            if (intAsc > 128)\n                str.append("\\\\u" + strHex);\n            else\n                str.append("\\\\u00" + strHex); // \u4f4e\u4f4d\u5728\u524d\u9762\u886500\n        }\n        return str.toString();\n    }\n\n    /**\n     * Unicode\u89e3\u7801\u6210\u5b57\u7b26\u4e32\n     * @param src\n     * @return\n     */\n    public static String decode(String src) {\n        int t =  src.length() / 6;\n        StringBuilder str = new StringBuilder();\n        for (int i = 0; i < t; i++) {\n            String s = src.substring(i * 6, (i + 1) * 6); // \u6bcf6\u4f4d\u63cf\u8ff0\u4e00\u4e2a\u5b57\u8282\n            // \u9ad8\u4f4d\u9700\u8981\u8865\u4e0a00\u518d\u8f6c\n            String s1 = s.substring(2, 4) + "00";\n            // \u4f4e\u4f4d\u76f4\u63a5\u8f6c\n            String s2 = s.substring(4);\n            // \u5c0616\u8fdb\u5236\u7684string\u8f6c\u4e3aint\n            int n = Integer.valueOf(s1, 16) + Integer.valueOf(s2, 16);\n            // \u5c06int\u8f6c\u6362\u4e3a\u5b57\u7b26\n            char[] chars = Character.toChars(n);\n            str.append(new String(chars));\n        }\n        return str.toString();\n    }\n}\n\n\n// \u65b9\u6cd52\npublic class T {\n    @Test\n    public void te() {\n        String te = "\\\\u97e6\\\\u5c0f\\\\u5b9d";\n        final String result = unicodeDecode(te);\n        System.out.println(result);\n    }\n\n    public static String unicodeDecode(String string) {\n        Pattern pattern = Pattern.compile("(\\\\\\\\u(\\\\p{XDigit}{4}))");\n        Matcher matcher = pattern.matcher(string);\n        char    ch;\n        while (matcher.find()) {\n            ch = (char) Integer.parseInt(matcher.group(2), 16);\n            string = string.replace(matcher.group(1), ch + "");\n        }\n        return string;\n    }\n\n    public static String unicodeEncode(String string) {\n        char[] utfBytes = string.toCharArray();\n        String unicodeBytes = "";\n        for (int i = 0; i < utfBytes.length; i++) {\n            String hexB = Integer.toHexString(utfBytes[i]);\n            if (hexB.length() <= 2) {\n                hexB = "00" + hexB;\n            }\n            unicodeBytes = unicodeBytes + "\\\\u" + hexB;\n        }\n        return unicodeBytes;\n    }\n}\n')),(0,r.kt)("h2",{id:"2016-\u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u518d\u6b21\u8d4b\u503c\u7ed9\u5c40\u90e8\u53d8\u91cf"},"20.16. \u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u518d\u6b21\u8d4b\u503c\u7ed9\u5c40\u90e8\u53d8\u91cf"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.oschina.net/question/2319418_2317139"},"https://www.oschina.net/question/2319418_2317139")),(0,r.kt)("p",null,"\u5927\u4f53\u6765\u8bf4\uff0c\u8fd9\u6837\u5199\u662f\u4e00\u79cd\u6781\u7aef\u7684\u4f18\u5316\uff0c\u5728\u8fd0\u884c\u65f6\uff0c\u5373\u65f6\u7f16\u8bd1\u5668\uff08JIT\uff09\u5c06\u4f1a\u628a\u8fd9\u79cd\u4ee3\u7801\u7f16\u8bd1\u6210\u4e0e\u672c\u5730\u5e73\u53f0\u76f8\u5173\u7684\u673a\u5668\u7801\uff0c\u5e76\u8fdb\u884c\u5404\u79cd\u5c42\u6b21\u7684\u4f18\u5316\uff0c\u4ee5\u63d0\u9ad8\u6027\u80fd\u3002"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"http://mail.openjdk.java.net/pipermail/core-libs-dev/2010-May/004165.html"},"http://mail.openjdk.java.net/pipermail/core-libs-dev/2010-May/004165.html"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/2785964/in-arrayblockingqueue-why-copy-final-member-field-into-local-final-variable"},"https://stackoverflow.com/questions/2785964/in-arrayblockingqueue-why-copy-final-member-field-into-local-final-variable")),(0,r.kt)("h2",{id:"2017-\u4e3a\u4ec0\u4e48\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u4e0d\u7528\u8d4b\u503c\u800c\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c"},"20.17. \u4e3a\u4ec0\u4e48\u5b9a\u4e49\u6210\u5458\u53d8\u91cf\u4e0d\u7528\u8d4b\u503c\u800c\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u8d4b\u503c"),(0,r.kt)("p",null,"\u4efb\u4f55\u53d8\u91cf\u5728C\u8bed\u8a00\u4e2d\u4e0d\u8d4b\u503c\u7684\u8bdd\uff0c\u4f1a\u662f\u4e71\u7801\u7684\u5f62\u5f0f\uff0c\u53ef\u80fd\u6709\u5b89\u5168\u95ee\u9898\u3002\u6240\u4ee5java\u4fee\u6b63\u4e86\u8fd9\u70b9\uff0c\u5bf9\u4e8e\u5c40\u90e8\u53d8\u91cf\u5f3a\u5236\u8ba9\u4f60\u8d4b\u503c"),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48\u6210\u5458\u53d8\u91cf\u6709\u81ea\u5df1\u7684\u521d\u59cb\u503c\uff0c\u800c\u4e0d\u9700\u8981\u5f3a\u5236\u8d4b\u503c\uff0c\u90a3\u662f\u56e0\u4e3anew\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u6784\u9020\u51fd\u6570\u5e2e\u4f60\u521d\u59cb\u5316\u9ed8\u8ba4\u503c\u4e86"),(0,r.kt)("h1",{id:"21-\u5f00\u6e90\u9879\u76ee"},"21. \u5f00\u6e90\u9879\u76ee"),(0,r.kt)("h2",{id:"211-\u535a\u5ba2-cms-\u7cfb\u7edf"},"21.1. \u535a\u5ba2 cms \u7cfb\u7edf"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/halo-dev/halo"},"https://github.com/halo-dev/halo")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/JPressProjects/jpress"},"https://github.com/JPressProjects/jpress")," \u7c7b\u4f3c WordPress"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/gentics/mesh"},"https://github.com/gentics/mesh")),(0,r.kt)("h1",{id:"java-agent"},"java agent"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://mp.weixin.qq.com/s/ArP0CtVZMB2oUYSdjr7RGw"},"https://mp.weixin.qq.com/s/ArP0CtVZMB2oUYSdjr7RGw"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/d47e3aa1cb5c"},"https://www.jianshu.com/p/d47e3aa1cb5c")),(0,r.kt)("p",null,"\u57fa\u672c\u4f7f\u7528"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/rickiyang/p/11368932.html"},"https://www.cnblogs.com/rickiyang/p/11368932.html"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.jianshu.com/p/b72f66da679f"},"https://www.jianshu.com/p/b72f66da679f"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.cnblogs.com/aspirant/p/8796974.html"},"https://www.cnblogs.com/aspirant/p/8796974.html")),(0,r.kt)("p",null,"btrace  ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/btraceio/btrace"},"https://github.com/btraceio/btrace")," \u7ebf\u4e0a\u8c03\u8bd5\u4ee3\u7801\u4e0d\u7528\u91cd\u542f\u9879\u76ee"),(0,r.kt)("p",null,"jrebel  \u70ed\u52a0\u8f7d, \u53ea\u91cd\u65b0\u52a0\u8f7d\u4fee\u6539\u7684 \u7c7b, mybatis xml \u4fee\u6539\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u70ed\u52a0\u8f7d"))}d.isMDXComponent=!0}}]);