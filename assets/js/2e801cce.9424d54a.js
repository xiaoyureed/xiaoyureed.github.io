"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9450],{16029:function(n){n.exports=JSON.parse('{"blogPosts":[{"id":"/2023/04/20/docusaurus-github-pages-blog","metadata":{"permalink":"/2023/04/20/docusaurus-github-pages-blog","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2023-04-20-docusaurus-github-pages-blog/index.md","source":"@site/blog/2023-04-20-docusaurus-github-pages-blog/index.md","title":"\u4f7f\u7528 docusaurus \u548c github pages \u53d1\u5e03\u535a\u5ba2","description":"This article is dedicated to introduce how to establish a blog website by using docusaurus and github pages, and how to auto publish articles by github actions.","date":"2023-04-20T00:00:00.000Z","formattedDate":"2023\u5e744\u670820\u65e5","tags":[{"label":"docusaurus","permalink":"/tags/docusaurus"},{"label":"github pages","permalink":"/tags/github-pages"}],"readingTime":0.9333333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u4f7f\u7528 docusaurus \u548c github pages \u53d1\u5e03\u535a\u5ba2","authors":"me","tags":["docusaurus","github pages"]},"nextItem":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","permalink":"/2023/01/01/food-machine-learning"}},"content":"This article is dedicated to introduce how to establish a blog website by using docusaurus and github pages, and how to auto publish articles by github actions.\\n\\nOfficial website: https://docusaurus.io/\\n\\n\x3c!-- truncate --\x3e\\n\\nDocusaurus \u662f Facebook \u51fa\u54c1\u7684\u4e00\u4e2a\u6587\u6863\u751f\u6210\u5de5\u5177, \u57fa\u4e8e react, \u7b80\u5355\u597d\u7528, \u529f\u80fd\u4e30\u5bcc, \u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\u642d\u5efa\u672c\u7ad9\u70b9\u7684\u8fc7\u7a0b.\\n\\n# \u672c\u5730\u521d\u59cb\u5316\\n\\n\u9996\u5148 `npx create-docusaurus@latest my-website classic --typescript`, \u4f1a\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u7684\u521d\u59cb\u5316\u4ed3\u5e93.\\n\\n\u4fee\u6539 \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 projectName, organizationName, baseUrl ...\\n\\n# \u521b\u5efa github \u8fdc\u7a0b\u4ed3\u5e93\\n\\nCreate a github repository called `<username>.github.io`\\n\\n`git remote add origin xxx`\\n\\n`git push -u origin main`\\n\\n# \u6dfb\u52a0 github actions\\n\\nCreate ci.yml within the path `.github/workflows`\\n\\n```yml\\nname: Build and Deploy\\non:\\n  # Allows you to run this workflow manually from the Actions tab\\n  workflow_dispatch:\\n  push:\\n    branches: \\n      - main\\npermissions:\\n  contents: read\\n  pages: write\\n  id-token: write\\n\\n# Allow one concurrent deployment\\nconcurrency:\\n  group: \\"pages\\"\\n  cancel-in-progress: true\\n\\nenv:\\n  # Hosted GitHub runners have 7 GB of memory available, let\'s use 6 GB\\n  NODE_OPTIONS: --max-old-space-size=6144\\n\\njobs:\\n  build-and-deploy:\\n    #concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout \ud83d\udece\ufe0f\\n        uses: actions/checkout@v3\\n\\n      - name: Set up nodejs\\n        uses: actions/setup-node@v3\\n        with:\\n          node-version: 18.x\\n          cache: yarn\\n      \\n      - name: Install dependencies && build\\n        run: |\\n          yarn install --frozen-lockfile --non-interactive\\n          yarn build\\n\\n      - name: Deploy to github pages \ud83d\ude80\\n        uses: JamesIves/github-pages-deploy-action@v4\\n        with:\\n          folder: build # The folder the action should deploy.\\n          token: ${{secrets.access_token}}\\n          clean: true\\n          branch: gh-pages\\n\\n```"},{"id":"/2023/01/01/food-machine-learning","metadata":{"permalink":"/2023/01/01/food-machine-learning","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2023-01-01-food-machine-learning/index.md","source":"@site/blog/2023-01-01-food-machine-learning/index.md","title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","description":"https://spd.group/machine-learning/machine-learning-and-ai-in-food-industry/","date":"2023-01-01T00:00:00.000Z","formattedDate":"2023\u5e741\u67081\u65e5","tags":[{"label":"food","permalink":"/tags/food"},{"label":"machine learning","permalink":"/tags/machine-learning"}],"readingTime":0.043333333333333335,"hasTruncateMarker":false,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","tags":["food","machine learning"],"authors":"me"},"prevItem":{"title":"\u4f7f\u7528 docusaurus \u548c github pages \u53d1\u5e03\u535a\u5ba2","permalink":"/2023/04/20/docusaurus-github-pages-blog"},"nextItem":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","permalink":"/2022/12/12/writing-tech-doc"}},"content":"https://spd.group/machine-learning/machine-learning-and-ai-in-food-industry/\\n\\nGoogle \u641c\u7d22 \\"food machine learning\\"\\n\\n\u98df\u54c1\u6eaf\u6e90\\n\\n\x3c!-- more --\x3e"},{"id":"/2022/12/12/writing-tech-doc","metadata":{"permalink":"/2022/12/12/writing-tech-doc","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-12-12-writing-tech-doc/index.md","source":"@site/blog/2022-12-12-writing-tech-doc/index.md","title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","description":"https://www.jianshu.com/p/13503e2e7195","date":"2022-12-12T00:00:00.000Z","formattedDate":"2022\u5e7412\u670812\u65e5","tags":[{"label":"writing","permalink":"/tags/writing"}],"readingTime":0.023333333333333334,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","tags":["writing"],"authors":["me"]},"prevItem":{"title":"\u641c\u96c6\u673a\u5668\u5b66\u4e60\u7528\u4e8e\u98df\u54c1\u884c\u4e1a\u7684\u6848\u4f8b","permalink":"/2023/01/01/food-machine-learning"},"nextItem":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","permalink":"/2022/11/10/bt-torrent-download"}},"content":"https://www.jianshu.com/p/13503e2e7195\\n\\n\\n\\nhttps://xie.infoq.cn/article/dda03f839ec34b8b202f4f49e\\n\\nhttps://blog.csdn.net/kid_2412/article/details/106062531\\n\\nhttps://zhuanlan.zhihu.com/p/83661877\\n\\n\x3c!-- truncate --\x3e"},{"id":"/2022/11/10/bt-torrent-download","metadata":{"permalink":"/2022/11/10/bt-torrent-download","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-11-10-bt-torrent-download/index.md","source":"@site/blog/2022-11-10-bt-torrent-download/index.md","title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","description":"https://www.triadprogram.com/bt-download-tool/ bt \u539f\u7406","date":"2022-11-10T00:00:00.000Z","formattedDate":"2022\u5e7411\u670810\u65e5","tags":[{"label":"BT","permalink":"/tags/bt"},{"label":"torrent","permalink":"/tags/torrent"},{"label":"download","permalink":"/tags/download"}],"readingTime":0.02666666666666667,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","tags":["BT","torrent","download"],"authors":["me"]},"prevItem":{"title":"\u600e\u6837\u5199\u597d\u4e00\u7bc7\u53ef\u5b9e\u65bd\u7684\u6280\u672f\u65b9\u6848","permalink":"/2022/12/12/writing-tech-doc"},"nextItem":{"title":"Package Spring Boot & React App Together","permalink":"/spring-boot-react-package-together"}},"content":"https://www.triadprogram.com/bt-download-tool/ bt \u539f\u7406\\n\\nhttps://www.triadprogram.com/aria2-mac/\\n\\n\x3c!-- truncate --\x3e"},{"id":"/spring-boot-react-package-together","metadata":{"permalink":"/spring-boot-react-package-together","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/spring-boot-react-package-together.md","source":"@site/blog/spring-boot-react-package-together.md","title":"Package Spring Boot & React App Together","description":"This article I will try to package a react app into Spring boot app, so that they can share the same port, and make sure that they can communicate with each other.","date":"2022-07-03T00:00:00.000Z","formattedDate":"2022\u5e747\u67083\u65e5","tags":[{"label":"spring","permalink":"/tags/spring"},{"label":"react","permalink":"/tags/react"}],"readingTime":0.19,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Package Spring Boot & React App Together","date":"2022-7-3","tags":["spring","react"],"authors":"me","keywords":["spring","react"]},"prevItem":{"title":"BT torrent \u534f\u8bae\u4ee5\u53ca\u5c1d\u8bd5\u5199\u4e00\u4e2a\u4e0b\u8f7d\u5de5\u5177","permalink":"/2022/11/10/bt-torrent-download"},"nextItem":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","permalink":"/2022/06/11/web-dev-history"}},"content":"This article I will try to package a react app into Spring boot app, so that they can share the same port, and make sure that they can communicate with each other.\\n\\n\x3c!-- truncate --\x3e\\n\\nFirst of all, we have to create a spring boot app and a react app, \\n\\nhttps://www.tisonkun.org/2022/10/22/springboot-nextjs/\\nhttps://zhuanlan.zhihu.com/p/576234428\\n\\nhttps://www.infoq.cn/article/pqahoudgplvp3re73ipt\\n\\nhttps://juejin.cn/post/7148737053927145502\\n\\nhttps://developer.aliyun.com/article/752405\\n\\nhttps://www.google.com/search?q=springboot+react+%E5%85%B1%E7%94%A8%E7%AB%AF%E5%8F%A3&oq=springboot+react+%E5%85%B1%E7%94%A8%E7%AB%AF%E5%8F%A3&aqs=chrome..69i57j69i64.10285j0j7&sourceid=chrome&ie=UTF-8\\n\\nhttps://www.google.com/search?q=springboot+react+%E7%AB%AF%E5%8F%A3%E5%94%AF%E4%B8%80&newwindow=1&sxsrf=APwXEddFQUTH93KDHzgoK8gq1hoebWCR9Q%3A1682523015864&ei=h0NJZMK_NMDmkPIPq5OL-AQ&ved=0ahUKEwiCn7_V7sf-AhVAM0QIHavJAk8Q4dUDCA8&uact=5&oq=springboot+react+%E7%AB%AF%E5%8F%A3%E5%94%AF%E4%B8%80&gs_lcp=Cgxnd3Mtd2l6LXNlcnAQAzIFCAAQogQyBQgAEKIEOggIABCiBBCwAzoECAAQHjoFCCEQoAFKBAhBGAFQ1AZY7D9glkJoAnAAeAKAAbUKiAGfN5IBDTItMS4wLjEuMi4zLjKYAQCgAQHIAQHAAQE&sclient=gws-wiz-serp"},{"id":"/2022/06/11/web-dev-history","metadata":{"permalink":"/2022/06/11/web-dev-history","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-06-11-web-dev-history/index.md","source":"@site/blog/2022-06-11-web-dev-history/index.md","title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","description":"https://www.jianshu.com/p/bec6736dcc3d","date":"2022-06-11T00:00:00.000Z","formattedDate":"2022\u5e746\u670811\u65e5","tags":[{"label":"history","permalink":"/tags/history"},{"label":"web","permalink":"/tags/web"}],"readingTime":0.56,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","tags":["history","web"],"authors":["me"]},"prevItem":{"title":"Package Spring Boot & React App Together","permalink":"/spring-boot-react-package-together"},"nextItem":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","permalink":"/2022/05/04/mobile-technology"}},"content":"https://www.jianshu.com/p/bec6736dcc3d\\n\\nhttps://blog.csdn.net/JavaEETeacher/article/details/6478450\\n\\nhttps://www.bilibili.com/video/BV1qc411W78Q \u67b6\u6784\u7684\u6f14\u8fdb\\n\\nIn this blog I am going to talk about the development history of Java Web \\n\\n\x3c!-- truncate --\x3e\\n\\n# \u524d\u540e\u7aef\u5206\u79bb\\n\\nhttps://github.com/calidion/calidion.github.io/issues/17\\nhttps://blog.csdn.net/shaobingj126/article/details/49420145\\nhttps://www.zhihu.com/question/267014376\\nhttps://www.jianshu.com/p/2a14bb3c7505\\n\\n- \u8bbe\u8ba1\\n\\n    \u540e\u7aef: \u6570\u636e\u5e93, \u4e2d\u95f4\u4ef6, \u7f13\u5b58\\n\\n    \u524d\u7aef:\\n\\n    \u4ea4\u4e92: \u901a\u8fc7 http \u63a5\u53e3, \u5b9a\u4e49\u597d\u6570\u636e\u683c\u5f0f (json)\\n\\n- \u5f00\u53d1 and \u6d4b\u8bd5\\n\\n    \u524d\u540e\u7aef\u540c\u65f6\u72ec\u7acb\u5f00\u53d1\\n\\n    \u524d\u7aef\u53ef\u4ee5\u6682\u65f6\u4ece mock server \u62ff\u8bbe\u8ba1\u9636\u6bb5\u89c4\u5212\u597d\u7684\u6570\u636e\u4f7f\u7528.\\n\\n- \u90e8\u7f72\\n\\n    \u524d\u540e\u7aef\u72ec\u7acb\u90e8\u7f72, \u4e24\u8005\u7684\u7248\u672c\u8981\u4e00\u4e00\u5bf9\u5e94.\\n\\n    Jenkins \u6301\u7eed\u53d1\u5e03\\n\\n# DDD\\n\\ndomain driven design \u9886\u57df\u9a71\u52a8\u5f00\u53d1\\n\\n\u9886\u57df\u9a71\u52a8\u67b6\u6784\uff08DDD\uff09\u5efa\u6a21\u4e2d\u7684\u6a21\u578b\u5230\u5e95\u662f\u4ec0\u4e48\uff1f - dz902\u7684\u56de\u7b54 - \u77e5\u4e4e\\nhttps://www.zhihu.com/question/25089273/answer/233316164\\n\\nhttps://www.cnblogs.com/ealenxie/p/9559781.html - \u5fae\u670d\u52a1 + DDD"},{"id":"/2022/05/04/mobile-technology","metadata":{"permalink":"/2022/05/04/mobile-technology","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2022-05-04-mobile-technology/index.md","source":"@site/blog/2022-05-04-mobile-technology/index.md","title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","description":"https://github.com/didi/DoraemonKit \u79fb\u52a8\u7aef app \u6d4b\u8bd5\u5de5\u5177\u5305","date":"2022-05-04T00:00:00.000Z","formattedDate":"2022\u5e745\u67084\u65e5","tags":[{"label":"mobile","permalink":"/tags/mobile"}],"readingTime":2.8433333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","tags":["mobile"],"authors":"me"},"prevItem":{"title":"Web \u5f00\u53d1\u6a21\u5f0f\u7684\u8fdb\u5316","permalink":"/2022/06/11/web-dev-history"},"nextItem":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","permalink":"/2021/09/20/face-recognition-detection-ocr"}},"content":"https://github.com/didi/DoraemonKit \u79fb\u52a8\u7aef app \u6d4b\u8bd5\u5de5\u5177\u5305\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u79fb\u52a8\u7aef\u9009\u578b\\n\\n## \u539f\u751f native\\n\\n\u5982android\u3001ios\u3001wp\\n\\n\u4f18\u70b9: \u4f53\u9a8c\u6700\u597d, \u529f\u80fd\u6700\u5f3a\\n\\n\u7f3a\u70b9:\\n\\n- \u5f00\u53d1\u6210\u672c\u9ad8, \u65e0\u6cd5\u8de8\u5e73\u53f0\\n\\n- \u4e0a\u7ebf\u65f6\u95f4\u4e0d\u7a33\u5b9a\uff0c\u9700\u8981\u5ba1\u6838\uff0c\u7279\u522b\u662f\u82f9\u679c\u5ba1\u6838\u673a\u5236\uff0c\u5ba1\u6838\u65f6\u95f4\u957f\u77ed\u4e0d\u4e00\uff0c\u5bf9\u5185\u5bb9\u8fd8\u6709\u63a7\u5236\\n\\n\\n## react native\\n\\n\u4f7f\u7528react-native\u53ef\u4ee5\u7ef4\u62a4\u591a\u79cd\u5e73\u53f0\uff08Web\uff0cAndroid\u548cIOS\uff09, \u539f\u7406\u662f\u5c06 js \u8f6c\u4e3a \u5e73\u53f0\u5bf9\u5e94\u7684\u7ec4\u4ef6\\n\\nreact-native\u7684\u4f18\u70b9\uff1a\u4e0d\u7528webview,\u6446\u8131\u4e86webview\u7684\u4ea4\u4e92\u548c\u6027\u80fd\u95ee\u9898\uff1b\u6709\u8f83\u5f3a\u7684\u6269\u5c55\u6027\uff0cjava\u7aef\u63d0\u4f9b\u4e86\u57fa\u7840\u63a7\u4ef6\uff0cjs\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u4f7f\u7528\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7ec4\u5408\u63a7\u4ef6\uff1b\\n\\nreact-native\u7684\u7f3a\u70b9\uff1a\u7ec4\u4ef6\u4e0d\u5168\uff0c\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u4e5f\u4e0d\u5168\uff0c\u9047\u5230\u67d0\u4e9b\u7279\u6b8a\u529f\u80fd\uff0c\u9700\u8981\u82b1\u5927\u529b\u6c14\u5199\uff1b\u6027\u80fd\u65b9\u9762\u4e5f\u65e0\u6cd5\u5ab2\u7f8e\u539f\u751f\uff0c\u8fd8\u662f\u6709\u4e00\u4e9b\u635f\u8017\uff0c\u7279\u522b\u662f\u4ea4\u6362\u5927\u6570\u636e\u65f6\uff1bIOS\u7248\u672c\u7565\u597d\uff0candroi\u53d1\u5c55\u8f83\u6162\uff1bios\u548candroid\u4ee3\u7801\u5e76\u975e\u901a\u7528\uff0c\u6709\u53ef\u80fd\u9700\u8981\u7ef4\u62a4\u4e24\u5957\u4ee3\u7801\u6216\u8005\u5728\u4ee3\u7801\u4e2d\u505a\u4e00\u4e9b\u5224\u65ad\uff1b\u5f00\u53d1\u4eba\u5458\u8fd8\u662f\u9700\u8981\u4f1a\u539f\u751f\u5f00\u53d1\uff0c\u4e0d\u7136\u81ea\u5b9a\u4e49\u7ec4\u4ef6\u65e0\u6cd5\u7f16\u7801\uff1b\\n\\n\u76ee\u524d\u5f97\u5230\u7ecf\u9a8c\u662fIOS\u7248\u672c\u6bd4\u8f83\u7a33\u5b9a\uff0candroid\u7248\u672c\u8fd8\u4e0d\u592a\u6210\u719f\\n\\n## flutter\\n\\n\\n\u5f00\u53d1\u4e00\u5957\u4ee3\u7801\u540c\u65f6\u8fd0\u884c\u5728iOS\u548cAndroid\u5e73\u53f0, \u539f\u7406\u662f\u901a\u8fc7\u7ed8\u56fe\u5f15\u64ce\u76f4\u63a5\u5c06 dart \u7ed8\u5236\u4e3a\u56fe\u5f62, \u7701\u53bb\u4e86 rn \u7684\u8f6c\u6362\u6b65\u9aa4\\n\\n\u751f\u6001\u4e0d\u5b8c\u5584, \u9700\u8981\u81ea\u5df1\u9020\u8f6e\u5b50\\n\\nhttps://www.zhihu.com/question/359468918 \u4e3a\u4ec0\u4e48\u8981\u521b\u9020 dart \u4e0d\u76f4\u63a5\u7528 java?\\n\\n\\n## h5 hybird \u6df7\u5408\u5f00\u53d1\\n\\n\u5373\u6df7\u5408\u5f00\u53d1,\u7531Native\u901a\u8fc7JSBridge\u7b49\u65b9\u6cd5\u63d0\u4f9b\u7edf\u4e00\u7684API,\u7136\u540e\u7528Html5+JS\u6765\u5199\u5b9e\u9645\u7684\u903b\u8f91,\u8c03\u7528API\\n\\n\u6846\u67b6: Ionic\\n\\n\\n\u4f18\u70b9: \\n\\n- \u8c03\u8bd5\u9002\u914d\u7b80\u5355, \u76f4\u63a5\u5728\u7f51\u9875\u4e0a\u8c03\u8bd5\u548c\u4fee\u6539\uff0c\u51e0\u4e4e\u4e0d\u7528\u8003\u8651\u7528\u6237\u673a\u578b\u548c\u9002\u914d\u7684\u95ee\u9898\\n\\n- \u7248\u672c\u5347\u7ea7\u4f18\u52bf\uff0c\u7f51\u9875\u7684\u5347\u7ea7\u4e0e\u7528\u6237\u65e0\u5173\uff0c\u7528\u6237\u65e0\u9700\u4e0b\u8f7d\u66f4\u65b0\u5b89\u88c5, \u66f4\u65b0\u7248\u672c\u65e0\u9700\u5ba1\u6838\\n\\n- \u90e8\u5206\u6027\u80fd\u8981\u6c42\u7684\u9875\u9762\u53ef\u7528\u539f\u751f\u5b9e\u73b0\u8fd9\u5e94\u8be5\u662fHybrid\u6a21\u5f0f\u7684\u6700\u591a\u4e00\u4e2a\u597d\u5904\u4e86,\u56e0\u4e3a\u8fd9\u79cd\u6a21\u5f0f\u662f\u539f\u751f\u6df7\u5408web,\u6240\u4ee5\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5c06\u4ea4\u4e92\u5f3a,\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u9875\u9762\u7528\u539f\u751f\u5199,\u7136\u540e\u4e00\u4e9b\u5176\u5b83\u9875\u9762\u7528JS\u5199,\u5d4c\u5165webview\u4e2d,\u8fbe\u5230\u6700\u4f73\u4f53\u9a8c\\n\\n\u7f3a\u70b9: (\u4e3b\u8981\u662f\u6027\u80fd\u95ee\u9898)\\n\\n- H5\u52a0\u8f7d\u5927\u56fe\u7247\u7684\u65f6\u5019\u6027\u80fd\u4f1a\u4e0b\u964d\\n\\n- \u5927\u91cf\u7528\u6237\u8bbf\u95ee\u540c\u4e00\u4e2aH5\u5e94\u7528\u65f6\u6027\u80fd\u4f1a\u4e0b\u964d\\n\\n- \u4e0d\u9002\u7528\u4e8e\u4ea4\u4e92\u6027\u8f83\u5f3a\u7684app\u8fd9\u79cd\u6a21\u5f0f\u7684\u4e3b\u8981\u5e94\u7528\u662f:\u4e00\u4e9b\u65b0\u95fb\u9605\u8bfb\u7c7b,\u4fe1\u606f\u5c55\u793a\u7c7b\u7684app;\u4f46\u662f\u4e0d\u9002\u7528\u4e8e\u4e00\u4e9b\u4ea4\u4e92\u8f83\u5f3a\u6216\u8005\u6027\u80fd\u8981\u6c42\u8f83\u9ad8\u7684app(\u6bd4\u5982\u52a8\u753b\u8f83\u591a\u5c31\u4e0d\u9002\u5408)\\n\\n## web app\\n\\n\u5373\u79fb\u52a8\u7aef\u7684\u7f51\u7ad9,\u5c06\u9875\u9762\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a,\u7136\u540e\u7528\u6237\u4f7f\u7528\u5404\u5927\u6d4f\u89c8\u5668\u8bbf\u95ee,\u4e0d\u662f\u72ec\u7acbAPP, \u6cdb\u6307 SPA(Single Page Application)\u6a21\u5f0f\u5f00\u53d1\u51fa\u7684\u7f51\u7ad9\\n\\npros (advantage/superiority):\\n\\n- \u5f00\u53d1\u6210\u672c\u4f4e,\u53ef\u4ee5\u8de8\u5e73\u53f0,\u8c03\u8bd5\u65b9\u4fbf\\n\\ncons (disadvantage/weakness):\\n\\n- \u6027\u80fd\u4f4e,\u7528\u6237\u4f53\u9a8c\u5dee, \u529f\u80fd\u53d7\u9650,\u5927\u91cf\u529f\u80fd\u65e0\u6cd5\u5b9e\u73b0\\n- \u4f9d\u8d56\u4e8e\u7f51\u7edc,\u9875\u9762\u8bbf\u95ee\u901f\u5ea6\u6162,\u8017\u8d39\u6d41\u91cf\\n- \u4e34\u65f6\u6027\u5165\u53e3,\u7528\u6237\u7559\u5b58\u7387\u4f4e\u8fd9\u65e2\u662f\u5b83\u7684\u4f18\u70b9,\u4e5f\u662f\u7f3a\u70b9,\u4f18\u70b9\u662f\u65e0\u9700\u5b89\u88c5,\u786e\u5b9a\u662f\u7528\u5b8c\u540e\u6709\u65f6\u5019\u5f88\u96be\u518d\u627e\u5230,\u6216\u8005\u8bf4\u5f88\u96be\u4e13\u95e8\u4e3a\u67d0\u4e2aweb app\u7559\u5b58\u4e00\u4e2a\u5165\u53e3\\n\\n## jetpack"},{"id":"/2021/09/20/face-recognition-detection-ocr","metadata":{"permalink":"/2021/09/20/face-recognition-detection-ocr","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2021-09-20-face-recognition-detection-ocr/index.md","source":"@site/blog/2021-09-20-face-recognition-detection-ocr/index.md","title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","description":"\u672c\u6587\u6536\u96c6\u4e86\u76ee\u524d\u4eba\u8138\u8bc6\u522b\u9886\u57df\u7684\u5f00\u6e90\u65b9\u6848, \u57fa\u4e8e\u8fd9\u4e9b\u5f00\u6e90\u65b9\u6848, \u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u7840 demo","date":"2021-09-20T00:00:00.000Z","formattedDate":"2021\u5e749\u670820\u65e5","tags":[{"label":"face recognition","permalink":"/tags/face-recognition"}],"readingTime":1.78,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","tags":["face recognition"],"authors":["me"]},"prevItem":{"title":"\u79fb\u52a8\u7aef\u6280\u672f\u9009\u578b","permalink":"/2022/05/04/mobile-technology"},"nextItem":{"title":"Best Practice for Spring Boot Working with Docker","permalink":"/spring-boot-with-docker"}},"content":"\u672c\u6587\u6536\u96c6\u4e86\u76ee\u524d\u4eba\u8138\u8bc6\u522b\u9886\u57df\u7684\u5f00\u6e90\u65b9\u6848, \u57fa\u4e8e\u8fd9\u4e9b\u5f00\u6e90\u65b9\u6848, \u5b9e\u73b0\u4e86\u4e00\u4e2a\u57fa\u7840 demo\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u4eba\u8138\u8bc6\u522b\\n\\n## \u6982\u5ff5\\n\\n\u6d41\u7a0b: face detection -> face alignment -> face verification -> face identification\\n\\n\\n- \u4eba\u8138\u68c0\u6d4b/\u8ddf\u8e2a /\u5b9a\u4f4d face detection\\n\\n  \u5728\u56fe\u50cf/\u89c6\u9891\u4e2d\u627e\u5230\u5404\u4e2a\u4eba\u8138\u6240\u5728\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f, \u6846\u51fa\u6765\uff1b\u5bf9\u4e8e\u8ddf\u8e2a\u800c\u8a00\uff0c\u8fd8\u9700\u8981\u786e\u5b9a\u5e27\u95f4\u4e0d\u540c\u4eba\u8138\u95f4\u7684\u5bf9\u5e94\u5173\u7cfb\\n\\n  \u5728OpenCV\u4e2d\u6709\u76f4\u63a5\u80fd\u62ff\u51fa\u6765\u7528\u7684Harr\u5206\u7c7b\u5668\\n\\n- \u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d \\n\\n  \u786e\u5b9a\u8138\u90e8\u7279\u5f81\u70b9\uff08\u773c\u775b\u3001\u5634\u5df4\u4e2d\u5fc3\u70b9\u3001\u773c\u775b\u3001\u5634\u5df4\u8f6e\u5ed3\u7279\u5f81\u70b9\u3001\u5668\u5b98\u8f6e\u5ed3\u7279\u5f81\u70b9\u7b49\uff09\u7684\u4f4d\u7f6e\u3002\u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d\u7684\u57fa\u672c\u601d\u8def\uff0c\u4e3b\u8981\u662f\u5c06\u4eba\u8138\u5c40\u90e8\u5668\u5b98\u7684\u7eb9\u7406\u7279\u5f81\u548c\u5668\u5b98\u7279\u5f81\u70b9\u4e4b\u95f4\u7684\u4f4d\u7f6e\u7ea6\u675f\u8fdb\u884c\u7ed3\u5408\u6765\u8fdb\u884c\u5904\u7406\\n\\n- \u4eba\u8138\u6821\u51c6\uff08face alignment\uff09\\n\\n  \u68c0\u6d4b\u51fa\u4eba\u8138\u7279\u5f81\u70b9\u540e, \u8fdb\u884c\u59ff\u6001\u7684\u6821\u6b63\uff0c\u4f7f\u5176\u4eba\u8138\u5c3d\u53ef\u80fd\u7684\u201d\u6b63\u201d, \u53ef\u4ee5\u63d0\u9ad8\u4eba\u8138\u8bc6\u522b\u7684\u7cbe\u5ea6\\n\\n- \u4eba\u8138\u786e\u8ba4\uff08face verification\uff09\\n\\n  pair matching: \u6bd4\u5bf9\u8f93\u5165\u7684\u4eba\u8138\u548c \u5df2\u6709\u7684\u4eba\u8138\u662f\u5426\u5339\u914d\\n\\n- \u4eba\u8138\u9274\u522b\uff08face identification/recognition\uff09\\n\\n  \u5bf9\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b\u3001\u4eba\u8138\u6821\u6b63\u540e\u7684\u56fe\u50cf\uff08\u4eba\u8138\uff09\u8fdb\u884c\u5206\u7c7b(face grouping)\\n\\n\\n## \u6d3b\u4f53\u68c0\u6d4b\\n\\n\u4e00\u822c\u6709 \u7728\u773c\u68c0\u6d4b, \u5634\u5df4\u5f20/\u95ed\u68c0\u6d4b\\n\\n- \u7728\u773c\u68c0\u6d4b\u65b9\u6cd5\\n\\n  \u6293\u53d6\u6444\u50cf\u5934\u4f20\u6765\u7684\u8fde\u7eed\u5e27, \u4eba\u8138\u7279\u5f81\u70b9\u5b9a\u4f4d,\u67d0\u4e2a\u65f6\u523b\u4e3a\u7741\u773c, \u4e0b\u4e00\u5e27\u4e3a\u95ed\u773c, \u63a5\u7740\u4e3a\u7741\u773c, \u89c6\u4e3a\u4e00\u6b21\u7728\u773c\\n\\n  \u6216\u8005\u53ef\u4ee5\u8003\u8651\u5c06\u8fd9\u4e2a\u95ee\u9898\u5f53\u505a\u56fe\u50cf\u5206\u7c7b\u95ee\u9898\uff0c\u7c7b\u522b\u4e3a\uff1a\u7741\u773c\u548c\u95ed\u773c\u3002\u5148\u901a\u8fc7\u4eba\u8138\u68c0\u6d4b\u6a21\u578b\uff0c\u6bd4\u5982dlib\u3001face_recognition\uff0c\u4ece\u4eba\u8138\u7167\u7247\u4e2d\u88c1\u526a\u51fa\u773c\u90e8\u56fe\u7247\uff0c\u518d\u5bf9\u773c\u90e8\u56fe\u7247\u8fdb\u884c\u5206\u7c7b\u3002\\n\\n\\n## \u5f00\u6e90\u65b9\u6848\\n\\n- https://github.com/ageitgey/face_recognition  \u57fa\u4e8e dlib\\n  - dlib,opencv (https://zhuanlan.zhihu.com/p/79784400) dlib 19.7.0 \u548cface_recognition 1.2.1 ; https://zhuanlan.zhihu.com/p/45827914\\n- https://github.com/deepinsight/insightface MXNet and PyTorch\\n- https://github.com/davidsandberg/facenet Tensorflow\\n- https://github.com/cmusatyalab/openface Torch\\n- https://github.com/justadudewhohacks js \u5e93\\n\\n## \u5982\u4f55\u5b58\u50a8\\n\\n\\nhttps://shentuzhigang.blog.csdn.net/article/details/103793031\\nhttps://blog.csdn.net/xia4215/article/details/113888148\\n\\n## ref\\n\\nhttps://www.cnblogs.com/GarfieldEr007/p/5372345.html\\nhttps://blog.csdn.net/u014696921/article/details/74779798\\nhttps://www.face-rec.org/general-info/\\nhttps://www.zhihu.com/question/64860792/answer/233782977\\n\\n\u57fa\u7840\u5e93\\nhttps://github.com/opencv/opencv\\nhttps://github.com/opencv/opencv_contrib\\nhttp://dlib.net/\\n\\n\\nhttps://ai.arcsoft.com.cn/course/index.html \u516c\u5f00\u8bfe\\n\\nhttps://github.com/ChanChiChoi/awesome-Face_Recognition#face-application \u8bba\u6587\u96c6\\n\\nhttps://github.com/weslynn/AlphaTree-graphic-deep-neural-network \u6750\u6599\\n\\nhttps://viusuangio.github.io/2018/10/08/face_datasets_table/ \u516c\u5f00\u6570\u636e\u96c6\\n\\n\\n## \u4ee3\u7801\u5b9e\u73b0\\n\\nhttps://blog.csdn.net/libo1004/article/details/110874855 base64 \u56fe\u7247 api\\n\\nhttps://blog.csdn.net/weixin_43796192/article/details/90111437 \u56fe\u7247\u4f20\u8f93 \u534f\u8bae\u9009\u62e9 \\nhttps://blog.csdn.net/ymaini/article/details/80645917\\nhttps://blog.csdn.net/sinat_29552923/article/details/70833455"},{"id":"/spring-boot-with-docker","metadata":{"permalink":"/spring-boot-with-docker","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/spring-boot-with-docker/index.md","source":"@site/blog/spring-boot-with-docker/index.md","title":"Best Practice for Spring Boot Working with Docker","description":"This article I will talking about How to package spring boot app into a docker image , and how to optimize the size of the image.","date":"2021-01-01T00:00:00.000Z","formattedDate":"2021\u5e741\u67081\u65e5","tags":[{"label":"spring","permalink":"/tags/spring"},{"label":"docker","permalink":"/tags/docker"}],"readingTime":1.9566666666666668,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Best Practice for Spring Boot Working with Docker","date":"2021-1-1","tags":["spring","docker"],"authors":"me","keywords":["spring","docker"]},"prevItem":{"title":"\u4eba\u8138\u8bc6\u522b\u5f00\u6e90\u65b9\u6848\u8c03\u67e5","permalink":"/2021/09/20/face-recognition-detection-ocr"},"nextItem":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","permalink":"/2019/09/27/web-framework-design"}},"content":"This article I will talking about How to package spring boot app into a docker image , and how to optimize the size of the image.\\n\\n\x3c!-- truncate --\x3e\\n\\n## a basic example\\n\\nFirst of all, let\'s take a look at the simplest dockerfile \\n\\n```dockerfile\\n# \u6700\u597d\u662f\u9009\u62e9jre\u548cslim\u540e\u7f00\u7684\u57fa\u7840\u955c\u50cf\uff0c\u5b83\u540c\u65f6\u5bf9linux\u548cJDK\u505a\u88c1\u526a\uff0c\u80fd\u6700\u5c0f\u5316\u955c\u50cf\u7684\u4f53\u79ef\u800c\u4e0d\u5f71\u54cdjava\u7a0b\u5e8f\u7684\u8fd0\u884c\u6027\u80fd\\n# for java8 we can try openjdk:8-jre-alpine\\nFROM openjdk:11-jre-slim\\n\\nWORKDIR /app\\n\\nARG JAR_FILE=./target/*.jar\\nCOPY ${JAR_FILE} app.jar\\n\\nENTRYPOINT [ \\"java\\", \\"-jar\\", \\"/app/app.jar\\" ]\\n\\n```\\n\\nBut there are several weaknesses:\\n\\n- the container will be started by this user by default: root, there are potential safety risk\\n- the jar file is too fat, which means the image layer is not been handling well, each time we change the code, the image build time may be too long\\n- the basic image is too huge (try to use the jre instead of the jdk)\\n\\n## get a better image layer\\n\\nhttps://github.com/aneasystone/weekly-practice/blob/main/notes/week011-spring-boot-on-docker/README.md\\n\\nWe can unzip the fat jar file, and build image by layer, to get a optimized build time\\n\\n```sh\\n# mkdir target/dependency && cd target/dependency\\n# jar -xf ../*.jar\\n```\\n\\nthen we can get:\\n\\n```\\nexample.jar\\n |\\n +-META-INF\\n |  +-MANIFEST.MF\\n +-org\\n |  +-springframework\\n |     +-boot\\n |        +-loader\\n |           +-<spring boot loader classes>       #  Spring Boot loader \u7528\u4e8e\u542f\u52a8 main class\\n +-BOOT-INF\\n    +-classes\\n    |  +-com\\n    |     +-example\\n    |        +-YourClasses.class\\n    +-lib\\n       +-dependency1.jar\\n       +-dependency2.jar\\n```\\n\\n```dockerfile\\nFROM openjdk:17-jdk-slim-buster\\n\\nRUN addgroup -S spring && adduser -S spring -G spring\\nUSER spring:spring\\n\\nARG DEPENDENCY=target/dependency\\n# \u590d\u5236\u4f9d\u8d56, \u8fd9\u90e8\u5206\u53d8\u52a8\u4e0d\u591a, \u653e\u5728 image \u6700\u5e95\u5c42\\nCOPY ${DEPENDENCY}/BOOT-INF/lib /app/lib\\n# \u4e0b\u9762\u4e24\u5c42\u662f\u5e94\u7528\u7a0b\u5e8f, \u7ecf\u5e38\u53d8\u52a8, \u653e\u5728\u6700\u4e0a\u5c42 (\u8fd9\u6837\u6bcf\u6b21\u91cd\u65b0 build image, \u4f1a\u6700\u5927\u7a0b\u5ea6\u5229\u7528 docker \u955c\u50cf\u7f13\u5b58)\\nCOPY ${DEPENDENCY}/META-INF /app/META-INF\\nCOPY ${DEPENDENCY}/BOOT-INF/classes /app\\n\\n# \u76f4\u63a5\u4f7f\u7528\u4e3b\u7c7b\u6765\u542f\u52a8\u7a0b\u5e8f\u6bd4  Spring Boot loader  \u542f\u52a8\u901f\u5ea6\u66f4\u5feb\u3002\\nENTRYPOINT [\\"java\\", \\"-cp\\", \\"app:app/lib/*\\", \\"com.example.demo.DemoApplication\\"]\\n\\n# \u4e5f\u53ef\u4ee5\u5c06 Spring Boot loader \u62f7\u8d1d\u5230\u5bb9\u5668\u91cc\uff0c\u4f7f\u7528 org.springframework.boot.loader.JarLauncher \u6765\u542f\u52a8\u5e94\u7528\\n# \u6267\u884c java org.springframework.boot.loader.JarLauncher \u542f\u52a8\\n\\n# \u4f7f\u7528 JarLauncher \u542f\u52a8\u5e94\u7528\u7684\u597d\u5904\u662f\u4e0d\u7528\u518d\u786c\u7f16\u7801\u542f\u52a8\u7c7b\uff0c\u5bf9\u4e8e\u4efb\u610f\u7684 Spring Boot \u9879\u76ee\u90fd\u9002\u7528\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u4fdd\u8bc1 classpath \u7684\u52a0\u8f7d\u987a\u5e8f\uff0c\u5728 BOOT-INF \u76ee\u5f55\u4e0b\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a classpath.idx \u6587\u4ef6\uff0cJarLauncher \u5c31\u662f\u7528\u5b83\u6765\u6784\u5efa classpath \u7684\u3002\\n```\\n\\n## modularize the project\\n\\nhttps://sergiomartinrubio.com/articles/build-a-docker-jre-image-with-java-17-and-spring/\\n\\nMaking your project modularized is a great way to reduce the final docker images size\\n\\n> Another way to conduct this action (modularization) is by using [JLink](https://openjdk.org/projects/jigsaw/quick-start#linker)\\n\\n## multi-stage build\\n\\n\\n\\n## try to make the native image\\n\\nThe image size can reduce greatly by using native image, and the other aspects such as the time taken to start, the memory occupied.... Generally speaking, there are so many benefits.\\n\\n## reference materials\\n\\nhttps://github.com/halo-dev/halo  can be taken as a best practice\\n\\nhttps://mritd.com/2022/11/08/java-containerization-guide/ tips for java docker image\\n\\nhttps://hub.docker.com/_/eclipse-temurin/tags?page=1&name=17 the jdk17 base image.\\n\\nhttps://zhuanlan.zhihu.com/p/245645260 tips, which base image we should choose\\n\\nhttps://github.com/GoogleContainerTools/jib maven plugin produced by google to generate docker image.\\n\\n\\n```\\nhttps://www.google.com/search?q=How+to+reduce+JVM+docker+image+size&oq=How+to+reduce+JVM+docker+image+size&aqs=chrome..69i57.680j0j7&sourceid=chrome&ie=UTF-8\\n\\nhttps://www.google.com/search?q=10+best+practices+to+build+a+Java+container+with+Docker&oq=10+best+practices+to+build+a+Java+container+with+Docker&aqs=chrome..69i57.277j0j7&sourceid=chrome&ie=UTF-8\\n```"},{"id":"/2019/09/27/web-framework-design","metadata":{"permalink":"/2019/09/27/web-framework-design","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2019-09-27-web-framework-design/index.md","source":"@site/blog/2019-09-27-web-framework-design/index.md","title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","description":"https://my.oschina.net/huangyong/blog/158380","date":"2019-09-27T00:00:00.000Z","formattedDate":"2019\u5e749\u670827\u65e5","tags":[{"label":"java","permalink":"/tags/java"},{"label":"web design","permalink":"/tags/web-design"}],"readingTime":1.1133333333333333,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","tags":["java","web design"],"authors":"me"},"prevItem":{"title":"Best Practice for Spring Boot Working with Docker","permalink":"/spring-boot-with-docker"},"nextItem":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","permalink":"/2021/11/04/make-database-db"}},"content":"https://my.oschina.net/huangyong/blog/158380\\n\\n\x3c!-- truncate --\x3e\\n\\n\\n\x3c!-- TOC --\x3e\\n\\n- [1. Action](#1-action)\\n- [2. Action\u5206\u53d1\u673a\u5236](#2-action%E5%88%86%E5%8F%91%E6%9C%BA%E5%88%B6)\\n- [3. entity\u5b9e\u4f53](#3-entity%E5%AE%9E%E4%BD%93)\\n- [4. \u6280\u672f\u9009\u578b](#4-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B)\\n- [5. Java\u70ed\u63d2\u62d4](#5-java%E7%83%AD%E6%8F%92%E6%8B%94)\\n\\n\x3c!-- /TOC --\x3e\\n\\n# Action\\n\\n\u7c7b\u6bd4 controller\\n\\n# Action\u5206\u53d1\u673a\u5236\\n\\n\u4f9d\u9760\u552f\u4e00\u7684 Servlet : DispatcherServlet\\n\\n1. \u4ece ServletRequest \u4e2d\u5f97\u5230 request url, \u904d\u5386\u8def\u7531\u5e93\u627e\u5230\u5bf9\u5e94\u7684 Action (\u5305\u62ec Action \u7c7b\u4e0e Action \u65b9\u6cd5)\\n\\n1. \u89e3\u6790 url \u4e2d\u7684\u5360\u4f4d\u7b26, \u5f97\u5230 Action \u65b9\u6cd5\u53c2\u6570\\n\\n1. \u53cd\u5c04\u521b\u5efa Action, \u6267\u884c\u5bf9\u5e94\u65b9\u6cd5, \u5f97\u5230\u8fd4\u56de\u503c (\u8fdb\u4e00\u6b65\u8f6c\u4e3a json/xml, \u6839\u636e\u6ce8\u89e3\u5224\u65ad)\\n\\n# entity\u5b9e\u4f53\\n\\n- \u5b9a\u4e49\u4e00\u4e2a\u9876\u7ea7 Bean \u7c7b \u5b9e\u73b0 \u5e8f\u5217\u5316\u63a5\u53e3, \u63d0\u4f9b hashcode, equals, tostring, toJson, toXml \u65b9\u6cd5, \u4f7f\u7528\u4e86 Apache Commons \u7684  lang \u5305\u6765\u5b9e\u73b0; (\u65e0\u8bba\u662f\u5426 entity \u7c7b, \u90fd\u53ef\u7ee7\u627f\u8fd9\u4e2a\u7c7b\u590d\u7528); \\n\\n- \u6267\u884c SQL \u8bed\u53e5\uff0c\u5c06 ResultSet \u6620\u5c04\u4e3a Map(\u5c24\u5176\u662f\u6267\u884c\u591a\u8868\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u67e5\u8be2\u51fa\u6765\u7684\u5217\u6765\u81ea\u4e8e\u4e0d\u540c\u7684\u8868\uff0c\u800c\u4e14\u6570\u91cf\u5f88\u5927\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u6ca1\u6709\u5fc5\u8981\u518d\u5199\u4e00\u4e2a Entity \u53bb\u6620\u5c04\u4e86\uff0c\u76f4\u63a5\u62ff\u5230\u4e00\u4e2a Map\uff0c\u6700\u540e\u5c06\u5176\u8f6c\u4e3a JSON \u7ed9\u524d\u7aef)\\n\\n# \u6280\u672f\u9009\u578b\\n\\nJUint\uff1a\u7528\u4e8e\u5355\u5143\u6d4b\u8bd5\u3002\\nApache Commons\uff1a\u7528\u4e8e\u63d0\u4f9b\u6700\u57fa\u7840\u7684\u652f\u6301\uff0c\u4f8b\u5982\uff1aLang\u3001Collections\u3001BeanUtils\u3001DBCP\u3001DbUtils \u7b49\u3002\\nLog4J\uff1a\u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u3002\\nJackson\uff1a\u7528\u4e8e\u5904\u7406 JSON \u6570\u636e\u3002\\nCGLib\uff1a\u7528\u4e8e\u52a8\u6001\u4ee3\u7406\u3002\\n\\n# Java\u70ed\u63d2\u62d4\\n\\nTODO\\n\\nhttps://blog.csdn.net/tonyhuang_google_com/article/details/49702291 \u901a\u8fc7 Java spi\\n https://blog.csdn.net/javierhui111/article/details/3830833 \u901a\u8fc7 osgi\\n https://segmentfault.com/q/1010000005736656 \u901a\u8fc7spring\u4f9d\u8d56\u6ce8\u5165"},{"id":"/2021/11/04/make-database-db","metadata":{"permalink":"/2021/11/04/make-database-db","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2021-11-04-make-database-db/index.md","source":"@site/blog/2021-11-04-make-database-db/index.md","title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","description":"https://www.bilibili.com/video/BV1ct411k7jn?p=3","date":"2019-04-06T00:00:00.000Z","formattedDate":"2019\u5e744\u67086\u65e5","tags":[{"label":"database","permalink":"/tags/database"}],"readingTime":0.08333333333333333,"hasTruncateMarker":false,"authors":[],"frontMatter":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","date":"2019-04-06T00:00:00.000Z","tags":["database"],"toc_min_heading_level":2,"toc_max_heading_level":5},"prevItem":{"title":"web \u5f00\u53d1\u6846\u67b6\u8bbe\u8ba1\u6784\u601d","permalink":"/2019/09/27/web-framework-design"},"nextItem":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","permalink":"/2018/05/25/redis-login-limitation"}},"content":"https://www.bilibili.com/video/BV1ct411k7jn?p=3\\nhttps://github.com/aosabook/500lines/tree/master/data-store\\n\\nhttps://www.bilibili.com/video/BV17a411C7Kv/?spm_id_from=333.788.recommend_more_video.0 \u5206\u5e03\u5f0f\u6570\u636e\u5e93\\n\\nhttps://www.bilibili.com/video/BV1Zv411G7ty/?spm_id_from=333.788.recommend_more_video.3\u539f\u7406\\n\\nhttps://www.bilibili.com/video/BV1ct411k7jn?p=3\\n\\nhttps://www.bilibili.com/video/BV1aZ4y1w7Uz#reply4366921730\\n\\nhttps://www.bilibili.com/video/BV16N411X7y8/?spm_id_from=333.788.recommend_more_video.2\\n\\nhttps://www.bilibili.com/video/BV1jS4y1N7QU/?spm_id_from=333.788\\n\\nhttps://zhuanlan.zhihu.com/p/351897096\\nwww.zhihu.com/question/35382593/answer/102269843\\nwww.zhihu.com/question/30803867/answer/1987624954\\nwww.zhihu.com/question/26802517/answer/1234617717\\nhttps://zhuanlan.zhihu.com/p/43411082\\nhttps://www.zhihu.com/question/27677011/answer/240670571\\nhttps://www.zhihu.com/question/36571460/answer/68880015\\nhttps://www.zhihu.com/question/35382593/answer/102269843\\nhttps://zhuanlan.zhihu.com/p/29401694"},{"id":"/2018/05/25/redis-login-limitation","metadata":{"permalink":"/2018/05/25/redis-login-limitation","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2018-05-25-redis-login-limitation/index.md","source":"@site/blog/2018-05-25-redis-login-limitation/index.md","title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","description":"\u6bd4\u5982\u5e0c\u671b\u8fbe\u5230\u7684\u8981\u6c42\u662f\u8fd9\u6837: \u5728 1min \u5185\u767b\u9646\u5f02\u5e38\u6b21\u6570\u8fbe\u52305\u6b21, \u9501\u5b9a\u8be5\u7528\u6237 1h","date":"2018-05-25T00:00:00.000Z","formattedDate":"2018\u5e745\u670825\u65e5","tags":[{"label":"redis","permalink":"/tags/redis"}],"readingTime":2.42,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","tags":["redis"],"authors":["me"]},"prevItem":{"title":"\u6570\u636e\u5e93\u5b9e\u73b0\u8d44\u6599\u68b3\u7406","permalink":"/2021/11/04/make-database-db"},"nextItem":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","permalink":"/2017/02/01/create-my-own-ioc"}},"content":"\u6bd4\u5982\u5e0c\u671b\u8fbe\u5230\u7684\u8981\u6c42\u662f\u8fd9\u6837: \u5728 1min \u5185\u767b\u9646\u5f02\u5e38\u6b21\u6570\u8fbe\u52305\u6b21, \u9501\u5b9a\u8be5\u7528\u6237 1h\\n\\n\u90a3\u4e48\u767b\u9646\u8bf7\u6c42\u7684\u53c2\u6570\u4e2d, \u4f1a\u6709\u4e00\u4e2a\u53c2\u6570\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a user, \u6bd4\u5982 \u90ae\u7bb1/\u624b\u673a\u53f7/userName\\n\\n\u7528\u8fd9\u4e2a\u53c2\u6570\u4f5c\u4e3akey\u5b58\u5165redis, \u5bf9\u5e94\u7684value\u4e3a\u767b\u9646\u9519\u8bef\u7684\u6b21\u6570, string \u7c7b\u578b, \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a 1min. \u5f53\u83b7\u53d6\u5230\u7684 value == \\"4\\" , \u8bf4\u660e\u5f53\u524d\u8bf7\u6c42\u4e3a\u7b2c 5 \u6b21\u767b\u9646\u5f02\u5e38, \u9501\u5b9a.\\n\\n\u6240\u8c13\u7684\u9501\u5b9a, \u5c31\u662f\u5c06\u5bf9\u5e94\u7684value\u8bbe\u7f6e\u4e3a\u67d0\u4e2a\u6807\u8bc6\u7b26, \u6bd4\u5982\\"lock\\", \u5e76\u8bbe\u7f6e\u8fc7\u671f\u65f6\u95f4\u4e3a 1h\\n\\n\\n\x3c!-- truncate --\x3e\\n\\n# \u6838\u5fc3\u4ee3\u7801\\n\\n\u5b9a\u4e49\u4e00\u4e2a\u6ce8\u89e3, \u7528\u6765\u6807\u8bc6\u9700\u8981\u767b\u9646\u6b21\u6570\u6821\u9a8c\u7684\u65b9\u6cd5\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.anno;\\n\\nimport java.lang.annotation.*;\\n\\n@Documented\\n@Target({ElementType.METHOD})\\n@Retention(RetentionPolicy.RUNTIME)\\npublic @interface RedisLimit {\\n    /**\\n     * \u6807\u8bc6\u53c2\u6570\u540d, \u5fc5\u987b\u662f\u8bf7\u6c42\u53c2\u6570\u4e2d\u7684\u4e00\u4e2a\\n     */\\n    String identifier();\\n\\n    /**\\n     * \u5728\u591a\u957f\u65f6\u95f4\u5185\u76d1\u63a7, \u5982\u5e0c\u671b\u5728 60s \u5185\u5c1d\u8bd5\\n     * \u6b21\u6570\u9650\u5236\u4e3a5\u6b21, \u90a3\u4e48 watch=60; unit: s\\n     */\\n    long watch();\\n\\n    /**\\n     * \u9501\u5b9a\u65f6\u957f, unit: s\\n     */\\n    long lock();\\n\\n    /**\\n     * \u9519\u8bef\u7684\u5c1d\u8bd5\u6b21\u6570\\n     */\\n    int times();\\n}\\n\\n```\\n\\n\u7f16\u5199\u5207\u9762, \u5728\u76ee\u6807\u65b9\u6cd5\u524d\u540e\u8fdb\u884c\u6821\u9a8c, \u5904\u7406...\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.aop;\\n\\n@Component\\n@Aspect\\n// Ensure that current advice is outer compared with ControllerAOP\\n// so we can handling login limitation Exception in this aop advice.\\n//@Order(9)\\n@Slf4j\\npublic class RedisLimitAOP {\\n\\n    @Autowired\\n    private StringRedisTemplate stringRedisTemplate;\\n\\n    @Around(\\"@annotation(io.github.xiaoyureed.redispractice.anno.RedisLimit)\\")\\n    public Object handleLimit(ProceedingJoinPoint joinPoint) {\\n        MethodSignature  methodSignature = (MethodSignature) joinPoint.getSignature();\\n        final Method     method          = methodSignature.getMethod();\\n        final RedisLimit redisLimitAnno  = method.getAnnotation(RedisLimit.class);// \u8c8c\u4f3c\u53ef\u4ee5\u76f4\u63a5\u5728\u65b9\u6cd5\u53c2\u6570\u4e2d\u6ce8\u5165 todo\\n\\n        final String identifier = redisLimitAnno.identifier();\\n        final long   watch      = redisLimitAnno.watch();\\n        final int    times      = redisLimitAnno.times();\\n        final long   lock       = redisLimitAnno.lock();\\n        // final ServletRequestAttributes att             = (ServletRequestAttributes) RequestContextHolder.currentRequestAttributes();\\n        // final HttpServletRequest       request         = att.getRequest();\\n        // final String                   identifierValue = request.getParameter(identifier);\\n\\n        String identifierValue = null;\\n        try {\\n            final Object arg           = joinPoint.getArgs()[0];\\n            final Field  declaredField = arg.getClass().getDeclaredField(identifier);\\n            declaredField.setAccessible(true);\\n            identifierValue = (String) declaredField.get(arg);\\n        } catch (NoSuchFieldException e) {\\n            log.error(\\">>> invalid identifier [{}], cannot find this field in request params\\", identifier);\\n        } catch (IllegalAccessException e) {\\n            e.printStackTrace();\\n        }\\n        if (StringUtils.isBlank(identifierValue)) {\\n            log.error(\\">>> the value of RedisLimit.identifier cannot be blank, invalid identifier: {}\\", identifier);\\n        }\\n\\n        // check User locked\\n        final ValueOperations<String, String> ssOps = stringRedisTemplate.opsForValue();\\n        final String                          flag  = ssOps.get(identifierValue);\\n        if (flag != null && \\"lock\\".contentEquals(flag)) {\\n            final BaseResp result = new BaseResp();\\n            result.setErrMsg(\\"user locked\\");\\n            result.setCode(\\"1\\");\\n            return new ResponseEntity<>(result, HttpStatus.OK);\\n        }\\n\\n        ResponseEntity result;\\n        try {\\n            result = (ResponseEntity) joinPoint.proceed();\\n        } catch (Throwable e) {\\n            result = handleLoginException(e, identifierValue, watch, times, lock);\\n        }\\n        return result;\\n    }\\n\\n    private ResponseEntity handleLoginException(Throwable e, String identifierValue, long watch, int times, long lock) {\\n        final BaseResp result = new BaseResp();\\n        result.setCode(\\"1\\");\\n        if (e instanceof LoginException) {\\n            log.info(\\">>> handle login exception...\\");\\n            final ValueOperations<String, String> ssOps = stringRedisTemplate.opsForValue();\\n            Boolean                               exist = stringRedisTemplate.hasKey(identifierValue);\\n            // key doesn\'t exist, so it is the first login failure\\n            if (exist == null || !exist) {\\n                ssOps.set(identifierValue, \\"1\\", watch, TimeUnit.SECONDS);\\n                result.setErrMsg(e.getMessage());\\n                return new ResponseEntity<>(result, HttpStatus.OK);\\n            }\\n\\n            String count = ssOps.get(identifierValue);\\n            // has been reached the limitation\\n            if (Integer.parseInt(count) + 1 == times) {\\n                log.info(\\">>> [{}] has been reached the limitation and will be locked for {}s\\", identifierValue, lock);\\n                ssOps.set(identifierValue, \\"lock\\", lock, TimeUnit.SECONDS);\\n                result.setErrMsg(\\"user locked\\");\\n                return new ResponseEntity<>(result, HttpStatus.OK);\\n            }\\n            ssOps.increment(identifierValue);\\n            result.setErrMsg(e.getMessage() + \\"; you have try \\" + ssOps.get(identifierValue) + \\"times.\\");\\n        }\\n        log.error(\\">>> RedisLimitAOP cannot handle {}\\", e.getClass().getName());\\n        return new ResponseEntity<>(result, HttpStatus.OK);\\n    }\\n}\\n\\n```\\n\\n\u8fd9\u6837\u4f7f\u7528:\\n\\n```java\\npackage io.github.xiaoyureed.redispractice.web;\\n\\n@RestController\\npublic class SessionResources {\\n\\n    @Autowired\\n    private SessionService sessionService;\\n\\n    /**\\n     * 1 min \u4e4b\u5185\u5c1d\u8bd5\u8d85\u8fc75\u6b21, \u9501\u5b9a user 1h\\n     */\\n    @RedisLimit(identifier = \\"name\\", watch = 30, times = 5, lock = 10)\\n    @RequestMapping(value = \\"/session\\", method = RequestMethod.POST)\\n    public ResponseEntity<LoginResp> login(@Validated @RequestBody LoginReq req) {\\n        return new ResponseEntity<>(sessionService.login(req), HttpStatus.OK);\\n    }\\n}\\n\\n```\\n\\n# references\\n\\nhttps://github.com/xiaoyureed/redis-login-limitation"},{"id":"/2017/02/01/create-my-own-ioc","metadata":{"permalink":"/2017/02/01/create-my-own-ioc","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2017-02-01-create-my-own-ioc/index.md","source":"@site/blog/2017-02-01-create-my-own-ioc/index.md","title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","description":"\u5b9a\u4e49\u5bb9\u5668\u63a5\u53e3\u89c4\u8303, \u6709\u6ce8\u518c, \u83b7\u53d6\u7b49\u51e0\u4e2a\u65b9\u6cd5","date":"2017-02-01T00:00:00.000Z","formattedDate":"2017\u5e742\u67081\u65e5","tags":[{"label":"ioc","permalink":"/tags/ioc"}],"readingTime":3.29,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","tags":["ioc"],"authors":["me"]},"prevItem":{"title":"\u5229\u7528 Redis \u505a\u767b\u5f55\u6b21\u6570\u9650\u5236","permalink":"/2018/05/25/redis-login-limitation"},"nextItem":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","permalink":"/2016/04/09/toss-about-raspberrypi"}},"content":"\u5b9a\u4e49\u5bb9\u5668\u63a5\u53e3\u89c4\u8303, \u6709\u6ce8\u518c, \u83b7\u53d6\u7b49\u51e0\u4e2a\u65b9\u6cd5\\n\\n```java\\n/**\\n * container \u63a5\u53e3(\u6dfb\u52a0/\u79fb\u9664/\u83b7\u53d6)\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53485:00:34\\n */\\npublic interface Container {\\n\\n    /**\\n     * \u521d\u59cb\u5316\\n     * @param clazzSet \\n     */\\n    void register(String packageName);\\n    \\n    /**\\n     * \u8c8c\u4f3c\u6682\u65f6\u7528\u4e0d\u5230\\n     */\\n//    void remove();\\n    \\n    /**\\n     * \u6839\u636e class \u83b7\u53d6 bean\\n     * @param clazz\\n     * @return\\n     */\\n    <T> T getByType(Class<T> clazz);\\n    \\n    /**\\n     * \\n     * @param name\\n     * @return\\n     */\\n    <T> T getByName(String name);\\n}\\n\\n```\\n\\n\x3c!-- truncate --\x3e\\n\\n\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\\n\\n```java\\n/**\\n * default container\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u534811:20:02\\n */\\npublic class DefaultContainer implements Container {\\n    \\n    private static final Logger log = LoggerFactory.getLogger(DefaultContainer.class);\\n    \\n    /**\\n     * store beans\\n     * \\n     * key -- value\\n     * beanSimpleName -- bean\\n     */\\n    Map<String, Object> beanMap = new ConcurrentHashMap<String, Object>();\\n    \\n    /**\\n     * store dependencies, key: \u6ce8\u5165\u5173\u7cfb, value: bean\'s name(beansMap\u7684key)\\n     * \\n     * key--value\\n     * beanSimpleName.fieldName--beanSimpleName\\n     */\\n    Map<String, String> relationMap = new ConcurrentHashMap<String, String>();\\n    \\n    /////////////// \u5355\u4f8b start //////////////////////////\\n        \\n    private DefaultContainer() {\\n    }\\n    private static class DefaultContainerHolder {\\n    private static final DefaultContainer instance = new DefaultContainer();\\n    }\\n    public static DefaultContainer me() {\\n    return DefaultContainer.DefaultContainerHolder.instance;\\n    }\\n    //////////////////end//////////////////////\\n    \\n\\n    @SuppressWarnings(\\"unchecked\\")\\n    public <T> T getByType(Class<T> clazz) {\\n        Bean beanAnno = clazz.getAnnotation(Bean.class);\\n        if (beanAnno != null\\n                && StringUtil.isValid(beanAnno.value())) {// use specified beanName\\n            String specifiedName = beanAnno.value();\\n            log.debug(\\"class [{}]\u6307\u5b9a\u4e86\u6709\u6548beanName[{}]\\", clazz.getName(), specifiedName);\\n            return (T) this.beanMap.get(specifiedName);\\n        }\\n        else {// use beanSimpleName\\n            String simpleName = clazz.getSimpleName();\\n            log.debug(\\"class [{}]\u6ca1\u6307\u5b9a\u6709\u6548\u7684beanName, \u4f7f\u7528\u9ed8\u8ba4\u503c(simple bean name)\\", clazz.getName());\\n            return (T) this.beanMap.get(simpleName);\\n        }\\n    }\\n    \\n    @SuppressWarnings(\\"unchecked\\")\\n    public <T> T getByName(String name) {\\n        return (T) this.beanMap.get(name);\\n    }\\n\\n    public void register(String packageName) {\\n        \\n        Set<Class<?>> clazzSet = scanPackage(packageName);  \\n        \\n        init(clazzSet);\\n        \\n        inject();\\n    }\\n\\n    /**\\n     * \u6ce8\u5165\\n     */\\n    private void inject() {\\n        Iterator<Entry<String, String>> ite = relationMap.entrySet().iterator();\\n        while(ite.hasNext()) {\\n            Entry<String, String> next = ite.next();\\n            String value = next.getValue();\\n            String key = next.getKey();\\n            String[] split = key.split(\\"\\\\\\\\.\\");\\n            try {\\n                PropertyUtils.setProperty(this.beanMap.get(split[0]), split[1], this.beanMap.get(value));\\n            } catch (IllegalAccessException e) {\\n                e.printStackTrace();\\n            } catch (InvocationTargetException e) {\\n                e.printStackTrace();\\n            } catch (NoSuchMethodException e) {\\n                e.printStackTrace();\\n            }\\n        }\\n    }\\n\\n\\n    /**\\n     * \u521b\u5efabean\u5b9e\u4f8b, \u521b\u5efa\u6ce8\u5165\u5173\u7cfb\\n     * (\u4e5f\u5c31\u662f\u586b\u5145\u4e24\u4e2amap)\\n     * @param clazzSet\\n     */\\n    private void init(Set<Class<?>> clazzSet) {\\n        \\n        Iterator<Class<?>> ite = clazzSet.iterator();\\n        while(ite.hasNext()) {\\n            Class<?> clazz = ite.next();\\n            Object bean = null;\\n            try {\\n                bean = ReflectUtil.createInstance(clazz);\\n            } catch (Exception e) {\\n                log.error(\\"\u521b\u5efabean[{}]\u51fa\u73b0\u95ee\u9898\\", clazz.getName(), e);\\n            }\\n            \\n            String specName = clazz.getAnnotation(Bean.class).value();\\n            if (StringUtil.isValid(specName)) {\\n                this.beanMap.put(specName, bean);\\n            }\\n            // \u6ca1\u6709\u6307\u5b9abeanname, \u4f7f\u7528bean \u7684 qualifiedName \u6ce8\u518c\\n            else {\\n                this.beanMap.put(clazz.getName(), bean);\\n            }\\n            \\n            // \u521d\u59cb\u5316 relationMap\\n            Field[] fields = clazz.getDeclaredFields();\\n            for (Field f: fields) {\\n                Inject injectAnno = f.getAnnotation(Inject.class);\\n                if (injectAnno != null) {\\n                    // \u6307\u5b9a\u4e86\u6ce8\u5165\u7684name\\n                    if (StringUtil.isValid(injectAnno.value())) {\\n//                        this.relationMap.put(clazz.getName().concat(\\".\\").concat(f.getName()), injectAnno.value());\\n                        this.relationMap.put(specName.concat(\\".\\").concat(f.getName()), injectAnno.value());\\n                    }\\n                    // \u6ca1\u6709\u6307\u5b9ainjection name\\n                    else {\\n                        \\n//                        this.relationMap.put(clazz.getName() + \\".\\" + f.getName(), f.getName());\\n                        this.relationMap.put(specName + \\".\\" + f.getName(), f.getName());\\n                    }\\n                }\\n            }\\n            \\n        }\\n        \\n        \\n    }\\n    /**\\n     * \u626b\u63cf\u6240\u6709class\\n     * @param packageName\\n     * @return\\n     */\\n    private Set<Class<?>> scanPackage(String packageName) {\\n        Set<Class<?>> result = new LinkedHashSet<Class<?>>();\\n        \\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\\n        // classpath \u4e0b\u6240\u6709\u7684\u8d44\u6e90\u6587\u4ef6\\n        Enumeration<URL> urls = null;\\n        try {\\n            urls = classLoader.getResources(packageName.replace(\\".\\", \\"/\\"));\\n        } catch (IOException e) {\\n            e.printStackTrace();\\n        }\\n        \\n        while (urls.hasMoreElements()) {\\n            URL url = urls.nextElement();\\n            String protocol = url.getProtocol();\\n            \\n            // \u6587\u672c\u4e2d\u7684 class\\n            if (\\"file\\".equals(protocol)) {\\n                try {\\n                    File packageFile = new File(URLDecoder.decode(url.getFile(), \\"UTF-8\\"));\\n                    \\n                    if (!packageFile.exists()\\n                            || !packageFile.isDirectory()) {\\n                        log.error(\\"package: [{}]\u65e0\u6548\\", url.getFile());\\n                    }\\n                    \\n                    File[] files = packageFile.listFiles();\\n                    \\n                    handleFiles(files, result, classLoader, packageName);\\n                    \\n                } catch (UnsupportedEncodingException e) {\\n                    e.printStackTrace();\\n                }\\n            }\\n            // jar \u4e2d\u7684 class\\n            else if (\\"jar\\".equals(protocol)) {\\n                JarURLConnection jarConn;\\n                try {\\n                    jarConn = (JarURLConnection) url.openConnection();\\n                    JarFile jarFile = jarConn.getJarFile();\\n                    Enumeration<JarEntry> jarEntry = jarFile.entries();\\n                    // TODO\\n//                    handleJarFile();\\n                } catch (IOException e) {\\n                    // TODO Auto-generated catch block\\n                    e.printStackTrace();\\n                }\\n                \\n            }\\n            else {\\n                log.error(\\"\u83b7\u53d6package\u4e0b\u8d44\u6e90\u7684protocal\u51fa\u9519.\\");\\n            }\\n        }\\n     \\n        \\n        return result;\\n    }\\n    \\n    private void handleFiles(File[] files, Set<Class<?>> result, ClassLoader classLoader, String packageName) {\\n        for (File f: files) {\\n            // it\'s a folder, \u9012\u5f52\\n            if (f.isDirectory()) {\\n                handleFiles(f.listFiles(), result, classLoader, packageName);\\n            }\\n            // \u662f\u6587\u4ef6\\n            else {\\n                try {\\n                    Class<?> clazz = classLoader.loadClass(packageName + \\".\\" + f.getName().substring(0, f.getName().lastIndexOf(\\".\\")));\\n                    // \u88ab @Bean \u6ce8\u89e3\u624d\u626b\u63cf\\n                    Bean beanAnno = clazz.getAnnotation(Bean.class);\\n                    if (beanAnno != null) {\\n                        /*// specified name\\n                        if (StringUtil.isValid(beanAnno.value()) {\\n                            \\n                        }\\n                        // \u9ed8\u8ba4, \u4f7f\u7528 bean \u7684 SimpleName \\n                        else {\\n                            \\n                        }*/\\n                        result.add(clazz);\\n                    }\\n                } catch (ClassNotFoundException e) {\\n                    log.error(\\"\u626b\u63cf\u6587\u4ef6[{}]\u53d1\u751f\u9519\u8bef\\", f.getPath(), e);\\n//                    e.printStackTrace();\\n                }\\n            }\\n        }\\n        \\n    }\\n    \\n}\\n```\\n\\n\u5f53\u7136, \u8fd8\u9700\u8981\u6700\u5c11\u4e24\u4e2a\u6ce8\u89e3. \u9996\u5148\u662f@bean, \u6807\u8bc6\u7eb3\u5165container\\n\\n```java\\n/**\\n * put into the Ioc container\\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53487:48:17\\n */\\n@Documented\\n@Retention(RetentionPolicy.RUNTIME)\\n@Target({ElementType.TYPE})\\npublic @interface Bean {\\n\\n    String value() default \\"\\";\\n}\\n```\\n\\n\u7136\u540e\u662f@inject, \u4f9d\u8d56\u6ce8\u5165\u65f6\u5019\u7528:\\n\\n```java\\n\\n/**\\n * inject resources into \\n *\\n * @version 0.1\\n * @author xy\\n * @date 2018\u5e746\u67085\u65e5 \u4e0b\u53487:53:21\\n */\\n@Documented\\n@Retention(RetentionPolicy.RUNTIME)\\n@Target({ElementType.FIELD})\\npublic @interface Inject {\\n\\n    String value();\\n}\\n\\n```\\n\\n# \u6d4b\u8bd5\\n\\n\u5148\u5b9a\u4e49bean\\n\\n```java\\n@Bean(\\"son\\")\\npublic class Son {\\n\\n}\\n\\n@Bean(\\"mama\\")\\n@Data// \u9700\u8981\u5f15\u5165lombok\\npublic class Mama {\\n\\n    @Inject(\\"son\\")\\n    private Son son;\\n    \\n    // lombok \u63d0\u4f9b getter\\n}\\n```\\n\\n\u4f7f\u7528:\\n\\n```java\\npublic class DefaultContainerTest {\\n\\n    @Test\\n    public void testDefaultContainer() {\\n        DefaultContainer container = DefaultContainer.me();\\n        container.register(\\"com.xiaoyu.ioc.bean\\");\\n        Object oMama = container.getByName(\\"mama\\");\\n        System.out.println(oMama);\\n    }\\n}\\n```"},{"id":"/2016/04/09/toss-about-raspberrypi","metadata":{"permalink":"/2016/04/09/toss-about-raspberrypi","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2016-04-09-toss-about-raspberrypi/index.md","source":"@site/blog/2016-04-09-toss-about-raspberrypi/index.md","title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","description":"\u51e0\u4e2a\u6708\u524d\u6211\u4e70\u4e86\u4e00\u4e2a\u6811\u8393\u6d3e, \u65b0\u9c9c\u52b2\u513f\u53bb\u4e86\u5c31\u4e00\u76f4\u5728\u5403\u7070, \u6700\u8fd1\u95f2\u4e0b\u6765 \u60f3\u628a\u5b83\u6253\u9020\u6210\u4e00\u4e2a\u5c0f\u670d\u52a1\u5668, \u8dd1\u4e00\u8dd1\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801, \u90a3\u4e48, \u8bf4\u5e72\u5c31\u5e72.","date":"2016-04-09T00:00:00.000Z","formattedDate":"2016\u5e744\u67089\u65e5","tags":[{"label":"raspberrypi","permalink":"/tags/raspberrypi"}],"readingTime":4.723333333333334,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","tags":["raspberrypi"],"authors":"me"},"prevItem":{"title":"\u9020\u4e2a\u5c0f\u8f6e\u5b50 My IOC","permalink":"/2017/02/01/create-my-own-ioc"},"nextItem":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","permalink":"/2015/10/04/class-conflict-check"}},"content":"\u51e0\u4e2a\u6708\u524d\u6211\u4e70\u4e86\u4e00\u4e2a\u6811\u8393\u6d3e, \u65b0\u9c9c\u52b2\u513f\u53bb\u4e86\u5c31\u4e00\u76f4\u5728\u5403\u7070, \u6700\u8fd1\u95f2\u4e0b\u6765 \u60f3\u628a\u5b83\u6253\u9020\u6210\u4e00\u4e2a\u5c0f\u670d\u52a1\u5668, \u8dd1\u4e00\u8dd1\u4e00\u4e9b\u4e71\u4e03\u516b\u7cdf\u7684\u4ee3\u7801, \u90a3\u4e48, \u8bf4\u5e72\u5c31\u5e72.\\n\\n\u7f51\u7edc\uff1a\u7535\u4fe11000M\u5bbd\u5e26\\n\u8f6f\u8def\u7531\uff1aJ4125\u56db\u53e3\u5de5\u63a7\u4e3b\u673a\\n\u8f6f\u8def\u7531\u7cfb\u7edf\uff1aUnraid\u4e28OpenWrt \u4e28iKuai\\n\u4ea4\u6362\u673a\uff1a\u7f51\u4ef68\u53e3\u5343\u5146\u4ea4\u6362\u673a GS308\\n\u786c\u8def\u7531\uff1a\u5c0f\u7c73AX3600\u4e28\u534e\u7855RT-AC86U \u4e28 NewWfi-3\\n\u53f0\u5f0f\u673a\uff1a\u9ed1\u679c+Windows10 \u53cc\u7cfb\u7edf\u7ec4\u88c5\u673a \u4e28M1 Mac mini\\n\u7b14\u8bb0\u672c\uff1a MacBook Pro 2015\u4e28 MacBook Pro 2019\u4e28 Mac Mini M1\\n\u5e73\u677f\uff1aIpad Air\\n\u8f6f\u4ef6\uff1aFinal Cut Pro\u4e28 \u526a\u6620\u4e13\u4e1a\u7248\u4e28 PR\\n\u952e\u76d8\uff1aFILCO 108 \u7ea2\u8f74 \u4e28AkkO 3098 \u84dd\u8f74 \u4e28 Keychron K2\u4e28 \u73c2\u829d K75\\n\u76f8\u673a\uff1aSONY a6300 \u4e28\u4f73\u80fd G7X mark III\\n\u624b\u673a\uff1aiPhone 13 Pro \u4e28iPhone 13 Mini\\n\u76f8\u673a\u955c\u5934\uff1a\u7d22\u5c3c16-50mm\u72d7\u5934\u4e28\u9002\u9a6c30mm F1.4\\n\u8bdd\u7b52\uff1a\u731b\u72b8\u65e0\u7ebf\u9ea6\u514b\u98ce\\n\u79fb\u52a8\u786c\u76d8\uff1a\u4e1c\u829d 4T\u4e28\u5965\u777f\u79d1M.2\u79fb\u52a8\u786c\u76d8\u76d2+256\u786c\u76d8\u4e28 \u96f7\u7535 3 \u6269\u5c55\u575e + SN550\\nU\u76d8\uff1a\u95ea\u8fea64G*3\\nNAS\uff1aDS218 Play 4T*2\\n\\n\x3c!--truncate--\x3e\\n\\n\\n## \u5b89\u88c5 Ubuntu server\\n\\n```sh\\n\\nversion: 2\\nethernets:\\n  eth0:\\n    dhcp4: true\\n    optional: true\\n#wifis:\\n#  wlan0:\\n#    dhcp4: true\\n#    optional: true\\n#    access-points:\\n#      myhomewifi:\\n#        password: \\"S3kr1t\\"\\n#      myworkwifi:\\n#        password: \\"correct battery horse staple\\"\\n#      workssid:\\n#        auth:\\n#          key-management: eap\\n#          method: peap\\n#          identity: \\"me@example.com\\"\\n#          password: \\"passw0rd\\"\\n#          ca-certificate: /etc/my_ca.pem\\nwifis:\\n  wlan0:\\n    dhcp4: true\\n    optional: true\\n    access-points:\\n      CMCC-2EE8-5G:\\n        password: \\"ezVL7XjF\\"\\n```\\n\\n## \u914d\u7f6e raspberry pi\\n\\n\u6211\u4e4b\u524d\u521a\u4e70\u56de\u6765\u6811\u8393\u6d3e\u5c31\u914d\u7f6e\u597d\u4e86, \u4e3a\u4e86\u4fdd\u6301\u6587\u7ae0\u7684\u5b8c\u6574\u6027, \u8fd8\u662f\u8bb0\u5f55\u4e00\u4e0b\u914d\u7f6e\u8fc7\u7a0b\\n\\n```sh\\n# raspberry \u9ed8\u8ba4 user \u662f pi/raspberry\\n# \u5982\u679c\u662f Ubuntu \u7cfb\u7edf, \u5219\u662f ubuntu/ubuntu (\u767b\u5165\u540e\u9700\u8981\u4fee\u6539\u5bc6\u7801)\\n\\n\\n# \u8054\u7f51\\n# \u5148\u63d2\u6709\u7ebf, \u5b89\u88c5 iw, ifconfig, iwconfig \u8fd9\u4e9b\u5de5\u5177\\nsudo iwconfig # wlan0 \u65e0\u7ebf\u7f51\u5361\u662f\u5426\u5b58\u5728\\nifconfig wlan0 up # \u542f\u52a8\\nip link set wlan0 up # \u542f\u52a8\\niw dev wlan0 scan | grep SSID # \u626b\u63cf\u53ef\u7528 ssid\\n\\n\\n\\n####\\n\\nsudo vim /etc/network/interfaces\\n\\nauto lo //\u8868\u793a\u4f7f\u7528localhost\\niface eth0 inet dhcp //\u8868\u793a\u5982\u679c\u6709\u7f51\u5361ech0, \u5219\u7528dhcp\u83b7\u5f97IP\u5730\u5740 (\u8fd9\u4e2a\u7f51\u5361\u662f\u672c\u673a\u7684\u7f51\u5361\uff0c\u800c\u4e0d\u662fWIFI\u7f51\u5361)\\nauto wlan0 //\u8868\u793a\u5982\u679c\u6709wlan\u8bbe\u5907\uff0c\u4f7f\u7528wlan0\u8bbe\u5907\u540d\\nallow-hotplug wlan0 //\u8868\u793awlan\u8bbe\u5907\u53ef\u4ee5\u70ed\u63d2\u62e8\\niface wlan0 inet dhcp //\u8868\u793a\u5982\u679c\u6709WLAN\u7f51\u5361wlan0 (\u5c31\u662fWIFI\u7f51\u5361), \u5219\u7528dhcp\u83b7\u5f97IP\u5730\u5740\\nwpa-ssid \u201c\u4f60\u7684wifi\u540d\u79f0\u201d//\u8868\u793a\u8fde\u63a5SSID\u540d\\nwpa-psk \u201c\u4f60\u7684wifi\u5bc6\u7801\u201d//\u8868\u793a\u8fde\u63a5WIFI\u7f51\u7edc\u65f6\uff0c\u4f7f\u7528wpa-psk\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u8ba4\u8bc1\u5bc6\u7801\\n\\n#####\\n\\n## \u9759\u6001ip https://www.jianshu.com/p/ac9d784f112b\\n\\nsudo vi /etc/dhcpcd.conf\\n\\n###### \u5185\u5bb9\u5982\u4e0b:\\n\\ninterface eth0\\n\\nstatic ip_address=192.168.0.10/24 # \u9759\u6001ip\\nstatic routers=192.168.1.1 # \u7f51\u5173\\nstatic domain_name_servers=192.168.0.1 # dns\\n\\ninterface wlan0 # \u65e0\u7ebf\u7f51\u5361\\n\\nstatic ip_address=192.168.0.200/24\\nstatic routers=192.168.1.1\\nstatic domain_name_servers=192.168.0.1\\n\\n######\\n\\n#\u91cd\u542f\\nsudo reboot\\n\\n# \u914d\u7f6e\u56fd\u5185\u6e90\\n\\n# \u5982\u679c\u662f raspberry os, \u5219:\\n# \u5206\u4e3a\u8f6f\u4ef6\u66f4\u65b0\u6e90, \u7cfb\u7edf\u66f4\u65b0\u6e90\\nsudo cp /etc/apt/sources.list /etc/apt/sources.list.bak # \u5148\u5907\u4efd\u603b\u662f\u6ca1\u9519\u7684\\nsudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak # \u5907\u4efd\\nsudo vim /etc/apt/sources.list\\n# modify the content like this:\\ndeb http://mirrors.ustc.edu.cn/raspbian/raspbian/ stretch main contrib non-free rpi\\n# \u7136\u540e\u662f\u4fee\u6539\u7cfb\u7edf\u66f4\u65b0\u6e90\\nsudo vim /etc/apt/sources.list.d/raspi.list\\n# \u4fee\u6539\u6210\u8fd9\u6837:\\ndeb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ stretch main ui\\n\\n# \u5982\u679c\u662f Ubuntu os \u5219:\\nhttp://mirrors.ustc.edu.cn/ubuntu-ports\\n\\n# \u66f4\u65b0\u8f6f\u4ef6\u5305\\nsudo apt update \\nsudo apt full-upgrade\\n\\n# \u914d\u7f6e\u9759\u6001 ip\\nsudo vim  \\n\\n\\n\\n## \u5207\u6362 root\\n\\nsudo passwd root # \u7136\u540e\u8bbe\u7f6e root \u5bc6\u7801\\n\\n\\n```\\n\\n## \u5b89\u88c5 docker\\n\\nhttps://shumeipai.nxez.com/2019/05/20/how-to-install-docker-on-your-raspberry-pi.html\\n\\n```sh\\nsudo apt update \\nsudo apt full-upgrade\\n\\nsudo apt-get install apt-transport-https \\\\\\n                       ca-certificates \\\\\\n                       software-properties-common\\n\\n# \u65b9\u6cd5\u4e00:\\nsudo curl -sSL https://get.docker.com | sh\\n\\n# \u65b9\u6cd5\u4e8c:\\n# \u66f4\u65b0\u8f6f\u4ef6\u5e93\u7d22\u5f15\\nsudo apt update\\n# \u5148\u5b89\u88c5 https \u4f9d\u8d56\u5305\\nsudo apt install -y apt-transport-https \\\\\\n                       ca-certificates \\\\\\n                       software-properties-common\\n# \u6dfb\u52a0 Docker \u7684 GPG key\\ncurl -fsSL https://yum.dockerproject.org/gpg | sudo apt-key add -\\n# \u9a8c\u8bc1\u4e00\u4e0b:\\napt-key fingerprint 58118E89F3A912897C070ADBF76221572C52609D\\nsudo apt update\\nsudo apt install -y docker-engine   \\n\\n\\n# (\u4e00\u6b21\u6027)\u4f7f\u7528\u56fd\u5185\u955c\u50cf\u6e90\\ndocker run hello-world --registry-mirror=https://docker.mirrors.ustc.edu.cn\\n# \u63a8\u8350\u65b9\u6cd5:\\nvim /etc/docker/daemn.json\\n{ \\n\\n\\"registry-mirrors\\": [\\"https://docker.mirrors.ustc.edu.cn\\"] \\n\\n}\\n\\n# \u5141\u8bb8 \u975e root \u4f7f\u7528\\nsudo usermod -aG docker pi\\n\\n################################################################\\n\\n\\n# \u5b89\u88c5 docker-compose\\n\\napt-get update\\napt-get install -y python python-pip\\napt-get install libffi-dev\\npip3 install docker-compose # \u5fc5\u987b\u4f7f\u7528 Python3 \u5b89\u88c5\\ndocker-compose -v\\n\\n\\n```\\n\\n## \u8fd0\u884c\u73af\u5883\\n\\n```sh\\n# mysql\\ndocker pull hypriot/rpi-mysql\\ndocker run --name mysql -d -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 --restart=always hypriot/rpi-mysql\\n# \u65b0\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u4f5c\u4e3a client \u53bb\u8fde\u63a5 MySQL server\\ndocker run --rm -it --link mysql:ms hypriot/rpi-mysql mysql -hms -uroot -p\\n\\n\\n# jdk8\\nsudo apt-get purge openjdk-8-jre-headless\\nsudo apt-get install openjdk-8-jre-headless\\nsudo apt-get install openjdk-8-jre\\n```\\n\\n\\n## \u914d\u7f6e\u52a8\u6001\u57df\u540d\u670d\u52a1 ddns\\n\\n\\n\u516c\u7f51vps \u662f\u5fc5\u987b\u7684\\n\\n### \u901a\u8fc7 ssh\u96a7\u9053\\n\\nssh \u96a7\u9053\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1(ssh remote forwarding) : \u672c\u5730\u6267\u884c `ssh -NTf -R 8080:127.0.0.1:8080 username@12.34.56.78`, \u5c06\u8fdc\u7a0b server\u7684 8080 \u6620\u5c04\u5230 \u672c\u5730\u7684 8080; \u518d\u5982: `ssh -NTf -R 8080:github.com:80 username@12.34.56.78` \u5c31\u80fd\u901a\u8fc7 12.34.56.78:8080 \u53bb\u8bbf\u95ee github.com:80 \u4e86\u3002\\n\\n```\\nN\u53c2\u6570\uff1a\u8868\u793a\u53ea\u8fde\u63a5\u8fdc\u7a0b\u4e3b\u673a\uff0c\u4e0d\u6253\u5f00\u8fdc\u7a0bshell\uff1b\\nT\u53c2\u6570\uff1a\u8868\u793a\u4e0d\u4e3a\u8fd9\u4e2a\u8fde\u63a5\u5206\u914dTTY\uff1b\\nf\u53c2\u6570\uff1a\u8868\u793a\u8fde\u63a5\u6210\u529f\u540e\uff0c\u8f6c\u5165\u540e\u53f0\u8fd0\u884c\uff1b\\nR: \u8fdc\u7a0b\u8f6c\u53d1 \\n```\\n\\n\u4f46\u662f SSH \u96a7\u9053\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5728\u7f51\u7edc\u6076\u52a3\u7684\u60c5\u51b5\u4e0b\u53ef\u80fd\u968f\u65f6\u65ad\u5f00, AutoSSH \u80fd\u8ba9 SSH \u96a7\u9053\u4e00\u76f4\u4fdd\u6301\u6267\u884c\uff0c\u4ed6\u4f1a\u542f\u52a8\u4e00\u4e2a SSH \u8fdb\u7a0b\uff0c\u5e76\u76d1\u63a7\u8be5\u8fdb\u7a0b\u7684\u5065\u5eb7\u72b6\u51b5\uff1b\u5f53 SSH \u8fdb\u7a0b\u5d29\u6e83\u6216\u505c\u6b62\u901a\u4fe1\u65f6\uff0cAutoSSH \u5c06\u91cd\u542f\u52a8 SSH \u8fdb\u7a0b: `autossh -N -R 8080:127.0.0.1:8080 username@12.34.56.78`\\n\\n\u9700\u8981\u53bb\u5916\u7f51\u670d\u52a1\u5668\u4e0a\u4fee\u6539 /etc/ssh/sshd_config \u6587\u4ef6\u5982\u4e0b: (\u91cd\u542f`service sshd restart`)\\n\\n```\\nGatewayPorts yes\\n```\\n\\n\u610f\u601d\u662f\uff0cSSH \u96a7\u9053\u76d1\u542c\u7684\u670d\u52a1\u7684 IP \u662f\u5bf9\u5916\u5f00\u653e\u7684 0.0.0.0\uff0c\u800c\u4e0d\u662f\u53ea\u5bf9\u672c\u673a\u7684 127.0.0.1\u3002\\n\\n### \u901a\u8fc7 frp\u670d\u52a1 \u5b9e\u73b0 \u5185\u7f51\u7a7f\u900f\\n\\nfrp \u662f\u4e00\u4e2a\u53ef\u7528\u4e8e\u5185\u7f51\u7a7f\u900f\u7684\u9ad8\u6027\u80fd\u7684\u53cd\u5411\u4ee3\u7406\u5e94\u7528\uff0c\u652f\u6301 tcp, udp, http, https \u534f\u8bae\\n\\nfrp \u6bd4 SSH \u96a7\u9053\u529f\u80fd\u66f4\u591a\uff0c\u914d\u7f6e\u9879\u66f4\u591a\uff1b\\nfrp \u4e5f\u9700\u8981\u4e00\u53f0\u5916\u7f51\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u9700\u8981\u5728\u5916\u7f51\u670d\u52a1\u5668\u4e0a\u5b89\u88c5 frps\uff0c\u5728\u672c\u5730\u5f00\u53d1\u673a\u4e0a\u5b89\u88c5 frpc\\n\\n\u8fd8\u6709\u5546\u7528\u65b9\u6848 ngrok, ZeroTier(\u4e2a\u4eba\u514d\u8d39)\\n\\n\\n## \u8fde\u63a5\u4e0a WiFi \u4f46\u65e0\u6cd5\u4e0a\u7f51\\n\\n```sh\\n# \u6dfb\u52a0 nameserver 8.8.8.8\\nsudo vim /etc/resolv.conf\\n\\n# relead\\nsudo resolvconf -u \\n# restart network\\nsudo /etc/init.d/networking restart\\n\\n```\\n\\n\u5c1d\u8bd5\u540e\u8c8c\u4f3c\u65e0\u6548\\n\\n\u4e0b\u9762\u6709\u6548: (https://www.geek-share.com/detail/2755498900.html)\\n\\n```sh\\nsudo nano /etc/dhcpcd.conf\\n\\n# \u8bbe\u7f6e WiFi\\nsudo nano /etc/wpa_supplicant/wpa_supplicant.conf\\n\\n```\\n\\n\\n## \u5b89\u88c5 node\\n\\nhttps://blog.csdn.net/sunxdd/article/details/105894882"},{"id":"/2015/10/04/class-conflict-check","metadata":{"permalink":"/2015/10/04/class-conflict-check","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2015-10-04-class-conflict-check/index.md","source":"@site/blog/2015-10-04-class-conflict-check/index.md","title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","description":"\u7528\u4e8e\u68c0\u6d4bjar\u5305\u4f9d\u8d56\u51b2\u7a81\uff0c\u591a\u4e2a\u7248\u672c\u540c\u65f6\u5b58\u5728","date":"2015-10-04T00:00:00.000Z","formattedDate":"2015\u5e7410\u67084\u65e5","tags":[{"label":"java","permalink":"/tags/java"}],"readingTime":1.2766666666666666,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","tags":["java"],"authors":"me"},"prevItem":{"title":"Raspberry Pi as a Dev Server\u6811\u8393\u6d3e\u6298\u817e\u8bb0\u5f55","permalink":"/2016/04/09/toss-about-raspberrypi"},"nextItem":{"title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","permalink":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking"}},"content":"\u7528\u4e8e\u68c0\u6d4bjar\u5305\u4f9d\u8d56\u51b2\u7a81\uff0c\u591a\u4e2a\u7248\u672c\u540c\u65f6\u5b58\u5728\\njava.lang.NoSuchMethodException, java.lang.ClassNotFoundException\\n\\n\x3c!-- truncate --\x3e\\n\\n## \u4ee3\u7801\\n\\n```java\\npublic class ClassConflictCheck {\\n  // key\uff1aclass name\\n  // value: jar name \uff08\u7531\u4e8e\u7248\u672c\u95ee\u9898,\u4e00\u4e2aclass\u53ef\u80fd\u5b58\u5728\u4e8e\u591a\u4e2ajar\u4e2d\uff0c\u6240\u4ee5\u662f set\uff09\\n    private static Map<String, HashSet<String>> classMap = new HashMap<String, HashSet<String>>();\\n\\n    public static void check(String classPath) throws Exception {\\n        File dir = new File(classPath);\\n        File[] jarFiles = dir.listFiles();\\n        for (File jarFile : jarFiles) {// \u904d\u5386\u6bcf\u4e2a jar\\n            if (jarFile.getName().endsWith(\\".jar\\")) {\\n                JarFile jar = new JarFile(jarFile);\\n                Enumeration<JarEntry> enumeration = jar.entries();\\n                while (enumeration.hasMoreElements()) {// \u904d\u5386\u6bcf\u4e2a class\\n                    JarEntry jarEntry = enumeration.nextElement();\\n                    if (jarEntry.getName().endsWith(\\".class\\")) {\\n                        storeClassAndJarRel(jarEntry.getName(), jar.getName());\\n                    }\\n                }\\n            }\\n        }\\n    }\\n\\n    /**\\n    * put className-jarName into map\\n    */\\n    private static void storeClassAndJarRel(String className, String jarName) {\\n      // \u83b7\u53d6 jar set\\n        HashSet<String> jarSet = classMap.get(className);\\n        if (jarSet == null) {\\n            jarSet = new HashSet<String>();\\n        }\\n        jarSet.add(jarName.substring(jarName.lastIndexOf(\\"/\\") + 1));\\n        classMap.put(className, jarSet);\\n    }\\n\\n    \\n    public static void main(String[] args) throws Exception {\\n        //args = new String[] { \\"/Users/yuekuo/soft/taobao-tomcat-7.0.54.1/deploy/cloud-mobile-cloudapi-gateway/WEB-INF/lib\\" };\\n        for (String arg : args) {\\n            check(arg);\\n        }\\n\\n        boolean isConflict = false;\\n        for (Iterator<Map.Entry<String, HashSet<String>>> iterator = classMap.entrySet().iterator(); iterator\\n                .hasNext();) {\\n            Map.Entry<String, HashSet<String>> entry = iterator.next();\\n            HashSet<String> jarSet = entry.getValue();\\n            if (jarSet.size() > 1) {// \u82e5\u67d0\u4e2a class \u5bf9\u5e94 \u7684 jar \u6709\u591a\u4e2a\uff0c \u5219\u51b2\u7a81\\n                if (!isConflict) {\\n                    isConflict = true;\\n                }\\n                List<String> jarList = Arrays.asList(jarSet.toArray(new String[] {}));\\n                // \u6253\u5370\u51b2\u7a81\u7684class\\n                System.out.println(\\"Class conflict!!! the class :\\" + entry.getKey()\\n                        + \\" has been duplicate inclusioned in the jars : \\" + jarList);\\n            }\\n        }\\n\\n        if(!isConflict) {// \u6ca1\u6709\u51b2\u7a81\\n            System.out.println(\\"no class conflict\\");\\n        }\\n    }\\n\\n}\\n\\n```\\n\\n## \u600e\u4e48\u4f7f\u7528\\n\\n```sh\\njavac ClassConflictCheck.java\\n\\njava ClassConflictCheck xxx/WEB-INF/lib\\n\\n```\\n\\n## \u539f\u7406\\n\\n\u904d\u5386\u626b\u63cf\u6307\u5b9a\u76ee\u5f55\u4e0b \u6240\u6709.jar \u7ed3\u5c3e\u7684\u6587\u4ef6, \u901a\u8fc7\u666e\u901a\u7684 File \u7c7b\u6784\u9020 jdk \u63d0\u7684 JarFile \u5bf9\u8c61, \u904d\u5386\u5185\u90e8\u51fa\u5185\u90e8\u7684 JarEntry, \u53ef\u4ee5\u83b7\u53d6\u5230 classname \u548c \u5bf9\u5e94\u7684 jarName , \u5982\u679c\u4e00\u4e2a classname \u627e\u5230\u4e86\u591a\u4e2a Jarname, \u90a3\u4e48 \u5c31\u662f\u91cd\u590d\u7684, \u53ef\u4ee5\u6807\u8bc6\u51fa\u6765"},{"id":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking","metadata":{"permalink":"/2015/05/02/defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking","editUrl":"https://github.com/xiaoyureed/xiaoyureed.github.io/edit/main/blog/2015-05-02-defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking.md","source":"@site/blog/2015-05-02-defect-about-java-programmer-from-programming-thinking/defect-about-java-programmer-from-programming-thinking.md","title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","description":"\u6765\u81ea: \u7f16\u7a0b\u968f\u60f3; Java \u7a0b\u5e8f\u733f\u7684\u6bdb\u75c5","date":"2015-05-02T00:00:00.000Z","formattedDate":"2015\u5e745\u67082\u65e5","tags":[{"label":"java","permalink":"/tags/java"}],"readingTime":13.62,"hasTruncateMarker":true,"authors":[{"name":"Xiao Yu","title":"Unknown","url":"https://github.com/xiaoyureed","imageURL":"https://github.com/xiaoyureed.png","key":"me"}],"frontMatter":{"title":"\u6807\u6ce8\u7f16\u7a0b\u968f\u60f3\u7684\u6587\u7ae0","tags":["java"],"authors":["me"]},"prevItem":{"title":"\u7c7b\u51b2\u7a81\u68c0\u6d4b\ud83c\udf08","permalink":"/2015/10/04/class-conflict-check"}},"content":"<div align=\\"center\\">\\n\u6765\u81ea: [\u7f16\u7a0b\u968f\u60f3](https://program-think.blogspot.com/2009/01/defect-of-java-beginner-0-overview.html); Java \u7a0b\u5e8f\u733f\u7684\u6bdb\u75c5\\n</div>\\n\\n\\n\x3c!--truncate--\x3e\\n\\n# \u5bf9\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u4e0d\u719f\u6089\\n\\n\u2605\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u6570\u7ec4\u578b\u5bb9\u5668\u3001\u4ec0\u4e48\u65f6\u5019\u8be5\u7528\u94fe\u8868\u578b\u5bb9\u5668\uff1f<font color=\\"green\\"> > \u524d\u8005\u9002\u7528\u4e8e\u67e5\u8be2\u8f83\u591a\u7684\u573a\u666f\u589e\u5220\u7279\u522b\u6162\u56e0\u4e3a\u6d89\u53ca\u5230\u6570\u7ec4\u521b\u5efa\u590d\u5236, \u540e\u8005\u9002\u5408\u589e\u5220\u591a\u7684\u573a\u666f</font>\\n\u2605\u4ec0\u4e48\u662f\u6563\u5217\u51fd\u6570\uff1fHashMap \u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f<font color=\\"green\\"> > \u6563\u5217\u51fd\u6570 see [link](https://www.zhihu.com/question/26762707), hashmap\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0, \u535a\u5ba2\u5185\u641c\u7d22 \\"java core Note\\" </font>\\n\u2605\u4ec0\u4e48\u662f\u9012\u5f52\uff1f\u5982\u679c\u4f60\u4ee5\u524d\u4ece\u6765\u6ca1\u5199\u8fc7\u9012\u5f52\u51fd\u6570\uff0c\u5c1d\u8bd5\u7740\u5199\u4e00\u4e2a\uff08\u6bd4\u5982\u7528\u9012\u5f52\u51fd\u6570\u8fdb\u884c\u76ee\u5f55\u6811\u904d\u5386\uff09\u3002<font color=\\"green\\"> > \u7b80\u5355\u7406\u89e3\u5c31\u662f\u51fd\u6570\u8c03\u7528\u81ea\u8eab, \u9700\u8981\u6709\u7ed3\u675f\u6761\u4ef6, \u4e0d\u7136\u5c31\u6b7b\u5faa\u73af\u4e86 </font>\\n\u2605\u4ec0\u4e48\u662f\u7b97\u6cd5\u590d\u6742\u5ea6\uff1f\\n\u2605\u4f60\u662f\u5426\u7406\u89e3\u7a7a\u95f4\u6362\u65f6\u95f4\u7684\u601d\u60f3\uff1f\\n\u2605\u5199\u4e00\u4e2a\u9488\u5bf9\u6574\u6570\u6570\u7ec4\u7684\u5192\u6ce1\u6392\u5e8f\u51fd\u6570\uff0c\u770b\u770b\u4f60\u8981\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u8dd1\u901a\u3002\\n\u2605\u5199\u4e00\u4e2a\u9488\u5bf9\u6574\u6570\u6570\u7ec4\u7684\u4e8c\u5206\u67e5\u627e\u51fd\u6570\uff0c\u770b\u770b\u4f60\u8981\u4fee\u6539\u51e0\u6b21\u624d\u80fd\u8dd1\u901a\u3002\\n\\n\\n# \u79bb\u5f00\u5f00\u53d1\u6846\u67b6\u6d3b\u4e0d\u4e86\\n\\n\u5bf9 Spring\u3001Hibernate \u7b49\u6846\u67b6\u4e86\u5982\u6307\u638c\uff1b\u4f46\u5982\u679c\u7ed9\u4ed6\u4e00\u4e2a\u7b80\u5355\u9700\u6c42\uff0c\u8ba9\u4ed6\u5199\u4e00\u4e2a\u8131\u79bb Web \u6846\u67b6\u7684\u72ec\u7acb Application\uff0c\u4ed6\u5c31\u4e0d\u77e5\u6240\u63aa\u4e86\\n\\n\u2605\u57fa\u4e8e\u63a5\u53e3\u7684\u7ee7\u627f\u548c\u57fa\u4e8e\u5b9e\u73b0\u7684\u7ee7\u627f\u5404\u6709\u4ec0\u4e48\u4f18\u7f3a\u70b9\uff1f\\n\u2605\u7ee7\u627f\uff08\u5305\u62ec extend \u548c implement\uff09\u6709\u4ec0\u4e48\u3010\u7f3a\u70b9\u3011\uff1f\\n\u2605\u591a\u6001\uff08polymorphism\uff09\u6709\u4ec0\u4e48\u3010\u7f3a\u70b9\u3011\uff1f\\n\u2605\u4e3a\u4ec0\u4e48 Java \u53ef\u4ee5\u591a\u7ee7\u627f interface\uff0c\u800c\u4e0d\u53ef\u4ee5\u591a\u7ee7\u627f class\uff1f<font color=\\"green\\"> > \u591a\u7ee7\u627fclass\u4e2d\u6709\u76f8\u540c\u65b9\u6cd5\u65f6\u5e94\u8be5\u9009\u7528\u54ea\u4e2a\u7248\u672c\u5462? \u53e6\u5916, java8\u5f00\u59cb\u5df2\u7ecf\u5141\u8bb8\u63a5\u53e3\u91cc\u9762\u6709 default method\u4e86, \u53d1\u73b0\u7ee7\u627f\u591a\u4e2a\u9ed8\u8ba4\u65b9\u6cd5\u5b9e\u73b0\u5e76\u4e14\u6ca1\u6709override\u65f6\u62a5\u9519, \u907f\u514d\u4e86\u96c6\u6210\u591a\u4e2aclass\u9009\u62e9\u54ea\u4e2a\u7248\u672c\u7684\u95ee\u9898 </font>\\n\u2605\u5047\u5982\u8ba9\u4f60\u5199\u4e00\u4e2a\u5c0f\u6e38\u620f\uff08\u6bd4\u5982\u4eba\u673a\u5bf9\u6218\u7684\u4e94\u5b50\u68cb\uff09\uff0c\u4f60\u4f1a\u5982\u4f55\u8bbe\u8ba1\u7c7b\u7ed3\u6784\uff1f\\n\u2605\u7c7b\u7ed3\u6784\u8bbe\u8ba1\u65f6\uff0c\u5982\u4f55\u8003\u8651\u53ef\u6269\u5c55\u6027\uff1f\\n\\n\\n# \u7f16\u7a0b\u4e60\u60ef\\n\\n## \u968f\u610f\u5730\u547d\u540d\\n    \\n\u53cd\u9762: \u4f7f\u7528\u5355\u5b57\u6bcd\u547d\u540d\u53d8\u91cf\uff1b\u4f7f\u7528\u4e00\u4e9b\u6ca1\u592a\u5927\u610f\u4e49\u7684\u53d8\u91cf\u540d\uff08\u4f8b\u5982 s1\u3001s2\u3001s3\uff09\uff1b\u5bf9\u540c\u4e00\u4e2a\u4e1a\u52a1\u6982\u5ff5\u4f7f\u7528\u4e0d\u540c\u7684\u672f\u8bed/\u7f29\u5199\uff08\u5bb9\u6613\u8ba9\u8bfb\u4ee3\u7801\u7684\u4eba\u795e\u7ecf\u5206\u88c2\uff09\uff1b\u4f7f\u7528\u62fc\u97f3\u547d\u540d\uff08\u5982\u679c\u4f60\u56e2\u961f\u4e2d\u6709\u6e2f\u53f0\u4eba\u58eb\u6216\u8005\u8001\u5916\uff0c\u5c31\u60e8\u4e86\uff09\\n\\n## \u4e60\u60ef\u4e8e\u4ee3\u7801\u7684 copy & paste\\n\\n\u53cd\u9762\uff1a\u5982\u679c\u53d1\u73b0\u8981\u5199\u7684\u67d0\u4e2a\u51fd\u6570\u548c\u524d\u51e0\u5929\u5199\u7684\u67d0\u4e2a\u51fd\u6570\u5dee\u4e0d\u591a\uff0c\u5c31\u628a\u539f\u6765\u7684\u90a3\u4e2a\u51fd\u6570\u8d34\u8fc7\u6765\uff0c\u7136\u540e\u7a0d\u5fae\u6539\u51e0\u4e0b\uff0c\u5fc3\u4e2d\u8fd8\u6697\u559c\uff1a\u201c\u53c8\u5feb\u901f\u641e\u5b9a\u4e86\u4e00\u4e2a\u529f\u80fd\u201d....... \u8fd9\u79cd\u505a\u6cd5\u662f\u4ee3\u7801\u81ed\u5473\uff08\u501f\u7528\u300a\u91cd\u6784 - \u6539\u5584\u65e2\u6709\u4ee3\u7801\u7684\u8bbe\u8ba1\u300b\u7684\u63d0\u6cd5\uff09\u7684\u4e3b\u8981\u6765\u6e90\uff0c\u5bfc\u81f4\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\u5927\u5927\u4e0b\u964d\u3002\u5f53\u4f60\u5c06\u6765\u9700\u8981\u589e\u52a0\u529f\u80fd\u6216\u4fee\u6539 bug \u7684\u65f6\u5019\uff0c\u8981\u540c\u65f6\u6539\u52a8\u591a\u4e2a\u5730\u65b9\uff0c\u800c\u90a3\u65f6\u4f60\u4f30\u8ba1\u5df2\u7ecf\u60f3\u4e0d\u8d77\u6765\u8fd9\u7823\u4ee3\u7801\u6709\u51e0\u4e2a\u514b\u9686\u4e86\\n\\n## Magic Number \u6ee1\u5929\u98de\\n\\n\u5047\u8bbe\u6709\u4e2a\u4e1a\u52a1\u903b\u8f91\u4e2d\u9700\u8981\u8fdb\u884c10\u79d2\u7684\u8d85\u65f6\u7b49\u5f85\uff0c\u4f60\u4f1a\u600e\u4e48\u5199\u8fd9\u4e2asleep\u8bed\u53e5\uff1f\u6211\u4f30\u8ba1\u5927\u90e8\u5206\u4eba\u4e0d\u5916\u4e4e\u4e0b\u9762\u4e09\u79cd\u5199\u6cd5:\\n1\u3001\u76f4\u63a5\u5199\u4e0a sleep(10*1000); \u4e86\u4e8b ----\u6700\u5dee, \u7f3a\u4e4f\u53ef\u8bfb\u6027, \u4ee3\u7801\u81ed\u5473\\n2\u3001\u5b9a\u4e49\u4e00\u4e2a\u5e38\u91cf TIMEOUT_XXX = 10*1000; \u7136\u540e sleep(TIMEOUT_XXX); ---- \u6bd41\u7a0d\u597d, \u4f46\u662f\uff0c\u5c06\u6765\u4e00\u65e6\u53d1\u751f\u9700\u6c42\u53d8\u66f4\uff0c\u8981\u6c42\u5728\u3010\u8fd0\u884c\u65f6\u3011\u8c03\u6574\u8d85\u65f6\u95f4\u9694\uff08\u751a\u81f3\u8981\u6c42\u8ba9\u7528\u6237\u6765\u914d\u5236\u8d85\u65f6\u95f4\u9694\uff09\uff0c\u5219\u5199\u6cd52\u7684\u7f3a\u70b9\u7acb\u9a6c\u66b4\u9732\u65e0\u9057\\n3\u3001`\u5728\u914d\u5236\u6587\u4ef6\u4e2d\u52a0\u5165\u4e00\u4e2a\u8d85\u65f6\u9879\uff0c\u7136\u540e\u7a0b\u5e8f\u8bfb\u53d6\u914d\u5236\u6587\u4ef6\u83b7\u5f97\u8d85\u65f6\u503c\uff0c\u7136\u540e\u8c03\u7528 sleep`\u3002------  \u6b63\u786e\u65b9\u5f0f.\\n\\n## \u4ee3\u7801\u8026\u5408\u5ea6\u592a\u5927\\n\\n\u5408\u7406\u4f7f\u7528  MVC\u6216\u8005\u8bbe\u8ba1\u6a21\u5f0f (\u4ee3\u7801\u8026\u5408\u5206\u522b\u7531\u54ea\u4e9b\u60c5\u51b5\u5f15\u8d77\uff1f\u4ec0\u4e48\u662f\u6b63\u4ea4\u7684\u8bbe\u8ba1\uff1f)\\n\\n## \u4e0d\u6ce8\u610f\u8d44\u6e90\u56de\u6536\\n\\nJava \u5728\u8bed\u8a00\u5c42\u9762\u63d0\u4f9b\u4e86\u5185\u5b58\u7684\u5783\u573e\u56de\u6536\u673a\u5236\uff0c\u7a0b\u5e8f\u5458\u53ea\u7ba1\u7533\u8bf7\u5185\u5b58\uff0c\u4e0d\u9700\u8981\u518d\u5173\u5fc3\u91ca\u653e\u7684\u95ee\u9898. \u6b64\u5f88\u591a\u65b0\u624b\u517b\u6210\u4e86\u574f\u4e60\u60ef\uff0c\u5bf9\u4e8e\u5176\u5b83\u8d44\u6e90\uff08\u6bd4\u5982\u6570\u636e\u5e93\u8fde\u63a5\uff09\u4e5f\u53ea\u7533\u8bf7\u4e0d\u91ca\u653e\uff08\u6709\u4e9b\u4eba\u751a\u81f3\u5929\u771f\u5730\u4ee5\u4e3a JVM \u4f1a\u5e2e\u4f60\u641e\u5b9a\u8d44\u6e90\u56de\u6536\uff09. \u8fd9\u4e2a\u574f\u4e60\u60ef\u4f1a\u5bfc\u81f4\u8d44\u6e90\u7684\u6cc4\u9732\uff0c\u800c\u8d44\u6e90\u6cc4\u9732\u5f80\u5f80\u6bd4\u5185\u5b58\u6cc4\u9732\u66f4\u8981\u547d\u3002\u5982\u679c\u4f60\u5199\u7684\u7a0b\u5e8f\u662f\u957f\u65f6\u95f4\u8fd0\u884c\u7684\uff08\u6bd4\u5982\u8fd0\u884c\u5728 Web Server \u4e0a\uff09\uff0c\u65f6\u95f4\u957f\u4e86\u4f1a\u7531\u4e8e\u8d44\u6e90\u8017\u5c3d\u800c\u5bfc\u81f4\u6574\u4e2a\u8fdb\u7a0b\u51fa\u95ee\u9898\\n\\n# \u5f02\u5e38\u5904\u7406\u4f7f\u7528\u4e0d\u5f53\\n\\n[\u5f02\u5e38\u7684\u5904\u7406\u539f\u5219](http://codebuild.blogspot.com/2012/01/15-best-practices-about-exception.html), \u6b64\u5916\u8fd8\u6709\u4e00\u4e2a\u5173\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u7ecf\u9a8c [link1](https://www.ibm.com/developerworks/cn/java/j-lo-exception-misdirection/index.html), [link2](https://www.ibm.com/developerworks/cn/java/j-lo-exception/index.html)\\n\\n*   \u5f02\u5e38\u7684\u540d\u5b57\u5fc5\u987b\u6e05\u6670\u800c\u4e14\u6709\u5177\u4f53\u7684\u610f\u601d\uff0c\u8868\u793a\u5f02\u5e38\u53d1\u751f\u7684\u95ee\u9898\uff0c\u4f8b\u5982 FileNotFoundException \u5c31\u5f88\u6e05\u6670\u76f4\u89c2\\n\\n*   \u5b9a\u4e49\u4f60\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b\u5c42\u6b21\uff0c\u4f8b\u5982 UserException \u548c SystemException \u5206\u522b\u4ee3\u8868\u7528\u6237\u7ea7\u522b\u7684\u5f02\u5e38\u4fe1\u606f\u548c\u7cfb\u7edf\u7ea7\u522b\u7684\u5f02\u5e38\u4fe1\u606f\uff0c\u800c\u5176\u4ed6\u7684\u5f02\u5e38\u5728\u8fd9\u4e24\u4e2a\u57fa\u7c7b\u4e0a\u8fdb\u884c\u6269\u5c55\\n\\n*   \u53d7\u68c0\u5f02\u5e38\u548c\u975e\u53d7\u68c0\u5f02\u5e38: \u524d\u8005\u7528\u5728[\u9519\u8bef\u9700\u8981\u8fdb\u4e00\u6b65\u5904\u7406\u548c\u6062\u590d, \u5982SQLException, \u9700\u8981\u8fdb\u4e00\u6b65\u5173\u95edconnection, transaction\u56de\u6eda], \u540e\u8005\u7528\u5728 [\u7a0b\u5e8f\u4e0d\u80fd\u7ee7\u7eed\u6267\u884c, \u4e5f\u6ca1\u5fc5\u8981\u8fdb\u4e00\u6b65\u5bf9\u5f02\u5e38\u5904\u7406, \u5982\u670d\u52a1\u5668\u8fde\u63a5\u4e0d\u4e0a\u3001\u53c2\u6570\u4e0d\u6b63\u786e]\\n\\n*   \u907f\u514d\u629b\u51fa\u5f02\u5e38\u5bf9\u4ee3\u7801\u5c42\u6b21\u6c61\u67d3(\u8bbe\u8ba1\u9694\u79bb\u539f\u5219)\\n\\n    *   \u4f8b\u5982dao\u5c42\u67d0\u4e2a\u65b9\u6cd5\u629b\u51fasqlexception, \u6b64\u65f6\u5c31\u4e0d\u8981\u7ee7\u7eed\u5411\u4e0a\u629b\u4e86, \u5e94\u8be5\u5728catch\u4e4b\u540e\u5904\u7406\u6210runtimeException\u629b\u51fa\\n\\n\\n*   \u7a7a\u7684 catch \u8bed\u53e5\u5757\\n\\n    *   \u5373\u4f7f\u6709ex.printStacktrace()\u4e5f\u7b97\u7a7a\u7684catch\u5757, \u56e0\u4e3a\u8be5\u65b9\u6cd5\u53ea\u662f\u6253\u5370\u5806\u6808\u4fe1\u606f, \u800c\u4e14\u5f02\u5e38\u5e76\u6ca1\u6709\u4f7f\u5f97\u7a0b\u5e8f\u7ec8\u7aef\u6267\u884c, \u5bfc\u81f4\u66f4\u591a\u7684\u5f02\u5e38\u3002\\n    *   \u53ef\u4ee5catch\u540e\u629b\u51fa\u975e\u53d7\u68c0\u5f02\u5e38, finally\u91cc\u9762\u5904\u7406\u5176\u4ed6\u540e\u7eed\u64cd\u4f5c\u5982\u5173\u95ed\u8d44\u6e90\u7b49\u7b49\\n\\n\\n*   \u6ca1\u6709\u4f7f\u7528 finally \u53ef\u80fd\u4f1a\u4ea7\u751f\u8d44\u6e90\u6cc4\u9732\\n\\n*   \u4e0d\u8981\u4f7f\u7528\u51fd\u6570\u8fd4\u56de\u503c\u8fdb\u884c\u9519\u8bef\u5904\u7406\\n\\n    *   \u653e\u7740 Java \u7684\u5f02\u5e38\u673a\u5236\u4e0d\u7528\uff0c\u800c\u7528\u51fd\u6570\u8fd4\u56de\u503c\u6765\u8868\u793a\u6210\u529f/\u5931\u8d25, \u7b80\u76f4\u662f\u201c\u6367\u7740\u91d1\u7897\u8981\u996d\u201d\\n\\n        1. \u8fd4\u56de\u503c\u4e00\u822c\u7528\u6574\u6570\u503c\u6216\u5e03\u5c14\u503c\u8868\u793a\uff0c\u4f20\u9012\u7684\u4fe1\u606f\u8fc7\u4e8e\u7b80\u964b\uff1b\\n        2. \u4e00\u65e6\u8c03\u7528\u8005\u5ffd\u7565\u4e86\u9519\u8bef\u8fd4\u56de\u7801\uff0c\u5c31\u4f1a\u5bfc\u81f4\u548c\u201c\u7a7a catch \u8bed\u53e5\u5757\u201d\u7c7b\u4f3c\u7684\u95ee\u9898\uff1b\\n        3. \u5bf9\u540c\u4e00\u4e2a\u51fd\u6570\u7684\u591a\u5904\u8c03\u7528\uff0c\u90fd\u9700\u8981\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u91cd\u590d\u5224\u65ad\uff0c\u5bfc\u81f4\u4ee3\u7801\u5197\u4f59\\n\\n*   \u5faa\u73af\u5757\u4e2d\u4e0d\u8981\u6709try...catch\\n\\n    *   \u5f02\u5e38\u5904\u7406\u5360\u7528\u7cfb\u7edf\u8d44\u6e90\\n    *   \u540c\u6837, \u8fd9\u6837\u7684\u4f8b\u5b50\u4e5f\u8981\u907f\u514d: \u7c7b A \u4e2d\u6267\u884c\u4e86\u4e00\u6bb5\u5faa\u73af\uff0c\u5faa\u73af\u4e2d\u8c03\u7528\u4e86 B \u7c7b\u7684\u65b9\u6cd5\uff0cB \u7c7b\u4e2d\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u5374\u53c8\u5305\u542b try-catch \u8fd9\u6837\u7684\u8bed\u53e5\u5757\\n\\n\\n*   \u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e00\u4e2aruntimeException, \u6784\u9020\u51fd\u6570\u63a5\u53d7\u5404\u7c7b\u53d7\u68c0Exception, \u5e76\u5c06\u6709\u6548\u7684\u5f02\u5e38\u4fe1\u606f\u590d\u5236\u5230\u81ea\u8eab\u5c5e\u6027, \u8fd9\u6837\u53ef\u4ee5\u5728\u4f7f\u7528\u65f6\u7edf\u4e00\u6355\u6349Exception, \u53ef\u4ee5\u7701\u4e0d\u5c11\u529b\u6c14(\u591a\u65f6\u5019\u6ca1\u6709\u5fc5\u8981\u6bcf\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684 Exception \u5199\u4e00\u6bb5 catch \u8bed\u53e5\uff0c\u5bf9\u4e8e\u5f00\u53d1\u6765\u8bf4\uff0c\u4efb\u4f55\u4e00\u79cd\u5f02\u5e38\u90fd\u8db3\u591f\u8bf4\u660e\u4e86\u7a0b\u5e8f\u7684\u5177\u4f53\u95ee\u9898\u3002)\\n\\n    ```java\\n    /**\\n    * \u81ea\u5b9a\u4e49 RuntimeException\\n    * \u6dfb\u52a0\u9519\u8bef\u4ee3\u7801\u5c5e\u6027\\n    */\\n    public class RuntimeException extends java.lang.RuntimeException { \\n        //\u9ed8\u8ba4\u9519\u8bef\u4ee3\u7801 \\n        public static final Integer GENERIC = 1000000; \\n        //\u9519\u8bef\u4ee3\u7801\\n        private Integer errorCode; \\n\\n        private String msg;\\n\\n        public RuntimeException(Integer errorCode, Throwable cause) {\\n                this(errorCode, null, cause);\\n        }\\n        public RuntimeException(String message, Throwable cause) {\\n                //\u5229\u7528\u901a\u7528\u9519\u8bef\u4ee3\u7801\\n                this(GENERIC, message, cause);\\n        }\\n        public RuntimeException(Integer errorCode, String message, Throwable cause) {\\n                // \u90a3\u4e48\u5f53 Exception \u7684\u7c7b\u578b\u5df2\u7ecf\u662f RuntimeException \u65f6\uff0c\u6211\u4eec\u53c8\u505a\u4e86\u4e00\u6b21\u5c01\u88c5\u3002\u5c06 RuntimeException \u53c8\u91cd\u65b0\u5c01\u88c5\u4e86\u4e00\u6b21\uff0c\u8fdb\u800c\u4e22\u5931\u4e86\u539f\u6709\u7684 RuntimeException \u643a\u5e26\u7684\u6709\u6548\u4fe1\u606f\u3002\\n                // \u6dfb\u52a0\u76f8\u5173\u7684\u68c0\u67e5\uff0c\u786e\u8ba4\u53c2\u6570 Throwable \u4e0d\u662f RuntimeException \u7684\u5b9e\u4f8b\u3002\u5982\u679c\u662f\uff0c\u5c06\u62f7\u8d1d\u76f8\u5e94\u7684\u5c5e\u6027\u5230\u65b0\u5efa\u7684\u5b9e\u4f8b\u4e0a\\n                if (cause instanceof RuntimeException) {\\n                    this.msg = ...\\n                }\\n                this.errorCode = errorCode;\\n                super(message, cause);\\n        }\\n        public Integer getErrorCode() {\\n                return errorCode;\\n        } \\n    }\\n    ```\\n\\n    \u540e\u9762\u4f7f\u7528\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u8fd9\u6837\u4e86\\n\\n    ```java\\n    try{\\n    //\u53ef\u80fd\u629b\u51fa RuntimeException\u3001IOExeption \u6216\u8005\u5176\u5b83\uff1b\\n    //\u6ce8\u610f\u8fd9\u91cc\u548c\u8bef\u533a\u516d\u7684\u533a\u522b\uff0c\u8fd9\u91cc\u662f\u4e00\u6bb5\u4ee3\u7801\u629b\u51fa\u591a\u79cd\u5f02\u5e38\u3002\u4ee5\u4e0a\u662f\u591a\u6bb5\u4ee3\u7801\uff0c\u5404\u81ea\u629b\u51fa\u4e0d\u540c\u7684\u5f02\u5e38\\n    }catch(Exception e){\\n        //\u4e00\u5982\u65e2\u5f80\u7684\u5c06 Exception \u8f6c\u6362\u6210 RuntimeException\uff0c\u4f46\u662f\u8fd9\u91cc\u7684 e \u5176\u5b9e\u662f RuntimeException \u7684\u5b9e\u4f8b\uff0c\u5df2\u7ecf\u5728\u524d\u6bb5\u4ee3\u7801\u4e2d\u5c01\u88c5\u8fc7\\n        throw new RuntimeException(/**/code, /**/, e);\\n    }\\n\\n    ```\\n\\n*   \u907f\u514d\u6253\u5370\u591a\u5c42\u6b21\u7684\u91cd\u590d\u7684\u5f02\u5e38\\n\\n    ```java\\n    public class A {\\n    private static Logger logger = LoggerFactory.getLogger(A.class);\\n    public void process(){\\n        try{\\n        //\u5b9e\u4f8b\u5316 B \u7c7b\uff0c\u53ef\u4ee5\u6362\u6210\u5176\u5b83\u6ce8\u5165\u7b49\u65b9\u5f0f\\n        B b = new B();\\n        b.process(); // \u89e3\u51b3\u529e\u6cd5\u662f: \u8fd9\u91cc\u7684\u90e8\u5206\u5e94\u8be5\u62ff\u51fatry...catch\u5757\\n\\n        //other code might cause exception\\n        \\n        } catch(XXXException e){\\n        //\u5982\u679c B \u7c7b process \u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\uff0c\u5f02\u5e38\u4f1a\u5728 B \u7c7b\u4e2d\u88ab\u6253\u5370\uff0c\u5728\u8fd9\u91cc\u4e5f\u4f1a\u88ab\u6253\u5370\uff0c\u4ece\u800c\u4f1a\u6253\u5370 2 \u6b21\\n        // \u5982\u679c\u5c42\u6b21\u518d\u590d\u6742\u4e00\u70b9\uff0c\u4e0d\u53bb\u8003\u8651\u6253\u5370\u65e5\u5fd7\u6d88\u8017\u7684\u7cfb\u7edf\u6027\u80fd\uff0c\u4ec5\u4ec5\u5728\u5f02\u5e38\u65e5\u5fd7\u4e2d\u53bb\u5b9a\u4f4d\u5f02\u5e38\u5177\u4f53\u7684\u95ee\u9898\u5df2\u7ecf\u591f\u5934\u75bc\u7684\u4e86\u3002\\n        // \u5176\u5b9e\u6253\u5370\u65e5\u5fd7\u53ea\u9700\u8981\u5728\u4ee3\u7801\u7684\u6700\u5916\u5c42\u6355\u6349\u6253\u5370\u5c31\u53ef\u4ee5\u4e86\uff0c\u5f02\u5e38\u6253\u5370\u4e5f\u53ef\u4ee5\u5199\u6210 AOP\uff0c\u7ec7\u5165\u5230\u6846\u67b6\u7684\u6700\u5916\u5c42\\n        logger.error(e);\\n        throw new RuntimeException(/* \u9519\u8bef\u4ee3\u7801 */ errorCode, /*\u5f02\u5e38\u4fe1\u606f*/msg, e);\\n        }\\n        }\\n    }\\n    public class B{\\n    private static Logger logger = LoggerFactory.getLogger(B.class);\\n        public void process(){\\n            try{\\n                //\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\\n            }\\n            catch(XXXException e){\\n                logger.error(e);\\n                throw new RuntimeException(/* \u9519\u8bef\u4ee3\u7801 */ errorCode, /*\u5f02\u5e38\u4fe1\u606f*/msg, e);\\n            }\\n    }\\n    }\\n    ```\\n\\n\\n# \u5173\u4e8e\u57fa\u672c\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5728\u5185\u5b58\u5b58\u50a8\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\\n```java\\nStringBuffer str = new StringBuffer();\\nint n = 123;\\n// \u8be5 StringBuffer \u3010\u5bf9\u8c61\u3011\u7684\u5185\u5bb9\u662f\u5b58\u50a8\u5728\u5806\uff08Heap\uff09\u4e0a\u7684\uff0c\u9700\u8981\u7533\u8bf7\u5806\u5185\u5b58\u3002\u800c\u53d8\u91cf str \u53ea\u4e0d\u8fc7\u662f\u9488\u5bf9\u8be5 StringBuffer \u5bf9\u8c61\u7684\u4e00\u4e2a\u5f15\u7528\uff08\u6216\u8005\u53eb\u5730\u5740\uff09\u3002\u53d8\u91cf str \u7684\u3010\u503c\u3011\uff08\u4e5f\u5c31\u662f StringBuffer \u5bf9\u8c61\u7684\u5730\u5740\uff09\u662f\u5b58\u50a8\u5728\u3010\u6808\u3011\u4e0a\u7684\u3002\\n// \u53d8\u91cf n \u7684\u3010\u503c\u3011\u4e5f\u662f\u5b58\u50a8\u5728\u6808\uff08Stack\uff09\u4e0a\u7684\uff0c\u4f46\u662f\u8fd9\u4e2a\u8bed\u53e5\u4e0d\u9700\u8981\u518d\u4ece\u5806\u4e2d\u7533\u8bf7\u5185\u5b58\u4e86\u3002\\n```\\n\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5728\u6027\u80fd\u4e0a\u6709\u4ec0\u4e48\u533a\u522b\uff1f\\n\\nStack: \u53ea\u80fd\u88ab\u672c\u7ebf\u7a0b\u8bbf\u95ee; \u5185\u5b58\u7533\u8bf7\u7b80\u5355; \u5185\u5b58\u6709\u9650\\nHeap: \u80fd\u591f\u88ab\u8fdb\u7a0b\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee; \u5185\u5b58\u7533\u8bf7\u590d\u6742(\u7531\u4e8e\u591a\u7ebf\u7a0b\u5171\u4eab, \u9700\u8981\u52a0\u9501); \u5185\u5b58\u5145\u8db3\\n\\n## \u8fd9\u4e24\u79cd\u7c7b\u578b\u5bf9\u4e8e GC \u6709\u4ec0\u4e48\u533a\u522b\\n\\n\\n# \u5173\u4e8e\u5783\u573e\u56de\u6536\uff08Garbage Collection\uff09\\n\\n## JVM \u7684\u5185\u5b58\u7a7a\u95f4\\n\\n\u25c7\u6808\u5185\u5b58\uff08Stack\uff09\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u79c1\u6709\u7684\u3002\\n\u25c7\u5806\u5185\u5b58\uff08Heap\uff09\uff1a\u6240\u6709\u7ebf\u7a0b\u516c\u7528\u7684\u3002\\n\u25c7\u65b9\u6cd5\u533a\uff08Method Area\uff09\uff1a\u6709\u70b9\u50cf\u4ee5\u524d\u5e38\u8bf4\u7684\u201c\u8fdb\u7a0b\u4ee3\u7801\u6bb5\u201d\uff0c\u8fd9\u91cc\u9762\u5b58\u653e\u4e86\u6bcf\u4e2a\u52a0\u8f7d\u7c7b\u7684\u53cd\u5c04\u4fe1\u606f\u3001\u7c7b\u51fd\u6570\u7684\u4ee3\u7801\u3001\u7f16\u8bd1\u65f6\u5e38\u91cf\u7b49\u4fe1\u606f\u3002\\n\u25c7\u539f\u751f\u65b9\u6cd5\u6808\uff08Native Method Stack\uff09\uff1a\u4e3b\u8981\u7528\u4e8e JNI \u4e2d\u7684\u539f\u751f\u4ee3\u7801\uff0c\u5e73\u65f6\u5f88\u5c11\u6d89\u53ca\u3002\\n\\n## \u5783\u573e\u56de\u6536\u673a\u5236\u7b80\u4ecb\\n\\n\u5783\u573e\u56de\u6536\u673a\u5236\u53d6\u51b3\u4e8e\u4e0d\u540cjvm, \u8fd9\u91cc\u4ee5\u5b98\u65b9jvm\u4ecb\u7ecd\\n\\n* \u4f55\u65f6\u56de\u6536?\\n    * \u5f53 JVM \u53d1\u73b0\u5806\u5185\u5b58\u6bd4\u8f83\u7d27\u5f20\u3001\u4e0d\u592a\u591f\u7528\u65f6\uff0c\u5b83\u5c31\u4f1a\u7740\u624b\u8fdb\u884c\u5783\u573e\u56de\u6536\u5de5\u4f5c\u3002JVM \u8fdb\u884c GC \u7684\u65f6\u95f4\u70b9\u662f\u65e0\u6cd5\u51c6\u786e\u9884\u77e5\u7684\u3002\u56e0\u4e3a GC \u542f\u52a8\u7684\u65f6\u523b\u4f1a\u53d7\u5230\u5404\u79cd\u8fd0\u884c\u73af\u5883\u56e0\u7d20\u7684\u5f71\u54cd\uff0c\u968f\u673a\u6027\u592a\u5927\\n    * \u901a\u8fc7 JVM \u7684\u547d\u4ee4\u884c\u53c2\u6570\u201c-XX:+PrintGC\u201d\u628a\u76f8\u5173\u56de\u6536\u4fe1\u606f\u6253\u5370\u51fa\u6765\\n* \u8c01\u8d1f\u8d23\u56de\u6536?\\n    * JVM \u4f1a\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u4e13\u95e8\u7684\u5783\u573e\u56de\u6536\u7ebf\u7a0b\uff0c\u7531\u5b83\u4eec\u8d1f\u8d23\u6e05\u7406\u56de\u6536\u5783\u573e\u5185\u5b58\u3002\\n* \u5982\u4f55\u53d1\u73b0\u5783\u573e\u5bf9\u8c61\uff1f\\n    * \u5783\u573e\u56de\u6536\u7ebf\u7a0b\u4f1a\u4ece\u201c\u6839\u96c6\uff08Root Set\uff09\u201d\u5f00\u59cb\u8fdb\u884c\u5bf9\u8c61\u5f15\u7528\u7684\u904d\u5386\u3002\u6240\u8c13\u7684\u201c\u6839\u96c6\u201d\uff0c\u5c31\u662f\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7684\u3010\u5f15\u7528\u53d8\u91cf\u3011\u7684\u96c6\u5408\uff08\u6bd4\u5982\u6240\u6709\u7ebf\u7a0b\u5f53\u524d\u51fd\u6570\u7684\u53c2\u6570\u548c\u5c40\u90e8\u53d8\u91cf\u3001\u5f53\u524d\u7c7b\u7684\u6210\u5458\u53d8\u91cf\u7b49\u7b49\uff09\u3002\u5783\u573e\u56de\u6536\u7ebf\u7a0b\u5148\u627e\u51fa\u88ab\u6839\u96c6\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61\uff08\u4e0d\u59a8\u53eb\u96c6\u54081\uff09\uff0c\u7136\u540e\u518d\u627e\u51fa\u88ab\u96c6\u54081\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61\uff08\u4e0d\u59a8\u53eb\u96c6\u54082\uff09\uff0c\u7136\u540e\u518d\u627e\u51fa\u88ab\u96c6\u54082\u76f4\u63a5\u5f15\u7528\u7684\u6240\u6709\u5bf9\u8c61......\u5982\u6b64\u5faa\u73af\u5f80\u590d\uff0c\u76f4\u5230\u628a\u80fd\u904d\u5386\u5230\u7684\u5bf9\u8c61\u90fd\u904d\u5386\u5b8c\u3002\u5982\u679c\u80fd\u591f\u904d\u5386\u5230, \u5219\u6709\u6548, \u6ca1\u6709\u904d\u5386\u5230\u5219\u56de\u6536\\n    * \u628a\u5783\u573e\u5185\u5b58\u91cd\u65b0\u53d8\u4e3a\u53ef\u7528\u5185\u5b58\u3001\u8fdb\u884c\u5185\u5b58\u7684\u6574\u7406\u4ee5\u6d88\u9664\u5185\u5b58\u788e\u7247\u3001\u7b49\u7b49\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4f1a\u6d89\u53ca\u5230\u82e5\u5e72\u7b97\u6cd5\\n* \u5206\u4ee3\\n    * \u65e9\u671f\u7684jvm\u6ca1\u6709\u5206\u4ee3\u6280\u672f, \u6240\u6709\u88ab GC \u7ba1\u7406\u7684\u5bf9\u8c61\u90fd\u5b58\u653e\u5728\u540c\u4e00\u4e2a\u5806\u91cc\u9762,\u6bcf\u6b21\u8fdb\u884cGC\u90fd\u8981\u904d\u5386\u6240\u6709\u5bf9\u8c61\uff0c\u5f00\u9500\u5f88\u5927,\u4ece JDK 1.2 \u4e4b\u540e\uff0cJVM \u5f00\u59cb\u4f7f\u7528\u5206\u4ee3\u7684\u5783\u573e\u56de\u6536\uff08Generational Garbage Collection\uff09\\n    * \u201c\u5e74\u8001\u4ee3\u201d\uff08Tenured\uff09\u548c\u201c\u5e74\u8f7b\u4ee3\u201d\uff08Nursery\uff09\u3001\u201c\u6301\u4e45\u4ee3\u201d\uff08Permanent\uff0c\u5bf9\u5e94\u4e8e JVM \u89c4\u8303\u7684\u201c\u65b9\u6cd5\u533a\u201d\uff09\\n    * \u3010\u5927\u90e8\u5206\u3011\u5bf9\u8c61\u5728\u521a\u521b\u5efa\u65f6\uff0c\u90fd\u4f4d\u4e8e\u201c\u5e74\u8f7b\u4ee3\u201d\u3002\u5982\u679c\u67d0\u5bf9\u8c61\u7ecf\u5386\u4e86\u51e0\u8f6e GC \u8fd8\u6d3b\u7740\uff08\u5927\u9f84\u5bf9\u8c61\uff09\uff0c\u5c31\u628a\u5b83\u79fb\u5230\u201c\u5e74\u8001\u4ee3\u201d\u3002\u53e6\u5916\uff0c\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u5728\u521b\u5efa\u65f6\u6bd4\u8f83\u5927\uff0c\u53ef\u80fd\u5c31\u76f4\u63a5\u88ab\u4e22\u5230\u5e74\u8001\u4ee3\u3002\u7ecf\u8fc7\u8fd9\u79cd\u7b56\u7565\uff0c\u4f7f\u5f97\u5e74\u8f7b\u4ee3\u603b\u662f\u4fdd\u5b58\u90a3\u4e9b\u77ed\u547d\u7684\u5c0f\u5bf9\u8c61\u3002\u5728\u7a7a\u95f4\u5c3a\u5bf8\u4e0a\uff0c\u201c\u5e74\u8f7b\u4ee3\u201d\u76f8\u5bf9\u8f83\u5c0f\uff0c\u800c\u201c\u5e74\u8001\u4ee3\u201d\u76f8\u5bf9\u8f83\u5927\u3002\\n    * \u56e0\u4e3a\u6709\u4e86\u5206\u4ee3\u6280\u672f\uff0cJVM \u7684 GC \u4e5f\u76f8\u5e94\u5206\u4e3a\u4e24\u79cd\u2014\u2014\u4e3b\u8981\u6536\u96c6\uff08Major Collection\uff09\u548c\u6b21\u8981\u6536\u96c6\uff08Minor Collection\uff09\u3002\u201c\u4e3b\u8981\u6536\u96c6\u201d\u540c\u65f6\u6e05\u7406\u5e74\u8001\u4ee3\u548c\u5e74\u8f7b\u4ee3\uff0c\u56e0\u6b64\u5f00\u9500\u5f88\u5927\uff0c\u4e0d\u5e38\u8fdb\u884c\uff1b\u201c\u6b21\u8981\u6536\u96c6\u201d\u4ec5\u4ec5\u6e05\u7406\u5e74\u8f7b\u4ee3\uff0c\u5f00\u9500\u5f88\u5c0f\uff0c\u7ecf\u5e38\u8fdb\u884c\u3002\\n\\n## GC\u5bf9\u6027\u80fd\u4f1a\u6709\u5565\u5f71\u54cd\\n\\n* \u9020\u6210\u5f53\u524d\u8fd0\u884c\u7ebf\u7a0b\u7684\u505c\u987f\\n* \u904d\u5386\u5bf9\u8c61\u5f15\u7528\u7684\u5f00\u9500\\n* \u6e05\u7406\u548c\u56de\u6536\u5783\u573e\u7684\u5f00\u9500(\u90e8\u5206\u5f00\u9500\u53ef\u80fd\u5305\u62ec\u590d\u5236\u5185\u5b58\u5757\u3001\u66f4\u65b0\u5bf9\u8c61\u5f15\u7528\u7b49\u7b49\u3002)\\n\\n## \u51e0\u79cd\u6536\u96c6\u5668\\n\\n\u8861\u91cf GC \u6027\u80fd\u7684\u4e24\u4e2a\u91cd\u8981\u6307\u6807\uff1a\u541e\u5410\u91cf\uff08Throughput\uff09\u548c\u505c\u987f\u65f6\u95f4\uff08Pause Time\uff09\u3002\u541e\u5410\u91cf\u8fd9\u4e2a\u8bcd\u4e0d\u662f\u5f88\u76f4\u89c2\uff0c\u89e3\u91ca\u4e00\u4e0b\uff1a\u5c31\u662f JVM\u3010\u4e0d\u7528\u4e8e\u3011GC \u7684\u65f6\u95f4\u5360\u603b\u65f6\u95f4\u7684\u6bd4\u7387\u3002\u201c\u541e\u5410\u91cf\u201d\u662f\u8d8a\u5927\u8d8a\u597d\uff0c\u201c\u505c\u987f\u65f6\u95f4\u201d\u662f\u8d8a\u5c0f\u8d8a\u597d\u3002\\n\\n* \u4e32\u884c\u6536\u96c6\u5668\uff08Serial Collector\uff09\\n* \u5e76\u884c\u6536\u96c6\u5668\uff08Parallel Throughput Collector\uff09\\n* \u5e76\u53d1\u6536\u96c6\u5668\uff08Concurrent Low Pause Collector\uff09\\n\\n## \u5982\u4f55\u964d\u4f4eGC\u7684\u5f71\u54cd\uff1f\\n\\n* \u5c3d\u91cf\u51cf\u5c11\u5806\u5185\u5b58\u7684\u4f7f\u7528\\n* \u8bbe\u7f6e\u5408\u9002\u7684\u5806\u5185\u5b58\u5927\u5c0f\\n    * JVM \u7684\u5806\u5185\u5b58\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u4e0d\u80fd\u592a\u5927\u4e5f\u4e0d\u80fd\u592a\u5c0f\u3002\u5982\u679c\u5806\u5185\u5b58\u592a\u5c0f\uff0cJVM \u8001\u662f\u611f\u89c9\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9891\u7e41\u8fdb\u884c\u5783\u573e\u56de\u6536\uff0c\u5f71\u54cd\u4e86\u6027\u80fd\uff1b\u5982\u679c\u5806\u5185\u5b58\u592a\u5927\uff0c\u4ee5\u81f3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u5927\u90e8\u5206\u7269\u7406\u5185\u5b58\u90fd\u88ab JVM \u81ea\u4e2a\u513f\u9738\u5360\u4e86\uff0c\u90a3\u53ef\u80fd\u4f1a\u5f71\u54cd\u5176\u5b83\u5e94\u7528\u7a0b\u5e8f\u751a\u81f3\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u7684\u6027\u80fd\u3002\u53e6\u5916\uff0c\u5e74\u8f7b\u4ee3\u7684\u5927\u5c0f\uff08\u6216\u8005\u8bf4\u201c\u5e74\u8f7b\u4ee3\u201d\u4e0e\u201c\u5e74\u8001\u4ee3\u201d\u7684\u6bd4\u503c\uff09\u5bf9\u4e8e GC \u7684\u6027\u80fd\u4e5f\u6709\u660e\u663e\u5f71\u54cd\u3002\u5982\u679c\u5e74\u8f7b\u4ee3\u592a\u5c0f\uff0c\u53ef\u80fd\u5bfc\u81f4\u6b21\u8981\u6536\u96c6\u5f88\u9891\u7e41\uff1b\u5982\u679c\u5e74\u8f7b\u4ee3\u592a\u5927\uff0c\u5bfc\u81f4\u6b21\u8981\u6536\u96c6\u7684\u505c\u987f\u5f88\u660e\u663e\u3002\\n* \u541e\u5410\u91cf\u548c\u505c\u987f\u7684\u53d6\u820d\\n    * (1)\u770b\u91cd\u541e\u5410\u91cf\uff0c\u5bf9\u505c\u987f\u65f6\u95f4\u65e0\u6240\u8c13\uff1b(2)\u4fa7\u91cd\u4e8e\u505c\u987f\u65f6\u95f4\u3002\\n    * \u5bf9\u4e8e\u67d0\u4e9b\u5728\u540e\u53f0\u7684\u3001\u5355\u7eaf\u8fd0\u7b97\u5bc6\u96c6\u578b\u7684\u5e94\u7528\uff0c\u5c5e\u4e8e\u7b2c\u4e00\u79cd\u3002\u6bd4\u5982\u67d0\u4e9b\u79d1\u5b66\u8ba1\u7b97\u7684\u5e94\u7528\u3002\u8fd9\u65f6\u5019\u5efa\u8bae\u4f7f\u7528\u5e76\u884c\u6536\u96c6\u5668\u3002\\n    * \u5bf9\u4e8e\u6d89\u53ca\u7528\u6237 UI \u4ea4\u4e92\u7684\u3001\u5b9e\u65f6\u6027\u8981\u6c42\u6bd4\u8f83\u9ad8\u3001\u7a0b\u5e8f\u9700\u8981\u5feb\u901f\u54cd\u5e94\u7684\uff0c\u5c5e\u4e8e\u7b2c\u4e8c\u79cd\u3002\u6bd4\u5982\u67d0\u4e9b\u684c\u9762\u6e38\u620f\u3001\u67d0\u4e9b\u7535\u4fe1\u4ea4\u6362\u7cfb\u7edf\u3002\u8fd9\u65f6\u5019\u5efa\u8bae\u4f7f\u7528\u5e76\u53d1\u6536\u96c6\u5668\u3002\\n\\n\\n\\n\\n# \u5173\u4e8e\u8303\u578b\uff08Generic Programming\uff09\\n\\nGP \u662f\u5728\u7f16\u8bd1\u65f6\u5b9e\u73b0\u7684\u8fd8\u662f\u5728\u8fd0\u884c\u65f6\u5b9e\u73b0\u7684\uff1f\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e48\u5b9e\u73b0\uff1f\\nGP \u7684\u7c7b\u578b\u64e6\u9664\u673a\u5236\u662f\u548b\u56de\u4e8b\uff1f\u6709\u5565\u4f18\u70b9/\u7f3a\u70b9\uff1f\\n\u4f7f\u7528\u8303\u578b\u5bb9\u5668\uff08\u76f8\u5bf9\u4e8e\u4f20\u7edf\u5bb9\u5668\uff09\u5728\u6027\u80fd\u4e0a\u6709\u5565\u5f71\u54cd\uff1f\u4e3a\u4ec0\u4e48\uff1f\\n\\n# \u5173\u4e8e\u591a\u7ebf\u7a0b\\n\\nsynchronized \u5173\u952e\u5b57\u662f\u600e\u4e48\u8d77\u4f5c\u7528\u6ef4\uff1f\\n\\nsynchronized \u7684\u9897\u7c92\u5ea6\uff08\u6216\u8005\u8bf4\u4f5c\u7528\u57df\uff09\u5982\u4f55\uff1f\u662f\u9488\u5bf9\u67d0\u4e2a\u7c7b\u8fd8\u662f\u9488\u5bf9\u67d0\u4e2a\u7c7b\u5bf9\u8c61\u5b9e\u4f8b\uff1f\\n\\nsynchronized \u5bf9\u6027\u80fd\u6709\u6ca1\u6709\u5f71\u54cd\uff1f\u4e3a\u4ec0\u4e48\uff1f\\n\\nvolatile \u5173\u952e\u5b57\u53c8\u662f\u6d3e\u5565\u7528\u6ef4\uff1f\u5565\u65f6\u5019\u9700\u8981\u7528\u8fd9\u4e2a\u5173\u952e\u5b57\u634f\uff1f"}]}')}}]);